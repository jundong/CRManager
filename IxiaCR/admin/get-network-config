#!/usr/bin/perl

=pod

=head1 DESCRIPTION

Retrieve the current network config.

=head1 INPUT JSON

  {
  
  }

=head1 OUTPUT JSON

 {   
  "result": "SUCCESS|FAILURE", 
  "object" : { 
     "hostname": "...",
       "ipv4": {
         "mode": "static|dhcp",
         "address": "",
         "netmask": "...",
         "gateway": "...."
       },
       "ipv6": {
         "mode": ""
       } 
    } 
 }

=head1 NOTES

No ipv6 data returned at this time, to be investigated later after manual configuration and validation of supporting network infrastructure.

=cut

# Use require, keep in same namespace
use File::Basename;
use Cwd qw/abs_path/;
require(dirname(abs_path($0))."/common.pl");

&init();

my ( $in, @fields, $hn, $gw, $mode, $addr, $netmask, $network );
$in = &open_cmd_hide( "ip route show" );
while ( defined( my $line = <$in> ) ) {
    chomp($line);
    if ( $line =~ /^default/ ) {
        @fields = split(/ /, $line);
        $gw = @fields[2];
    }
    elsif ( $line =~ /scope link  src/ ) {
        @fields = split(/ /, $line);
        $addr = @fields[11];

        @fields = split(/\//, @fields[0]);
        $netmask = @fields[1];
        $network = @fields[0];
    }
}
close($in);

$in = &open_cmd_hide( "hostname" );
while ( defined( my $line = <$in> ) ) {
    chomp($line);
    $hn = $line;
}
close($in);

$res->{result} = "SUCCESS";
$res->{object}
    = { "hostname" => $hn, address => $addr, netmask => $netmask, gateway => $gw, network => $network };

&finish();

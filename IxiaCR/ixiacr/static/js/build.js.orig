
/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module._resolving && !module.exports) {
    var mod = {};
    mod.exports = {};
    mod.client = mod.component = true;
    module._resolving = true;
    module.call(this, mod.exports, require.relative(resolved), mod);
    delete module._resolving;
    module.exports = mod.exports;
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (require.modules.hasOwnProperty(path)) return path;
    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!require.modules.hasOwnProperty(from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return require.modules.hasOwnProperty(localRequire.resolve(path));
  };

  return localRequire;
};
require.register("visionmedia-mocha/mocha.js", Function("exports, require, module",
";(function(){\n\
\n\
// CommonJS require()\n\
\n\
function require(p){\n\
    var path = require.resolve(p)\n\
      , mod = require.modules[path];\n\
    if (!mod) throw new Error('failed to require \"' + p + '\"');\n\
    if (!mod.exports) {\n\
      mod.exports = {};\n\
      mod.call(mod.exports, mod, mod.exports, require.relative(path));\n\
    }\n\
    return mod.exports;\n\
  }\n\
\n\
require.modules = {};\n\
\n\
require.resolve = function (path){\n\
    var orig = path\n\
      , reg = path + '.js'\n\
      , index = path + '/index.js';\n\
    return require.modules[reg] && reg\n\
      || require.modules[index] && index\n\
      || orig;\n\
  };\n\
\n\
require.register = function (path, fn){\n\
    require.modules[path] = fn;\n\
  };\n\
\n\
require.relative = function (parent) {\n\
    return function(p){\n\
      if ('.' != p.charAt(0)) return require(p);\n\
\n\
      var path = parent.split('/')\n\
        , segs = p.split('/');\n\
      path.pop();\n\
\n\
      for (var i = 0; i < segs.length; i++) {\n\
        var seg = segs[i];\n\
        if ('..' == seg) path.pop();\n\
        else if ('.' != seg) path.push(seg);\n\
      }\n\
\n\
      return require(path.join('/'));\n\
    };\n\
  };\n\
\n\
\n\
require.register(\"browser/debug.js\", function(module, exports, require){\n\
\n\
module.exports = function(type){\n\
  return function(){\n\
  }\n\
};\n\
\n\
}); // module: browser/debug.js\n\
\n\
require.register(\"browser/diff.js\", function(module, exports, require){\n\
/* See LICENSE file for terms of use */\n\
\n\
/*\n\
 * Text diff implementation.\n\
 *\n\
 * This library supports the following APIS:\n\
 * JsDiff.diffChars: Character by character diff\n\
 * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n\
 * JsDiff.diffLines: Line based diff\n\
 *\n\
 * JsDiff.diffCss: Diff targeted at CSS content\n\
 *\n\
 * These methods are based on the implementation proposed in\n\
 * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n\
 * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n\
 */\n\
var JsDiff = (function() {\n\
  /*jshint maxparams: 5*/\n\
  function clonePath(path) {\n\
    return { newPos: path.newPos, components: path.components.slice(0) };\n\
  }\n\
  function removeEmpty(array) {\n\
    var ret = [];\n\
    for (var i = 0; i < array.length; i++) {\n\
      if (array[i]) {\n\
        ret.push(array[i]);\n\
      }\n\
    }\n\
    return ret;\n\
  }\n\
  function escapeHTML(s) {\n\
    var n = s;\n\
    n = n.replace(/&/g, '&amp;');\n\
    n = n.replace(/</g, '&lt;');\n\
    n = n.replace(/>/g, '&gt;');\n\
    n = n.replace(/\"/g, '&quot;');\n\
\n\
    return n;\n\
  }\n\
\n\
  var Diff = function(ignoreWhitespace) {\n\
    this.ignoreWhitespace = ignoreWhitespace;\n\
  };\n\
  Diff.prototype = {\n\
      diff: function(oldString, newString) {\n\
        // Handle the identity case (this is due to unrolling editLength == 0\n\
        if (newString === oldString) {\n\
          return [{ value: newString }];\n\
        }\n\
        if (!newString) {\n\
          return [{ value: oldString, removed: true }];\n\
        }\n\
        if (!oldString) {\n\
          return [{ value: newString, added: true }];\n\
        }\n\
\n\
        newString = this.tokenize(newString);\n\
        oldString = this.tokenize(oldString);\n\
\n\
        var newLen = newString.length, oldLen = oldString.length;\n\
        var maxEditLength = newLen + oldLen;\n\
        var bestPath = [{ newPos: -1, components: [] }];\n\
\n\
        // Seed editLength = 0\n\
        var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\
        if (bestPath[0].newPos+1 >= newLen && oldPos+1 >= oldLen) {\n\
          return bestPath[0].components;\n\
        }\n\
\n\
        for (var editLength = 1; editLength <= maxEditLength; editLength++) {\n\
          for (var diagonalPath = -1*editLength; diagonalPath <= editLength; diagonalPath+=2) {\n\
            var basePath;\n\
            var addPath = bestPath[diagonalPath-1],\n\
                removePath = bestPath[diagonalPath+1];\n\
            oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\
            if (addPath) {\n\
              // No one else is going to attempt to use this value, clear it\n\
              bestPath[diagonalPath-1] = undefined;\n\
            }\n\
\n\
            var canAdd = addPath && addPath.newPos+1 < newLen;\n\
            var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\
            if (!canAdd && !canRemove) {\n\
              bestPath[diagonalPath] = undefined;\n\
              continue;\n\
            }\n\
\n\
            // Select the diagonal that we want to branch from. We select the prior\n\
            // path whose position in the new string is the farthest from the origin\n\
            // and does not pass the bounds of the diff graph\n\
            if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n\
              basePath = clonePath(removePath);\n\
              this.pushComponent(basePath.components, oldString[oldPos], undefined, true);\n\
            } else {\n\
              basePath = clonePath(addPath);\n\
              basePath.newPos++;\n\
              this.pushComponent(basePath.components, newString[basePath.newPos], true, undefined);\n\
            }\n\
\n\
            var oldPos = this.extractCommon(basePath, newString, oldString, diagonalPath);\n\
\n\
            if (basePath.newPos+1 >= newLen && oldPos+1 >= oldLen) {\n\
              return basePath.components;\n\
            } else {\n\
              bestPath[diagonalPath] = basePath;\n\
            }\n\
          }\n\
        }\n\
      },\n\
\n\
      pushComponent: function(components, value, added, removed) {\n\
        var last = components[components.length-1];\n\
        if (last && last.added === added && last.removed === removed) {\n\
          // We need to clone here as the component clone operation is just\n\
          // as shallow array clone\n\
          components[components.length-1] =\n\
            {value: this.join(last.value, value), added: added, removed: removed };\n\
        } else {\n\
          components.push({value: value, added: added, removed: removed });\n\
        }\n\
      },\n\
      extractCommon: function(basePath, newString, oldString, diagonalPath) {\n\
        var newLen = newString.length,\n\
            oldLen = oldString.length,\n\
            newPos = basePath.newPos,\n\
            oldPos = newPos - diagonalPath;\n\
        while (newPos+1 < newLen && oldPos+1 < oldLen && this.equals(newString[newPos+1], oldString[oldPos+1])) {\n\
          newPos++;\n\
          oldPos++;\n\
\n\
          this.pushComponent(basePath.components, newString[newPos], undefined, undefined);\n\
        }\n\
        basePath.newPos = newPos;\n\
        return oldPos;\n\
      },\n\
\n\
      equals: function(left, right) {\n\
        var reWhitespace = /\\S/;\n\
        if (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right)) {\n\
          return true;\n\
        } else {\n\
          return left === right;\n\
        }\n\
      },\n\
      join: function(left, right) {\n\
        return left + right;\n\
      },\n\
      tokenize: function(value) {\n\
        return value;\n\
      }\n\
  };\n\
\n\
  var CharDiff = new Diff();\n\
\n\
  var WordDiff = new Diff(true);\n\
  var WordWithSpaceDiff = new Diff();\n\
  WordDiff.tokenize = WordWithSpaceDiff.tokenize = function(value) {\n\
    return removeEmpty(value.split(/(\\s+|\\b)/));\n\
  };\n\
\n\
  var CssDiff = new Diff(true);\n\
  CssDiff.tokenize = function(value) {\n\
    return removeEmpty(value.split(/([{}:;,]|\\s+)/));\n\
  };\n\
\n\
  var LineDiff = new Diff();\n\
  LineDiff.tokenize = function(value) {\n\
    return value.split(/^/m);\n\
  };\n\
\n\
  return {\n\
    Diff: Diff,\n\
\n\
    diffChars: function(oldStr, newStr) { return CharDiff.diff(oldStr, newStr); },\n\
    diffWords: function(oldStr, newStr) { return WordDiff.diff(oldStr, newStr); },\n\
    diffWordsWithSpace: function(oldStr, newStr) { return WordWithSpaceDiff.diff(oldStr, newStr); },\n\
    diffLines: function(oldStr, newStr) { return LineDiff.diff(oldStr, newStr); },\n\
\n\
    diffCss: function(oldStr, newStr) { return CssDiff.diff(oldStr, newStr); },\n\
\n\
    createPatch: function(fileName, oldStr, newStr, oldHeader, newHeader) {\n\
      var ret = [];\n\
\n\
      ret.push('Index: ' + fileName);\n\
      ret.push('===================================================================');\n\
      ret.push('--- ' + fileName + (typeof oldHeader === 'undefined' ? '' : '\\t' + oldHeader));\n\
      ret.push('+++ ' + fileName + (typeof newHeader === 'undefined' ? '' : '\\t' + newHeader));\n\
\n\
      var diff = LineDiff.diff(oldStr, newStr);\n\
      if (!diff[diff.length-1].value) {\n\
        diff.pop();   // Remove trailing newline add\n\
      }\n\
      diff.push({value: '', lines: []});   // Append an empty value to make cleanup easier\n\
\n\
      function contextLines(lines) {\n\
        return lines.map(function(entry) { return ' ' + entry; });\n\
      }\n\
      function eofNL(curRange, i, current) {\n\
        var last = diff[diff.length-2],\n\
            isLast = i === diff.length-2,\n\
            isLastOfType = i === diff.length-3 && (current.added !== last.added || current.removed !== last.removed);\n\
\n\
        // Figure out if this is the last line for the given file and missing NL\n\
        if (!/\\n\
$/.test(current.value) && (isLast || isLastOfType)) {\n\
          curRange.push('\\\\ No newline at end of file');\n\
        }\n\
      }\n\
\n\
      var oldRangeStart = 0, newRangeStart = 0, curRange = [],\n\
          oldLine = 1, newLine = 1;\n\
      for (var i = 0; i < diff.length; i++) {\n\
        var current = diff[i],\n\
            lines = current.lines || current.value.replace(/\\n\
$/, '').split('\\n\
');\n\
        current.lines = lines;\n\
\n\
        if (current.added || current.removed) {\n\
          if (!oldRangeStart) {\n\
            var prev = diff[i-1];\n\
            oldRangeStart = oldLine;\n\
            newRangeStart = newLine;\n\
\n\
            if (prev) {\n\
              curRange = contextLines(prev.lines.slice(-4));\n\
              oldRangeStart -= curRange.length;\n\
              newRangeStart -= curRange.length;\n\
            }\n\
          }\n\
          curRange.push.apply(curRange, lines.map(function(entry) { return (current.added?'+':'-') + entry; }));\n\
          eofNL(curRange, i, current);\n\
\n\
          if (current.added) {\n\
            newLine += lines.length;\n\
          } else {\n\
            oldLine += lines.length;\n\
          }\n\
        } else {\n\
          if (oldRangeStart) {\n\
            // Close out any changes that have been output (or join overlapping)\n\
            if (lines.length <= 8 && i < diff.length-2) {\n\
              // Overlapping\n\
              curRange.push.apply(curRange, contextLines(lines));\n\
            } else {\n\
              // end the range and output\n\
              var contextSize = Math.min(lines.length, 4);\n\
              ret.push(\n\
                  '@@ -' + oldRangeStart + ',' + (oldLine-oldRangeStart+contextSize)\n\
                  + ' +' + newRangeStart + ',' + (newLine-newRangeStart+contextSize)\n\
                  + ' @@');\n\
              ret.push.apply(ret, curRange);\n\
              ret.push.apply(ret, contextLines(lines.slice(0, contextSize)));\n\
              if (lines.length <= 4) {\n\
                eofNL(ret, i, current);\n\
              }\n\
\n\
              oldRangeStart = 0;  newRangeStart = 0; curRange = [];\n\
            }\n\
          }\n\
          oldLine += lines.length;\n\
          newLine += lines.length;\n\
        }\n\
      }\n\
\n\
      return ret.join('\\n\
') + '\\n\
';\n\
    },\n\
\n\
    applyPatch: function(oldStr, uniDiff) {\n\
      var diffstr = uniDiff.split('\\n\
');\n\
      var diff = [];\n\
      var remEOFNL = false,\n\
          addEOFNL = false;\n\
\n\
      for (var i = (diffstr[0][0]==='I'?4:0); i < diffstr.length; i++) {\n\
        if(diffstr[i][0] === '@') {\n\
          var meh = diffstr[i].split(/@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@/);\n\
          diff.unshift({\n\
            start:meh[3],\n\
            oldlength:meh[2],\n\
            oldlines:[],\n\
            newlength:meh[4],\n\
            newlines:[]\n\
          });\n\
        } else if(diffstr[i][0] === '+') {\n\
          diff[0].newlines.push(diffstr[i].substr(1));\n\
        } else if(diffstr[i][0] === '-') {\n\
          diff[0].oldlines.push(diffstr[i].substr(1));\n\
        } else if(diffstr[i][0] === ' ') {\n\
          diff[0].newlines.push(diffstr[i].substr(1));\n\
          diff[0].oldlines.push(diffstr[i].substr(1));\n\
        } else if(diffstr[i][0] === '\\\\') {\n\
          if (diffstr[i-1][0] === '+') {\n\
            remEOFNL = true;\n\
          } else if(diffstr[i-1][0] === '-') {\n\
            addEOFNL = true;\n\
          }\n\
        }\n\
      }\n\
\n\
      var str = oldStr.split('\\n\
');\n\
      for (var i = diff.length - 1; i >= 0; i--) {\n\
        var d = diff[i];\n\
        for (var j = 0; j < d.oldlength; j++) {\n\
          if(str[d.start-1+j] !== d.oldlines[j]) {\n\
            return false;\n\
          }\n\
        }\n\
        Array.prototype.splice.apply(str,[d.start-1,+d.oldlength].concat(d.newlines));\n\
      }\n\
\n\
      if (remEOFNL) {\n\
        while (!str[str.length-1]) {\n\
          str.pop();\n\
        }\n\
      } else if (addEOFNL) {\n\
        str.push('');\n\
      }\n\
      return str.join('\\n\
');\n\
    },\n\
\n\
    convertChangesToXML: function(changes){\n\
      var ret = [];\n\
      for ( var i = 0; i < changes.length; i++) {\n\
        var change = changes[i];\n\
        if (change.added) {\n\
          ret.push('<ins>');\n\
        } else if (change.removed) {\n\
          ret.push('<del>');\n\
        }\n\
\n\
        ret.push(escapeHTML(change.value));\n\
\n\
        if (change.added) {\n\
          ret.push('</ins>');\n\
        } else if (change.removed) {\n\
          ret.push('</del>');\n\
        }\n\
      }\n\
      return ret.join('');\n\
    },\n\
\n\
    // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n\
    convertChangesToDMP: function(changes){\n\
      var ret = [], change;\n\
      for ( var i = 0; i < changes.length; i++) {\n\
        change = changes[i];\n\
        ret.push([(change.added ? 1 : change.removed ? -1 : 0), change.value]);\n\
      }\n\
      return ret;\n\
    }\n\
  };\n\
})();\n\
\n\
if (typeof module !== 'undefined') {\n\
    module.exports = JsDiff;\n\
}\n\
\n\
}); // module: browser/diff.js\n\
\n\
require.register(\"browser/events.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module exports.\n\
 */\n\
\n\
exports.EventEmitter = EventEmitter;\n\
\n\
/**\n\
 * Check if `obj` is an array.\n\
 */\n\
\n\
function isArray(obj) {\n\
  return '[object Array]' == {}.toString.call(obj);\n\
}\n\
\n\
/**\n\
 * Event emitter constructor.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
function EventEmitter(){};\n\
\n\
/**\n\
 * Adds a listener.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
EventEmitter.prototype.on = function (name, fn) {\n\
  if (!this.$events) {\n\
    this.$events = {};\n\
  }\n\
\n\
  if (!this.$events[name]) {\n\
    this.$events[name] = fn;\n\
  } else if (isArray(this.$events[name])) {\n\
    this.$events[name].push(fn);\n\
  } else {\n\
    this.$events[name] = [this.$events[name], fn];\n\
  }\n\
\n\
  return this;\n\
};\n\
\n\
EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\
\n\
/**\n\
 * Adds a volatile listener.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
EventEmitter.prototype.once = function (name, fn) {\n\
  var self = this;\n\
\n\
  function on () {\n\
    self.removeListener(name, on);\n\
    fn.apply(this, arguments);\n\
  };\n\
\n\
  on.listener = fn;\n\
  this.on(name, on);\n\
\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Removes a listener.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
EventEmitter.prototype.removeListener = function (name, fn) {\n\
  if (this.$events && this.$events[name]) {\n\
    var list = this.$events[name];\n\
\n\
    if (isArray(list)) {\n\
      var pos = -1;\n\
\n\
      for (var i = 0, l = list.length; i < l; i++) {\n\
        if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\n\
          pos = i;\n\
          break;\n\
        }\n\
      }\n\
\n\
      if (pos < 0) {\n\
        return this;\n\
      }\n\
\n\
      list.splice(pos, 1);\n\
\n\
      if (!list.length) {\n\
        delete this.$events[name];\n\
      }\n\
    } else if (list === fn || (list.listener && list.listener === fn)) {\n\
      delete this.$events[name];\n\
    }\n\
  }\n\
\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Removes all listeners for an event.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
EventEmitter.prototype.removeAllListeners = function (name) {\n\
  if (name === undefined) {\n\
    this.$events = {};\n\
    return this;\n\
  }\n\
\n\
  if (this.$events && this.$events[name]) {\n\
    this.$events[name] = null;\n\
  }\n\
\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Gets all listeners for a certain event.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
EventEmitter.prototype.listeners = function (name) {\n\
  if (!this.$events) {\n\
    this.$events = {};\n\
  }\n\
\n\
  if (!this.$events[name]) {\n\
    this.$events[name] = [];\n\
  }\n\
\n\
  if (!isArray(this.$events[name])) {\n\
    this.$events[name] = [this.$events[name]];\n\
  }\n\
\n\
  return this.$events[name];\n\
};\n\
\n\
/**\n\
 * Emits an event.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
EventEmitter.prototype.emit = function (name) {\n\
  if (!this.$events) {\n\
    return false;\n\
  }\n\
\n\
  var handler = this.$events[name];\n\
\n\
  if (!handler) {\n\
    return false;\n\
  }\n\
\n\
  var args = [].slice.call(arguments, 1);\n\
\n\
  if ('function' == typeof handler) {\n\
    handler.apply(this, args);\n\
  } else if (isArray(handler)) {\n\
    var listeners = handler.slice();\n\
\n\
    for (var i = 0, l = listeners.length; i < l; i++) {\n\
      listeners[i].apply(this, args);\n\
    }\n\
  } else {\n\
    return false;\n\
  }\n\
\n\
  return true;\n\
};\n\
}); // module: browser/events.js\n\
\n\
require.register(\"browser/fs.js\", function(module, exports, require){\n\
\n\
}); // module: browser/fs.js\n\
\n\
require.register(\"browser/path.js\", function(module, exports, require){\n\
\n\
}); // module: browser/path.js\n\
\n\
require.register(\"browser/progress.js\", function(module, exports, require){\n\
/**\n\
 * Expose `Progress`.\n\
 */\n\
\n\
module.exports = Progress;\n\
\n\
/**\n\
 * Initialize a new `Progress` indicator.\n\
 */\n\
\n\
function Progress() {\n\
  this.percent = 0;\n\
  this.size(0);\n\
  this.fontSize(11);\n\
  this.font('helvetica, arial, sans-serif');\n\
}\n\
\n\
/**\n\
 * Set progress size to `n`.\n\
 *\n\
 * @param {Number} n\n\
 * @return {Progress} for chaining\n\
 * @api public\n\
 */\n\
\n\
Progress.prototype.size = function(n){\n\
  this._size = n;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set text to `str`.\n\
 *\n\
 * @param {String} str\n\
 * @return {Progress} for chaining\n\
 * @api public\n\
 */\n\
\n\
Progress.prototype.text = function(str){\n\
  this._text = str;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set font size to `n`.\n\
 *\n\
 * @param {Number} n\n\
 * @return {Progress} for chaining\n\
 * @api public\n\
 */\n\
\n\
Progress.prototype.fontSize = function(n){\n\
  this._fontSize = n;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set font `family`.\n\
 *\n\
 * @param {String} family\n\
 * @return {Progress} for chaining\n\
 */\n\
\n\
Progress.prototype.font = function(family){\n\
  this._font = family;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Update percentage to `n`.\n\
 *\n\
 * @param {Number} n\n\
 * @return {Progress} for chaining\n\
 */\n\
\n\
Progress.prototype.update = function(n){\n\
  this.percent = n;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Draw on `ctx`.\n\
 *\n\
 * @param {CanvasRenderingContext2d} ctx\n\
 * @return {Progress} for chaining\n\
 */\n\
\n\
Progress.prototype.draw = function(ctx){\n\
  try {\n\
    var percent = Math.min(this.percent, 100)\n\
      , size = this._size\n\
      , half = size / 2\n\
      , x = half\n\
      , y = half\n\
      , rad = half - 1\n\
      , fontSize = this._fontSize;\n\
  \n\
    ctx.font = fontSize + 'px ' + this._font;\n\
  \n\
    var angle = Math.PI * 2 * (percent / 100);\n\
    ctx.clearRect(0, 0, size, size);\n\
  \n\
    // outer circle\n\
    ctx.strokeStyle = '#9f9f9f';\n\
    ctx.beginPath();\n\
    ctx.arc(x, y, rad, 0, angle, false);\n\
    ctx.stroke();\n\
  \n\
    // inner circle\n\
    ctx.strokeStyle = '#eee';\n\
    ctx.beginPath();\n\
    ctx.arc(x, y, rad - 1, 0, angle, true);\n\
    ctx.stroke();\n\
  \n\
    // text\n\
    var text = this._text || (percent | 0) + '%'\n\
      , w = ctx.measureText(text).width;\n\
  \n\
    ctx.fillText(\n\
        text\n\
      , x - w / 2 + 1\n\
      , y + fontSize / 2 - 1);\n\
  } catch (ex) {} //don't fail if we can't render progress\n\
  return this;\n\
};\n\
\n\
}); // module: browser/progress.js\n\
\n\
require.register(\"browser/tty.js\", function(module, exports, require){\n\
\n\
exports.isatty = function(){\n\
  return true;\n\
};\n\
\n\
exports.getWindowSize = function(){\n\
  if ('innerHeight' in global) {\n\
    return [global.innerHeight, global.innerWidth];\n\
  } else {\n\
    // In a Web Worker, the DOM Window is not available.\n\
    return [640, 480];\n\
  }\n\
};\n\
\n\
}); // module: browser/tty.js\n\
\n\
require.register(\"context.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Expose `Context`.\n\
 */\n\
\n\
module.exports = Context;\n\
\n\
/**\n\
 * Initialize a new `Context`.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
function Context(){}\n\
\n\
/**\n\
 * Set or get the context `Runnable` to `runnable`.\n\
 *\n\
 * @param {Runnable} runnable\n\
 * @return {Context}\n\
 * @api private\n\
 */\n\
\n\
Context.prototype.runnable = function(runnable){\n\
  if (0 == arguments.length) return this._runnable;\n\
  this.test = this._runnable = runnable;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set test timeout `ms`.\n\
 *\n\
 * @param {Number} ms\n\
 * @return {Context} self\n\
 * @api private\n\
 */\n\
\n\
Context.prototype.timeout = function(ms){\n\
  this.runnable().timeout(ms);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set test slowness threshold `ms`.\n\
 *\n\
 * @param {Number} ms\n\
 * @return {Context} self\n\
 * @api private\n\
 */\n\
\n\
Context.prototype.slow = function(ms){\n\
  this.runnable().slow(ms);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Inspect the context void of `._runnable`.\n\
 *\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
Context.prototype.inspect = function(){\n\
  return JSON.stringify(this, function(key, val){\n\
    if ('_runnable' == key) return;\n\
    if ('test' == key) return;\n\
    return val;\n\
  }, 2);\n\
};\n\
\n\
}); // module: context.js\n\
\n\
require.register(\"hook.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Runnable = require('./runnable');\n\
\n\
/**\n\
 * Expose `Hook`.\n\
 */\n\
\n\
module.exports = Hook;\n\
\n\
/**\n\
 * Initialize a new `Hook` with the given `title` and callback `fn`.\n\
 *\n\
 * @param {String} title\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
function Hook(title, fn) {\n\
  Runnable.call(this, title, fn);\n\
  this.type = 'hook';\n\
}\n\
\n\
/**\n\
 * Inherit from `Runnable.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Runnable.prototype;\n\
Hook.prototype = new F;\n\
Hook.prototype.constructor = Hook;\n\
\n\
\n\
/**\n\
 * Get or set the test `err`.\n\
 *\n\
 * @param {Error} err\n\
 * @return {Error}\n\
 * @api public\n\
 */\n\
\n\
Hook.prototype.error = function(err){\n\
  if (0 == arguments.length) {\n\
    var err = this._error;\n\
    this._error = null;\n\
    return err;\n\
  }\n\
\n\
  this._error = err;\n\
};\n\
\n\
}); // module: hook.js\n\
\n\
require.register(\"interfaces/bdd.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Suite = require('../suite')\n\
  , Test = require('../test')\n\
  , utils = require('../utils');\n\
\n\
/**\n\
 * BDD-style interface:\n\
 *\n\
 *      describe('Array', function(){\n\
 *        describe('#indexOf()', function(){\n\
 *          it('should return -1 when not present', function(){\n\
 *\n\
 *          });\n\
 *\n\
 *          it('should return the index when present', function(){\n\
 *\n\
 *          });\n\
 *        });\n\
 *      });\n\
 *\n\
 */\n\
\n\
module.exports = function(suite){\n\
  var suites = [suite];\n\
\n\
  suite.on('pre-require', function(context, file, mocha){\n\
\n\
    /**\n\
     * Execute before running tests.\n\
     */\n\
\n\
    context.before = function(fn){\n\
      suites[0].beforeAll(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute after running tests.\n\
     */\n\
\n\
    context.after = function(fn){\n\
      suites[0].afterAll(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute before each test case.\n\
     */\n\
\n\
    context.beforeEach = function(fn){\n\
      suites[0].beforeEach(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute after each test case.\n\
     */\n\
\n\
    context.afterEach = function(fn){\n\
      suites[0].afterEach(fn);\n\
    };\n\
\n\
    /**\n\
     * Describe a \"suite\" with the given `title`\n\
     * and callback `fn` containing nested suites\n\
     * and/or tests.\n\
     */\n\
\n\
    context.describe = context.context = function(title, fn){\n\
      var suite = Suite.create(suites[0], title);\n\
      suites.unshift(suite);\n\
      fn.call(suite);\n\
      suites.shift();\n\
      return suite;\n\
    };\n\
\n\
    /**\n\
     * Pending describe.\n\
     */\n\
\n\
    context.xdescribe =\n\
    context.xcontext =\n\
    context.describe.skip = function(title, fn){\n\
      var suite = Suite.create(suites[0], title);\n\
      suite.pending = true;\n\
      suites.unshift(suite);\n\
      fn.call(suite);\n\
      suites.shift();\n\
    };\n\
\n\
    /**\n\
     * Exclusive suite.\n\
     */\n\
\n\
    context.describe.only = function(title, fn){\n\
      var suite = context.describe(title, fn);\n\
      mocha.grep(suite.fullTitle());\n\
      return suite;\n\
    };\n\
\n\
    /**\n\
     * Describe a specification or test-case\n\
     * with the given `title` and callback `fn`\n\
     * acting as a thunk.\n\
     */\n\
\n\
    context.it = context.specify = function(title, fn){\n\
      var suite = suites[0];\n\
      if (suite.pending) var fn = null;\n\
      var test = new Test(title, fn);\n\
      suite.addTest(test);\n\
      return test;\n\
    };\n\
\n\
    /**\n\
     * Exclusive test-case.\n\
     */\n\
\n\
    context.it.only = function(title, fn){\n\
      var test = context.it(title, fn);\n\
      var reString = '^' + utils.escapeRegexp(test.fullTitle()) + '$';\n\
      mocha.grep(new RegExp(reString));\n\
      return test;\n\
    };\n\
\n\
    /**\n\
     * Pending test case.\n\
     */\n\
\n\
    context.xit =\n\
    context.xspecify =\n\
    context.it.skip = function(title){\n\
      context.it(title);\n\
    };\n\
  });\n\
};\n\
\n\
}); // module: interfaces/bdd.js\n\
\n\
require.register(\"interfaces/exports.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Suite = require('../suite')\n\
  , Test = require('../test');\n\
\n\
/**\n\
 * TDD-style interface:\n\
 *\n\
 *     exports.Array = {\n\
 *       '#indexOf()': {\n\
 *         'should return -1 when the value is not present': function(){\n\
 *\n\
 *         },\n\
 *\n\
 *         'should return the correct index when the value is present': function(){\n\
 *\n\
 *         }\n\
 *       }\n\
 *     };\n\
 *\n\
 */\n\
\n\
module.exports = function(suite){\n\
  var suites = [suite];\n\
\n\
  suite.on('require', visit);\n\
\n\
  function visit(obj) {\n\
    var suite;\n\
    for (var key in obj) {\n\
      if ('function' == typeof obj[key]) {\n\
        var fn = obj[key];\n\
        switch (key) {\n\
          case 'before':\n\
            suites[0].beforeAll(fn);\n\
            break;\n\
          case 'after':\n\
            suites[0].afterAll(fn);\n\
            break;\n\
          case 'beforeEach':\n\
            suites[0].beforeEach(fn);\n\
            break;\n\
          case 'afterEach':\n\
            suites[0].afterEach(fn);\n\
            break;\n\
          default:\n\
            suites[0].addTest(new Test(key, fn));\n\
        }\n\
      } else {\n\
        var suite = Suite.create(suites[0], key);\n\
        suites.unshift(suite);\n\
        visit(obj[key]);\n\
        suites.shift();\n\
      }\n\
    }\n\
  }\n\
};\n\
\n\
}); // module: interfaces/exports.js\n\
\n\
require.register(\"interfaces/index.js\", function(module, exports, require){\n\
\n\
exports.bdd = require('./bdd');\n\
exports.tdd = require('./tdd');\n\
exports.qunit = require('./qunit');\n\
exports.exports = require('./exports');\n\
\n\
}); // module: interfaces/index.js\n\
\n\
require.register(\"interfaces/qunit.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Suite = require('../suite')\n\
  , Test = require('../test')\n\
  , utils = require('../utils');\n\
\n\
/**\n\
 * QUnit-style interface:\n\
 *\n\
 *     suite('Array');\n\
 *\n\
 *     test('#length', function(){\n\
 *       var arr = [1,2,3];\n\
 *       ok(arr.length == 3);\n\
 *     });\n\
 *\n\
 *     test('#indexOf()', function(){\n\
 *       var arr = [1,2,3];\n\
 *       ok(arr.indexOf(1) == 0);\n\
 *       ok(arr.indexOf(2) == 1);\n\
 *       ok(arr.indexOf(3) == 2);\n\
 *     });\n\
 *\n\
 *     suite('String');\n\
 *\n\
 *     test('#length', function(){\n\
 *       ok('foo'.length == 3);\n\
 *     });\n\
 *\n\
 */\n\
\n\
module.exports = function(suite){\n\
  var suites = [suite];\n\
\n\
  suite.on('pre-require', function(context, file, mocha){\n\
\n\
    /**\n\
     * Execute before running tests.\n\
     */\n\
\n\
    context.before = function(fn){\n\
      suites[0].beforeAll(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute after running tests.\n\
     */\n\
\n\
    context.after = function(fn){\n\
      suites[0].afterAll(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute before each test case.\n\
     */\n\
\n\
    context.beforeEach = function(fn){\n\
      suites[0].beforeEach(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute after each test case.\n\
     */\n\
\n\
    context.afterEach = function(fn){\n\
      suites[0].afterEach(fn);\n\
    };\n\
\n\
    /**\n\
     * Describe a \"suite\" with the given `title`.\n\
     */\n\
\n\
    context.suite = function(title){\n\
      if (suites.length > 1) suites.shift();\n\
      var suite = Suite.create(suites[0], title);\n\
      suites.unshift(suite);\n\
      return suite;\n\
    };\n\
\n\
    /**\n\
     * Exclusive test-case.\n\
     */\n\
\n\
    context.suite.only = function(title, fn){\n\
      var suite = context.suite(title, fn);\n\
      mocha.grep(suite.fullTitle());\n\
    };\n\
\n\
    /**\n\
     * Describe a specification or test-case\n\
     * with the given `title` and callback `fn`\n\
     * acting as a thunk.\n\
     */\n\
\n\
    context.test = function(title, fn){\n\
      var test = new Test(title, fn);\n\
      suites[0].addTest(test);\n\
      return test;\n\
    };\n\
\n\
    /**\n\
     * Exclusive test-case.\n\
     */\n\
\n\
    context.test.only = function(title, fn){\n\
      var test = context.test(title, fn);\n\
      var reString = '^' + utils.escapeRegexp(test.fullTitle()) + '$';\n\
      mocha.grep(new RegExp(reString));\n\
    };\n\
\n\
    /**\n\
     * Pending test case.\n\
     */\n\
\n\
    context.test.skip = function(title){\n\
      context.test(title);\n\
    };\n\
  });\n\
};\n\
\n\
}); // module: interfaces/qunit.js\n\
\n\
require.register(\"interfaces/tdd.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Suite = require('../suite')\n\
  , Test = require('../test')\n\
  , utils = require('../utils');;\n\
\n\
/**\n\
 * TDD-style interface:\n\
 *\n\
 *      suite('Array', function(){\n\
 *        suite('#indexOf()', function(){\n\
 *          suiteSetup(function(){\n\
 *\n\
 *          });\n\
 *\n\
 *          test('should return -1 when not present', function(){\n\
 *\n\
 *          });\n\
 *\n\
 *          test('should return the index when present', function(){\n\
 *\n\
 *          });\n\
 *\n\
 *          suiteTeardown(function(){\n\
 *\n\
 *          });\n\
 *        });\n\
 *      });\n\
 *\n\
 */\n\
\n\
module.exports = function(suite){\n\
  var suites = [suite];\n\
\n\
  suite.on('pre-require', function(context, file, mocha){\n\
\n\
    /**\n\
     * Execute before each test case.\n\
     */\n\
\n\
    context.setup = function(fn){\n\
      suites[0].beforeEach(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute after each test case.\n\
     */\n\
\n\
    context.teardown = function(fn){\n\
      suites[0].afterEach(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute before the suite.\n\
     */\n\
\n\
    context.suiteSetup = function(fn){\n\
      suites[0].beforeAll(fn);\n\
    };\n\
\n\
    /**\n\
     * Execute after the suite.\n\
     */\n\
\n\
    context.suiteTeardown = function(fn){\n\
      suites[0].afterAll(fn);\n\
    };\n\
\n\
    /**\n\
     * Describe a \"suite\" with the given `title`\n\
     * and callback `fn` containing nested suites\n\
     * and/or tests.\n\
     */\n\
\n\
    context.suite = function(title, fn){\n\
      var suite = Suite.create(suites[0], title);\n\
      suites.unshift(suite);\n\
      fn.call(suite);\n\
      suites.shift();\n\
      return suite;\n\
    };\n\
\n\
    /**\n\
     * Pending suite.\n\
     */\n\
    context.suite.skip = function(title, fn) {\n\
      var suite = Suite.create(suites[0], title);\n\
      suite.pending = true;\n\
      suites.unshift(suite);\n\
      fn.call(suite);\n\
      suites.shift();\n\
    };\n\
\n\
    /**\n\
     * Exclusive test-case.\n\
     */\n\
\n\
    context.suite.only = function(title, fn){\n\
      var suite = context.suite(title, fn);\n\
      mocha.grep(suite.fullTitle());\n\
    };\n\
\n\
    /**\n\
     * Describe a specification or test-case\n\
     * with the given `title` and callback `fn`\n\
     * acting as a thunk.\n\
     */\n\
\n\
    context.test = function(title, fn){\n\
      var suite = suites[0];\n\
      if (suite.pending) var fn = null;\n\
      var test = new Test(title, fn);\n\
      suite.addTest(test);\n\
      return test;\n\
    };\n\
\n\
    /**\n\
     * Exclusive test-case.\n\
     */\n\
\n\
    context.test.only = function(title, fn){\n\
      var test = context.test(title, fn);\n\
      var reString = '^' + utils.escapeRegexp(test.fullTitle()) + '$';\n\
      mocha.grep(new RegExp(reString));\n\
    };\n\
\n\
    /**\n\
     * Pending test case.\n\
     */\n\
\n\
    context.test.skip = function(title){\n\
      context.test(title);\n\
    };\n\
  });\n\
};\n\
\n\
}); // module: interfaces/tdd.js\n\
\n\
require.register(\"mocha.js\", function(module, exports, require){\n\
/*!\n\
 * mocha\n\
 * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var path = require('browser/path')\n\
  , utils = require('./utils');\n\
\n\
/**\n\
 * Expose `Mocha`.\n\
 */\n\
\n\
exports = module.exports = Mocha;\n\
\n\
/**\n\
 * Expose internals.\n\
 */\n\
\n\
exports.utils = utils;\n\
exports.interfaces = require('./interfaces');\n\
exports.reporters = require('./reporters');\n\
exports.Runnable = require('./runnable');\n\
exports.Context = require('./context');\n\
exports.Runner = require('./runner');\n\
exports.Suite = require('./suite');\n\
exports.Hook = require('./hook');\n\
exports.Test = require('./test');\n\
\n\
/**\n\
 * Return image `name` path.\n\
 *\n\
 * @param {String} name\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function image(name) {\n\
  return __dirname + '/../images/' + name + '.png';\n\
}\n\
\n\
/**\n\
 * Setup mocha with `options`.\n\
 *\n\
 * Options:\n\
 *\n\
 *   - `ui` name \"bdd\", \"tdd\", \"exports\" etc\n\
 *   - `reporter` reporter instance, defaults to `mocha.reporters.Dot`\n\
 *   - `globals` array of accepted globals\n\
 *   - `timeout` timeout in milliseconds\n\
 *   - `bail` bail on the first test failure\n\
 *   - `slow` milliseconds to wait before considering a test slow\n\
 *   - `ignoreLeaks` ignore global leaks\n\
 *   - `grep` string or regexp to filter tests with\n\
 *\n\
 * @param {Object} options\n\
 * @api public\n\
 */\n\
\n\
function Mocha(options) {\n\
  options = options || {};\n\
  this.files = [];\n\
  this.options = options;\n\
  this.grep(options.grep);\n\
  this.suite = new exports.Suite('', new exports.Context);\n\
  this.ui(options.ui);\n\
  this.bail(options.bail);\n\
  this.reporter(options.reporter);\n\
  if (null != options.timeout) this.timeout(options.timeout);\n\
  this.useColors(options.useColors)\n\
  if (options.slow) this.slow(options.slow);\n\
\n\
  this.suite.on('pre-require', function (context) {\n\
    exports.afterEach = context.afterEach || context.teardown;\n\
    exports.after = context.after || context.suiteTeardown;\n\
    exports.beforeEach = context.beforeEach || context.setup;\n\
    exports.before = context.before || context.suiteSetup;\n\
    exports.describe = context.describe || context.suite;\n\
    exports.it = context.it || context.test;\n\
    exports.setup = context.setup || context.beforeEach;\n\
    exports.suiteSetup = context.suiteSetup || context.before;\n\
    exports.suiteTeardown = context.suiteTeardown || context.after;\n\
    exports.suite = context.suite || context.describe;\n\
    exports.teardown = context.teardown || context.afterEach;\n\
    exports.test = context.test || context.it;\n\
  });\n\
}\n\
\n\
/**\n\
 * Enable or disable bailing on the first failure.\n\
 *\n\
 * @param {Boolean} [bail]\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.bail = function(bail){\n\
  if (0 == arguments.length) bail = true;\n\
  this.suite.bail(bail);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Add test `file`.\n\
 *\n\
 * @param {String} file\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.addFile = function(file){\n\
  this.files.push(file);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set reporter to `reporter`, defaults to \"dot\".\n\
 *\n\
 * @param {String|Function} reporter name or constructor\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.reporter = function(reporter){\n\
  if ('function' == typeof reporter) {\n\
    this._reporter = reporter;\n\
  } else {\n\
    reporter = reporter || 'dot';\n\
    var _reporter;\n\
    try { _reporter = require('./reporters/' + reporter); } catch (err) {};\n\
    if (!_reporter) try { _reporter = require(reporter); } catch (err) {};\n\
    if (!_reporter && reporter === 'teamcity')\n\
      console.warn('The Teamcity reporter was moved to a package named ' +\n\
        'mocha-teamcity-reporter ' +\n\
        '(https://npmjs.org/package/mocha-teamcity-reporter).');\n\
    if (!_reporter) throw new Error('invalid reporter \"' + reporter + '\"');\n\
    this._reporter = _reporter;\n\
  }\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set test UI `name`, defaults to \"bdd\".\n\
 *\n\
 * @param {String} bdd\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.ui = function(name){\n\
  name = name || 'bdd';\n\
  this._ui = exports.interfaces[name];\n\
  if (!this._ui) try { this._ui = require(name); } catch (err) {};\n\
  if (!this._ui) throw new Error('invalid interface \"' + name + '\"');\n\
  this._ui = this._ui(this.suite);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Load registered files.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Mocha.prototype.loadFiles = function(fn){\n\
  var self = this;\n\
  var suite = this.suite;\n\
  var pending = this.files.length;\n\
  this.files.forEach(function(file){\n\
    file = path.resolve(file);\n\
    suite.emit('pre-require', global, file, self);\n\
    suite.emit('require', require(file), file, self);\n\
    suite.emit('post-require', global, file, self);\n\
    --pending || (fn && fn());\n\
  });\n\
};\n\
\n\
/**\n\
 * Enable growl support.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Mocha.prototype._growl = function(runner, reporter) {\n\
  var notify = require('growl');\n\
\n\
  runner.on('end', function(){\n\
    var stats = reporter.stats;\n\
    if (stats.failures) {\n\
      var msg = stats.failures + ' of ' + runner.total + ' tests failed';\n\
      notify(msg, { name: 'mocha', title: 'Failed', image: image('error') });\n\
    } else {\n\
      notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {\n\
          name: 'mocha'\n\
        , title: 'Passed'\n\
        , image: image('ok')\n\
      });\n\
    }\n\
  });\n\
};\n\
\n\
/**\n\
 * Add regexp to grep, if `re` is a string it is escaped.\n\
 *\n\
 * @param {RegExp|String} re\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.grep = function(re){\n\
  this.options.grep = 'string' == typeof re\n\
    ? new RegExp(utils.escapeRegexp(re))\n\
    : re;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Invert `.grep()` matches.\n\
 *\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.invert = function(){\n\
  this.options.invert = true;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Ignore global leaks.\n\
 *\n\
 * @param {Boolean} ignore\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.ignoreLeaks = function(ignore){\n\
  this.options.ignoreLeaks = !!ignore;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Enable global leak checking.\n\
 *\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.checkLeaks = function(){\n\
  this.options.ignoreLeaks = false;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Enable growl support.\n\
 *\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.growl = function(){\n\
  this.options.growl = true;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Ignore `globals` array or string.\n\
 *\n\
 * @param {Array|String} globals\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.globals = function(globals){\n\
  this.options.globals = (this.options.globals || []).concat(globals);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Emit color output.\n\
 *\n\
 * @param {Boolean} colors\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.useColors = function(colors){\n\
  this.options.useColors = arguments.length && colors != undefined\n\
    ? colors\n\
    : true;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Use inline diffs rather than +/-.\n\
 *\n\
 * @param {Boolean} inlineDiffs\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.useInlineDiffs = function(inlineDiffs) {\n\
  this.options.useInlineDiffs = arguments.length && inlineDiffs != undefined\n\
  ? inlineDiffs\n\
  : false;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set the timeout in milliseconds.\n\
 *\n\
 * @param {Number} timeout\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.timeout = function(timeout){\n\
  this.suite.timeout(timeout);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set slowness threshold in milliseconds.\n\
 *\n\
 * @param {Number} slow\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.slow = function(slow){\n\
  this.suite.slow(slow);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Makes all tests async (accepting a callback)\n\
 *\n\
 * @return {Mocha}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.asyncOnly = function(){\n\
  this.options.asyncOnly = true;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Run tests and invoke `fn()` when complete.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Runner}\n\
 * @api public\n\
 */\n\
\n\
Mocha.prototype.run = function(fn){\n\
  if (this.files.length) this.loadFiles();\n\
  var suite = this.suite;\n\
  var options = this.options;\n\
  var runner = new exports.Runner(suite);\n\
  var reporter = new this._reporter(runner);\n\
  runner.ignoreLeaks = false !== options.ignoreLeaks;\n\
  runner.asyncOnly = options.asyncOnly;\n\
  if (options.grep) runner.grep(options.grep, options.invert);\n\
  if (options.globals) runner.globals(options.globals);\n\
  if (options.growl) this._growl(runner, reporter);\n\
  exports.reporters.Base.useColors = options.useColors;\n\
  exports.reporters.Base.inlineDiffs = options.useInlineDiffs;\n\
  return runner.run(fn);\n\
};\n\
\n\
}); // module: mocha.js\n\
\n\
require.register(\"ms.js\", function(module, exports, require){\n\
/**\n\
 * Helpers.\n\
 */\n\
\n\
var s = 1000;\n\
var m = s * 60;\n\
var h = m * 60;\n\
var d = h * 24;\n\
var y = d * 365.25;\n\
\n\
/**\n\
 * Parse or format the given `val`.\n\
 *\n\
 * Options:\n\
 *\n\
 *  - `long` verbose formatting [false]\n\
 *\n\
 * @param {String|Number} val\n\
 * @param {Object} options\n\
 * @return {String|Number}\n\
 * @api public\n\
 */\n\
\n\
module.exports = function(val, options){\n\
  options = options || {};\n\
  if ('string' == typeof val) return parse(val);\n\
  return options.long ? longFormat(val) : shortFormat(val);\n\
};\n\
\n\
/**\n\
 * Parse the given `str` and return milliseconds.\n\
 *\n\
 * @param {String} str\n\
 * @return {Number}\n\
 * @api private\n\
 */\n\
\n\
function parse(str) {\n\
  var match = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\n\
  if (!match) return;\n\
  var n = parseFloat(match[1]);\n\
  var type = (match[2] || 'ms').toLowerCase();\n\
  switch (type) {\n\
    case 'years':\n\
    case 'year':\n\
    case 'y':\n\
      return n * y;\n\
    case 'days':\n\
    case 'day':\n\
    case 'd':\n\
      return n * d;\n\
    case 'hours':\n\
    case 'hour':\n\
    case 'h':\n\
      return n * h;\n\
    case 'minutes':\n\
    case 'minute':\n\
    case 'm':\n\
      return n * m;\n\
    case 'seconds':\n\
    case 'second':\n\
    case 's':\n\
      return n * s;\n\
    case 'ms':\n\
      return n;\n\
  }\n\
}\n\
\n\
/**\n\
 * Short format for `ms`.\n\
 *\n\
 * @param {Number} ms\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function shortFormat(ms) {\n\
  if (ms >= d) return Math.round(ms / d) + 'd';\n\
  if (ms >= h) return Math.round(ms / h) + 'h';\n\
  if (ms >= m) return Math.round(ms / m) + 'm';\n\
  if (ms >= s) return Math.round(ms / s) + 's';\n\
  return ms + 'ms';\n\
}\n\
\n\
/**\n\
 * Long format for `ms`.\n\
 *\n\
 * @param {Number} ms\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function longFormat(ms) {\n\
  return plural(ms, d, 'day')\n\
    || plural(ms, h, 'hour')\n\
    || plural(ms, m, 'minute')\n\
    || plural(ms, s, 'second')\n\
    || ms + ' ms';\n\
}\n\
\n\
/**\n\
 * Pluralization helper.\n\
 */\n\
\n\
function plural(ms, n, name) {\n\
  if (ms < n) return;\n\
  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\
  return Math.ceil(ms / n) + ' ' + name + 's';\n\
}\n\
\n\
}); // module: ms.js\n\
\n\
require.register(\"reporters/base.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var tty = require('browser/tty')\n\
  , diff = require('browser/diff')\n\
  , ms = require('../ms')\n\
  , utils = require('../utils');\n\
\n\
/**\n\
 * Save timer references to avoid Sinon interfering (see GH-237).\n\
 */\n\
\n\
var Date = global.Date\n\
  , setTimeout = global.setTimeout\n\
  , setInterval = global.setInterval\n\
  , clearTimeout = global.clearTimeout\n\
  , clearInterval = global.clearInterval;\n\
\n\
/**\n\
 * Check if both stdio streams are associated with a tty.\n\
 */\n\
\n\
var isatty = tty.isatty(1) && tty.isatty(2);\n\
\n\
/**\n\
 * Expose `Base`.\n\
 */\n\
\n\
exports = module.exports = Base;\n\
\n\
/**\n\
 * Enable coloring by default.\n\
 */\n\
\n\
exports.useColors = isatty || (process.env.MOCHA_COLORS !== undefined);\n\
\n\
/**\n\
 * Inline diffs instead of +/-\n\
 */\n\
\n\
exports.inlineDiffs = false;\n\
\n\
/**\n\
 * Default color map.\n\
 */\n\
\n\
exports.colors = {\n\
    'pass': 90\n\
  , 'fail': 31\n\
  , 'bright pass': 92\n\
  , 'bright fail': 91\n\
  , 'bright yellow': 93\n\
  , 'pending': 36\n\
  , 'suite': 0\n\
  , 'error title': 0\n\
  , 'error message': 31\n\
  , 'error stack': 90\n\
  , 'checkmark': 32\n\
  , 'fast': 90\n\
  , 'medium': 33\n\
  , 'slow': 31\n\
  , 'green': 32\n\
  , 'light': 90\n\
  , 'diff gutter': 90\n\
  , 'diff added': 42\n\
  , 'diff removed': 41\n\
};\n\
\n\
/**\n\
 * Default symbol map.\n\
 */\n\
\n\
exports.symbols = {\n\
  ok: '✓',\n\
  err: '✖',\n\
  dot: '․'\n\
};\n\
\n\
// With node.js on Windows: use symbols available in terminal default fonts\n\
if ('win32' == process.platform) {\n\
  exports.symbols.ok = '\\u221A';\n\
  exports.symbols.err = '\\u00D7';\n\
  exports.symbols.dot = '.';\n\
}\n\
\n\
/**\n\
 * Color `str` with the given `type`,\n\
 * allowing colors to be disabled,\n\
 * as well as user-defined color\n\
 * schemes.\n\
 *\n\
 * @param {String} type\n\
 * @param {String} str\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
var color = exports.color = function(type, str) {\n\
  if (!exports.useColors) return str;\n\
  return '\\u001b[' + exports.colors[type] + 'm' + str + '\\u001b[0m';\n\
};\n\
\n\
/**\n\
 * Expose term window size, with some\n\
 * defaults for when stderr is not a tty.\n\
 */\n\
\n\
exports.window = {\n\
  width: isatty\n\
    ? process.stdout.getWindowSize\n\
      ? process.stdout.getWindowSize(1)[0]\n\
      : tty.getWindowSize()[1]\n\
    : 75\n\
};\n\
\n\
/**\n\
 * Expose some basic cursor interactions\n\
 * that are common among reporters.\n\
 */\n\
\n\
exports.cursor = {\n\
  hide: function(){\n\
    isatty && process.stdout.write('\\u001b[?25l');\n\
  },\n\
\n\
  show: function(){\n\
    isatty && process.stdout.write('\\u001b[?25h');\n\
  },\n\
\n\
  deleteLine: function(){\n\
    isatty && process.stdout.write('\\u001b[2K');\n\
  },\n\
\n\
  beginningOfLine: function(){\n\
    isatty && process.stdout.write('\\u001b[0G');\n\
  },\n\
\n\
  CR: function(){\n\
    if (isatty) {\n\
      exports.cursor.deleteLine();\n\
      exports.cursor.beginningOfLine();\n\
    } else {\n\
      process.stdout.write('\\r');\n\
    }\n\
  }\n\
};\n\
\n\
/**\n\
 * Outut the given `failures` as a list.\n\
 *\n\
 * @param {Array} failures\n\
 * @api public\n\
 */\n\
\n\
exports.list = function(failures){\n\
  console.error();\n\
  failures.forEach(function(test, i){\n\
    // format\n\
    var fmt = color('error title', '  %s) %s:\\n\
')\n\
      + color('error message', '     %s')\n\
      + color('error stack', '\\n\
%s\\n\
');\n\
\n\
    // msg\n\
    var err = test.err\n\
      , message = err.message || ''\n\
      , stack = err.stack || message\n\
      , index = stack.indexOf(message) + message.length\n\
      , msg = stack.slice(0, index)\n\
      , actual = err.actual\n\
      , expected = err.expected\n\
      , escape = true;\n\
\n\
    // uncaught\n\
    if (err.uncaught) {\n\
      msg = 'Uncaught ' + msg;\n\
    }\n\
\n\
    // explicitly show diff\n\
    if (err.showDiff && sameType(actual, expected)) {\n\
      escape = false;\n\
      err.actual = actual = stringify(canonicalize(actual));\n\
      err.expected = expected = stringify(canonicalize(expected));\n\
    }\n\
\n\
    // actual / expected diff\n\
    if ('string' == typeof actual && 'string' == typeof expected) {\n\
      fmt = color('error title', '  %s) %s:\\n\
%s') + color('error stack', '\\n\
%s\\n\
');\n\
      var match = message.match(/^([^:]+): expected/);\n\
      msg = '\\n\
      ' + color('error message', match ? match[1] : msg);\n\
\n\
      if (exports.inlineDiffs) {\n\
        msg += inlineDiff(err, escape);\n\
      } else {\n\
        msg += unifiedDiff(err, escape);\n\
      }\n\
    }\n\
\n\
    // indent stack trace without msg\n\
    stack = stack.slice(index ? index + 1 : index)\n\
      .replace(/^/gm, '  ');\n\
\n\
    console.error(fmt, (i + 1), test.fullTitle(), msg, stack);\n\
  });\n\
};\n\
\n\
/**\n\
 * Initialize a new `Base` reporter.\n\
 *\n\
 * All other reporters generally\n\
 * inherit from this reporter, providing\n\
 * stats such as test duration, number\n\
 * of tests passed / failed etc.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function Base(runner) {\n\
  var self = this\n\
    , stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 }\n\
    , failures = this.failures = [];\n\
\n\
  if (!runner) return;\n\
  this.runner = runner;\n\
\n\
  runner.stats = stats;\n\
\n\
  runner.on('start', function(){\n\
    stats.start = new Date;\n\
  });\n\
\n\
  runner.on('suite', function(suite){\n\
    stats.suites = stats.suites || 0;\n\
    suite.root || stats.suites++;\n\
  });\n\
\n\
  runner.on('test end', function(test){\n\
    stats.tests = stats.tests || 0;\n\
    stats.tests++;\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    stats.passes = stats.passes || 0;\n\
\n\
    var medium = test.slow() / 2;\n\
    test.speed = test.duration > test.slow()\n\
      ? 'slow'\n\
      : test.duration > medium\n\
        ? 'medium'\n\
        : 'fast';\n\
\n\
    stats.passes++;\n\
  });\n\
\n\
  runner.on('fail', function(test, err){\n\
    stats.failures = stats.failures || 0;\n\
    stats.failures++;\n\
    test.err = err;\n\
    failures.push(test);\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    stats.end = new Date;\n\
    stats.duration = new Date - stats.start;\n\
  });\n\
\n\
  runner.on('pending', function(){\n\
    stats.pending++;\n\
  });\n\
}\n\
\n\
/**\n\
 * Output common epilogue used by many of\n\
 * the bundled reporters.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
Base.prototype.epilogue = function(){\n\
  var stats = this.stats;\n\
  var tests;\n\
  var fmt;\n\
\n\
  console.log();\n\
\n\
  // passes\n\
  fmt = color('bright pass', ' ')\n\
    + color('green', ' %d passing')\n\
    + color('light', ' (%s)');\n\
\n\
  console.log(fmt,\n\
    stats.passes || 0,\n\
    ms(stats.duration));\n\
\n\
  // pending\n\
  if (stats.pending) {\n\
    fmt = color('pending', ' ')\n\
      + color('pending', ' %d pending');\n\
\n\
    console.log(fmt, stats.pending);\n\
  }\n\
\n\
  // failures\n\
  if (stats.failures) {\n\
    fmt = color('fail', '  %d failing');\n\
\n\
    console.error(fmt,\n\
      stats.failures);\n\
\n\
    Base.list(this.failures);\n\
    console.error();\n\
  }\n\
\n\
  console.log();\n\
};\n\
\n\
/**\n\
 * Pad the given `str` to `len`.\n\
 *\n\
 * @param {String} str\n\
 * @param {String} len\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function pad(str, len) {\n\
  str = String(str);\n\
  return Array(len - str.length + 1).join(' ') + str;\n\
}\n\
\n\
\n\
/**\n\
 * Returns an inline diff between 2 strings with coloured ANSI output\n\
 *\n\
 * @param {Error} Error with actual/expected\n\
 * @return {String} Diff\n\
 * @api private\n\
 */\n\
\n\
function inlineDiff(err, escape) {\n\
  var msg = errorDiff(err, 'WordsWithSpace', escape);\n\
\n\
  // linenos\n\
  var lines = msg.split('\\n\
');\n\
  if (lines.length > 4) {\n\
    var width = String(lines.length).length;\n\
    msg = lines.map(function(str, i){\n\
      return pad(++i, width) + ' |' + ' ' + str;\n\
    }).join('\\n\
');\n\
  }\n\
\n\
  // legend\n\
  msg = '\\n\
'\n\
    + color('diff removed', 'actual')\n\
    + ' '\n\
    + color('diff added', 'expected')\n\
    + '\\n\
\\n\
'\n\
    + msg\n\
    + '\\n\
';\n\
\n\
  // indent\n\
  msg = msg.replace(/^/gm, '      ');\n\
  return msg;\n\
}\n\
\n\
/**\n\
 * Returns a unified diff between 2 strings\n\
 *\n\
 * @param {Error} Error with actual/expected\n\
 * @return {String} Diff\n\
 * @api private\n\
 */\n\
\n\
function unifiedDiff(err, escape) {\n\
  var indent = '      ';\n\
  function cleanUp(line) {\n\
    if (escape) {\n\
      line = escapeInvisibles(line);\n\
    }\n\
    if (line[0] === '+') return indent + colorLines('diff added', line);\n\
    if (line[0] === '-') return indent + colorLines('diff removed', line);\n\
    if (line.match(/\\@\\@/)) return null;\n\
    if (line.match(/\\\\ No newline/)) return null;\n\
    else return indent + line;\n\
  }\n\
  function notBlank(line) {\n\
    return line != null;\n\
  }\n\
  msg = diff.createPatch('string', err.actual, err.expected);\n\
  var lines = msg.split('\\n\
').splice(4);\n\
  return '\\n\
      '\n\
         + colorLines('diff added',   '+ expected') + ' '\n\
         + colorLines('diff removed', '- actual')\n\
         + '\\n\
\\n\
'\n\
         + lines.map(cleanUp).filter(notBlank).join('\\n\
');\n\
}\n\
\n\
/**\n\
 * Return a character diff for `err`.\n\
 *\n\
 * @param {Error} err\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function errorDiff(err, type, escape) {\n\
  var actual   = escape ? escapeInvisibles(err.actual)   : err.actual;\n\
  var expected = escape ? escapeInvisibles(err.expected) : err.expected;\n\
  return diff['diff' + type](actual, expected).map(function(str){\n\
    if (str.added) return colorLines('diff added', str.value);\n\
    if (str.removed) return colorLines('diff removed', str.value);\n\
    return str.value;\n\
  }).join('');\n\
}\n\
\n\
/**\n\
 * Returns a string with all invisible characters in plain text\n\
 *\n\
 * @param {String} line\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
function escapeInvisibles(line) {\n\
    return line.replace(/\\t/g, '<tab>')\n\
               .replace(/\\r/g, '<CR>')\n\
               .replace(/\\n\
/g, '<LF>\\n\
');\n\
}\n\
\n\
/**\n\
 * Color lines for `str`, using the color `name`.\n\
 *\n\
 * @param {String} name\n\
 * @param {String} str\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function colorLines(name, str) {\n\
  return str.split('\\n\
').map(function(str){\n\
    return color(name, str);\n\
  }).join('\\n\
');\n\
}\n\
\n\
/**\n\
 * Stringify `obj`.\n\
 *\n\
 * @param {Object} obj\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function stringify(obj) {\n\
  if (obj instanceof RegExp) return obj.toString();\n\
  return JSON.stringify(obj, null, 2);\n\
}\n\
\n\
/**\n\
 * Return a new object that has the keys in sorted order.\n\
 * @param {Object} obj\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
 function canonicalize(obj, stack) {\n\
   stack = stack || [];\n\
\n\
   if (utils.indexOf(stack, obj) !== -1) return obj;\n\
\n\
   var canonicalizedObj;\n\
\n\
   if ('[object Array]' == {}.toString.call(obj)) {\n\
     stack.push(obj);\n\
     canonicalizedObj = utils.map(obj, function(item) {\n\
       return canonicalize(item, stack);\n\
     });\n\
     stack.pop();\n\
   } else if (typeof obj === 'object' && obj !== null) {\n\
     stack.push(obj);\n\
     canonicalizedObj = {};\n\
     utils.forEach(utils.keys(obj).sort(), function(key) {\n\
       canonicalizedObj[key] = canonicalize(obj[key], stack);\n\
     });\n\
     stack.pop();\n\
   } else {\n\
     canonicalizedObj = obj;\n\
   }\n\
\n\
   return canonicalizedObj;\n\
 }\n\
\n\
/**\n\
 * Check that a / b have the same type.\n\
 *\n\
 * @param {Object} a\n\
 * @param {Object} b\n\
 * @return {Boolean}\n\
 * @api private\n\
 */\n\
\n\
function sameType(a, b) {\n\
  a = Object.prototype.toString.call(a);\n\
  b = Object.prototype.toString.call(b);\n\
  return a == b;\n\
}\n\
\n\
\n\
}); // module: reporters/base.js\n\
\n\
require.register(\"reporters/doc.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , utils = require('../utils');\n\
\n\
/**\n\
 * Expose `Doc`.\n\
 */\n\
\n\
exports = module.exports = Doc;\n\
\n\
/**\n\
 * Initialize a new `Doc` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function Doc(runner) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , total = runner.total\n\
    , indents = 2;\n\
\n\
  function indent() {\n\
    return Array(indents).join('  ');\n\
  }\n\
\n\
  runner.on('suite', function(suite){\n\
    if (suite.root) return;\n\
    ++indents;\n\
    console.log('%s<section class=\"suite\">', indent());\n\
    ++indents;\n\
    console.log('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n\
    console.log('%s<dl>', indent());\n\
  });\n\
\n\
  runner.on('suite end', function(suite){\n\
    if (suite.root) return;\n\
    console.log('%s</dl>', indent());\n\
    --indents;\n\
    console.log('%s</section>', indent());\n\
    --indents;\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n\
    var code = utils.escape(utils.clean(test.fn.toString()));\n\
    console.log('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n\
  });\n\
}\n\
\n\
}); // module: reporters/doc.js\n\
\n\
require.register(\"reporters/dot.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `Dot`.\n\
 */\n\
\n\
exports = module.exports = Dot;\n\
\n\
/**\n\
 * Initialize a new `Dot` matrix test reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function Dot(runner) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , width = Base.window.width * .75 | 0\n\
    , n = 0;\n\
\n\
  runner.on('start', function(){\n\
    process.stdout.write('\\n\
  ');\n\
  });\n\
\n\
  runner.on('pending', function(test){\n\
    process.stdout.write(color('pending', Base.symbols.dot));\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    if (++n % width == 0) process.stdout.write('\\n\
  ');\n\
    if ('slow' == test.speed) {\n\
      process.stdout.write(color('bright yellow', Base.symbols.dot));\n\
    } else {\n\
      process.stdout.write(color(test.speed, Base.symbols.dot));\n\
    }\n\
  });\n\
\n\
  runner.on('fail', function(test, err){\n\
    if (++n % width == 0) process.stdout.write('\\n\
  ');\n\
    process.stdout.write(color('fail', Base.symbols.dot));\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    console.log();\n\
    self.epilogue();\n\
  });\n\
}\n\
\n\
/**\n\
 * Inherit from `Base.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Base.prototype;\n\
Dot.prototype = new F;\n\
Dot.prototype.constructor = Dot;\n\
\n\
}); // module: reporters/dot.js\n\
\n\
require.register(\"reporters/html-cov.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var JSONCov = require('./json-cov')\n\
  , fs = require('browser/fs');\n\
\n\
/**\n\
 * Expose `HTMLCov`.\n\
 */\n\
\n\
exports = module.exports = HTMLCov;\n\
\n\
/**\n\
 * Initialize a new `JsCoverage` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function HTMLCov(runner) {\n\
  var jade = require('jade')\n\
    , file = __dirname + '/templates/coverage.jade'\n\
    , str = fs.readFileSync(file, 'utf8')\n\
    , fn = jade.compile(str, { filename: file })\n\
    , self = this;\n\
\n\
  JSONCov.call(this, runner, false);\n\
\n\
  runner.on('end', function(){\n\
    process.stdout.write(fn({\n\
        cov: self.cov\n\
      , coverageClass: coverageClass\n\
    }));\n\
  });\n\
}\n\
\n\
/**\n\
 * Return coverage class for `n`.\n\
 *\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function coverageClass(n) {\n\
  if (n >= 75) return 'high';\n\
  if (n >= 50) return 'medium';\n\
  if (n >= 25) return 'low';\n\
  return 'terrible';\n\
}\n\
}); // module: reporters/html-cov.js\n\
\n\
require.register(\"reporters/html.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , utils = require('../utils')\n\
  , Progress = require('../browser/progress')\n\
  , escape = utils.escape;\n\
\n\
/**\n\
 * Save timer references to avoid Sinon interfering (see GH-237).\n\
 */\n\
\n\
var Date = global.Date\n\
  , setTimeout = global.setTimeout\n\
  , setInterval = global.setInterval\n\
  , clearTimeout = global.clearTimeout\n\
  , clearInterval = global.clearInterval;\n\
\n\
/**\n\
 * Expose `HTML`.\n\
 */\n\
\n\
exports = module.exports = HTML;\n\
\n\
/**\n\
 * Stats template.\n\
 */\n\
\n\
var statsTemplate = '<ul id=\"mocha-stats\">'\n\
  + '<li class=\"progress\"><canvas width=\"40\" height=\"40\"></canvas></li>'\n\
  + '<li class=\"passes\"><a href=\"#\">passes:</a> <em>0</em></li>'\n\
  + '<li class=\"failures\"><a href=\"#\">failures:</a> <em>0</em></li>'\n\
  + '<li class=\"duration\">duration: <em>0</em>s</li>'\n\
  + '</ul>';\n\
\n\
/**\n\
 * Initialize a new `HTML` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function HTML(runner, root) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , total = runner.total\n\
    , stat = fragment(statsTemplate)\n\
    , items = stat.getElementsByTagName('li')\n\
    , passes = items[1].getElementsByTagName('em')[0]\n\
    , passesLink = items[1].getElementsByTagName('a')[0]\n\
    , failures = items[2].getElementsByTagName('em')[0]\n\
    , failuresLink = items[2].getElementsByTagName('a')[0]\n\
    , duration = items[3].getElementsByTagName('em')[0]\n\
    , canvas = stat.getElementsByTagName('canvas')[0]\n\
    , report = fragment('<ul id=\"mocha-report\"></ul>')\n\
    , stack = [report]\n\
    , progress\n\
    , ctx\n\
\n\
  root = root || document.getElementById('mocha');\n\
\n\
  if (canvas.getContext) {\n\
    var ratio = window.devicePixelRatio || 1;\n\
    canvas.style.width = canvas.width;\n\
    canvas.style.height = canvas.height;\n\
    canvas.width *= ratio;\n\
    canvas.height *= ratio;\n\
    ctx = canvas.getContext('2d');\n\
    ctx.scale(ratio, ratio);\n\
    progress = new Progress;\n\
  }\n\
\n\
  if (!root) return error('#mocha div missing, add it to your document');\n\
\n\
  // pass toggle\n\
  on(passesLink, 'click', function(){\n\
    unhide();\n\
    var name = /pass/.test(report.className) ? '' : ' pass';\n\
    report.className = report.className.replace(/fail|pass/g, '') + name;\n\
    if (report.className.trim()) hideSuitesWithout('test pass');\n\
  });\n\
\n\
  // failure toggle\n\
  on(failuresLink, 'click', function(){\n\
    unhide();\n\
    var name = /fail/.test(report.className) ? '' : ' fail';\n\
    report.className = report.className.replace(/fail|pass/g, '') + name;\n\
    if (report.className.trim()) hideSuitesWithout('test fail');\n\
  });\n\
\n\
  root.appendChild(stat);\n\
  root.appendChild(report);\n\
\n\
  if (progress) progress.size(40);\n\
\n\
  runner.on('suite', function(suite){\n\
    if (suite.root) return;\n\
\n\
    // suite\n\
    var url = self.suiteURL(suite);\n\
    var el = fragment('<li class=\"suite\"><h1><a href=\"%s\">%s</a></h1></li>', url, escape(suite.title));\n\
\n\
    // container\n\
    stack[0].appendChild(el);\n\
    stack.unshift(document.createElement('ul'));\n\
    el.appendChild(stack[0]);\n\
  });\n\
\n\
  runner.on('suite end', function(suite){\n\
    if (suite.root) return;\n\
    stack.shift();\n\
  });\n\
\n\
  runner.on('fail', function(test, err){\n\
    if ('hook' == test.type) runner.emit('test end', test);\n\
  });\n\
\n\
  runner.on('test end', function(test){\n\
    // TODO: add to stats\n\
    var percent = stats.tests / this.total * 100 | 0;\n\
    if (progress) progress.update(percent).draw(ctx);\n\
\n\
    // update stats\n\
    var ms = new Date - stats.start;\n\
    text(passes, stats.passes);\n\
    text(failures, stats.failures);\n\
    text(duration, (ms / 1000).toFixed(2));\n\
\n\
    // test\n\
    if ('passed' == test.state) {\n\
      var url = self.testURL(test);\n\
      var el = fragment('<li class=\"test pass %e\"><h2>%e<span class=\"duration\">%ems</span> <a href=\"%s\" class=\"replay\">‣</a></h2></li>', test.speed, test.title, test.duration, url);\n\
    } else if (test.pending) {\n\
      var el = fragment('<li class=\"test pass pending\"><h2>%e</h2></li>', test.title);\n\
    } else {\n\
      var el = fragment('<li class=\"test fail\"><h2>%e <a href=\"?grep=%e\" class=\"replay\">‣</a></h2></li>', test.title, encodeURIComponent(test.fullTitle()));\n\
      var str = test.err.stack || test.err.toString();\n\
\n\
      // FF / Opera do not add the message\n\
      if (!~str.indexOf(test.err.message)) {\n\
        str = test.err.message + '\\n\
' + str;\n\
      }\n\
\n\
      // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we\n\
      // check for the result of the stringifying.\n\
      if ('[object Error]' == str) str = test.err.message;\n\
\n\
      // Safari doesn't give you a stack. Let's at least provide a source line.\n\
      if (!test.err.stack && test.err.sourceURL && test.err.line !== undefined) {\n\
        str += \"\\n\
(\" + test.err.sourceURL + \":\" + test.err.line + \")\";\n\
      }\n\
\n\
      el.appendChild(fragment('<pre class=\"error\">%e</pre>', str));\n\
    }\n\
\n\
    // toggle code\n\
    // TODO: defer\n\
    if (!test.pending) {\n\
      var h2 = el.getElementsByTagName('h2')[0];\n\
\n\
      on(h2, 'click', function(){\n\
        pre.style.display = 'none' == pre.style.display\n\
          ? 'block'\n\
          : 'none';\n\
      });\n\
\n\
      var pre = fragment('<pre><code>%e</code></pre>', utils.clean(test.fn.toString()));\n\
      el.appendChild(pre);\n\
      pre.style.display = 'none';\n\
    }\n\
\n\
    // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.\n\
    if (stack[0]) stack[0].appendChild(el);\n\
  });\n\
}\n\
\n\
/**\n\
 * Provide suite URL\n\
 *\n\
 * @param {Object} [suite]\n\
 */\n\
\n\
HTML.prototype.suiteURL = function(suite){\n\
  return '?grep=' + encodeURIComponent(suite.fullTitle());\n\
};\n\
\n\
/**\n\
 * Provide test URL\n\
 *\n\
 * @param {Object} [test]\n\
 */\n\
\n\
HTML.prototype.testURL = function(test){\n\
  return '?grep=' + encodeURIComponent(test.fullTitle());\n\
};\n\
\n\
/**\n\
 * Display error `msg`.\n\
 */\n\
\n\
function error(msg) {\n\
  document.body.appendChild(fragment('<div id=\"mocha-error\">%s</div>', msg));\n\
}\n\
\n\
/**\n\
 * Return a DOM fragment from `html`.\n\
 */\n\
\n\
function fragment(html) {\n\
  var args = arguments\n\
    , div = document.createElement('div')\n\
    , i = 1;\n\
\n\
  div.innerHTML = html.replace(/%([se])/g, function(_, type){\n\
    switch (type) {\n\
      case 's': return String(args[i++]);\n\
      case 'e': return escape(args[i++]);\n\
    }\n\
  });\n\
\n\
  return div.firstChild;\n\
}\n\
\n\
/**\n\
 * Check for suites that do not have elements\n\
 * with `classname`, and hide them.\n\
 */\n\
\n\
function hideSuitesWithout(classname) {\n\
  var suites = document.getElementsByClassName('suite');\n\
  for (var i = 0; i < suites.length; i++) {\n\
    var els = suites[i].getElementsByClassName(classname);\n\
    if (0 == els.length) suites[i].className += ' hidden';\n\
  }\n\
}\n\
\n\
/**\n\
 * Unhide .hidden suites.\n\
 */\n\
\n\
function unhide() {\n\
  var els = document.getElementsByClassName('suite hidden');\n\
  for (var i = 0; i < els.length; ++i) {\n\
    els[i].className = els[i].className.replace('suite hidden', 'suite');\n\
  }\n\
}\n\
\n\
/**\n\
 * Set `el` text to `str`.\n\
 */\n\
\n\
function text(el, str) {\n\
  if (el.textContent) {\n\
    el.textContent = str;\n\
  } else {\n\
    el.innerText = str;\n\
  }\n\
}\n\
\n\
/**\n\
 * Listen on `event` with callback `fn`.\n\
 */\n\
\n\
function on(el, event, fn) {\n\
  if (el.addEventListener) {\n\
    el.addEventListener(event, fn, false);\n\
  } else {\n\
    el.attachEvent('on' + event, fn);\n\
  }\n\
}\n\
\n\
}); // module: reporters/html.js\n\
\n\
require.register(\"reporters/index.js\", function(module, exports, require){\n\
\n\
exports.Base = require('./base');\n\
exports.Dot = require('./dot');\n\
exports.Doc = require('./doc');\n\
exports.TAP = require('./tap');\n\
exports.JSON = require('./json');\n\
exports.HTML = require('./html');\n\
exports.List = require('./list');\n\
exports.Min = require('./min');\n\
exports.Spec = require('./spec');\n\
exports.Nyan = require('./nyan');\n\
exports.XUnit = require('./xunit');\n\
exports.Markdown = require('./markdown');\n\
exports.Progress = require('./progress');\n\
exports.Landing = require('./landing');\n\
exports.JSONCov = require('./json-cov');\n\
exports.HTMLCov = require('./html-cov');\n\
exports.JSONStream = require('./json-stream');\n\
\n\
}); // module: reporters/index.js\n\
\n\
require.register(\"reporters/json-cov.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base');\n\
\n\
/**\n\
 * Expose `JSONCov`.\n\
 */\n\
\n\
exports = module.exports = JSONCov;\n\
\n\
/**\n\
 * Initialize a new `JsCoverage` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @param {Boolean} output\n\
 * @api public\n\
 */\n\
\n\
function JSONCov(runner, output) {\n\
  var self = this\n\
    , output = 1 == arguments.length ? true : output;\n\
\n\
  Base.call(this, runner);\n\
\n\
  var tests = []\n\
    , failures = []\n\
    , passes = [];\n\
\n\
  runner.on('test end', function(test){\n\
    tests.push(test);\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    passes.push(test);\n\
  });\n\
\n\
  runner.on('fail', function(test){\n\
    failures.push(test);\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    var cov = global._$jscoverage || {};\n\
    var result = self.cov = map(cov);\n\
    result.stats = self.stats;\n\
    result.tests = tests.map(clean);\n\
    result.failures = failures.map(clean);\n\
    result.passes = passes.map(clean);\n\
    if (!output) return;\n\
    process.stdout.write(JSON.stringify(result, null, 2 ));\n\
  });\n\
}\n\
\n\
/**\n\
 * Map jscoverage data to a JSON structure\n\
 * suitable for reporting.\n\
 *\n\
 * @param {Object} cov\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function map(cov) {\n\
  var ret = {\n\
      instrumentation: 'node-jscoverage'\n\
    , sloc: 0\n\
    , hits: 0\n\
    , misses: 0\n\
    , coverage: 0\n\
    , files: []\n\
  };\n\
\n\
  for (var filename in cov) {\n\
    var data = coverage(filename, cov[filename]);\n\
    ret.files.push(data);\n\
    ret.hits += data.hits;\n\
    ret.misses += data.misses;\n\
    ret.sloc += data.sloc;\n\
  }\n\
\n\
  ret.files.sort(function(a, b) {\n\
    return a.filename.localeCompare(b.filename);\n\
  });\n\
\n\
  if (ret.sloc > 0) {\n\
    ret.coverage = (ret.hits / ret.sloc) * 100;\n\
  }\n\
\n\
  return ret;\n\
};\n\
\n\
/**\n\
 * Map jscoverage data for a single source file\n\
 * to a JSON structure suitable for reporting.\n\
 *\n\
 * @param {String} filename name of the source file\n\
 * @param {Object} data jscoverage coverage data\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function coverage(filename, data) {\n\
  var ret = {\n\
    filename: filename,\n\
    coverage: 0,\n\
    hits: 0,\n\
    misses: 0,\n\
    sloc: 0,\n\
    source: {}\n\
  };\n\
\n\
  data.source.forEach(function(line, num){\n\
    num++;\n\
\n\
    if (data[num] === 0) {\n\
      ret.misses++;\n\
      ret.sloc++;\n\
    } else if (data[num] !== undefined) {\n\
      ret.hits++;\n\
      ret.sloc++;\n\
    }\n\
\n\
    ret.source[num] = {\n\
        source: line\n\
      , coverage: data[num] === undefined\n\
        ? ''\n\
        : data[num]\n\
    };\n\
  });\n\
\n\
  ret.coverage = ret.hits / ret.sloc * 100;\n\
\n\
  return ret;\n\
}\n\
\n\
/**\n\
 * Return a plain-object representation of `test`\n\
 * free of cyclic properties etc.\n\
 *\n\
 * @param {Object} test\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function clean(test) {\n\
  return {\n\
      title: test.title\n\
    , fullTitle: test.fullTitle()\n\
    , duration: test.duration\n\
  }\n\
}\n\
\n\
}); // module: reporters/json-cov.js\n\
\n\
require.register(\"reporters/json-stream.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `List`.\n\
 */\n\
\n\
exports = module.exports = List;\n\
\n\
/**\n\
 * Initialize a new `List` test reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function List(runner) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , total = runner.total;\n\
\n\
  runner.on('start', function(){\n\
    console.log(JSON.stringify(['start', { total: total }]));\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    console.log(JSON.stringify(['pass', clean(test)]));\n\
  });\n\
\n\
  runner.on('fail', function(test, err){\n\
    console.log(JSON.stringify(['fail', clean(test)]));\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    process.stdout.write(JSON.stringify(['end', self.stats]));\n\
  });\n\
}\n\
\n\
/**\n\
 * Return a plain-object representation of `test`\n\
 * free of cyclic properties etc.\n\
 *\n\
 * @param {Object} test\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function clean(test) {\n\
  return {\n\
      title: test.title\n\
    , fullTitle: test.fullTitle()\n\
    , duration: test.duration\n\
  }\n\
}\n\
}); // module: reporters/json-stream.js\n\
\n\
require.register(\"reporters/json.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , cursor = Base.cursor\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `JSON`.\n\
 */\n\
\n\
exports = module.exports = JSONReporter;\n\
\n\
/**\n\
 * Initialize a new `JSON` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function JSONReporter(runner) {\n\
  var self = this;\n\
  Base.call(this, runner);\n\
\n\
  var tests = []\n\
    , failures = []\n\
    , passes = [];\n\
\n\
  runner.on('test end', function(test){\n\
    tests.push(test);\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    passes.push(test);\n\
  });\n\
\n\
  runner.on('fail', function(test){\n\
    failures.push(test);\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    var obj = {\n\
        stats: self.stats\n\
      , tests: tests.map(clean)\n\
      , failures: failures.map(clean)\n\
      , passes: passes.map(clean)\n\
    };\n\
\n\
    process.stdout.write(JSON.stringify(obj, null, 2));\n\
  });\n\
}\n\
\n\
/**\n\
 * Return a plain-object representation of `test`\n\
 * free of cyclic properties etc.\n\
 *\n\
 * @param {Object} test\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function clean(test) {\n\
  return {\n\
      title: test.title\n\
    , fullTitle: test.fullTitle()\n\
    , duration: test.duration\n\
  }\n\
}\n\
}); // module: reporters/json.js\n\
\n\
require.register(\"reporters/landing.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , cursor = Base.cursor\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `Landing`.\n\
 */\n\
\n\
exports = module.exports = Landing;\n\
\n\
/**\n\
 * Airplane color.\n\
 */\n\
\n\
Base.colors.plane = 0;\n\
\n\
/**\n\
 * Airplane crash color.\n\
 */\n\
\n\
Base.colors['plane crash'] = 31;\n\
\n\
/**\n\
 * Runway color.\n\
 */\n\
\n\
Base.colors.runway = 90;\n\
\n\
/**\n\
 * Initialize a new `Landing` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function Landing(runner) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , width = Base.window.width * .75 | 0\n\
    , total = runner.total\n\
    , stream = process.stdout\n\
    , plane = color('plane', '✈')\n\
    , crashed = -1\n\
    , n = 0;\n\
\n\
  function runway() {\n\
    var buf = Array(width).join('-');\n\
    return '  ' + color('runway', buf);\n\
  }\n\
\n\
  runner.on('start', function(){\n\
    stream.write('\\n\
  ');\n\
    cursor.hide();\n\
  });\n\
\n\
  runner.on('test end', function(test){\n\
    // check if the plane crashed\n\
    var col = -1 == crashed\n\
      ? width * ++n / total | 0\n\
      : crashed;\n\
\n\
    // show the crash\n\
    if ('failed' == test.state) {\n\
      plane = color('plane crash', '✈');\n\
      crashed = col;\n\
    }\n\
\n\
    // render landing strip\n\
    stream.write('\\u001b[4F\\n\
\\n\
');\n\
    stream.write(runway());\n\
    stream.write('\\n\
  ');\n\
    stream.write(color('runway', Array(col).join('⋅')));\n\
    stream.write(plane)\n\
    stream.write(color('runway', Array(width - col).join('⋅') + '\\n\
'));\n\
    stream.write(runway());\n\
    stream.write('\\u001b[0m');\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    cursor.show();\n\
    console.log();\n\
    self.epilogue();\n\
  });\n\
}\n\
\n\
/**\n\
 * Inherit from `Base.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Base.prototype;\n\
Landing.prototype = new F;\n\
Landing.prototype.constructor = Landing;\n\
\n\
}); // module: reporters/landing.js\n\
\n\
require.register(\"reporters/list.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , cursor = Base.cursor\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `List`.\n\
 */\n\
\n\
exports = module.exports = List;\n\
\n\
/**\n\
 * Initialize a new `List` test reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function List(runner) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , n = 0;\n\
\n\
  runner.on('start', function(){\n\
    console.log();\n\
  });\n\
\n\
  runner.on('test', function(test){\n\
    process.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));\n\
  });\n\
\n\
  runner.on('pending', function(test){\n\
    var fmt = color('checkmark', '  -')\n\
      + color('pending', ' %s');\n\
    console.log(fmt, test.fullTitle());\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    var fmt = color('checkmark', '  '+Base.symbols.dot)\n\
      + color('pass', ' %s: ')\n\
      + color(test.speed, '%dms');\n\
    cursor.CR();\n\
    console.log(fmt, test.fullTitle(), test.duration);\n\
  });\n\
\n\
  runner.on('fail', function(test, err){\n\
    cursor.CR();\n\
    console.log(color('fail', '  %d) %s'), ++n, test.fullTitle());\n\
  });\n\
\n\
  runner.on('end', self.epilogue.bind(self));\n\
}\n\
\n\
/**\n\
 * Inherit from `Base.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Base.prototype;\n\
List.prototype = new F;\n\
List.prototype.constructor = List;\n\
\n\
\n\
}); // module: reporters/list.js\n\
\n\
require.register(\"reporters/markdown.js\", function(module, exports, require){\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , utils = require('../utils');\n\
\n\
/**\n\
 * Expose `Markdown`.\n\
 */\n\
\n\
exports = module.exports = Markdown;\n\
\n\
/**\n\
 * Initialize a new `Markdown` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function Markdown(runner) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , level = 0\n\
    , buf = '';\n\
\n\
  function title(str) {\n\
    return Array(level).join('#') + ' ' + str;\n\
  }\n\
\n\
  function indent() {\n\
    return Array(level).join('  ');\n\
  }\n\
\n\
  function mapTOC(suite, obj) {\n\
    var ret = obj;\n\
    obj = obj[suite.title] = obj[suite.title] || { suite: suite };\n\
    suite.suites.forEach(function(suite){\n\
      mapTOC(suite, obj);\n\
    });\n\
    return ret;\n\
  }\n\
\n\
  function stringifyTOC(obj, level) {\n\
    ++level;\n\
    var buf = '';\n\
    var link;\n\
    for (var key in obj) {\n\
      if ('suite' == key) continue;\n\
      if (key) link = ' - [' + key + '](#' + utils.slug(obj[key].suite.fullTitle()) + ')\\n\
';\n\
      if (key) buf += Array(level).join('  ') + link;\n\
      buf += stringifyTOC(obj[key], level);\n\
    }\n\
    --level;\n\
    return buf;\n\
  }\n\
\n\
  function generateTOC(suite) {\n\
    var obj = mapTOC(suite, {});\n\
    return stringifyTOC(obj, 0);\n\
  }\n\
\n\
  generateTOC(runner.suite);\n\
\n\
  runner.on('suite', function(suite){\n\
    ++level;\n\
    var slug = utils.slug(suite.fullTitle());\n\
    buf += '<a name=\"' + slug + '\"></a>' + '\\n\
';\n\
    buf += title(suite.title) + '\\n\
';\n\
  });\n\
\n\
  runner.on('suite end', function(suite){\n\
    --level;\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    var code = utils.clean(test.fn.toString());\n\
    buf += test.title + '.\\n\
';\n\
    buf += '\\n\
```js\\n\
';\n\
    buf += code + '\\n\
';\n\
    buf += '```\\n\
\\n\
';\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    process.stdout.write('# TOC\\n\
');\n\
    process.stdout.write(generateTOC(runner.suite));\n\
    process.stdout.write(buf);\n\
  });\n\
}\n\
}); // module: reporters/markdown.js\n\
\n\
require.register(\"reporters/min.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base');\n\
\n\
/**\n\
 * Expose `Min`.\n\
 */\n\
\n\
exports = module.exports = Min;\n\
\n\
/**\n\
 * Initialize a new `Min` minimal test reporter (best used with --watch).\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function Min(runner) {\n\
  Base.call(this, runner);\n\
\n\
  runner.on('start', function(){\n\
    // clear screen\n\
    process.stdout.write('\\u001b[2J');\n\
    // set cursor position\n\
    process.stdout.write('\\u001b[1;3H');\n\
  });\n\
\n\
  runner.on('end', this.epilogue.bind(this));\n\
}\n\
\n\
/**\n\
 * Inherit from `Base.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Base.prototype;\n\
Min.prototype = new F;\n\
Min.prototype.constructor = Min;\n\
\n\
\n\
}); // module: reporters/min.js\n\
\n\
require.register(\"reporters/nyan.js\", function(module, exports, require){\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `Dot`.\n\
 */\n\
\n\
exports = module.exports = NyanCat;\n\
\n\
/**\n\
 * Initialize a new `Dot` matrix test reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function NyanCat(runner) {\n\
  Base.call(this, runner);\n\
  var self = this\n\
    , stats = this.stats\n\
    , width = Base.window.width * .75 | 0\n\
    , rainbowColors = this.rainbowColors = self.generateColors()\n\
    , colorIndex = this.colorIndex = 0\n\
    , numerOfLines = this.numberOfLines = 4\n\
    , trajectories = this.trajectories = [[], [], [], []]\n\
    , nyanCatWidth = this.nyanCatWidth = 11\n\
    , trajectoryWidthMax = this.trajectoryWidthMax = (width - nyanCatWidth)\n\
    , scoreboardWidth = this.scoreboardWidth = 5\n\
    , tick = this.tick = 0\n\
    , n = 0;\n\
\n\
  runner.on('start', function(){\n\
    Base.cursor.hide();\n\
    self.draw();\n\
  });\n\
\n\
  runner.on('pending', function(test){\n\
    self.draw();\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    self.draw();\n\
  });\n\
\n\
  runner.on('fail', function(test, err){\n\
    self.draw();\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    Base.cursor.show();\n\
    for (var i = 0; i < self.numberOfLines; i++) write('\\n\
');\n\
    self.epilogue();\n\
  });\n\
}\n\
\n\
/**\n\
 * Draw the nyan cat\n\
 *\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.draw = function(){\n\
  this.appendRainbow();\n\
  this.drawScoreboard();\n\
  this.drawRainbow();\n\
  this.drawNyanCat();\n\
  this.tick = !this.tick;\n\
};\n\
\n\
/**\n\
 * Draw the \"scoreboard\" showing the number\n\
 * of passes, failures and pending tests.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.drawScoreboard = function(){\n\
  var stats = this.stats;\n\
  var colors = Base.colors;\n\
\n\
  function draw(color, n) {\n\
    write(' ');\n\
    write('\\u001b[' + color + 'm' + n + '\\u001b[0m');\n\
    write('\\n\
');\n\
  }\n\
\n\
  draw(colors.green, stats.passes);\n\
  draw(colors.fail, stats.failures);\n\
  draw(colors.pending, stats.pending);\n\
  write('\\n\
');\n\
\n\
  this.cursorUp(this.numberOfLines);\n\
};\n\
\n\
/**\n\
 * Append the rainbow.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.appendRainbow = function(){\n\
  var segment = this.tick ? '_' : '-';\n\
  var rainbowified = this.rainbowify(segment);\n\
\n\
  for (var index = 0; index < this.numberOfLines; index++) {\n\
    var trajectory = this.trajectories[index];\n\
    if (trajectory.length >= this.trajectoryWidthMax) trajectory.shift();\n\
    trajectory.push(rainbowified);\n\
  }\n\
};\n\
\n\
/**\n\
 * Draw the rainbow.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.drawRainbow = function(){\n\
  var self = this;\n\
\n\
  this.trajectories.forEach(function(line, index) {\n\
    write('\\u001b[' + self.scoreboardWidth + 'C');\n\
    write(line.join(''));\n\
    write('\\n\
');\n\
  });\n\
\n\
  this.cursorUp(this.numberOfLines);\n\
};\n\
\n\
/**\n\
 * Draw the nyan cat\n\
 *\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.drawNyanCat = function() {\n\
  var self = this;\n\
  var startWidth = this.scoreboardWidth + this.trajectories[0].length;\n\
  var color = '\\u001b[' + startWidth + 'C';\n\
  var padding = '';\n\
\n\
  write(color);\n\
  write('_,------,');\n\
  write('\\n\
');\n\
\n\
  write(color);\n\
  padding = self.tick ? '  ' : '   ';\n\
  write('_|' + padding + '/\\\\_/\\\\ ');\n\
  write('\\n\
');\n\
\n\
  write(color);\n\
  padding = self.tick ? '_' : '__';\n\
  var tail = self.tick ? '~' : '^';\n\
  var face;\n\
  write(tail + '|' + padding + this.face() + ' ');\n\
  write('\\n\
');\n\
\n\
  write(color);\n\
  padding = self.tick ? ' ' : '  ';\n\
  write(padding + '\"\"  \"\" ');\n\
  write('\\n\
');\n\
\n\
  this.cursorUp(this.numberOfLines);\n\
};\n\
\n\
/**\n\
 * Draw nyan cat face.\n\
 *\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.face = function() {\n\
  var stats = this.stats;\n\
  if (stats.failures) {\n\
    return '( x .x)';\n\
  } else if (stats.pending) {\n\
    return '( o .o)';\n\
  } else if(stats.passes) {\n\
    return '( ^ .^)';\n\
  } else {\n\
    return '( - .-)';\n\
  }\n\
}\n\
\n\
/**\n\
 * Move cursor up `n`.\n\
 *\n\
 * @param {Number} n\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.cursorUp = function(n) {\n\
  write('\\u001b[' + n + 'A');\n\
};\n\
\n\
/**\n\
 * Move cursor down `n`.\n\
 *\n\
 * @param {Number} n\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.cursorDown = function(n) {\n\
  write('\\u001b[' + n + 'B');\n\
};\n\
\n\
/**\n\
 * Generate rainbow colors.\n\
 *\n\
 * @return {Array}\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.generateColors = function(){\n\
  var colors = [];\n\
\n\
  for (var i = 0; i < (6 * 7); i++) {\n\
    var pi3 = Math.floor(Math.PI / 3);\n\
    var n = (i * (1.0 / 6));\n\
    var r = Math.floor(3 * Math.sin(n) + 3);\n\
    var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\n\
    var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\n\
    colors.push(36 * r + 6 * g + b + 16);\n\
  }\n\
\n\
  return colors;\n\
};\n\
\n\
/**\n\
 * Apply rainbow to the given `str`.\n\
 *\n\
 * @param {String} str\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
NyanCat.prototype.rainbowify = function(str){\n\
  var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\n\
  this.colorIndex += 1;\n\
  return '\\u001b[38;5;' + color + 'm' + str + '\\u001b[0m';\n\
};\n\
\n\
/**\n\
 * Stdout helper.\n\
 */\n\
\n\
function write(string) {\n\
  process.stdout.write(string);\n\
}\n\
\n\
/**\n\
 * Inherit from `Base.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Base.prototype;\n\
NyanCat.prototype = new F;\n\
NyanCat.prototype.constructor = NyanCat;\n\
\n\
\n\
}); // module: reporters/nyan.js\n\
\n\
require.register(\"reporters/progress.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , cursor = Base.cursor\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `Progress`.\n\
 */\n\
\n\
exports = module.exports = Progress;\n\
\n\
/**\n\
 * General progress bar color.\n\
 */\n\
\n\
Base.colors.progress = 90;\n\
\n\
/**\n\
 * Initialize a new `Progress` bar test reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @param {Object} options\n\
 * @api public\n\
 */\n\
\n\
function Progress(runner, options) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , options = options || {}\n\
    , stats = this.stats\n\
    , width = Base.window.width * .50 | 0\n\
    , total = runner.total\n\
    , complete = 0\n\
    , max = Math.max;\n\
\n\
  // default chars\n\
  options.open = options.open || '[';\n\
  options.complete = options.complete || '▬';\n\
  options.incomplete = options.incomplete || Base.symbols.dot;\n\
  options.close = options.close || ']';\n\
  options.verbose = false;\n\
\n\
  // tests started\n\
  runner.on('start', function(){\n\
    console.log();\n\
    cursor.hide();\n\
  });\n\
\n\
  // tests complete\n\
  runner.on('test end', function(){\n\
    complete++;\n\
    var incomplete = total - complete\n\
      , percent = complete / total\n\
      , n = width * percent | 0\n\
      , i = width - n;\n\
\n\
    cursor.CR();\n\
    process.stdout.write('\\u001b[J');\n\
    process.stdout.write(color('progress', '  ' + options.open));\n\
    process.stdout.write(Array(n).join(options.complete));\n\
    process.stdout.write(Array(i).join(options.incomplete));\n\
    process.stdout.write(color('progress', options.close));\n\
    if (options.verbose) {\n\
      process.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n\
    }\n\
  });\n\
\n\
  // tests are complete, output some stats\n\
  // and the failures if any\n\
  runner.on('end', function(){\n\
    cursor.show();\n\
    console.log();\n\
    self.epilogue();\n\
  });\n\
}\n\
\n\
/**\n\
 * Inherit from `Base.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Base.prototype;\n\
Progress.prototype = new F;\n\
Progress.prototype.constructor = Progress;\n\
\n\
\n\
}); // module: reporters/progress.js\n\
\n\
require.register(\"reporters/spec.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , cursor = Base.cursor\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `Spec`.\n\
 */\n\
\n\
exports = module.exports = Spec;\n\
\n\
/**\n\
 * Initialize a new `Spec` test reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function Spec(runner) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , indents = 0\n\
    , n = 0;\n\
\n\
  function indent() {\n\
    return Array(indents).join('  ')\n\
  }\n\
\n\
  runner.on('start', function(){\n\
    console.log();\n\
  });\n\
\n\
  runner.on('suite', function(suite){\n\
    ++indents;\n\
    console.log(color('suite', '%s%s'), indent(), suite.title);\n\
  });\n\
\n\
  runner.on('suite end', function(suite){\n\
    --indents;\n\
    if (1 == indents) console.log();\n\
  });\n\
\n\
  runner.on('pending', function(test){\n\
    var fmt = indent() + color('pending', '  - %s');\n\
    console.log(fmt, test.title);\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    if ('fast' == test.speed) {\n\
      var fmt = indent()\n\
        + color('checkmark', '  ' + Base.symbols.ok)\n\
        + color('pass', ' %s ');\n\
      cursor.CR();\n\
      console.log(fmt, test.title);\n\
    } else {\n\
      var fmt = indent()\n\
        + color('checkmark', '  ' + Base.symbols.ok)\n\
        + color('pass', ' %s ')\n\
        + color(test.speed, '(%dms)');\n\
      cursor.CR();\n\
      console.log(fmt, test.title, test.duration);\n\
    }\n\
  });\n\
\n\
  runner.on('fail', function(test, err){\n\
    cursor.CR();\n\
    console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);\n\
  });\n\
\n\
  runner.on('end', self.epilogue.bind(self));\n\
}\n\
\n\
/**\n\
 * Inherit from `Base.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Base.prototype;\n\
Spec.prototype = new F;\n\
Spec.prototype.constructor = Spec;\n\
\n\
\n\
}); // module: reporters/spec.js\n\
\n\
require.register(\"reporters/tap.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , cursor = Base.cursor\n\
  , color = Base.color;\n\
\n\
/**\n\
 * Expose `TAP`.\n\
 */\n\
\n\
exports = module.exports = TAP;\n\
\n\
/**\n\
 * Initialize a new `TAP` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function TAP(runner) {\n\
  Base.call(this, runner);\n\
\n\
  var self = this\n\
    , stats = this.stats\n\
    , n = 1\n\
    , passes = 0\n\
    , failures = 0;\n\
\n\
  runner.on('start', function(){\n\
    var total = runner.grepTotal(runner.suite);\n\
    console.log('%d..%d', 1, total);\n\
  });\n\
\n\
  runner.on('test end', function(){\n\
    ++n;\n\
  });\n\
\n\
  runner.on('pending', function(test){\n\
    console.log('ok %d %s # SKIP -', n, title(test));\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    passes++;\n\
    console.log('ok %d %s', n, title(test));\n\
  });\n\
\n\
  runner.on('fail', function(test, err){\n\
    failures++;\n\
    console.log('not ok %d %s', n, title(test));\n\
    if (err.stack) console.log(err.stack.replace(/^/gm, '  '));\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    console.log('# tests ' + (passes + failures));\n\
    console.log('# pass ' + passes);\n\
    console.log('# fail ' + failures);\n\
  });\n\
}\n\
\n\
/**\n\
 * Return a TAP-safe title of `test`\n\
 *\n\
 * @param {Object} test\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function title(test) {\n\
  return test.fullTitle().replace(/#/g, '');\n\
}\n\
\n\
}); // module: reporters/tap.js\n\
\n\
require.register(\"reporters/xunit.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Base = require('./base')\n\
  , utils = require('../utils')\n\
  , escape = utils.escape;\n\
\n\
/**\n\
 * Save timer references to avoid Sinon interfering (see GH-237).\n\
 */\n\
\n\
var Date = global.Date\n\
  , setTimeout = global.setTimeout\n\
  , setInterval = global.setInterval\n\
  , clearTimeout = global.clearTimeout\n\
  , clearInterval = global.clearInterval;\n\
\n\
/**\n\
 * Expose `XUnit`.\n\
 */\n\
\n\
exports = module.exports = XUnit;\n\
\n\
/**\n\
 * Initialize a new `XUnit` reporter.\n\
 *\n\
 * @param {Runner} runner\n\
 * @api public\n\
 */\n\
\n\
function XUnit(runner) {\n\
  Base.call(this, runner);\n\
  var stats = this.stats\n\
    , tests = []\n\
    , self = this;\n\
\n\
  runner.on('pending', function(test){\n\
    tests.push(test);\n\
  });\n\
\n\
  runner.on('pass', function(test){\n\
    tests.push(test);\n\
  });\n\
\n\
  runner.on('fail', function(test){\n\
    tests.push(test);\n\
  });\n\
\n\
  runner.on('end', function(){\n\
    console.log(tag('testsuite', {\n\
        name: 'Mocha Tests'\n\
      , tests: stats.tests\n\
      , failures: stats.failures\n\
      , errors: stats.failures\n\
      , skipped: stats.tests - stats.failures - stats.passes\n\
      , timestamp: (new Date).toUTCString()\n\
      , time: (stats.duration / 1000) || 0\n\
    }, false));\n\
\n\
    tests.forEach(test);\n\
    console.log('</testsuite>');\n\
  });\n\
}\n\
\n\
/**\n\
 * Inherit from `Base.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Base.prototype;\n\
XUnit.prototype = new F;\n\
XUnit.prototype.constructor = XUnit;\n\
\n\
\n\
/**\n\
 * Output tag for the given `test.`\n\
 */\n\
\n\
function test(test) {\n\
  var attrs = {\n\
      classname: test.parent.fullTitle()\n\
    , name: test.title\n\
    , time: (test.duration / 1000) || 0\n\
  };\n\
\n\
  if ('failed' == test.state) {\n\
    var err = test.err;\n\
    attrs.message = escape(err.message);\n\
    console.log(tag('testcase', attrs, false, tag('failure', attrs, false, cdata(err.stack))));\n\
  } else if (test.pending) {\n\
    console.log(tag('testcase', attrs, false, tag('skipped', {}, true)));\n\
  } else {\n\
    console.log(tag('testcase', attrs, true) );\n\
  }\n\
}\n\
\n\
/**\n\
 * HTML tag helper.\n\
 */\n\
\n\
function tag(name, attrs, close, content) {\n\
  var end = close ? '/>' : '>'\n\
    , pairs = []\n\
    , tag;\n\
\n\
  for (var key in attrs) {\n\
    pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n\
  }\n\
\n\
  tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n\
  if (content) tag += content + '</' + name + end;\n\
  return tag;\n\
}\n\
\n\
/**\n\
 * Return cdata escaped CDATA `str`.\n\
 */\n\
\n\
function cdata(str) {\n\
  return '<![CDATA[' + escape(str) + ']]>';\n\
}\n\
\n\
}); // module: reporters/xunit.js\n\
\n\
require.register(\"runnable.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var EventEmitter = require('browser/events').EventEmitter\n\
  , debug = require('browser/debug')('mocha:runnable')\n\
  , milliseconds = require('./ms');\n\
\n\
/**\n\
 * Save timer references to avoid Sinon interfering (see GH-237).\n\
 */\n\
\n\
var Date = global.Date\n\
  , setTimeout = global.setTimeout\n\
  , setInterval = global.setInterval\n\
  , clearTimeout = global.clearTimeout\n\
  , clearInterval = global.clearInterval;\n\
\n\
/**\n\
 * Object#toString().\n\
 */\n\
\n\
var toString = Object.prototype.toString;\n\
\n\
/**\n\
 * Expose `Runnable`.\n\
 */\n\
\n\
module.exports = Runnable;\n\
\n\
/**\n\
 * Initialize a new `Runnable` with the given `title` and callback `fn`.\n\
 *\n\
 * @param {String} title\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
function Runnable(title, fn) {\n\
  this.title = title;\n\
  this.fn = fn;\n\
  this.async = fn && fn.length;\n\
  this.sync = ! this.async;\n\
  this._timeout = 2000;\n\
  this._slow = 75;\n\
  this.timedOut = false;\n\
}\n\
\n\
/**\n\
 * Inherit from `EventEmitter.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = EventEmitter.prototype;\n\
Runnable.prototype = new F;\n\
Runnable.prototype.constructor = Runnable;\n\
\n\
\n\
/**\n\
 * Set & get timeout `ms`.\n\
 *\n\
 * @param {Number|String} ms\n\
 * @return {Runnable|Number} ms or self\n\
 * @api private\n\
 */\n\
\n\
Runnable.prototype.timeout = function(ms){\n\
  if (0 == arguments.length) return this._timeout;\n\
  if ('string' == typeof ms) ms = milliseconds(ms);\n\
  debug('timeout %d', ms);\n\
  this._timeout = ms;\n\
  if (this.timer) this.resetTimeout();\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set & get slow `ms`.\n\
 *\n\
 * @param {Number|String} ms\n\
 * @return {Runnable|Number} ms or self\n\
 * @api private\n\
 */\n\
\n\
Runnable.prototype.slow = function(ms){\n\
  if (0 === arguments.length) return this._slow;\n\
  if ('string' == typeof ms) ms = milliseconds(ms);\n\
  debug('timeout %d', ms);\n\
  this._slow = ms;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Return the full title generated by recursively\n\
 * concatenating the parent's full title.\n\
 *\n\
 * @return {String}\n\
 * @api public\n\
 */\n\
\n\
Runnable.prototype.fullTitle = function(){\n\
  return this.parent.fullTitle() + ' ' + this.title;\n\
};\n\
\n\
/**\n\
 * Clear the timeout.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Runnable.prototype.clearTimeout = function(){\n\
  clearTimeout(this.timer);\n\
};\n\
\n\
/**\n\
 * Inspect the runnable void of private properties.\n\
 *\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
Runnable.prototype.inspect = function(){\n\
  return JSON.stringify(this, function(key, val){\n\
    if ('_' == key[0]) return;\n\
    if ('parent' == key) return '#<Suite>';\n\
    if ('ctx' == key) return '#<Context>';\n\
    return val;\n\
  }, 2);\n\
};\n\
\n\
/**\n\
 * Reset the timeout.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Runnable.prototype.resetTimeout = function(){\n\
  var self = this;\n\
  var ms = this.timeout() || 1e9;\n\
\n\
  this.clearTimeout();\n\
  this.timer = setTimeout(function(){\n\
    self.callback(new Error('timeout of ' + ms + 'ms exceeded'));\n\
    self.timedOut = true;\n\
  }, ms);\n\
};\n\
\n\
/**\n\
 * Whitelist these globals for this test run\n\
 *\n\
 * @api private\n\
 */\n\
Runnable.prototype.globals = function(arr){\n\
  var self = this;\n\
  this._allowedGlobals = arr;\n\
};\n\
\n\
/**\n\
 * Run the test and invoke `fn(err)`.\n\
 *\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
Runnable.prototype.run = function(fn){\n\
  var self = this\n\
    , ms = this.timeout()\n\
    , start = new Date\n\
    , ctx = this.ctx\n\
    , finished\n\
    , emitted;\n\
\n\
  if (ctx) ctx.runnable(this);\n\
\n\
  // timeout\n\
  if (this.async) {\n\
    if (ms) {\n\
      this.timer = setTimeout(function(){\n\
        done(new Error('timeout of ' + ms + 'ms exceeded'));\n\
        self.timedOut = true;\n\
      }, ms);\n\
    }\n\
  }\n\
\n\
  // called multiple times\n\
  function multiple(err) {\n\
    if (emitted) return;\n\
    emitted = true;\n\
    self.emit('error', err || new Error('done() called multiple times'));\n\
  }\n\
\n\
  // finished\n\
  function done(err) {\n\
    if (self.timedOut) return;\n\
    if (finished) return multiple(err);\n\
    self.clearTimeout();\n\
    self.duration = new Date - start;\n\
    finished = true;\n\
    fn(err);\n\
  }\n\
\n\
  // for .resetTimeout()\n\
  this.callback = done;\n\
\n\
  // async\n\
  if (this.async) {\n\
    try {\n\
      this.fn.call(ctx, function(err){\n\
        if (err instanceof Error || toString.call(err) === \"[object Error]\") return done(err);\n\
        if (null != err) return done(new Error('done() invoked with non-Error: ' + err));\n\
        done();\n\
      });\n\
    } catch (err) {\n\
      done(err);\n\
    }\n\
    return;\n\
  }\n\
\n\
  if (this.asyncOnly) {\n\
    return done(new Error('--async-only option in use without declaring `done()`'));\n\
  }\n\
\n\
  // sync\n\
  try {\n\
    if (!this.pending) this.fn.call(ctx);\n\
    this.duration = new Date - start;\n\
    fn();\n\
  } catch (err) {\n\
    fn(err);\n\
  }\n\
};\n\
\n\
}); // module: runnable.js\n\
\n\
require.register(\"runner.js\", function(module, exports, require){\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var EventEmitter = require('browser/events').EventEmitter\n\
  , debug = require('browser/debug')('mocha:runner')\n\
  , Test = require('./test')\n\
  , utils = require('./utils')\n\
  , filter = utils.filter\n\
  , keys = utils.keys;\n\
\n\
/**\n\
 * Non-enumerable globals.\n\
 */\n\
\n\
var globals = [\n\
  'setTimeout',\n\
  'clearTimeout',\n\
  'setInterval',\n\
  'clearInterval',\n\
  'XMLHttpRequest',\n\
  'Date'\n\
];\n\
\n\
/**\n\
 * Expose `Runner`.\n\
 */\n\
\n\
module.exports = Runner;\n\
\n\
/**\n\
 * Initialize a `Runner` for the given `suite`.\n\
 *\n\
 * Events:\n\
 *\n\
 *   - `start`  execution started\n\
 *   - `end`  execution complete\n\
 *   - `suite`  (suite) test suite execution started\n\
 *   - `suite end`  (suite) all tests (and sub-suites) have finished\n\
 *   - `test`  (test) test execution started\n\
 *   - `test end`  (test) test completed\n\
 *   - `hook`  (hook) hook execution started\n\
 *   - `hook end`  (hook) hook complete\n\
 *   - `pass`  (test) test passed\n\
 *   - `fail`  (test, err) test failed\n\
 *   - `pending`  (test) test pending\n\
 *\n\
 * @api public\n\
 */\n\
\n\
function Runner(suite) {\n\
  var self = this;\n\
  this._globals = [];\n\
  this._abort = false;\n\
  this.suite = suite;\n\
  this.total = suite.total();\n\
  this.failures = 0;\n\
  this.on('test end', function(test){ self.checkGlobals(test); });\n\
  this.on('hook end', function(hook){ self.checkGlobals(hook); });\n\
  this.grep(/.*/);\n\
  this.globals(this.globalProps().concat(extraGlobals()));\n\
}\n\
\n\
/**\n\
 * Wrapper for setImmediate, process.nextTick, or browser polyfill.\n\
 *\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
Runner.immediately = global.setImmediate || process.nextTick;\n\
\n\
/**\n\
 * Inherit from `EventEmitter.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = EventEmitter.prototype;\n\
Runner.prototype = new F;\n\
Runner.prototype.constructor = Runner;\n\
\n\
\n\
/**\n\
 * Run tests with full titles matching `re`. Updates runner.total\n\
 * with number of tests matched.\n\
 *\n\
 * @param {RegExp} re\n\
 * @param {Boolean} invert\n\
 * @return {Runner} for chaining\n\
 * @api public\n\
 */\n\
\n\
Runner.prototype.grep = function(re, invert){\n\
  debug('grep %s', re);\n\
  this._grep = re;\n\
  this._invert = invert;\n\
  this.total = this.grepTotal(this.suite);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Returns the number of tests matching the grep search for the\n\
 * given suite.\n\
 *\n\
 * @param {Suite} suite\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
Runner.prototype.grepTotal = function(suite) {\n\
  var self = this;\n\
  var total = 0;\n\
\n\
  suite.eachTest(function(test){\n\
    var match = self._grep.test(test.fullTitle());\n\
    if (self._invert) match = !match;\n\
    if (match) total++;\n\
  });\n\
\n\
  return total;\n\
};\n\
\n\
/**\n\
 * Return a list of global properties.\n\
 *\n\
 * @return {Array}\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.globalProps = function() {\n\
  var props = utils.keys(global);\n\
\n\
  // non-enumerables\n\
  for (var i = 0; i < globals.length; ++i) {\n\
    if (~utils.indexOf(props, globals[i])) continue;\n\
    props.push(globals[i]);\n\
  }\n\
\n\
  return props;\n\
};\n\
\n\
/**\n\
 * Allow the given `arr` of globals.\n\
 *\n\
 * @param {Array} arr\n\
 * @return {Runner} for chaining\n\
 * @api public\n\
 */\n\
\n\
Runner.prototype.globals = function(arr){\n\
  if (0 == arguments.length) return this._globals;\n\
  debug('globals %j', arr);\n\
  this._globals = this._globals.concat(arr);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Check for global variable leaks.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.checkGlobals = function(test){\n\
  if (this.ignoreLeaks) return;\n\
  var ok = this._globals;\n\
\n\
  var globals = this.globalProps();\n\
  var isNode = process.kill;\n\
  var leaks;\n\
\n\
  if (test) {\n\
    ok = ok.concat(test._allowedGlobals || []);\n\
  }\n\
\n\
  if(this.prevGlobalsLength == globals.length) return;\n\
  this.prevGlobalsLength = globals.length;\n\
\n\
  leaks = filterLeaks(ok, globals);\n\
  this._globals = this._globals.concat(leaks);\n\
\n\
  if (leaks.length > 1) {\n\
    this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));\n\
  } else if (leaks.length) {\n\
    this.fail(test, new Error('global leak detected: ' + leaks[0]));\n\
  }\n\
};\n\
\n\
/**\n\
 * Fail the given `test`.\n\
 *\n\
 * @param {Test} test\n\
 * @param {Error} err\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.fail = function(test, err){\n\
  ++this.failures;\n\
  test.state = 'failed';\n\
\n\
  if ('string' == typeof err) {\n\
    err = new Error('the string \"' + err + '\" was thrown, throw an Error :)');\n\
  }\n\
\n\
  this.emit('fail', test, err);\n\
};\n\
\n\
/**\n\
 * Fail the given `hook` with `err`.\n\
 *\n\
 * Hook failures work in the following pattern:\n\
 * - If bail, then exit\n\
 * - Failed `before` hook skips all tests in a suite and subsuites,\n\
 *   but jumps to corresponding `after` hook\n\
 * - Failed `before each` hook skips remaining tests in a\n\
 *   suite and jumps to corresponding `after each` hook,\n\
 *   which is run only once\n\
 * - Failed `after` hook does not alter\n\
 *   execution order\n\
 * - Failed `after each` hook skips remaining tests in a\n\
 *   suite and subsuites, but executes other `after each`\n\
 *   hooks\n\
 *\n\
 * @param {Hook} hook\n\
 * @param {Error} err\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.failHook = function(hook, err){\n\
  this.fail(hook, err);\n\
  if (this.suite.bail()) {\n\
    this.emit('end');\n\
  }\n\
};\n\
\n\
/**\n\
 * Run hook `name` callbacks and then invoke `fn()`.\n\
 *\n\
 * @param {String} name\n\
 * @param {Function} function\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.hook = function(name, fn){\n\
  var suite = this.suite\n\
    , hooks = suite['_' + name]\n\
    , self = this\n\
    , timer;\n\
\n\
  function next(i) {\n\
    var hook = hooks[i];\n\
    if (!hook) return fn();\n\
    if (self.failures && suite.bail()) return fn();\n\
    self.currentRunnable = hook;\n\
\n\
    hook.ctx.currentTest = self.test;\n\
\n\
    self.emit('hook', hook);\n\
\n\
    hook.on('error', function(err){\n\
      self.failHook(hook, err);\n\
    });\n\
\n\
    hook.run(function(err){\n\
      hook.removeAllListeners('error');\n\
      var testError = hook.error();\n\
      if (testError) self.fail(self.test, testError);\n\
      if (err) {\n\
        self.failHook(hook, err);\n\
\n\
        // stop executing hooks, notify callee of hook err\n\
        return fn(err);\n\
      }\n\
      self.emit('hook end', hook);\n\
      delete hook.ctx.currentTest;\n\
      next(++i);\n\
    });\n\
  }\n\
\n\
  Runner.immediately(function(){\n\
    next(0);\n\
  });\n\
};\n\
\n\
/**\n\
 * Run hook `name` for the given array of `suites`\n\
 * in order, and callback `fn(err, errSuite)`.\n\
 *\n\
 * @param {String} name\n\
 * @param {Array} suites\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.hooks = function(name, suites, fn){\n\
  var self = this\n\
    , orig = this.suite;\n\
\n\
  function next(suite) {\n\
    self.suite = suite;\n\
\n\
    if (!suite) {\n\
      self.suite = orig;\n\
      return fn();\n\
    }\n\
\n\
    self.hook(name, function(err){\n\
      if (err) {\n\
        var errSuite = self.suite;\n\
        self.suite = orig;\n\
        return fn(err, errSuite);\n\
      }\n\
\n\
      next(suites.pop());\n\
    });\n\
  }\n\
\n\
  next(suites.pop());\n\
};\n\
\n\
/**\n\
 * Run hooks from the top level down.\n\
 *\n\
 * @param {String} name\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.hookUp = function(name, fn){\n\
  var suites = [this.suite].concat(this.parents()).reverse();\n\
  this.hooks(name, suites, fn);\n\
};\n\
\n\
/**\n\
 * Run hooks from the bottom up.\n\
 *\n\
 * @param {String} name\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.hookDown = function(name, fn){\n\
  var suites = [this.suite].concat(this.parents());\n\
  this.hooks(name, suites, fn);\n\
};\n\
\n\
/**\n\
 * Return an array of parent Suites from\n\
 * closest to furthest.\n\
 *\n\
 * @return {Array}\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.parents = function(){\n\
  var suite = this.suite\n\
    , suites = [];\n\
  while (suite = suite.parent) suites.push(suite);\n\
  return suites;\n\
};\n\
\n\
/**\n\
 * Run the current test and callback `fn(err)`.\n\
 *\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.runTest = function(fn){\n\
  var test = this.test\n\
    , self = this;\n\
\n\
  if (this.asyncOnly) test.asyncOnly = true;\n\
\n\
  try {\n\
    test.on('error', function(err){\n\
      self.fail(test, err);\n\
    });\n\
    test.run(fn);\n\
  } catch (err) {\n\
    fn(err);\n\
  }\n\
};\n\
\n\
/**\n\
 * Run tests in the given `suite` and invoke\n\
 * the callback `fn()` when complete.\n\
 *\n\
 * @param {Suite} suite\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.runTests = function(suite, fn){\n\
  var self = this\n\
    , tests = suite.tests.slice()\n\
    , test;\n\
\n\
\n\
  function hookErr(err, errSuite, after) {\n\
    // before/after Each hook for errSuite failed:\n\
    var orig = self.suite;\n\
\n\
    // for failed 'after each' hook start from errSuite parent,\n\
    // otherwise start from errSuite itself\n\
    self.suite = after ? errSuite.parent : errSuite;\n\
\n\
    if (self.suite) {\n\
      // call hookUp afterEach\n\
      self.hookUp('afterEach', function(err2, errSuite2) {\n\
        self.suite = orig;\n\
        // some hooks may fail even now\n\
        if (err2) return hookErr(err2, errSuite2, true);\n\
        // report error suite\n\
        fn(errSuite);\n\
      });\n\
    } else {\n\
      // there is no need calling other 'after each' hooks\n\
      self.suite = orig;\n\
      fn(errSuite);\n\
    }\n\
  }\n\
\n\
  function next(err, errSuite) {\n\
    // if we bail after first err\n\
    if (self.failures && suite._bail) return fn();\n\
\n\
    if (self._abort) return fn();\n\
\n\
    if (err) return hookErr(err, errSuite, true);\n\
\n\
    // next test\n\
    test = tests.shift();\n\
\n\
    // all done\n\
    if (!test) return fn();\n\
\n\
    // grep\n\
    var match = self._grep.test(test.fullTitle());\n\
    if (self._invert) match = !match;\n\
    if (!match) return next();\n\
\n\
    // pending\n\
    if (test.pending) {\n\
      self.emit('pending', test);\n\
      self.emit('test end', test);\n\
      return next();\n\
    }\n\
\n\
    // execute test and hook(s)\n\
    self.emit('test', self.test = test);\n\
    self.hookDown('beforeEach', function(err, errSuite){\n\
\n\
      if (err) return hookErr(err, errSuite, false);\n\
\n\
      self.currentRunnable = self.test;\n\
      self.runTest(function(err){\n\
        test = self.test;\n\
\n\
        if (err) {\n\
          self.fail(test, err);\n\
          self.emit('test end', test);\n\
          return self.hookUp('afterEach', next);\n\
        }\n\
\n\
        test.state = 'passed';\n\
        self.emit('pass', test);\n\
        self.emit('test end', test);\n\
        self.hookUp('afterEach', next);\n\
      });\n\
    });\n\
  }\n\
\n\
  this.next = next;\n\
  next();\n\
};\n\
\n\
/**\n\
 * Run the given `suite` and invoke the\n\
 * callback `fn()` when complete.\n\
 *\n\
 * @param {Suite} suite\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.runSuite = function(suite, fn){\n\
  var total = this.grepTotal(suite)\n\
    , self = this\n\
    , i = 0;\n\
\n\
  debug('run suite %s', suite.fullTitle());\n\
\n\
  if (!total) return fn();\n\
\n\
  this.emit('suite', this.suite = suite);\n\
\n\
  function next(errSuite) {\n\
    if (errSuite) {\n\
      // current suite failed on a hook from errSuite\n\
      if (errSuite == suite) {\n\
        // if errSuite is current suite\n\
        // continue to the next sibling suite\n\
        return done();\n\
      } else {\n\
        // errSuite is among the parents of current suite\n\
        // stop execution of errSuite and all sub-suites\n\
        return done(errSuite);\n\
      }\n\
    }\n\
\n\
    if (self._abort) return done();\n\
\n\
    var curr = suite.suites[i++];\n\
    if (!curr) return done();\n\
    self.runSuite(curr, next);\n\
  }\n\
\n\
  function done(errSuite) {\n\
    self.suite = suite;\n\
    self.hook('afterAll', function(){\n\
      self.emit('suite end', suite);\n\
      fn(errSuite);\n\
    });\n\
  }\n\
\n\
  this.hook('beforeAll', function(err){\n\
    if (err) return done();\n\
    self.runTests(suite, next);\n\
  });\n\
};\n\
\n\
/**\n\
 * Handle uncaught exceptions.\n\
 *\n\
 * @param {Error} err\n\
 * @api private\n\
 */\n\
\n\
Runner.prototype.uncaught = function(err){\n\
  debug('uncaught exception %s', err.message);\n\
  var runnable = this.currentRunnable;\n\
  if (!runnable || 'failed' == runnable.state) return;\n\
  runnable.clearTimeout();\n\
  err.uncaught = true;\n\
  this.fail(runnable, err);\n\
\n\
  // recover from test\n\
  if ('test' == runnable.type) {\n\
    this.emit('test end', runnable);\n\
    this.hookUp('afterEach', this.next);\n\
    return;\n\
  }\n\
\n\
  // bail on hooks\n\
  this.emit('end');\n\
};\n\
\n\
/**\n\
 * Run the root suite and invoke `fn(failures)`\n\
 * on completion.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Runner} for chaining\n\
 * @api public\n\
 */\n\
\n\
Runner.prototype.run = function(fn){\n\
  var self = this\n\
    , fn = fn || function(){};\n\
\n\
  function uncaught(err){\n\
    self.uncaught(err);\n\
  }\n\
\n\
  debug('start');\n\
\n\
  // callback\n\
  this.on('end', function(){\n\
    debug('end');\n\
    process.removeListener('uncaughtException', uncaught);\n\
    fn(self.failures);\n\
  });\n\
\n\
  // run suites\n\
  this.emit('start');\n\
  this.runSuite(this.suite, function(){\n\
    debug('finished running');\n\
    self.emit('end');\n\
  });\n\
\n\
  // uncaught exception\n\
  process.on('uncaughtException', uncaught);\n\
\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Cleanly abort execution\n\
 *\n\
 * @return {Runner} for chaining\n\
 * @api public\n\
 */\n\
Runner.prototype.abort = function(){\n\
  debug('aborting');\n\
  this._abort = true;\n\
}\n\
\n\
/**\n\
 * Filter leaks with the given globals flagged as `ok`.\n\
 *\n\
 * @param {Array} ok\n\
 * @param {Array} globals\n\
 * @return {Array}\n\
 * @api private\n\
 */\n\
\n\
function filterLeaks(ok, globals) {\n\
  return filter(globals, function(key){\n\
    // Firefox and Chrome exposes iframes as index inside the window object\n\
    if (/^d+/.test(key)) return false;\n\
\n\
    // in firefox\n\
    // if runner runs in an iframe, this iframe's window.getInterface method not init at first\n\
    // it is assigned in some seconds\n\
    if (global.navigator && /^getInterface/.test(key)) return false;\n\
\n\
    // an iframe could be approached by window[iframeIndex]\n\
    // in ie6,7,8 and opera, iframeIndex is enumerable, this could cause leak\n\
    if (global.navigator && /^\\d+/.test(key)) return false;\n\
\n\
    // Opera and IE expose global variables for HTML element IDs (issue #243)\n\
    if (/^mocha-/.test(key)) return false;\n\
\n\
    var matched = filter(ok, function(ok){\n\
      if (~ok.indexOf('*')) return 0 == key.indexOf(ok.split('*')[0]);\n\
      return key == ok;\n\
    });\n\
    return matched.length == 0 && (!global.navigator || 'onerror' !== key);\n\
  });\n\
}\n\
\n\
/**\n\
 * Array of globals dependent on the environment.\n\
 *\n\
 * @return {Array}\n\
 * @api private\n\
 */\n\
\n\
 function extraGlobals() {\n\
  if (typeof(process) === 'object' &&\n\
      typeof(process.version) === 'string') {\n\
\n\
    var nodeVersion = process.version.split('.').reduce(function(a, v) {\n\
      return a << 8 | v;\n\
    });\n\
\n\
    // 'errno' was renamed to process._errno in v0.9.11.\n\
\n\
    if (nodeVersion < 0x00090B) {\n\
      return ['errno'];\n\
    }\n\
  }\n\
\n\
  return [];\n\
 }\n\
\n\
}); // module: runner.js\n\
\n\
require.register(\"suite.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var EventEmitter = require('browser/events').EventEmitter\n\
  , debug = require('browser/debug')('mocha:suite')\n\
  , milliseconds = require('./ms')\n\
  , utils = require('./utils')\n\
  , Hook = require('./hook');\n\
\n\
/**\n\
 * Expose `Suite`.\n\
 */\n\
\n\
exports = module.exports = Suite;\n\
\n\
/**\n\
 * Create a new `Suite` with the given `title`\n\
 * and parent `Suite`. When a suite with the\n\
 * same title is already present, that suite\n\
 * is returned to provide nicer reporter\n\
 * and more flexible meta-testing.\n\
 *\n\
 * @param {Suite} parent\n\
 * @param {String} title\n\
 * @return {Suite}\n\
 * @api public\n\
 */\n\
\n\
exports.create = function(parent, title){\n\
  var suite = new Suite(title, parent.ctx);\n\
  suite.parent = parent;\n\
  if (parent.pending) suite.pending = true;\n\
  title = suite.fullTitle();\n\
  parent.addSuite(suite);\n\
  return suite;\n\
};\n\
\n\
/**\n\
 * Initialize a new `Suite` with the given\n\
 * `title` and `ctx`.\n\
 *\n\
 * @param {String} title\n\
 * @param {Context} ctx\n\
 * @api private\n\
 */\n\
\n\
function Suite(title, ctx) {\n\
  this.title = title;\n\
  this.ctx = ctx;\n\
  this.suites = [];\n\
  this.tests = [];\n\
  this.pending = false;\n\
  this._beforeEach = [];\n\
  this._beforeAll = [];\n\
  this._afterEach = [];\n\
  this._afterAll = [];\n\
  this.root = !title;\n\
  this._timeout = 2000;\n\
  this._slow = 75;\n\
  this._bail = false;\n\
}\n\
\n\
/**\n\
 * Inherit from `EventEmitter.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = EventEmitter.prototype;\n\
Suite.prototype = new F;\n\
Suite.prototype.constructor = Suite;\n\
\n\
\n\
/**\n\
 * Return a clone of this `Suite`.\n\
 *\n\
 * @return {Suite}\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.clone = function(){\n\
  var suite = new Suite(this.title);\n\
  debug('clone');\n\
  suite.ctx = this.ctx;\n\
  suite.timeout(this.timeout());\n\
  suite.slow(this.slow());\n\
  suite.bail(this.bail());\n\
  return suite;\n\
};\n\
\n\
/**\n\
 * Set timeout `ms` or short-hand such as \"2s\".\n\
 *\n\
 * @param {Number|String} ms\n\
 * @return {Suite|Number} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.timeout = function(ms){\n\
  if (0 == arguments.length) return this._timeout;\n\
  if ('string' == typeof ms) ms = milliseconds(ms);\n\
  debug('timeout %d', ms);\n\
  this._timeout = parseInt(ms, 10);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set slow `ms` or short-hand such as \"2s\".\n\
 *\n\
 * @param {Number|String} ms\n\
 * @return {Suite|Number} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.slow = function(ms){\n\
  if (0 === arguments.length) return this._slow;\n\
  if ('string' == typeof ms) ms = milliseconds(ms);\n\
  debug('slow %d', ms);\n\
  this._slow = ms;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Sets whether to bail after first error.\n\
 *\n\
 * @parma {Boolean} bail\n\
 * @return {Suite|Number} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.bail = function(bail){\n\
  if (0 == arguments.length) return this._bail;\n\
  debug('bail %s', bail);\n\
  this._bail = bail;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Run `fn(test[, done])` before running tests.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Suite} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.beforeAll = function(fn){\n\
  if (this.pending) return this;\n\
  var hook = new Hook('\"before all\" hook', fn);\n\
  hook.parent = this;\n\
  hook.timeout(this.timeout());\n\
  hook.slow(this.slow());\n\
  hook.ctx = this.ctx;\n\
  this._beforeAll.push(hook);\n\
  this.emit('beforeAll', hook);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Run `fn(test[, done])` after running tests.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Suite} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.afterAll = function(fn){\n\
  if (this.pending) return this;\n\
  var hook = new Hook('\"after all\" hook', fn);\n\
  hook.parent = this;\n\
  hook.timeout(this.timeout());\n\
  hook.slow(this.slow());\n\
  hook.ctx = this.ctx;\n\
  this._afterAll.push(hook);\n\
  this.emit('afterAll', hook);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Run `fn(test[, done])` before each test case.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Suite} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.beforeEach = function(fn){\n\
  if (this.pending) return this;\n\
  var hook = new Hook('\"before each\" hook', fn);\n\
  hook.parent = this;\n\
  hook.timeout(this.timeout());\n\
  hook.slow(this.slow());\n\
  hook.ctx = this.ctx;\n\
  this._beforeEach.push(hook);\n\
  this.emit('beforeEach', hook);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Run `fn(test[, done])` after each test case.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Suite} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.afterEach = function(fn){\n\
  if (this.pending) return this;\n\
  var hook = new Hook('\"after each\" hook', fn);\n\
  hook.parent = this;\n\
  hook.timeout(this.timeout());\n\
  hook.slow(this.slow());\n\
  hook.ctx = this.ctx;\n\
  this._afterEach.push(hook);\n\
  this.emit('afterEach', hook);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Add a test `suite`.\n\
 *\n\
 * @param {Suite} suite\n\
 * @return {Suite} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.addSuite = function(suite){\n\
  suite.parent = this;\n\
  suite.timeout(this.timeout());\n\
  suite.slow(this.slow());\n\
  suite.bail(this.bail());\n\
  this.suites.push(suite);\n\
  this.emit('suite', suite);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Add a `test` to this suite.\n\
 *\n\
 * @param {Test} test\n\
 * @return {Suite} for chaining\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.addTest = function(test){\n\
  test.parent = this;\n\
  test.timeout(this.timeout());\n\
  test.slow(this.slow());\n\
  test.ctx = this.ctx;\n\
  this.tests.push(test);\n\
  this.emit('test', test);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Return the full title generated by recursively\n\
 * concatenating the parent's full title.\n\
 *\n\
 * @return {String}\n\
 * @api public\n\
 */\n\
\n\
Suite.prototype.fullTitle = function(){\n\
  if (this.parent) {\n\
    var full = this.parent.fullTitle();\n\
    if (full) return full + ' ' + this.title;\n\
  }\n\
  return this.title;\n\
};\n\
\n\
/**\n\
 * Return the total number of tests.\n\
 *\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
Suite.prototype.total = function(){\n\
  return utils.reduce(this.suites, function(sum, suite){\n\
    return sum + suite.total();\n\
  }, 0) + this.tests.length;\n\
};\n\
\n\
/**\n\
 * Iterates through each suite recursively to find\n\
 * all tests. Applies a function in the format\n\
 * `fn(test)`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Suite}\n\
 * @api private\n\
 */\n\
\n\
Suite.prototype.eachTest = function(fn){\n\
  utils.forEach(this.tests, fn);\n\
  utils.forEach(this.suites, function(suite){\n\
    suite.eachTest(fn);\n\
  });\n\
  return this;\n\
};\n\
\n\
}); // module: suite.js\n\
\n\
require.register(\"test.js\", function(module, exports, require){\n\
\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Runnable = require('./runnable');\n\
\n\
/**\n\
 * Expose `Test`.\n\
 */\n\
\n\
module.exports = Test;\n\
\n\
/**\n\
 * Initialize a new `Test` with the given `title` and callback `fn`.\n\
 *\n\
 * @param {String} title\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
function Test(title, fn) {\n\
  Runnable.call(this, title, fn);\n\
  this.pending = !fn;\n\
  this.type = 'test';\n\
}\n\
\n\
/**\n\
 * Inherit from `Runnable.prototype`.\n\
 */\n\
\n\
function F(){};\n\
F.prototype = Runnable.prototype;\n\
Test.prototype = new F;\n\
Test.prototype.constructor = Test;\n\
\n\
\n\
}); // module: test.js\n\
\n\
require.register(\"utils.js\", function(module, exports, require){\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var fs = require('browser/fs')\n\
  , path = require('browser/path')\n\
  , join = path.join\n\
  , debug = require('browser/debug')('mocha:watch');\n\
\n\
/**\n\
 * Ignored directories.\n\
 */\n\
\n\
var ignore = ['node_modules', '.git'];\n\
\n\
/**\n\
 * Escape special characters in the given string of html.\n\
 *\n\
 * @param  {String} html\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
exports.escape = function(html){\n\
  return String(html)\n\
    .replace(/&/g, '&amp;')\n\
    .replace(/\"/g, '&quot;')\n\
    .replace(/</g, '&lt;')\n\
    .replace(/>/g, '&gt;');\n\
};\n\
\n\
/**\n\
 * Array#forEach (<=IE8)\n\
 *\n\
 * @param {Array} array\n\
 * @param {Function} fn\n\
 * @param {Object} scope\n\
 * @api private\n\
 */\n\
\n\
exports.forEach = function(arr, fn, scope){\n\
  for (var i = 0, l = arr.length; i < l; i++)\n\
    fn.call(scope, arr[i], i);\n\
};\n\
\n\
/**\n\
 * Array#map (<=IE8)\n\
 *\n\
 * @param {Array} array\n\
 * @param {Function} fn\n\
 * @param {Object} scope\n\
 * @api private\n\
 */\n\
\n\
exports.map = function(arr, fn, scope){\n\
  var result = [];\n\
  for (var i = 0, l = arr.length; i < l; i++)\n\
    result.push(fn.call(scope, arr[i], i));\n\
  return result;\n\
};\n\
\n\
/**\n\
 * Array#indexOf (<=IE8)\n\
 *\n\
 * @parma {Array} arr\n\
 * @param {Object} obj to find index of\n\
 * @param {Number} start\n\
 * @api private\n\
 */\n\
\n\
exports.indexOf = function(arr, obj, start){\n\
  for (var i = start || 0, l = arr.length; i < l; i++) {\n\
    if (arr[i] === obj)\n\
      return i;\n\
  }\n\
  return -1;\n\
};\n\
\n\
/**\n\
 * Array#reduce (<=IE8)\n\
 *\n\
 * @param {Array} array\n\
 * @param {Function} fn\n\
 * @param {Object} initial value\n\
 * @api private\n\
 */\n\
\n\
exports.reduce = function(arr, fn, val){\n\
  var rval = val;\n\
\n\
  for (var i = 0, l = arr.length; i < l; i++) {\n\
    rval = fn(rval, arr[i], i, arr);\n\
  }\n\
\n\
  return rval;\n\
};\n\
\n\
/**\n\
 * Array#filter (<=IE8)\n\
 *\n\
 * @param {Array} array\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
exports.filter = function(arr, fn){\n\
  var ret = [];\n\
\n\
  for (var i = 0, l = arr.length; i < l; i++) {\n\
    var val = arr[i];\n\
    if (fn(val, i, arr)) ret.push(val);\n\
  }\n\
\n\
  return ret;\n\
};\n\
\n\
/**\n\
 * Object.keys (<=IE8)\n\
 *\n\
 * @param {Object} obj\n\
 * @return {Array} keys\n\
 * @api private\n\
 */\n\
\n\
exports.keys = Object.keys || function(obj) {\n\
  var keys = []\n\
    , has = Object.prototype.hasOwnProperty // for `window` on <=IE8\n\
\n\
  for (var key in obj) {\n\
    if (has.call(obj, key)) {\n\
      keys.push(key);\n\
    }\n\
  }\n\
\n\
  return keys;\n\
};\n\
\n\
/**\n\
 * Watch the given `files` for changes\n\
 * and invoke `fn(file)` on modification.\n\
 *\n\
 * @param {Array} files\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
exports.watch = function(files, fn){\n\
  var options = { interval: 100 };\n\
  files.forEach(function(file){\n\
    debug('file %s', file);\n\
    fs.watchFile(file, options, function(curr, prev){\n\
      if (prev.mtime < curr.mtime) fn(file);\n\
    });\n\
  });\n\
};\n\
\n\
/**\n\
 * Ignored files.\n\
 */\n\
\n\
function ignored(path){\n\
  return !~ignore.indexOf(path);\n\
}\n\
\n\
/**\n\
 * Lookup files in the given `dir`.\n\
 *\n\
 * @return {Array}\n\
 * @api private\n\
 */\n\
\n\
exports.files = function(dir, ret){\n\
  ret = ret || [];\n\
\n\
  fs.readdirSync(dir)\n\
  .filter(ignored)\n\
  .forEach(function(path){\n\
    path = join(dir, path);\n\
    if (fs.statSync(path).isDirectory()) {\n\
      exports.files(path, ret);\n\
    } else if (path.match(/\\.(js|coffee|litcoffee|coffee.md)$/)) {\n\
      ret.push(path);\n\
    }\n\
  });\n\
\n\
  return ret;\n\
};\n\
\n\
/**\n\
 * Compute a slug from the given `str`.\n\
 *\n\
 * @param {String} str\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
exports.slug = function(str){\n\
  return str\n\
    .toLowerCase()\n\
    .replace(/ +/g, '-')\n\
    .replace(/[^-\\w]/g, '');\n\
};\n\
\n\
/**\n\
 * Strip the function definition from `str`,\n\
 * and re-indent for pre whitespace.\n\
 */\n\
\n\
exports.clean = function(str) {\n\
  str = str\n\
    .replace(/\\r\\n\
?|[\\n\
\\u2028\\u2029]/g, \"\\n\
\").replace(/^\\uFEFF/, '')\n\
    .replace(/^function *\\(.*\\) *{/, '')\n\
    .replace(/\\s+\\}$/, '');\n\
\n\
  var spaces = str.match(/^\\n\
?( *)/)[1].length\n\
    , tabs = str.match(/^\\n\
?(\\t*)/)[1].length\n\
    , re = new RegExp('^\\n\
?' + (tabs ? '\\t' : ' ') + '{' + (tabs ? tabs : spaces) + '}', 'gm');\n\
\n\
  str = str.replace(re, '');\n\
\n\
  return exports.trim(str);\n\
};\n\
\n\
/**\n\
 * Escape regular expression characters in `str`.\n\
 *\n\
 * @param {String} str\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
exports.escapeRegexp = function(str){\n\
  return str.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\
};\n\
\n\
/**\n\
 * Trim the given `str`.\n\
 *\n\
 * @param {String} str\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
exports.trim = function(str){\n\
  return str.replace(/^\\s+|\\s+$/g, '');\n\
};\n\
\n\
/**\n\
 * Parse the given `qs`.\n\
 *\n\
 * @param {String} qs\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
exports.parseQuery = function(qs){\n\
  return exports.reduce(qs.replace('?', '').split('&'), function(obj, pair){\n\
    var i = pair.indexOf('=')\n\
      , key = pair.slice(0, i)\n\
      , val = pair.slice(++i);\n\
\n\
    obj[key] = decodeURIComponent(val);\n\
    return obj;\n\
  }, {});\n\
};\n\
\n\
/**\n\
 * Highlight the given string of `js`.\n\
 *\n\
 * @param {String} js\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function highlight(js) {\n\
  return js\n\
    .replace(/</g, '&lt;')\n\
    .replace(/>/g, '&gt;')\n\
    .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n\
    .replace(/('.*?')/gm, '<span class=\"string\">$1</span>')\n\
    .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n\
    .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n\
    .replace(/\\bnew *(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n\
    .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>')\n\
}\n\
\n\
/**\n\
 * Highlight the contents of tag `name`.\n\
 *\n\
 * @param {String} name\n\
 * @api private\n\
 */\n\
\n\
exports.highlightTags = function(name) {\n\
  var code = document.getElementsByTagName(name);\n\
  for (var i = 0, len = code.length; i < len; ++i) {\n\
    code[i].innerHTML = highlight(code[i].innerHTML);\n\
  }\n\
};\n\
\n\
}); // module: utils.js\n\
// The global object is \"self\" in Web Workers.\n\
global = (function() { return this; })();\n\
\n\
/**\n\
 * Save timer references to avoid Sinon interfering (see GH-237).\n\
 */\n\
\n\
var Date = global.Date;\n\
var setTimeout = global.setTimeout;\n\
var setInterval = global.setInterval;\n\
var clearTimeout = global.clearTimeout;\n\
var clearInterval = global.clearInterval;\n\
\n\
/**\n\
 * Node shims.\n\
 *\n\
 * These are meant only to allow\n\
 * mocha.js to run untouched, not\n\
 * to allow running node code in\n\
 * the browser.\n\
 */\n\
\n\
var process = {};\n\
process.exit = function(status){};\n\
process.stdout = {};\n\
\n\
var uncaughtExceptionHandlers = [];\n\
\n\
/**\n\
 * Remove uncaughtException listener.\n\
 */\n\
\n\
process.removeListener = function(e, fn){\n\
  if ('uncaughtException' == e) {\n\
    global.onerror = function() {};\n\
    var i = Mocha.utils.indexOf(uncaughtExceptionHandlers, fn);\n\
    if (i != -1) { uncaughtExceptionHandlers.splice(i, 1); }\n\
  }\n\
};\n\
\n\
/**\n\
 * Implements uncaughtException listener.\n\
 */\n\
\n\
process.on = function(e, fn){\n\
  if ('uncaughtException' == e) {\n\
    global.onerror = function(err, url, line){\n\
      fn(new Error(err + ' (' + url + ':' + line + ')'));\n\
      return true;\n\
    };\n\
    uncaughtExceptionHandlers.push(fn);\n\
  }\n\
};\n\
\n\
/**\n\
 * Expose mocha.\n\
 */\n\
\n\
var Mocha = global.Mocha = require('mocha'),\n\
    mocha = global.mocha = new Mocha({ reporter: 'html' });\n\
\n\
// The BDD UI is registered by default, but no UI will be functional in the\n\
// browser without an explicit call to the overridden `mocha.ui` (see below).\n\
// Ensure that this default UI does not expose its methods to the global scope.\n\
mocha.suite.removeAllListeners('pre-require');\n\
\n\
var immediateQueue = []\n\
  , immediateTimeout;\n\
\n\
function timeslice() {\n\
  var immediateStart = new Date().getTime();\n\
  while (immediateQueue.length && (new Date().getTime() - immediateStart) < 100) {\n\
    immediateQueue.shift()();\n\
  }\n\
  if (immediateQueue.length) {\n\
    immediateTimeout = setTimeout(timeslice, 0);\n\
  } else {\n\
    immediateTimeout = null;\n\
  }\n\
}\n\
\n\
/**\n\
 * High-performance override of Runner.immediately.\n\
 */\n\
\n\
Mocha.Runner.immediately = function(callback) {\n\
  immediateQueue.push(callback);\n\
  if (!immediateTimeout) {\n\
    immediateTimeout = setTimeout(timeslice, 0);\n\
  }\n\
};\n\
\n\
/**\n\
 * Function to allow assertion libraries to throw errors directly into mocha.\n\
 * This is useful when running tests in a browser because window.onerror will\n\
 * only receive the 'message' attribute of the Error.\n\
 */\n\
mocha.throwError = function(err) {\n\
  Mocha.utils.forEach(uncaughtExceptionHandlers, function (fn) {\n\
    fn(err);\n\
  });\n\
  throw err;\n\
};\n\
\n\
/**\n\
 * Override ui to ensure that the ui functions are initialized.\n\
 * Normally this would happen in Mocha.prototype.loadFiles.\n\
 */\n\
\n\
mocha.ui = function(ui){\n\
  Mocha.prototype.ui.call(this, ui);\n\
  this.suite.emit('pre-require', global, null, this);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Setup mocha with the given setting options.\n\
 */\n\
\n\
mocha.setup = function(opts){\n\
  if ('string' == typeof opts) opts = { ui: opts };\n\
  for (var opt in opts) this[opt](opts[opt]);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Run mocha, returning the Runner.\n\
 */\n\
\n\
mocha.run = function(fn){\n\
  var options = mocha.options;\n\
  mocha.globals('location');\n\
\n\
  var query = Mocha.utils.parseQuery(global.location.search || '');\n\
  if (query.grep) mocha.grep(query.grep);\n\
  if (query.invert) mocha.invert();\n\
\n\
  return Mocha.prototype.run.call(mocha, function(){\n\
    // The DOM Document is not available in Web Workers.\n\
    if (global.document) {\n\
      Mocha.utils.highlightTags('code');\n\
    }\n\
    if (fn) fn();\n\
  });\n\
};\n\
\n\
/**\n\
 * Expose the process shim.\n\
 */\n\
\n\
Mocha.process = process;\n\
})();//@ sourceURL=visionmedia-mocha/mocha.js"
));
require.register("component-indexof/index.js", Function("exports, require, module",
"module.exports = function(arr, obj){\n\
  if (arr.indexOf) return arr.indexOf(obj);\n\
  for (var i = 0; i < arr.length; ++i) {\n\
    if (arr[i] === obj) return i;\n\
  }\n\
  return -1;\n\
};//@ sourceURL=component-indexof/index.js"
));
require.register("component-emitter/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var index = require('indexof');\n\
\n\
/**\n\
 * Expose `Emitter`.\n\
 */\n\
\n\
module.exports = Emitter;\n\
\n\
/**\n\
 * Initialize a new `Emitter`.\n\
 *\n\
 * @api public\n\
 */\n\
\n\
function Emitter(obj) {\n\
  if (obj) return mixin(obj);\n\
};\n\
\n\
/**\n\
 * Mixin the emitter properties.\n\
 *\n\
 * @param {Object} obj\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function mixin(obj) {\n\
  for (var key in Emitter.prototype) {\n\
    obj[key] = Emitter.prototype[key];\n\
  }\n\
  return obj;\n\
}\n\
\n\
/**\n\
 * Listen on the given `event` with `fn`.\n\
 *\n\
 * @param {String} event\n\
 * @param {Function} fn\n\
 * @return {Emitter}\n\
 * @api public\n\
 */\n\
\n\
Emitter.prototype.on = function(event, fn){\n\
  this._callbacks = this._callbacks || {};\n\
  (this._callbacks[event] = this._callbacks[event] || [])\n\
    .push(fn);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Adds an `event` listener that will be invoked a single\n\
 * time then automatically removed.\n\
 *\n\
 * @param {String} event\n\
 * @param {Function} fn\n\
 * @return {Emitter}\n\
 * @api public\n\
 */\n\
\n\
Emitter.prototype.once = function(event, fn){\n\
  var self = this;\n\
  this._callbacks = this._callbacks || {};\n\
\n\
  function on() {\n\
    self.off(event, on);\n\
    fn.apply(this, arguments);\n\
  }\n\
\n\
  fn._off = on;\n\
  this.on(event, on);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Remove the given callback for `event` or all\n\
 * registered callbacks.\n\
 *\n\
 * @param {String} event\n\
 * @param {Function} fn\n\
 * @return {Emitter}\n\
 * @api public\n\
 */\n\
\n\
Emitter.prototype.off =\n\
Emitter.prototype.removeListener =\n\
Emitter.prototype.removeAllListeners = function(event, fn){\n\
  this._callbacks = this._callbacks || {};\n\
\n\
  // all\n\
  if (0 == arguments.length) {\n\
    this._callbacks = {};\n\
    return this;\n\
  }\n\
\n\
  // specific event\n\
  var callbacks = this._callbacks[event];\n\
  if (!callbacks) return this;\n\
\n\
  // remove all handlers\n\
  if (1 == arguments.length) {\n\
    delete this._callbacks[event];\n\
    return this;\n\
  }\n\
\n\
  // remove specific handler\n\
  var i = index(callbacks, fn._off || fn);\n\
  if (~i) callbacks.splice(i, 1);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Emit `event` with the given args.\n\
 *\n\
 * @param {String} event\n\
 * @param {Mixed} ...\n\
 * @return {Emitter}\n\
 */\n\
\n\
Emitter.prototype.emit = function(event){\n\
  this._callbacks = this._callbacks || {};\n\
  var args = [].slice.call(arguments, 1)\n\
    , callbacks = this._callbacks[event];\n\
\n\
  if (callbacks) {\n\
    callbacks = callbacks.slice(0);\n\
    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\
      callbacks[i].apply(this, args);\n\
    }\n\
  }\n\
\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Return array of callbacks for `event`.\n\
 *\n\
 * @param {String} event\n\
 * @return {Array}\n\
 * @api public\n\
 */\n\
\n\
Emitter.prototype.listeners = function(event){\n\
  this._callbacks = this._callbacks || {};\n\
  return this._callbacks[event] || [];\n\
};\n\
\n\
/**\n\
 * Check if this emitter has `event` handlers.\n\
 *\n\
 * @param {String} event\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
Emitter.prototype.hasListeners = function(event){\n\
  return !! this.listeners(event).length;\n\
};\n\
//@ sourceURL=component-emitter/index.js"
));
require.register("redventures-reduce/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Reduce `arr` with `fn`.\n\
 *\n\
 * @param {Array} arr\n\
 * @param {Function} fn\n\
 * @param {Mixed} initial\n\
 *\n\
 * TODO: combatible error handling?\n\
 */\n\
\n\
module.exports = function(arr, fn, initial){  \n\
  var idx = 0;\n\
  var len = arr.length;\n\
  var curr = arguments.length == 3\n\
    ? initial\n\
    : arr[idx++];\n\
\n\
  while (idx < len) {\n\
    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n\
  }\n\
  \n\
  return curr;\n\
};//@ sourceURL=redventures-reduce/index.js"
));
require.register("johntron-superagent/lib/client.js", Function("exports, require, module",
"/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Emitter = require('emitter');\n\
var reduce = require('reduce');\n\
\n\
/**\n\
 * Root reference for iframes.\n\
 */\n\
\n\
var root = 'undefined' == typeof window\n\
  ? this\n\
  : window;\n\
\n\
/**\n\
 * Noop.\n\
 */\n\
\n\
function noop(){};\n\
\n\
/**\n\
 * Check if `obj` is a host object,\n\
 * we don't want to serialize these :)\n\
 *\n\
 * TODO: future proof, move to compoent land\n\
 *\n\
 * @param {Object} obj\n\
 * @return {Boolean}\n\
 * @api private\n\
 */\n\
\n\
function isHost(obj) {\n\
  var str = {}.toString.call(obj);\n\
\n\
  switch (str) {\n\
    case '[object File]':\n\
    case '[object Blob]':\n\
    case '[object FormData]':\n\
      return true;\n\
    default:\n\
      return false;\n\
  }\n\
}\n\
\n\
/**\n\
 * Determine XHR.\n\
 */\n\
\n\
function getXHR() {\n\
  if (root.XMLHttpRequest\n\
    && ('file:' != root.location.protocol || !root.ActiveXObject)) {\n\
    return new XMLHttpRequest;\n\
  } else {\n\
    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\
    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\
    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\
    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\
  }\n\
  return false;\n\
}\n\
\n\
/**\n\
 * Removes leading and trailing whitespace, added to support IE.\n\
 *\n\
 * @param {String} s\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
var trim = ''.trim\n\
  ? function(s) { return s.trim(); }\n\
  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\
\n\
/**\n\
 * Check if `obj` is an object.\n\
 *\n\
 * @param {Object} obj\n\
 * @return {Boolean}\n\
 * @api private\n\
 */\n\
\n\
function isObject(obj) {\n\
  return obj === Object(obj);\n\
}\n\
\n\
/**\n\
 * Serialize the given `obj`.\n\
 *\n\
 * @param {Object} obj\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function serialize(obj) {\n\
  if (!isObject(obj)) return obj;\n\
  var pairs = [];\n\
  for (var key in obj) {\n\
    pairs.push(encodeURIComponent(key)\n\
      + '=' + encodeURIComponent(obj[key]));\n\
  }\n\
  return pairs.join('&');\n\
}\n\
\n\
/**\n\
 * Expose serialization method.\n\
 */\n\
\n\
 request.serializeObject = serialize;\n\
\n\
 /**\n\
  * Parse the given x-www-form-urlencoded `str`.\n\
  *\n\
  * @param {String} str\n\
  * @return {Object}\n\
  * @api private\n\
  */\n\
\n\
function parseString(str) {\n\
  var obj = {};\n\
  var pairs = str.split('&');\n\
  var parts;\n\
  var pair;\n\
\n\
  for (var i = 0, len = pairs.length; i < len; ++i) {\n\
    pair = pairs[i];\n\
    parts = pair.split('=');\n\
    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n\
  }\n\
\n\
  return obj;\n\
}\n\
\n\
/**\n\
 * Expose parser.\n\
 */\n\
\n\
request.parseString = parseString;\n\
\n\
/**\n\
 * Default MIME type map.\n\
 *\n\
 *     superagent.types.xml = 'application/xml';\n\
 *\n\
 */\n\
\n\
request.types = {\n\
  html: 'text/html',\n\
  json: 'application/json',\n\
  urlencoded: 'application/x-www-form-urlencoded',\n\
  'form': 'application/x-www-form-urlencoded',\n\
  'form-data': 'application/x-www-form-urlencoded'\n\
};\n\
\n\
/**\n\
 * Default serialization map.\n\
 *\n\
 *     superagent.serialize['application/xml'] = function(obj){\n\
 *       return 'generated xml here';\n\
 *     };\n\
 *\n\
 */\n\
\n\
 request.serialize = {\n\
   'application/x-www-form-urlencoded': serialize,\n\
   'application/json': JSON.stringify\n\
 };\n\
\n\
 /**\n\
  * Default parsers.\n\
  *\n\
  *     superagent.parse['application/xml'] = function(str){\n\
  *       return { object parsed from str };\n\
  *     };\n\
  *\n\
  */\n\
\n\
request.parse = {\n\
  'application/x-www-form-urlencoded': parseString,\n\
  'application/json': JSON.parse\n\
};\n\
\n\
/**\n\
 * Parse the given header `str` into\n\
 * an object containing the mapped fields.\n\
 *\n\
 * @param {String} str\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function parseHeader(str) {\n\
  var lines = str.split(/\\r?\\n\
/);\n\
  var fields = {};\n\
  var index;\n\
  var line;\n\
  var field;\n\
  var val;\n\
\n\
  lines.pop(); // trailing CRLF\n\
\n\
  for (var i = 0, len = lines.length; i < len; ++i) {\n\
    line = lines[i];\n\
    index = line.indexOf(':');\n\
    field = line.slice(0, index).toLowerCase();\n\
    val = trim(line.slice(index + 1));\n\
    fields[field] = val;\n\
  }\n\
\n\
  return fields;\n\
}\n\
\n\
/**\n\
 * Return the mime type for the given `str`.\n\
 *\n\
 * @param {String} str\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function type(str){\n\
  return str.split(/ *; */).shift();\n\
};\n\
\n\
/**\n\
 * Return header field parameters.\n\
 *\n\
 * @param {String} str\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function params(str){\n\
  return reduce(str.split(/ *; */), function(obj, str){\n\
    var parts = str.split(/ *= */)\n\
      , key = parts.shift()\n\
      , val = parts.shift();\n\
\n\
    if (key && val) obj[key] = val;\n\
    return obj;\n\
  }, {});\n\
};\n\
\n\
/**\n\
 * Initialize a new `Response` with the given `xhr`.\n\
 *\n\
 *  - set flags (.ok, .error, etc)\n\
 *  - parse header\n\
 *\n\
 * Examples:\n\
 *\n\
 *  Aliasing `superagent` as `request` is nice:\n\
 *\n\
 *      request = superagent;\n\
 *\n\
 *  We can use the promise-like API, or pass callbacks:\n\
 *\n\
 *      request.get('/').end(function(res){});\n\
 *      request.get('/', function(res){});\n\
 *\n\
 *  Sending data can be chained:\n\
 *\n\
 *      request\n\
 *        .post('/user')\n\
 *        .send({ name: 'tj' })\n\
 *        .end(function(res){});\n\
 *\n\
 *  Or passed to `.send()`:\n\
 *\n\
 *      request\n\
 *        .post('/user')\n\
 *        .send({ name: 'tj' }, function(res){});\n\
 *\n\
 *  Or passed to `.post()`:\n\
 *\n\
 *      request\n\
 *        .post('/user', { name: 'tj' })\n\
 *        .end(function(res){});\n\
 *\n\
 * Or further reduced to a single call for simple cases:\n\
 *\n\
 *      request\n\
 *        .post('/user', { name: 'tj' }, function(res){});\n\
 *\n\
 * @param {XMLHTTPRequest} xhr\n\
 * @param {Object} options\n\
 * @api private\n\
 */\n\
\n\
function Response(req, options) {\n\
  options = options || {};\n\
  this.req = req;\n\
  this.xhr = this.req.xhr;\n\
  this.text = this.xhr.responseText;\n\
  this.setStatusProperties(this.xhr.status);\n\
  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\
  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\
  // getResponseHeader still works. so we get content-type even if getting\n\
  // other headers fails.\n\
  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\
  this.setHeaderProperties(this.header);\n\
  this.body = this.req.method != 'HEAD'\n\
    ? this.parseBody(this.text)\n\
    : null;\n\
}\n\
\n\
/**\n\
 * Get case-insensitive `field` value.\n\
 *\n\
 * @param {String} field\n\
 * @return {String}\n\
 * @api public\n\
 */\n\
\n\
Response.prototype.get = function(field){\n\
  return this.header[field.toLowerCase()];\n\
};\n\
\n\
/**\n\
 * Set header related properties:\n\
 *\n\
 *   - `.type` the content type without params\n\
 *\n\
 * A response of \"Content-Type: text/plain; charset=utf-8\"\n\
 * will provide you with a `.type` of \"text/plain\".\n\
 *\n\
 * @param {Object} header\n\
 * @api private\n\
 */\n\
\n\
Response.prototype.setHeaderProperties = function(header){\n\
  // content-type\n\
  var ct = this.header['content-type'] || '';\n\
  this.type = type(ct);\n\
\n\
  // params\n\
  var obj = params(ct);\n\
  for (var key in obj) this[key] = obj[key];\n\
};\n\
\n\
/**\n\
 * Parse the given body `str`.\n\
 *\n\
 * Used for auto-parsing of bodies. Parsers\n\
 * are defined on the `superagent.parse` object.\n\
 *\n\
 * @param {String} str\n\
 * @return {Mixed}\n\
 * @api private\n\
 */\n\
\n\
Response.prototype.parseBody = function(str){\n\
  var parse = request.parse[this.type];\n\
  return parse\n\
    ? parse(str)\n\
    : null;\n\
};\n\
\n\
/**\n\
 * Set flags such as `.ok` based on `status`.\n\
 *\n\
 * For example a 2xx response will give you a `.ok` of __true__\n\
 * whereas 5xx will be __false__ and `.error` will be __true__. The\n\
 * `.clientError` and `.serverError` are also available to be more\n\
 * specific, and `.statusType` is the class of error ranging from 1..5\n\
 * sometimes useful for mapping respond colors etc.\n\
 *\n\
 * \"sugar\" properties are also defined for common cases. Currently providing:\n\
 *\n\
 *   - .noContent\n\
 *   - .badRequest\n\
 *   - .unauthorized\n\
 *   - .notAcceptable\n\
 *   - .notFound\n\
 *\n\
 * @param {Number} status\n\
 * @api private\n\
 */\n\
\n\
Response.prototype.setStatusProperties = function(status){\n\
  var type = status / 100 | 0;\n\
\n\
  // status / class\n\
  this.status = status;\n\
  this.statusType = type;\n\
\n\
  // basics\n\
  this.info = 1 == type;\n\
  this.ok = 2 == type;\n\
  this.clientError = 4 == type;\n\
  this.serverError = 5 == type;\n\
  this.error = (4 == type || 5 == type)\n\
    ? this.toError()\n\
    : false;\n\
\n\
  // sugar\n\
  this.accepted = 202 == status;\n\
  this.noContent = 204 == status || 1223 == status;\n\
  this.badRequest = 400 == status;\n\
  this.unauthorized = 401 == status;\n\
  this.notAcceptable = 406 == status;\n\
  this.notFound = 404 == status;\n\
  this.forbidden = 403 == status;\n\
};\n\
\n\
/**\n\
 * Return an `Error` representative of this response.\n\
 *\n\
 * @return {Error}\n\
 * @api public\n\
 */\n\
\n\
Response.prototype.toError = function(){\n\
  var req = this.req;\n\
  var method = req.method;\n\
  var path = req.path;\n\
\n\
  var msg = 'cannot ' + method + ' ' + path + ' (' + this.status + ')';\n\
  var err = new Error(msg);\n\
  err.status = this.status;\n\
  err.method = method;\n\
  err.path = path;\n\
\n\
  return err;\n\
};\n\
\n\
/**\n\
 * Expose `Response`.\n\
 */\n\
\n\
request.Response = Response;\n\
\n\
/**\n\
 * Initialize a new `Request` with the given `method` and `url`.\n\
 *\n\
 * @param {String} method\n\
 * @param {String} url\n\
 * @api public\n\
 */\n\
\n\
function Request(method, url) {\n\
  var self = this;\n\
  Emitter.call(this);\n\
  this._query = this._query || [];\n\
  this.method = method;\n\
  this.url = url;\n\
  this.header = {};\n\
  this._header = {};\n\
  this.on('end', function(){\n\
    var res = new Response(self);\n\
    if ('HEAD' == method) res.text = null;\n\
    self.callback(null, res);\n\
  });\n\
}\n\
\n\
/**\n\
 * Mixin `Emitter`.\n\
 */\n\
\n\
Emitter(Request.prototype);\n\
\n\
/**\n\
 * Allow for extension\n\
 */\n\
\n\
Request.prototype.use = function(fn) {\n\
  fn(this);\n\
  return this;\n\
}\n\
\n\
/**\n\
 * Set timeout to `ms`.\n\
 *\n\
 * @param {Number} ms\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.timeout = function(ms){\n\
  this._timeout = ms;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Clear previous timeout.\n\
 *\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.clearTimeout = function(){\n\
  this._timeout = 0;\n\
  clearTimeout(this._timer);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Abort the request, and clear potential timeout.\n\
 *\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.abort = function(){\n\
  if (this.aborted) return;\n\
  this.aborted = true;\n\
  this.xhr.abort();\n\
  this.clearTimeout();\n\
  this.emit('abort');\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set header `field` to `val`, or multiple fields with one object.\n\
 *\n\
 * Examples:\n\
 *\n\
 *      req.get('/')\n\
 *        .set('Accept', 'application/json')\n\
 *        .set('X-API-Key', 'foobar')\n\
 *        .end(callback);\n\
 *\n\
 *      req.get('/')\n\
 *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\
 *        .end(callback);\n\
 *\n\
 * @param {String|Object} field\n\
 * @param {String} val\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.set = function(field, val){\n\
  if (isObject(field)) {\n\
    for (var key in field) {\n\
      this.set(key, field[key]);\n\
    }\n\
    return this;\n\
  }\n\
  this._header[field.toLowerCase()] = val;\n\
  this.header[field] = val;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Get case-insensitive header `field` value.\n\
 *\n\
 * @param {String} field\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
Request.prototype.getHeader = function(field){\n\
  return this._header[field.toLowerCase()];\n\
};\n\
\n\
/**\n\
 * Set Content-Type to `type`, mapping values from `request.types`.\n\
 *\n\
 * Examples:\n\
 *\n\
 *      superagent.types.xml = 'application/xml';\n\
 *\n\
 *      request.post('/')\n\
 *        .type('xml')\n\
 *        .send(xmlstring)\n\
 *        .end(callback);\n\
 *\n\
 *      request.post('/')\n\
 *        .type('application/xml')\n\
 *        .send(xmlstring)\n\
 *        .end(callback);\n\
 *\n\
 * @param {String} type\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.type = function(type){\n\
  this.set('Content-Type', request.types[type] || type);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set Authorization field value with `user` and `pass`.\n\
 *\n\
 * @param {String} user\n\
 * @param {String} pass\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.auth = function(user, pass){\n\
  var str = btoa(user + ':' + pass);\n\
  this.set('Authorization', 'Basic ' + str);\n\
  return this;\n\
};\n\
\n\
/**\n\
* Add query-string `val`.\n\
*\n\
* Examples:\n\
*\n\
*   request.get('/shoes')\n\
*     .query('size=10')\n\
*     .query({ color: 'blue' })\n\
*\n\
* @param {Object|String} val\n\
* @return {Request} for chaining\n\
* @api public\n\
*/\n\
\n\
Request.prototype.query = function(val){\n\
  if ('string' != typeof val) val = serialize(val);\n\
  if (val) this._query.push(val);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Send `data`, defaulting the `.type()` to \"json\" when\n\
 * an object is given.\n\
 *\n\
 * Examples:\n\
 *\n\
 *       // querystring\n\
 *       request.get('/search')\n\
 *         .end(callback)\n\
 *\n\
 *       // multiple data \"writes\"\n\
 *       request.get('/search')\n\
 *         .send({ search: 'query' })\n\
 *         .send({ range: '1..5' })\n\
 *         .send({ order: 'desc' })\n\
 *         .end(callback)\n\
 *\n\
 *       // manual json\n\
 *       request.post('/user')\n\
 *         .type('json')\n\
 *         .send('{\"name\":\"tj\"})\n\
 *         .end(callback)\n\
 *\n\
 *       // auto json\n\
 *       request.post('/user')\n\
 *         .send({ name: 'tj' })\n\
 *         .end(callback)\n\
 *\n\
 *       // manual x-www-form-urlencoded\n\
 *       request.post('/user')\n\
 *         .type('form')\n\
 *         .send('name=tj')\n\
 *         .end(callback)\n\
 *\n\
 *       // auto x-www-form-urlencoded\n\
 *       request.post('/user')\n\
 *         .type('form')\n\
 *         .send({ name: 'tj' })\n\
 *         .end(callback)\n\
 *\n\
 *       // defaults to x-www-form-urlencoded\n\
  *      request.post('/user')\n\
  *        .send('name=tobi')\n\
  *        .send('species=ferret')\n\
  *        .end(callback)\n\
 *\n\
 * @param {String|Object} data\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.send = function(data){\n\
  var obj = isObject(data);\n\
  var type = this.getHeader('Content-Type');\n\
\n\
  // merge\n\
  if (obj && isObject(this._data)) {\n\
    for (var key in data) {\n\
      this._data[key] = data[key];\n\
    }\n\
  } else if ('string' == typeof data) {\n\
    if (!type) this.type('form');\n\
    type = this.getHeader('Content-Type');\n\
    if ('application/x-www-form-urlencoded' == type) {\n\
      this._data = this._data\n\
        ? this._data + '&' + data\n\
        : data;\n\
    } else {\n\
      this._data = (this._data || '') + data;\n\
    }\n\
  } else {\n\
    this._data = data;\n\
  }\n\
\n\
  if (!obj) return this;\n\
  if (!type) this.type('json');\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Invoke the callback with `err` and `res`\n\
 * and handle arity check.\n\
 *\n\
 * @param {Error} err\n\
 * @param {Response} res\n\
 * @api private\n\
 */\n\
\n\
Request.prototype.callback = function(err, res){\n\
  var fn = this._callback;\n\
  if (2 == fn.length) return fn(err, res);\n\
  if (err) return this.emit('error', err);\n\
  fn(res);\n\
};\n\
\n\
/**\n\
 * Invoke callback with x-domain error.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Request.prototype.crossDomainError = function(){\n\
  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n\
  err.crossDomain = true;\n\
  this.callback(err);\n\
};\n\
\n\
/**\n\
 * Invoke callback with timeout error.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Request.prototype.timeoutError = function(){\n\
  var timeout = this._timeout;\n\
  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\
  err.timeout = timeout;\n\
  this.callback(err);\n\
};\n\
\n\
/**\n\
 * Enable transmission of cookies with x-domain requests.\n\
 *\n\
 * Note that for this to work the origin must not be\n\
 * using \"Access-Control-Allow-Origin\" with a wildcard,\n\
 * and also must set \"Access-Control-Allow-Credentials\"\n\
 * to \"true\".\n\
 *\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.withCredentials = function(){\n\
  this._withCredentials = true;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Initiate request, invoking callback `fn(res)`\n\
 * with an instanceof `Response`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.end = function(fn){\n\
  var self = this;\n\
  var xhr = this.xhr = getXHR();\n\
  var query = this._query.join('&');\n\
  var timeout = this._timeout;\n\
  var data = this._data;\n\
\n\
  // store callback\n\
  this._callback = fn || noop;\n\
\n\
  // CORS\n\
  if (this._withCredentials) xhr.withCredentials = true;\n\
\n\
  // state change\n\
  xhr.onreadystatechange = function(){\n\
    if (4 != xhr.readyState) return;\n\
    if (0 == xhr.status) {\n\
      if (self.aborted) return self.timeoutError();\n\
      return self.crossDomainError();\n\
    }\n\
    self.emit('end');\n\
  };\n\
\n\
  // progress\n\
  if (xhr.upload) {\n\
    xhr.upload.onprogress = function(e){\n\
      e.percent = e.loaded / e.total * 100;\n\
      self.emit('progress', e);\n\
    };\n\
  }\n\
\n\
  // timeout\n\
  if (timeout && !this._timer) {\n\
    this._timer = setTimeout(function(){\n\
      self.abort();\n\
    }, timeout);\n\
  }\n\
\n\
  // querystring\n\
  if (query) {\n\
    query = request.serializeObject(query);\n\
    this.url += ~this.url.indexOf('?')\n\
      ? '&' + query\n\
      : '?' + query;\n\
  }\n\
\n\
  // initiate request\n\
  xhr.open(this.method, this.url, true);\n\
\n\
  // body\n\
  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n\
    // serialize stuff\n\
    var serialize = request.serialize[this.getHeader('Content-Type')];\n\
    if (serialize) data = serialize(data);\n\
  }\n\
\n\
  // set header fields\n\
  for (var field in this.header) {\n\
    if (null == this.header[field]) continue;\n\
    xhr.setRequestHeader(field, this.header[field]);\n\
  }\n\
\n\
  // send stuff\n\
  xhr.send(data);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Expose `Request`.\n\
 */\n\
\n\
request.Request = Request;\n\
\n\
/**\n\
 * Issue a request:\n\
 *\n\
 * Examples:\n\
 *\n\
 *    request('GET', '/users').end(callback)\n\
 *    request('/users').end(callback)\n\
 *    request('/users', callback)\n\
 *\n\
 * @param {String} method\n\
 * @param {String|Function} url or callback\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
function request(method, url) {\n\
  // callback\n\
  if ('function' == typeof url) {\n\
    return new Request('GET', method).end(url);\n\
  }\n\
\n\
  // url first\n\
  if (1 == arguments.length) {\n\
    return new Request('GET', method);\n\
  }\n\
\n\
  return new Request(method, url);\n\
}\n\
\n\
/**\n\
 * GET `url` with optional callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed|Function} data or fn\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.get = function(url, data, fn){\n\
  var req = request('GET', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.query(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * HEAD `url` with optional callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed|Function} data or fn\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.head = function(url, data, fn){\n\
  var req = request('HEAD', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.send(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * DELETE `url` with optional callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.del = function(url, fn){\n\
  var req = request('DELETE', url);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * PATCH `url` with optional `data` and callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed} data\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.patch = function(url, data, fn){\n\
  var req = request('PATCH', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.send(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * POST `url` with optional `data` and callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed} data\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.post = function(url, data, fn){\n\
  var req = request('POST', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.send(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * PUT `url` with optional `data` and callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed|Function} data or fn\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.put = function(url, data, fn){\n\
  var req = request('PUT', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.send(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * Expose `request`.\n\
 */\n\
\n\
module.exports = request;\n\
//@ sourceURL=johntron-superagent/lib/client.js"
));
require.register("johntron-sinon/lib/sinon.js", Function("exports, require, module",
"/*jslint eqeqeq: false, onevar: false, forin: true, nomen: false, regexp: false, plusplus: false*/\n\
/*global module, require, __dirname, document*/\n\
/**\n\
 * Sinon core utilities. For internal use only.\n\
 *\n\
 * @author Christian Johansen (christian@cjohansen.no)\n\
 * @license BSD\n\
 *\n\
 * Copyright (c) 2010-2013 Christian Johansen\n\
 */\n\
\"use strict\";\n\
\n\
var sinon = (function (buster) {\n\
    var div = typeof document != \"undefined\" && document.createElement(\"div\");\n\
    var hasOwn = Object.prototype.hasOwnProperty;\n\
\n\
    function isDOMNode(obj) {\n\
        var success = false;\n\
\n\
        try {\n\
            obj.appendChild(div);\n\
            success = div.parentNode == obj;\n\
        } catch (e) {\n\
            return false;\n\
        } finally {\n\
            try {\n\
                obj.removeChild(div);\n\
            } catch (e) {\n\
                // Remove failed, not much we can do about that\n\
            }\n\
        }\n\
\n\
        return success;\n\
    }\n\
\n\
    function isElement(obj) {\n\
        return div && obj && obj.nodeType === 1 && isDOMNode(obj);\n\
    }\n\
\n\
    function isFunction(obj) {\n\
        return typeof obj === \"function\" || !!(obj && obj.constructor && obj.call && obj.apply);\n\
    }\n\
\n\
    function mirrorProperties(target, source) {\n\
        for (var prop in source) {\n\
            if (!hasOwn.call(target, prop)) {\n\
                target[prop] = source[prop];\n\
            }\n\
        }\n\
    }\n\
\n\
    function isRestorable (obj) {\n\
        return typeof obj === \"function\" && typeof obj.restore === \"function\" && obj.restore.sinon;\n\
    }\n\
\n\
    var sinon = {\n\
        wrapMethod: function wrapMethod(object, property, method) {\n\
            if (!object) {\n\
                throw new TypeError(\"Should wrap property of object\");\n\
            }\n\
\n\
            if (typeof method != \"function\") {\n\
                throw new TypeError(\"Method wrapper should be function\");\n\
            }\n\
\n\
            var wrappedMethod = object[property];\n\
\n\
            if (!isFunction(wrappedMethod)) {\n\
                throw new TypeError(\"Attempted to wrap \" + (typeof wrappedMethod) + \" property \" +\n\
                                    property + \" as function\");\n\
            }\n\
\n\
            if (wrappedMethod.restore && wrappedMethod.restore.sinon) {\n\
                throw new TypeError(\"Attempted to wrap \" + property + \" which is already wrapped\");\n\
            }\n\
\n\
            if (wrappedMethod.calledBefore) {\n\
                var verb = !!wrappedMethod.returns ? \"stubbed\" : \"spied on\";\n\
                throw new TypeError(\"Attempted to wrap \" + property + \" which is already \" + verb);\n\
            }\n\
\n\
            // IE 8 does not support hasOwnProperty on the window object.\n\
            var owned = hasOwn.call(object, property);\n\
            object[property] = method;\n\
            method.displayName = property;\n\
\n\
            method.restore = function () {\n\
                // For prototype properties try to reset by delete first.\n\
                // If this fails (ex: localStorage on mobile safari) then force a reset\n\
                // via direct assignment.\n\
                if (!owned) {\n\
                    delete object[property];\n\
                }\n\
                if (object[property] === method) {\n\
                    object[property] = wrappedMethod;\n\
                }\n\
            };\n\
\n\
            method.restore.sinon = true;\n\
            mirrorProperties(method, wrappedMethod);\n\
\n\
            return method;\n\
        },\n\
\n\
        extend: function extend(target) {\n\
            for (var i = 1, l = arguments.length; i < l; i += 1) {\n\
                for (var prop in arguments[i]) {\n\
                    if (arguments[i].hasOwnProperty(prop)) {\n\
                        target[prop] = arguments[i][prop];\n\
                    }\n\
\n\
                    // DONT ENUM bug, only care about toString\n\
                    if (arguments[i].hasOwnProperty(\"toString\") &&\n\
                        arguments[i].toString != target.toString) {\n\
                        target.toString = arguments[i].toString;\n\
                    }\n\
                }\n\
            }\n\
\n\
            return target;\n\
        },\n\
\n\
        create: function create(proto) {\n\
            var F = function () {};\n\
            F.prototype = proto;\n\
            return new F();\n\
        },\n\
\n\
        deepEqual: function deepEqual(a, b) {\n\
            if (sinon.match && sinon.match.isMatcher(a)) {\n\
                return a.test(b);\n\
            }\n\
            if (typeof a != \"object\" || typeof b != \"object\") {\n\
                return a === b;\n\
            }\n\
\n\
            if (isElement(a) || isElement(b)) {\n\
                return a === b;\n\
            }\n\
\n\
            if (a === b) {\n\
                return true;\n\
            }\n\
\n\
            if ((a === null && b !== null) || (a !== null && b === null)) {\n\
                return false;\n\
            }\n\
\n\
            var aString = Object.prototype.toString.call(a);\n\
            if (aString != Object.prototype.toString.call(b)) {\n\
                return false;\n\
            }\n\
\n\
            if (aString == \"[object Array]\") {\n\
                if (a.length !== b.length) {\n\
                    return false;\n\
                }\n\
\n\
                for (var i = 0, l = a.length; i < l; i += 1) {\n\
                    if (!deepEqual(a[i], b[i])) {\n\
                        return false;\n\
                    }\n\
                }\n\
\n\
                return true;\n\
            }\n\
\n\
            if (aString == \"[object Date]\") {\n\
                return a.valueOf() === b.valueOf();\n\
            }\n\
\n\
            var prop, aLength = 0, bLength = 0;\n\
\n\
            for (prop in a) {\n\
                aLength += 1;\n\
\n\
                if (!deepEqual(a[prop], b[prop])) {\n\
                    return false;\n\
                }\n\
            }\n\
\n\
            for (prop in b) {\n\
                bLength += 1;\n\
            }\n\
\n\
            return aLength == bLength;\n\
        },\n\
\n\
        functionName: function functionName(func) {\n\
            var name = func.displayName || func.name;\n\
\n\
            // Use function decomposition as a last resort to get function\n\
            // name. Does not rely on function decomposition to work - if it\n\
            // doesn't debugging will be slightly less informative\n\
            // (i.e. toString will say 'spy' rather than 'myFunc').\n\
            if (!name) {\n\
                var matches = func.toString().match(/function ([^\\s\\(]+)/);\n\
                name = matches && matches[1];\n\
            }\n\
\n\
            return name;\n\
        },\n\
\n\
        functionToString: function toString() {\n\
            if (this.getCall && this.callCount) {\n\
                var thisValue, prop, i = this.callCount;\n\
\n\
                while (i--) {\n\
                    thisValue = this.getCall(i).thisValue;\n\
\n\
                    for (prop in thisValue) {\n\
                        if (thisValue[prop] === this) {\n\
                            return prop;\n\
                        }\n\
                    }\n\
                }\n\
            }\n\
\n\
            return this.displayName || \"sinon fake\";\n\
        },\n\
\n\
        getConfig: function (custom) {\n\
            var config = {};\n\
            custom = custom || {};\n\
            var defaults = sinon.defaultConfig;\n\
\n\
            for (var prop in defaults) {\n\
                if (defaults.hasOwnProperty(prop)) {\n\
                    config[prop] = custom.hasOwnProperty(prop) ? custom[prop] : defaults[prop];\n\
                }\n\
            }\n\
\n\
            return config;\n\
        },\n\
\n\
        format: function (val) {\n\
            return \"\" + val;\n\
        },\n\
\n\
        defaultConfig: {\n\
            injectIntoThis: true,\n\
            injectInto: null,\n\
            properties: [\"spy\", \"stub\", \"mock\", \"clock\", \"server\", \"requests\"],\n\
            useFakeTimers: true,\n\
            useFakeServer: true\n\
        },\n\
\n\
        timesInWords: function timesInWords(count) {\n\
            return count == 1 && \"once\" ||\n\
                count == 2 && \"twice\" ||\n\
                count == 3 && \"thrice\" ||\n\
                (count || 0) + \" times\";\n\
        },\n\
\n\
        calledInOrder: function (spies) {\n\
            for (var i = 1, l = spies.length; i < l; i++) {\n\
                if (!spies[i - 1].calledBefore(spies[i]) || !spies[i].called) {\n\
                    return false;\n\
                }\n\
            }\n\
\n\
            return true;\n\
        },\n\
\n\
        orderByFirstCall: function (spies) {\n\
            return spies.sort(function (a, b) {\n\
                // uuid, won't ever be equal\n\
                var aCall = a.getCall(0);\n\
                var bCall = b.getCall(0);\n\
                var aId = aCall && aCall.callId || -1;\n\
                var bId = bCall && bCall.callId || -1;\n\
\n\
                return aId < bId ? -1 : 1;\n\
            });\n\
        },\n\
\n\
        log: function () {},\n\
\n\
        logError: function (label, err) {\n\
            var msg = label + \" threw exception: \"\n\
            sinon.log(msg + \"[\" + err.name + \"] \" + err.message);\n\
            if (err.stack) { sinon.log(err.stack); }\n\
\n\
            setTimeout(function () {\n\
                err.message = msg + err.message;\n\
                throw err;\n\
            }, 0);\n\
        },\n\
\n\
        typeOf: function (value) {\n\
            if (value === null) {\n\
                return \"null\";\n\
            }\n\
            else if (value === undefined) {\n\
                return \"undefined\";\n\
            }\n\
            var string = Object.prototype.toString.call(value);\n\
            return string.substring(8, string.length - 1).toLowerCase();\n\
        },\n\
\n\
        createStubInstance: function (constructor) {\n\
            if (typeof constructor !== \"function\") {\n\
                throw new TypeError(\"The constructor should be a function.\");\n\
            }\n\
            return sinon.stub(sinon.create(constructor.prototype));\n\
        },\n\
\n\
        restore: function (object) {\n\
            if (object !== null && typeof object === \"object\") {\n\
                for (var prop in object) {\n\
                    if (isRestorable(object[prop])) {\n\
                        object[prop].restore();\n\
                    }\n\
                }\n\
            }\n\
            else if (isRestorable(object)) {\n\
                object.restore();\n\
            }\n\
        }\n\
    };\n\
\n\
    var isNode = typeof module !== \"undefined\" && module.exports;\n\
\n\
    if (isNode) {\n\
        try {\n\
            buster = { format: require(\"buster-format\") };\n\
        } catch (e) {}\n\
        module.exports = sinon;\n\
        module.exports.spy = require(\"./sinon/spy\")(module.exports);\n\
        module.exports.spyCall = require(\"./sinon/call\")(module.exports);\n\
        module.exports.stub = require(\"./sinon/stub\")(module.exports);\n\
        module.exports.mock = require(\"./sinon/mock\")(module.exports);\n\
        module.exports.collection = require(\"./sinon/collection\")(module.exports);\n\
        module.exports.assert = require(\"./sinon/assert\")(module.exports);\n\
        module.exports.sandbox = require(\"./sinon/sandbox\")(module.exports);\n\
        module.exports.test = require(\"./sinon/test\")(module.exports);\n\
        module.exports.testCase = require(\"./sinon/test_case\")(module.exports);\n\
        module.exports.match = require(\"./sinon/match\")(module.exports);\n\
    }\n\
\n\
    if (buster) {\n\
        var formatter = sinon.create(buster.format);\n\
        formatter.quoteStrings = false;\n\
        sinon.format = function () {\n\
            return formatter.ascii.apply(formatter, arguments);\n\
        };\n\
    } else if (isNode) {\n\
        try {\n\
            var util = require(\"util\");\n\
            sinon.format = function (value) {\n\
                return typeof value == \"object\" && value.toString === Object.prototype.toString ? util.inspect(value) : value;\n\
            };\n\
        } catch (e) {\n\
            /* Node, but no util module - would be very old, but better safe than\n\
             sorry */\n\
        }\n\
    }\n\
\n\
    return sinon;\n\
}(typeof buster == \"object\" && buster));\n\
//@ sourceURL=johntron-sinon/lib/sinon.js"
));
require.register("johntron-sinon/lib/sinon/spy.js", Function("exports, require, module",
"module.exports = function (sinon) {\n\
\n\
    var push = Array.prototype.push;\n\
    var slice = Array.prototype.slice;\n\
    var callId = 0;\n\
\n\
    function spy(object, property) {\n\
        if (!property && typeof object == \"function\") {\n\
            return spy.create(object);\n\
        }\n\
\n\
        if (!object && !property) {\n\
            return spy.create(function () {\n\
            });\n\
        }\n\
\n\
        var method = object[property];\n\
        return sinon.wrapMethod(object, property, spy.create(method));\n\
    }\n\
\n\
    function matchingFake(fakes, args, strict) {\n\
        if (!fakes) {\n\
            return;\n\
        }\n\
\n\
        var alen = args.length;\n\
\n\
        for (var i = 0, l = fakes.length; i < l; i++) {\n\
            if (fakes[i].matches(args, strict)) {\n\
                return fakes[i];\n\
            }\n\
        }\n\
    }\n\
\n\
    function incrementCallCount() {\n\
        this.called = true;\n\
        this.callCount += 1;\n\
        this.notCalled = false;\n\
        this.calledOnce = this.callCount == 1;\n\
        this.calledTwice = this.callCount == 2;\n\
        this.calledThrice = this.callCount == 3;\n\
    }\n\
\n\
    function createCallProperties() {\n\
        this.firstCall = this.getCall(0);\n\
        this.secondCall = this.getCall(1);\n\
        this.thirdCall = this.getCall(2);\n\
        this.lastCall = this.getCall(this.callCount - 1);\n\
    }\n\
\n\
    var vars = \"a,b,c,d,e,f,g,h,i,j,k,l\";\n\
\n\
    function createProxy(func) {\n\
        // Retain the function length:\n\
        var p;\n\
        if (func.length) {\n\
            eval(\"p = (function proxy(\" + vars.substring(0, func.length * 2 - 1) +\n\
                \") { return p.invoke(func, this, slice.call(arguments)); });\");\n\
        }\n\
        else {\n\
            p = function proxy() {\n\
                return p.invoke(func, this, slice.call(arguments));\n\
            };\n\
        }\n\
        return p;\n\
    }\n\
\n\
    var uuid = 0;\n\
\n\
    // Public API\n\
    var spyApi = {\n\
        reset: function () {\n\
            this.called = false;\n\
            this.notCalled = true;\n\
            this.calledOnce = false;\n\
            this.calledTwice = false;\n\
            this.calledThrice = false;\n\
            this.callCount = 0;\n\
            this.firstCall = null;\n\
            this.secondCall = null;\n\
            this.thirdCall = null;\n\
            this.lastCall = null;\n\
            this.args = [];\n\
            this.returnValues = [];\n\
            this.thisValues = [];\n\
            this.exceptions = [];\n\
            this.callIds = [];\n\
            if (this.fakes) {\n\
                for (var i = 0; i < this.fakes.length; i++) {\n\
                    this.fakes[i].reset();\n\
                }\n\
            }\n\
        },\n\
\n\
        create: function create(func) {\n\
            var name;\n\
\n\
            if (typeof func != \"function\") {\n\
                func = function () {\n\
                };\n\
            } else {\n\
                name = sinon.functionName(func);\n\
            }\n\
\n\
            var proxy = createProxy(func);\n\
\n\
            sinon.extend(proxy, spy);\n\
            delete proxy.create;\n\
            sinon.extend(proxy, func);\n\
\n\
            proxy.reset();\n\
            proxy.prototype = func.prototype;\n\
            proxy.displayName = name || \"spy\";\n\
            proxy.toString = sinon.functionToString;\n\
            proxy._create = sinon.spy.create;\n\
            proxy.id = \"spy#\" + uuid++;\n\
\n\
            return proxy;\n\
        },\n\
\n\
        invoke: function invoke(func, thisValue, args) {\n\
            var matching = matchingFake(this.fakes, args);\n\
            var exception, returnValue;\n\
\n\
            incrementCallCount.call(this);\n\
            push.call(this.thisValues, thisValue);\n\
            push.call(this.args, args);\n\
            push.call(this.callIds, callId++);\n\
\n\
            try {\n\
                if (matching) {\n\
                    returnValue = matching.invoke(func, thisValue, args);\n\
                } else {\n\
                    returnValue = (this.func || func).apply(thisValue, args);\n\
                }\n\
            } catch (e) {\n\
                push.call(this.returnValues, undefined);\n\
                exception = e;\n\
                throw e;\n\
            } finally {\n\
                push.call(this.exceptions, exception);\n\
            }\n\
\n\
            push.call(this.returnValues, returnValue);\n\
\n\
            createCallProperties.call(this);\n\
\n\
            return returnValue;\n\
        },\n\
\n\
        getCall: function getCall(i) {\n\
            if (i < 0 || i >= this.callCount) {\n\
                return null;\n\
            }\n\
\n\
            return sinon.spyCall(this, this.thisValues[i], this.args[i],\n\
                this.returnValues[i], this.exceptions[i],\n\
                this.callIds[i]);\n\
        },\n\
\n\
        calledBefore: function calledBefore(spyFn) {\n\
            if (!this.called) {\n\
                return false;\n\
            }\n\
\n\
            if (!spyFn.called) {\n\
                return true;\n\
            }\n\
\n\
            return this.callIds[0] < spyFn.callIds[spyFn.callIds.length - 1];\n\
        },\n\
\n\
        calledAfter: function calledAfter(spyFn) {\n\
            if (!this.called || !spyFn.called) {\n\
                return false;\n\
            }\n\
\n\
            return this.callIds[this.callCount - 1] > spyFn.callIds[spyFn.callCount - 1];\n\
        },\n\
\n\
        withArgs: function () {\n\
            var args = slice.call(arguments);\n\
\n\
            if (this.fakes) {\n\
                var match = matchingFake(this.fakes, args, true);\n\
\n\
                if (match) {\n\
                    return match;\n\
                }\n\
            } else {\n\
                this.fakes = [];\n\
            }\n\
\n\
            var original = this;\n\
            var fake = this._create();\n\
            fake.matchingAguments = args;\n\
            push.call(this.fakes, fake);\n\
\n\
            fake.withArgs = function () {\n\
                return original.withArgs.apply(original, arguments);\n\
            };\n\
\n\
            for (var i = 0; i < this.args.length; i++) {\n\
                if (fake.matches(this.args[i])) {\n\
                    incrementCallCount.call(fake);\n\
                    push.call(fake.thisValues, this.thisValues[i]);\n\
                    push.call(fake.args, this.args[i]);\n\
                    push.call(fake.returnValues, this.returnValues[i]);\n\
                    push.call(fake.exceptions, this.exceptions[i]);\n\
                    push.call(fake.callIds, this.callIds[i]);\n\
                }\n\
            }\n\
            createCallProperties.call(fake);\n\
\n\
            return fake;\n\
        },\n\
\n\
        matches: function (args, strict) {\n\
            var margs = this.matchingAguments;\n\
\n\
            if (margs.length <= args.length &&\n\
                sinon.deepEqual(margs, args.slice(0, margs.length))) {\n\
                return !strict || margs.length == args.length;\n\
            }\n\
        },\n\
\n\
        printf: function (format) {\n\
            var spy = this;\n\
            var args = slice.call(arguments, 1);\n\
            var formatter;\n\
\n\
            return (format || \"\").replace(/%(.)/g, function (match, specifyer) {\n\
                formatter = spyApi.formatters[specifyer];\n\
\n\
                if (typeof formatter == \"function\") {\n\
                    return formatter.call(null, spy, args);\n\
                } else if (!isNaN(parseInt(specifyer), 10)) {\n\
                    return sinon.format(args[specifyer - 1]);\n\
                }\n\
\n\
                return \"%\" + specifyer;\n\
            });\n\
        }\n\
    };\n\
\n\
    function delegateToCalls(method, matchAny, actual, notCalled) {\n\
        spyApi[method] = function () {\n\
            if (!this.called) {\n\
                if (notCalled) {\n\
                    return notCalled.apply(this, arguments);\n\
                }\n\
                return false;\n\
            }\n\
\n\
            var currentCall;\n\
            var matches = 0;\n\
\n\
            for (var i = 0, l = this.callCount; i < l; i += 1) {\n\
                currentCall = this.getCall(i);\n\
\n\
                if (currentCall[actual || method].apply(currentCall, arguments)) {\n\
                    matches += 1;\n\
\n\
                    if (matchAny) {\n\
                        return true;\n\
                    }\n\
                }\n\
            }\n\
\n\
            return matches === this.callCount;\n\
        };\n\
    }\n\
\n\
    delegateToCalls(\"calledOn\", true);\n\
    delegateToCalls(\"alwaysCalledOn\", false, \"calledOn\");\n\
    delegateToCalls(\"calledWith\", true);\n\
    delegateToCalls(\"calledWithMatch\", true);\n\
    delegateToCalls(\"alwaysCalledWith\", false, \"calledWith\");\n\
    delegateToCalls(\"alwaysCalledWithMatch\", false, \"calledWithMatch\");\n\
    delegateToCalls(\"calledWithExactly\", true);\n\
    delegateToCalls(\"alwaysCalledWithExactly\", false, \"calledWithExactly\");\n\
    delegateToCalls(\"neverCalledWith\", false, \"notCalledWith\",\n\
        function () {\n\
            return true;\n\
        });\n\
    delegateToCalls(\"neverCalledWithMatch\", false, \"notCalledWithMatch\",\n\
        function () {\n\
            return true;\n\
        });\n\
    delegateToCalls(\"threw\", true);\n\
    delegateToCalls(\"alwaysThrew\", false, \"threw\");\n\
    delegateToCalls(\"returned\", true);\n\
    delegateToCalls(\"alwaysReturned\", false, \"returned\");\n\
    delegateToCalls(\"calledWithNew\", true);\n\
    delegateToCalls(\"alwaysCalledWithNew\", false, \"calledWithNew\");\n\
    delegateToCalls(\"callArg\", false, \"callArgWith\", function () {\n\
        throw new Error(this.toString() + \" cannot call arg since it was not yet invoked.\");\n\
    });\n\
    spyApi.callArgWith = spyApi.callArg;\n\
    delegateToCalls(\"callArgOn\", false, \"callArgOnWith\", function () {\n\
        throw new Error(this.toString() + \" cannot call arg since it was not yet invoked.\");\n\
    });\n\
    spyApi.callArgOnWith = spyApi.callArgOn;\n\
    delegateToCalls(\"yield\", false, \"yield\", function () {\n\
        throw new Error(this.toString() + \" cannot yield since it was not yet invoked.\");\n\
    });\n\
    // \"invokeCallback\" is an alias for \"yield\" since \"yield\" is invalid in strict mode.\n\
    spyApi.invokeCallback = spyApi.yield;\n\
    delegateToCalls(\"yieldOn\", false, \"yieldOn\", function () {\n\
        throw new Error(this.toString() + \" cannot yield since it was not yet invoked.\");\n\
    });\n\
    delegateToCalls(\"yieldTo\", false, \"yieldTo\", function (property) {\n\
        throw new Error(this.toString() + \" cannot yield to '\" + property +\n\
            \"' since it was not yet invoked.\");\n\
    });\n\
    delegateToCalls(\"yieldToOn\", false, \"yieldToOn\", function (property) {\n\
        throw new Error(this.toString() + \" cannot yield to '\" + property +\n\
            \"' since it was not yet invoked.\");\n\
    });\n\
\n\
    spyApi.formatters = {\n\
        \"c\": function (spy) {\n\
            return sinon.timesInWords(spy.callCount);\n\
        },\n\
\n\
        \"n\": function (spy) {\n\
            return spy.toString();\n\
        },\n\
\n\
        \"C\": function (spy) {\n\
            var calls = [];\n\
\n\
            for (var i = 0, l = spy.callCount; i < l; ++i) {\n\
                var stringifiedCall = \"    \" + spy.getCall(i).toString();\n\
                if (/\\n\
/.test(calls[i - 1])) {\n\
                    stringifiedCall = \"\\n\
\" + stringifiedCall;\n\
                }\n\
                push.call(calls, stringifiedCall);\n\
            }\n\
\n\
            return calls.length > 0 ? \"\\n\
\" + calls.join(\"\\n\
\") : \"\";\n\
        },\n\
\n\
        \"t\": function (spy) {\n\
            var objects = [];\n\
\n\
            for (var i = 0, l = spy.callCount; i < l; ++i) {\n\
                push.call(objects, sinon.format(spy.thisValues[i]));\n\
            }\n\
\n\
            return objects.join(\", \");\n\
        },\n\
\n\
        \"*\": function (spy, args) {\n\
            var formatted = [];\n\
\n\
            for (var i = 0, l = args.length; i < l; ++i) {\n\
                push.call(formatted, sinon.format(args[i]));\n\
            }\n\
\n\
            return formatted.join(\", \");\n\
        }\n\
    };\n\
\n\
    sinon.extend(spy, spyApi);\n\
\n\
    spy.spyCall = sinon.spyCall;\n\
\n\
    return spy;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/spy.js"
));
require.register("johntron-sinon/lib/sinon/call.js", Function("exports, require, module",
"module.exports = function(sinon) {\n\
    function throwYieldError(proxy, text, args) {\n\
        var msg = sinon.functionName(proxy) + text;\n\
        if (args.length) {\n\
            msg += \" Received [\" + slice.call(args).join(\", \") + \"]\";\n\
        }\n\
        throw new Error(msg);\n\
    }\n\
\n\
    var slice = Array.prototype.slice;\n\
\n\
    var callProto = {\n\
        calledOn: function calledOn(thisValue) {\n\
            if (sinon.match && sinon.match.isMatcher(thisValue)) {\n\
                return thisValue.test(this.thisValue);\n\
            }\n\
            return this.thisValue === thisValue;\n\
        },\n\
\n\
        calledWith: function calledWith() {\n\
            for (var i = 0, l = arguments.length; i < l; i += 1) {\n\
                if (!sinon.deepEqual(arguments[i], this.args[i])) {\n\
                    return false;\n\
                }\n\
            }\n\
\n\
            return true;\n\
        },\n\
\n\
        calledWithMatch: function calledWithMatch() {\n\
            for (var i = 0, l = arguments.length; i < l; i += 1) {\n\
                var actual = this.args[i];\n\
                var expectation = arguments[i];\n\
                if (!sinon.match || !sinon.match(expectation).test(actual)) {\n\
                    return false;\n\
                }\n\
            }\n\
            return true;\n\
        },\n\
\n\
        calledWithExactly: function calledWithExactly() {\n\
            return arguments.length == this.args.length &&\n\
                this.calledWith.apply(this, arguments);\n\
        },\n\
\n\
        notCalledWith: function notCalledWith() {\n\
            return !this.calledWith.apply(this, arguments);\n\
        },\n\
\n\
        notCalledWithMatch: function notCalledWithMatch() {\n\
            return !this.calledWithMatch.apply(this, arguments);\n\
        },\n\
\n\
        returned: function returned(value) {\n\
            return sinon.deepEqual(value, this.returnValue);\n\
        },\n\
\n\
        threw: function threw(error) {\n\
            if (typeof error === \"undefined\" || !this.exception) {\n\
                return !!this.exception;\n\
            }\n\
\n\
            return this.exception === error || this.exception.name === error;\n\
        },\n\
\n\
        calledWithNew: function calledWithNew(thisValue) {\n\
            return this.thisValue instanceof this.proxy;\n\
        },\n\
\n\
        calledBefore: function (other) {\n\
            return this.callId < other.callId;\n\
        },\n\
\n\
        calledAfter: function (other) {\n\
            return this.callId > other.callId;\n\
        },\n\
\n\
        callArg: function (pos) {\n\
            this.args[pos]();\n\
        },\n\
\n\
        callArgOn: function (pos, thisValue) {\n\
            this.args[pos].apply(thisValue);\n\
        },\n\
\n\
        callArgWith: function (pos) {\n\
            this.callArgOnWith.apply(this, [pos, null].concat(slice.call(arguments, 1)));\n\
        },\n\
\n\
        callArgOnWith: function (pos, thisValue) {\n\
            var args = slice.call(arguments, 2);\n\
            this.args[pos].apply(thisValue, args);\n\
        },\n\
\n\
        \"yield\": function () {\n\
            this.yieldOn.apply(this, [null].concat(slice.call(arguments, 0)));\n\
        },\n\
\n\
        yieldOn: function (thisValue) {\n\
            var args = this.args;\n\
            for (var i = 0, l = args.length; i < l; ++i) {\n\
                if (typeof args[i] === \"function\") {\n\
                    args[i].apply(thisValue, slice.call(arguments, 1));\n\
                    return;\n\
                }\n\
            }\n\
            throwYieldError(this.proxy, \" cannot yield since no callback was passed.\", args);\n\
        },\n\
\n\
        yieldTo: function (prop) {\n\
            this.yieldToOn.apply(this, [prop, null].concat(slice.call(arguments, 1)));\n\
        },\n\
\n\
        yieldToOn: function (prop, thisValue) {\n\
            var args = this.args;\n\
            for (var i = 0, l = args.length; i < l; ++i) {\n\
                if (args[i] && typeof args[i][prop] === \"function\") {\n\
                    args[i][prop].apply(thisValue, slice.call(arguments, 2));\n\
                    return;\n\
                }\n\
            }\n\
            throwYieldError(this.proxy, \" cannot yield to '\" + prop +\n\
                \"' since no callback was passed.\", args);\n\
        },\n\
\n\
        toString: function () {\n\
            var callStr = this.proxy.toString() + \"(\";\n\
            var args = [];\n\
\n\
            for (var i = 0, l = this.args.length; i < l; ++i) {\n\
                args.push(sinon.format(this.args[i]));\n\
            }\n\
\n\
            callStr = callStr + args.join(\", \") + \")\";\n\
\n\
            if (typeof this.returnValue != \"undefined\") {\n\
                callStr += \" => \" + sinon.format(this.returnValue);\n\
            }\n\
\n\
            if (this.exception) {\n\
                callStr += \" !\" + this.exception.name;\n\
\n\
                if (this.exception.message) {\n\
                    callStr += \"(\" + this.exception.message + \")\";\n\
                }\n\
            }\n\
\n\
            return callStr;\n\
        }\n\
    };\n\
\n\
    callProto.invokeCallback = callProto.yield;\n\
\n\
    function createSpyCall(spy, thisValue, args, returnValue, exception, id) {\n\
        if (typeof id !== \"number\") {\n\
            throw new TypeError(\"Call id is not a number\");\n\
        }\n\
        var proxyCall = sinon.create(callProto);\n\
        proxyCall.proxy = spy;\n\
        proxyCall.thisValue = thisValue;\n\
        proxyCall.args = args;\n\
        proxyCall.returnValue = returnValue;\n\
        proxyCall.exception = exception;\n\
        proxyCall.callId = id;\n\
\n\
        return proxyCall;\n\
    };\n\
    createSpyCall.toString = callProto.toString; // used by mocks\n\
\n\
    return createSpyCall;\n\
};//@ sourceURL=johntron-sinon/lib/sinon/call.js"
));
require.register("johntron-sinon/lib/sinon/stub.js", Function("exports, require, module",
"module.exports = function (sinon) {\n\
\n\
    function stub(object, property, func) {\n\
        if (!!func && typeof func != \"function\") {\n\
            throw new TypeError(\"Custom stub should be function\");\n\
        }\n\
\n\
        var wrapper;\n\
\n\
        if (func) {\n\
            wrapper = sinon.spy && sinon.spy.create ? sinon.spy.create(func) : func;\n\
        } else {\n\
            wrapper = stub.create();\n\
        }\n\
\n\
        if (!object && !property) {\n\
            return sinon.stub.create();\n\
        }\n\
\n\
        if (!property && !!object && typeof object == \"object\") {\n\
            for (var prop in object) {\n\
                if (typeof object[prop] === \"function\") {\n\
                    stub(object, prop);\n\
                }\n\
            }\n\
\n\
            return object;\n\
        }\n\
\n\
        return sinon.wrapMethod(object, property, wrapper);\n\
    }\n\
\n\
    function getChangingValue(stub, property) {\n\
        var index = stub.callCount - 1;\n\
        var values = stub[property];\n\
        var prop = index in values ? values[index] : values[values.length - 1];\n\
        stub[property + \"Last\"] = prop;\n\
\n\
        return prop;\n\
    }\n\
\n\
    function getCallback(stub, args) {\n\
        var callArgAt = getChangingValue(stub, \"callArgAts\");\n\
\n\
        if (callArgAt < 0) {\n\
            var callArgProp = getChangingValue(stub, \"callArgProps\");\n\
\n\
            for (var i = 0, l = args.length; i < l; ++i) {\n\
                if (!callArgProp && typeof args[i] == \"function\") {\n\
                    return args[i];\n\
                }\n\
\n\
                if (callArgProp && args[i] &&\n\
                    typeof args[i][callArgProp] == \"function\") {\n\
                    return args[i][callArgProp];\n\
                }\n\
            }\n\
\n\
            return null;\n\
        }\n\
\n\
        return args[callArgAt];\n\
    }\n\
\n\
    var join = Array.prototype.join;\n\
\n\
    function getCallbackError(stub, func, args) {\n\
        if (stub.callArgAtsLast < 0) {\n\
            var msg;\n\
\n\
            if (stub.callArgPropsLast) {\n\
                msg = sinon.functionName(stub) +\n\
                    \" expected to yield to '\" + stub.callArgPropsLast +\n\
                    \"', but no object with such a property was passed.\"\n\
            } else {\n\
                msg = sinon.functionName(stub) +\n\
                    \" expected to yield, but no callback was passed.\"\n\
            }\n\
\n\
            if (args.length > 0) {\n\
                msg += \" Received [\" + join.call(args, \", \") + \"]\";\n\
            }\n\
\n\
            return msg;\n\
        }\n\
\n\
        return \"argument at index \" + stub.callArgAtsLast + \" is not a function: \" + func;\n\
    }\n\
\n\
    var nextTick = (function () {\n\
        if (typeof process === \"object\" && typeof process.nextTick === \"function\") {\n\
            return process.nextTick;\n\
        } else if (typeof setImmediate === \"function\") {\n\
            return setImmediate;\n\
        } else {\n\
            return function (callback) {\n\
                setTimeout(callback, 0);\n\
            };\n\
        }\n\
    })();\n\
\n\
    function callCallback(stub, args) {\n\
        if (stub.callArgAts.length > 0) {\n\
            var func = getCallback(stub, args);\n\
\n\
            if (typeof func != \"function\") {\n\
                throw new TypeError(getCallbackError(stub, func, args));\n\
            }\n\
\n\
            var callbackArguments = getChangingValue(stub, \"callbackArguments\");\n\
            var callbackContext = getChangingValue(stub, \"callbackContexts\");\n\
\n\
            if (stub.callbackAsync) {\n\
                nextTick(function () {\n\
                    func.apply(callbackContext, callbackArguments);\n\
                });\n\
            } else {\n\
                func.apply(callbackContext, callbackArguments);\n\
            }\n\
        }\n\
    }\n\
\n\
    var uuid = 0;\n\
\n\
    sinon.extend(stub, (function () {\n\
        var slice = Array.prototype.slice, proto;\n\
\n\
        function throwsException(error, message) {\n\
            if (typeof error == \"string\") {\n\
                this.exception = new Error(message || \"\");\n\
                this.exception.name = error;\n\
            } else if (!error) {\n\
                this.exception = new Error(\"Error\");\n\
            } else {\n\
                this.exception = error;\n\
            }\n\
\n\
            return this;\n\
        }\n\
\n\
        proto = {\n\
            create: function create() {\n\
                var functionStub = function () {\n\
\n\
                    callCallback(functionStub, arguments);\n\
\n\
                    if (functionStub.exception) {\n\
                        throw functionStub.exception;\n\
                    } else if (typeof functionStub.returnArgAt == 'number') {\n\
                        return arguments[functionStub.returnArgAt];\n\
                    } else if (functionStub.returnThis) {\n\
                        return this;\n\
                    }\n\
                    return functionStub.returnValue;\n\
                };\n\
\n\
                functionStub.id = \"stub#\" + uuid++;\n\
                var orig = functionStub;\n\
                functionStub = sinon.spy.create(functionStub);\n\
                functionStub.func = orig;\n\
\n\
                functionStub.callArgAts = [];\n\
                functionStub.callbackArguments = [];\n\
                functionStub.callbackContexts = [];\n\
                functionStub.callArgProps = [];\n\
\n\
                sinon.extend(functionStub, stub);\n\
                functionStub._create = sinon.stub.create;\n\
                functionStub.displayName = \"stub\";\n\
                functionStub.toString = sinon.functionToString;\n\
\n\
                return functionStub;\n\
            },\n\
\n\
            resetBehavior: function () {\n\
                var i;\n\
\n\
                this.callArgAts = [];\n\
                this.callbackArguments = [];\n\
                this.callbackContexts = [];\n\
                this.callArgProps = [];\n\
\n\
                delete this.returnValue;\n\
                delete this.returnArgAt;\n\
                this.returnThis = false;\n\
\n\
                if (this.fakes) {\n\
                    for (i = 0; i < this.fakes.length; i++) {\n\
                        this.fakes[i].resetBehavior();\n\
                    }\n\
                }\n\
            },\n\
\n\
            returns: function returns(value) {\n\
                this.returnValue = value;\n\
\n\
                return this;\n\
            },\n\
\n\
            returnsArg: function returnsArg(pos) {\n\
                if (typeof pos != \"number\") {\n\
                    throw new TypeError(\"argument index is not number\");\n\
                }\n\
\n\
                this.returnArgAt = pos;\n\
\n\
                return this;\n\
            },\n\
\n\
            returnsThis: function returnsThis() {\n\
                this.returnThis = true;\n\
\n\
                return this;\n\
            },\n\
\n\
            \"throws\": throwsException,\n\
            throwsException: throwsException,\n\
\n\
            callsArg: function callsArg(pos) {\n\
                if (typeof pos != \"number\") {\n\
                    throw new TypeError(\"argument index is not number\");\n\
                }\n\
\n\
                this.callArgAts.push(pos);\n\
                this.callbackArguments.push([]);\n\
                this.callbackContexts.push(undefined);\n\
                this.callArgProps.push(undefined);\n\
\n\
                return this;\n\
            },\n\
\n\
            callsArgOn: function callsArgOn(pos, context) {\n\
                if (typeof pos != \"number\") {\n\
                    throw new TypeError(\"argument index is not number\");\n\
                }\n\
                if (typeof context != \"object\") {\n\
                    throw new TypeError(\"argument context is not an object\");\n\
                }\n\
\n\
                this.callArgAts.push(pos);\n\
                this.callbackArguments.push([]);\n\
                this.callbackContexts.push(context);\n\
                this.callArgProps.push(undefined);\n\
\n\
                return this;\n\
            },\n\
\n\
            callsArgWith: function callsArgWith(pos) {\n\
                if (typeof pos != \"number\") {\n\
                    throw new TypeError(\"argument index is not number\");\n\
                }\n\
\n\
                this.callArgAts.push(pos);\n\
                this.callbackArguments.push(slice.call(arguments, 1));\n\
                this.callbackContexts.push(undefined);\n\
                this.callArgProps.push(undefined);\n\
\n\
                return this;\n\
            },\n\
\n\
            callsArgOnWith: function callsArgWith(pos, context) {\n\
                if (typeof pos != \"number\") {\n\
                    throw new TypeError(\"argument index is not number\");\n\
                }\n\
                if (typeof context != \"object\") {\n\
                    throw new TypeError(\"argument context is not an object\");\n\
                }\n\
\n\
                this.callArgAts.push(pos);\n\
                this.callbackArguments.push(slice.call(arguments, 2));\n\
                this.callbackContexts.push(context);\n\
                this.callArgProps.push(undefined);\n\
\n\
                return this;\n\
            },\n\
\n\
            yields: function () {\n\
                this.callArgAts.push(-1);\n\
                this.callbackArguments.push(slice.call(arguments, 0));\n\
                this.callbackContexts.push(undefined);\n\
                this.callArgProps.push(undefined);\n\
\n\
                return this;\n\
            },\n\
\n\
            yieldsOn: function (context) {\n\
                if (typeof context != \"object\") {\n\
                    throw new TypeError(\"argument context is not an object\");\n\
                }\n\
\n\
                this.callArgAts.push(-1);\n\
                this.callbackArguments.push(slice.call(arguments, 1));\n\
                this.callbackContexts.push(context);\n\
                this.callArgProps.push(undefined);\n\
\n\
                return this;\n\
            },\n\
\n\
            yieldsTo: function (prop) {\n\
                this.callArgAts.push(-1);\n\
                this.callbackArguments.push(slice.call(arguments, 1));\n\
                this.callbackContexts.push(undefined);\n\
                this.callArgProps.push(prop);\n\
\n\
                return this;\n\
            },\n\
\n\
            yieldsToOn: function (prop, context) {\n\
                if (typeof context != \"object\") {\n\
                    throw new TypeError(\"argument context is not an object\");\n\
                }\n\
\n\
                this.callArgAts.push(-1);\n\
                this.callbackArguments.push(slice.call(arguments, 2));\n\
                this.callbackContexts.push(context);\n\
                this.callArgProps.push(prop);\n\
\n\
                return this;\n\
            }\n\
        };\n\
\n\
        // create asynchronous versions of callsArg* and yields* methods\n\
        for (var method in proto) {\n\
            // need to avoid creating anotherasync versions of the newly added async methods\n\
            if (proto.hasOwnProperty(method) &&\n\
                method.match(/^(callsArg|yields|thenYields$)/) && !method.match(/Async/)) {\n\
                proto[method + 'Async'] = (function (syncFnName) {\n\
                    return function () {\n\
                        this.callbackAsync = true;\n\
                        return this[syncFnName].apply(this, arguments);\n\
                    };\n\
                })(method);\n\
            }\n\
        }\n\
\n\
        return proto;\n\
\n\
    }()));\n\
\n\
    return stub;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/stub.js"
));
require.register("johntron-sinon/lib/sinon/mock.js", Function("exports, require, module",
"module.exports = function (sinon) {\n\
    var push = [].push;\n\
\n\
    function mock(object) {\n\
        if (!object) {\n\
            return sinon.expectation.create(\"Anonymous mock\");\n\
        }\n\
\n\
        return mock.create(object);\n\
    }\n\
\n\
    sinon.mock = mock;\n\
\n\
    sinon.extend(mock, (function () {\n\
        function each(collection, callback) {\n\
            if (!collection) {\n\
                return;\n\
            }\n\
\n\
            for (var i = 0, l = collection.length; i < l; i += 1) {\n\
                callback(collection[i]);\n\
            }\n\
        }\n\
\n\
        return {\n\
            create: function create(object) {\n\
                if (!object) {\n\
                    throw new TypeError(\"object is null\");\n\
                }\n\
\n\
                var mockObject = sinon.extend({}, mock);\n\
                mockObject.object = object;\n\
                delete mockObject.create;\n\
\n\
                return mockObject;\n\
            },\n\
\n\
            expects: function expects(method) {\n\
                if (!method) {\n\
                    throw new TypeError(\"method is falsy\");\n\
                }\n\
\n\
                if (!this.expectations) {\n\
                    this.expectations = {};\n\
                    this.proxies = [];\n\
                }\n\
\n\
                if (!this.expectations[method]) {\n\
                    this.expectations[method] = [];\n\
                    var mockObject = this;\n\
\n\
                    sinon.wrapMethod(this.object, method, function () {\n\
                        return mockObject.invokeMethod(method, this, arguments);\n\
                    });\n\
\n\
                    push.call(this.proxies, method);\n\
                }\n\
\n\
                var expectation = sinon.expectation.create(method);\n\
                push.call(this.expectations[method], expectation);\n\
\n\
                return expectation;\n\
            },\n\
\n\
            restore: function restore() {\n\
                var object = this.object;\n\
\n\
                each(this.proxies, function (proxy) {\n\
                    if (typeof object[proxy].restore == \"function\") {\n\
                        object[proxy].restore();\n\
                    }\n\
                });\n\
            },\n\
\n\
            verify: function verify() {\n\
                var expectations = this.expectations || {};\n\
                var messages = [], met = [];\n\
\n\
                each(this.proxies, function (proxy) {\n\
                    each(expectations[proxy], function (expectation) {\n\
                        if (!expectation.met()) {\n\
                            push.call(messages, expectation.toString());\n\
                        } else {\n\
                            push.call(met, expectation.toString());\n\
                        }\n\
                    });\n\
                });\n\
\n\
                this.restore();\n\
\n\
                if (messages.length > 0) {\n\
                    sinon.expectation.fail(messages.concat(met).join(\"\\n\
\"));\n\
                } else {\n\
                    sinon.expectation.pass(messages.concat(met).join(\"\\n\
\"));\n\
                }\n\
\n\
                return true;\n\
            },\n\
\n\
            invokeMethod: function invokeMethod(method, thisValue, args) {\n\
                var expectations = this.expectations && this.expectations[method];\n\
                var length = expectations && expectations.length || 0, i;\n\
\n\
                for (i = 0; i < length; i += 1) {\n\
                    if (!expectations[i].met() &&\n\
                        expectations[i].allowsCall(thisValue, args)) {\n\
                        return expectations[i].apply(thisValue, args);\n\
                    }\n\
                }\n\
\n\
                var messages = [], available, exhausted = 0;\n\
\n\
                for (i = 0; i < length; i += 1) {\n\
                    if (expectations[i].allowsCall(thisValue, args)) {\n\
                        available = available || expectations[i];\n\
                    } else {\n\
                        exhausted += 1;\n\
                    }\n\
                    push.call(messages, \"    \" + expectations[i].toString());\n\
                }\n\
\n\
                if (exhausted === 0) {\n\
                    return available.apply(thisValue, args);\n\
                }\n\
\n\
                messages.unshift(\"Unexpected call: \" + sinon.spyCall.toString.call({\n\
                    proxy: method,\n\
                    args: args\n\
                }));\n\
\n\
                sinon.expectation.fail(messages.join(\"\\n\
\"));\n\
            }\n\
        };\n\
    }()));\n\
\n\
    var times = sinon.timesInWords;\n\
\n\
    sinon.expectation = (function () {\n\
        var slice = Array.prototype.slice;\n\
        var _invoke = sinon.spy.invoke;\n\
\n\
        function callCountInWords(callCount) {\n\
            if (callCount == 0) {\n\
                return \"never called\";\n\
            } else {\n\
                return \"called \" + times(callCount);\n\
            }\n\
        }\n\
\n\
        function expectedCallCountInWords(expectation) {\n\
            var min = expectation.minCalls;\n\
            var max = expectation.maxCalls;\n\
\n\
            if (typeof min == \"number\" && typeof max == \"number\") {\n\
                var str = times(min);\n\
\n\
                if (min != max) {\n\
                    str = \"at least \" + str + \" and at most \" + times(max);\n\
                }\n\
\n\
                return str;\n\
            }\n\
\n\
            if (typeof min == \"number\") {\n\
                return \"at least \" + times(min);\n\
            }\n\
\n\
            return \"at most \" + times(max);\n\
        }\n\
\n\
        function receivedMinCalls(expectation) {\n\
            var hasMinLimit = typeof expectation.minCalls == \"number\";\n\
            return !hasMinLimit || expectation.callCount >= expectation.minCalls;\n\
        }\n\
\n\
        function receivedMaxCalls(expectation) {\n\
            if (typeof expectation.maxCalls != \"number\") {\n\
                return false;\n\
            }\n\
\n\
            return expectation.callCount == expectation.maxCalls;\n\
        }\n\
\n\
        return {\n\
            minCalls: 1,\n\
            maxCalls: 1,\n\
\n\
            create: function create(methodName) {\n\
                var expectation = sinon.extend(sinon.stub.create(), sinon.expectation);\n\
                delete expectation.create;\n\
                expectation.method = methodName;\n\
\n\
                return expectation;\n\
            },\n\
\n\
            invoke: function invoke(func, thisValue, args) {\n\
                this.verifyCallAllowed(thisValue, args);\n\
\n\
                return _invoke.apply(this, arguments);\n\
            },\n\
\n\
            atLeast: function atLeast(num) {\n\
                if (typeof num != \"number\") {\n\
                    throw new TypeError(\"'\" + num + \"' is not number\");\n\
                }\n\
\n\
                if (!this.limitsSet) {\n\
                    this.maxCalls = null;\n\
                    this.limitsSet = true;\n\
                }\n\
\n\
                this.minCalls = num;\n\
\n\
                return this;\n\
            },\n\
\n\
            atMost: function atMost(num) {\n\
                if (typeof num != \"number\") {\n\
                    throw new TypeError(\"'\" + num + \"' is not number\");\n\
                }\n\
\n\
                if (!this.limitsSet) {\n\
                    this.minCalls = null;\n\
                    this.limitsSet = true;\n\
                }\n\
\n\
                this.maxCalls = num;\n\
\n\
                return this;\n\
            },\n\
\n\
            never: function never() {\n\
                return this.exactly(0);\n\
            },\n\
\n\
            once: function once() {\n\
                return this.exactly(1);\n\
            },\n\
\n\
            twice: function twice() {\n\
                return this.exactly(2);\n\
            },\n\
\n\
            thrice: function thrice() {\n\
                return this.exactly(3);\n\
            },\n\
\n\
            exactly: function exactly(num) {\n\
                if (typeof num != \"number\") {\n\
                    throw new TypeError(\"'\" + num + \"' is not a number\");\n\
                }\n\
\n\
                this.atLeast(num);\n\
                return this.atMost(num);\n\
            },\n\
\n\
            met: function met() {\n\
                return !this.failed && receivedMinCalls(this);\n\
            },\n\
\n\
            verifyCallAllowed: function verifyCallAllowed(thisValue, args) {\n\
                if (receivedMaxCalls(this)) {\n\
                    this.failed = true;\n\
                    sinon.expectation.fail(this.method + \" already called \" + times(this.maxCalls));\n\
                }\n\
\n\
                if (\"expectedThis\" in this && this.expectedThis !== thisValue) {\n\
                    sinon.expectation.fail(this.method + \" called with \" + thisValue + \" as thisValue, expected \" +\n\
                        this.expectedThis);\n\
                }\n\
\n\
                if (!(\"expectedArguments\" in this)) {\n\
                    return;\n\
                }\n\
\n\
                if (!args) {\n\
                    sinon.expectation.fail(this.method + \" received no arguments, expected \" +\n\
                        sinon.format(this.expectedArguments));\n\
                }\n\
\n\
                if (args.length < this.expectedArguments.length) {\n\
                    sinon.expectation.fail(this.method + \" received too few arguments (\" + sinon.format(args) +\n\
                        \"), expected \" + sinon.format(this.expectedArguments));\n\
                }\n\
\n\
                if (this.expectsExactArgCount &&\n\
                    args.length != this.expectedArguments.length) {\n\
                    sinon.expectation.fail(this.method + \" received too many arguments (\" + sinon.format(args) +\n\
                        \"), expected \" + sinon.format(this.expectedArguments));\n\
                }\n\
\n\
                for (var i = 0, l = this.expectedArguments.length; i < l; i += 1) {\n\
                    if (!sinon.deepEqual(this.expectedArguments[i], args[i])) {\n\
                        sinon.expectation.fail(this.method + \" received wrong arguments \" + sinon.format(args) +\n\
                            \", expected \" + sinon.format(this.expectedArguments));\n\
                    }\n\
                }\n\
            },\n\
\n\
            allowsCall: function allowsCall(thisValue, args) {\n\
                if (this.met() && receivedMaxCalls(this)) {\n\
                    return false;\n\
                }\n\
\n\
                if (\"expectedThis\" in this && this.expectedThis !== thisValue) {\n\
                    return false;\n\
                }\n\
\n\
                if (!(\"expectedArguments\" in this)) {\n\
                    return true;\n\
                }\n\
\n\
                args = args || [];\n\
\n\
                if (args.length < this.expectedArguments.length) {\n\
                    return false;\n\
                }\n\
\n\
                if (this.expectsExactArgCount &&\n\
                    args.length != this.expectedArguments.length) {\n\
                    return false;\n\
                }\n\
\n\
                for (var i = 0, l = this.expectedArguments.length; i < l; i += 1) {\n\
                    if (!sinon.deepEqual(this.expectedArguments[i], args[i])) {\n\
                        return false;\n\
                    }\n\
                }\n\
\n\
                return true;\n\
            },\n\
\n\
            withArgs: function withArgs() {\n\
                this.expectedArguments = slice.call(arguments);\n\
                return this;\n\
            },\n\
\n\
            withExactArgs: function withExactArgs() {\n\
                this.withArgs.apply(this, arguments);\n\
                this.expectsExactArgCount = true;\n\
                return this;\n\
            },\n\
\n\
            on: function on(thisValue) {\n\
                this.expectedThis = thisValue;\n\
                return this;\n\
            },\n\
\n\
            toString: function () {\n\
                var args = (this.expectedArguments || []).slice();\n\
\n\
                if (!this.expectsExactArgCount) {\n\
                    push.call(args, \"[...]\");\n\
                }\n\
\n\
                var callStr = sinon.spyCall.toString.call({\n\
                    proxy: this.method || \"anonymous mock expectation\",\n\
                    args: args\n\
                });\n\
\n\
                var message = callStr.replace(\", [...\", \"[, ...\") + \" \" +\n\
                    expectedCallCountInWords(this);\n\
\n\
                if (this.met()) {\n\
                    return \"Expectation met: \" + message;\n\
                }\n\
\n\
                return \"Expected \" + message + \" (\" +\n\
                    callCountInWords(this.callCount) + \")\";\n\
            },\n\
\n\
            verify: function verify() {\n\
                if (!this.met()) {\n\
                    sinon.expectation.fail(this.toString());\n\
                } else {\n\
                    sinon.expectation.pass(this.toString());\n\
                }\n\
\n\
                return true;\n\
            },\n\
\n\
            pass: function(message) {\n\
              sinon.assert.pass(message);\n\
            },\n\
            fail: function (message) {\n\
                var exception = new Error(message);\n\
                exception.name = \"ExpectationError\";\n\
\n\
                throw exception;\n\
            }\n\
        };\n\
    }());\n\
\n\
    return mock;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/mock.js"
));
require.register("johntron-sinon/lib/sinon/collection.js", Function("exports, require, module",
"module.exports = function(sinon) {\n\
    var push = [].push;\n\
\n\
    function getFakes(fakeCollection) {\n\
        if (!fakeCollection.fakes) {\n\
            fakeCollection.fakes = [];\n\
        }\n\
\n\
        return fakeCollection.fakes;\n\
    }\n\
\n\
    function each(fakeCollection, method) {\n\
        var fakes = getFakes(fakeCollection);\n\
\n\
        for (var i = 0, l = fakes.length; i < l; i += 1) {\n\
            if (typeof fakes[i][method] == \"function\") {\n\
                fakes[i][method]();\n\
            }\n\
        }\n\
    }\n\
\n\
    function compact(fakeCollection) {\n\
        var fakes = getFakes(fakeCollection);\n\
        var i = 0;\n\
        while (i < fakes.length) {\n\
          fakes.splice(i, 1);\n\
        }\n\
    }\n\
\n\
    var collection = {\n\
        verify: function resolve() {\n\
            each(this, \"verify\");\n\
        },\n\
\n\
        restore: function restore() {\n\
            each(this, \"restore\");\n\
            compact(this);\n\
        },\n\
\n\
        verifyAndRestore: function verifyAndRestore() {\n\
            var exception;\n\
\n\
            try {\n\
                this.verify();\n\
            } catch (e) {\n\
                exception = e;\n\
            }\n\
\n\
            this.restore();\n\
\n\
            if (exception) {\n\
                throw exception;\n\
            }\n\
        },\n\
\n\
        add: function add(fake) {\n\
            push.call(getFakes(this), fake);\n\
            return fake;\n\
        },\n\
\n\
        spy: function spy() {\n\
            return this.add(sinon.spy.apply(sinon, arguments));\n\
        },\n\
\n\
        stub: function stub(object, property, value) {\n\
            if (property) {\n\
                var original = object[property];\n\
\n\
                if (typeof original != \"function\") {\n\
                    if (!hasOwnProperty.call(object, property)) {\n\
                        throw new TypeError(\"Cannot stub non-existent own property \" + property);\n\
                    }\n\
\n\
                    object[property] = value;\n\
\n\
                    return this.add({\n\
                        restore: function () {\n\
                            object[property] = original;\n\
                        }\n\
                    });\n\
                }\n\
            }\n\
            if (!property && !!object && typeof object == \"object\") {\n\
                var stubbedObj = sinon.stub.apply(sinon, arguments);\n\
\n\
                for (var prop in stubbedObj) {\n\
                    if (typeof stubbedObj[prop] === \"function\") {\n\
                        this.add(stubbedObj[prop]);\n\
                    }\n\
                }\n\
\n\
                return stubbedObj;\n\
            }\n\
\n\
            return this.add(sinon.stub.apply(sinon, arguments));\n\
        },\n\
\n\
        mock: function mock() {\n\
            return this.add(sinon.mock.apply(sinon, arguments));\n\
        },\n\
\n\
        inject: function inject(obj) {\n\
            var col = this;\n\
\n\
            obj.spy = function () {\n\
                return col.spy.apply(col, arguments);\n\
            };\n\
\n\
            obj.stub = function () {\n\
                return col.stub.apply(col, arguments);\n\
            };\n\
\n\
            obj.mock = function () {\n\
                return col.mock.apply(col, arguments);\n\
            };\n\
\n\
            return obj;\n\
        }\n\
    };\n\
\n\
    return collection;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/collection.js"
));
require.register("johntron-sinon/lib/sinon/assert.js", Function("exports, require, module",
"module.exports = function (sinon) {\n\
    var slice = Array.prototype.slice;\n\
    var assert;\n\
\n\
    function verifyIsStub() {\n\
        var method;\n\
\n\
        for (var i = 0, l = arguments.length; i < l; ++i) {\n\
            method = arguments[i];\n\
\n\
            if (!method) {\n\
                assert.fail(\"fake is not a spy\");\n\
            }\n\
\n\
            if (typeof method != \"function\") {\n\
                assert.fail(method + \" is not a function\");\n\
            }\n\
\n\
            if (typeof method.getCall != \"function\") {\n\
                assert.fail(method + \" is not stubbed\");\n\
            }\n\
        }\n\
    }\n\
\n\
    function failAssertion(object, msg) {\n\
        object = object || global;\n\
        var failMethod = object.fail || assert.fail;\n\
        failMethod.call(object, msg);\n\
    }\n\
\n\
    function mirrorPropAsAssertion(name, method, message) {\n\
        if (arguments.length == 2) {\n\
            message = method;\n\
            method = name;\n\
        }\n\
\n\
        assert[name] = function (fake) {\n\
            verifyIsStub(fake);\n\
\n\
            var args = slice.call(arguments, 1);\n\
            var failed = false;\n\
\n\
            if (typeof method == \"function\") {\n\
                failed = !method(fake);\n\
            } else {\n\
                failed = typeof fake[method] == \"function\" ?\n\
                    !fake[method].apply(fake, args) : !fake[method];\n\
            }\n\
\n\
            if (failed) {\n\
                failAssertion(this, fake.printf.apply(fake, [message].concat(args)));\n\
            } else {\n\
                assert.pass(name);\n\
            }\n\
        };\n\
    }\n\
\n\
    function exposedName(prefix, prop) {\n\
        return !prefix || /^fail/.test(prop) ? prop :\n\
            prefix + prop.slice(0, 1).toUpperCase() + prop.slice(1);\n\
    };\n\
\n\
    assert = {\n\
        failException: \"AssertError\",\n\
\n\
        fail: function fail(message) {\n\
            var error = new Error(message);\n\
            error.name = this.failException || assert.failException;\n\
\n\
            throw error;\n\
        },\n\
\n\
        pass: function pass(assertion) {\n\
        },\n\
\n\
        callOrder: function assertCallOrder() {\n\
            verifyIsStub.apply(null, arguments);\n\
            var expected = \"\", actual = \"\";\n\
\n\
            if (!sinon.calledInOrder(arguments)) {\n\
                try {\n\
                    expected = [].join.call(arguments, \", \");\n\
                    var calls = slice.call(arguments);\n\
                    var i = calls.length;\n\
                    while (i) {\n\
                        if (!calls[--i].called) {\n\
                            calls.splice(i, 1);\n\
                        }\n\
                    }\n\
                    actual = sinon.orderByFirstCall(calls).join(\", \");\n\
                } catch (e) {\n\
                    // If this fails, we'll just fall back to the blank string\n\
                }\n\
\n\
                failAssertion(this, \"expected \" + expected + \" to be \" +\n\
                    \"called in order but were called as \" + actual);\n\
            } else {\n\
                assert.pass(\"callOrder\");\n\
            }\n\
        },\n\
\n\
        callCount: function assertCallCount(method, count) {\n\
            verifyIsStub(method);\n\
\n\
            if (method.callCount != count) {\n\
                var msg = \"expected %n to be called \" + sinon.timesInWords(count) +\n\
                    \" but was called %c%C\";\n\
                failAssertion(this, method.printf(msg));\n\
            } else {\n\
                assert.pass(\"callCount\");\n\
            }\n\
        },\n\
\n\
        expose: function expose(target, options) {\n\
            if (!target) {\n\
                throw new TypeError(\"target is null or undefined\");\n\
            }\n\
\n\
            var o = options || {};\n\
            var prefix = typeof o.prefix == \"undefined\" && \"assert\" || o.prefix;\n\
            var includeFail = typeof o.includeFail == \"undefined\" || !!o.includeFail;\n\
\n\
            for (var method in this) {\n\
                if (method != \"export\" && (includeFail || !/^(fail)/.test(method))) {\n\
                    target[exposedName(prefix, method)] = this[method];\n\
                }\n\
            }\n\
\n\
            return target;\n\
        }\n\
    };\n\
\n\
    mirrorPropAsAssertion(\"called\", \"expected %n to have been called at least once but was never called\");\n\
    mirrorPropAsAssertion(\"notCalled\", function (spy) {\n\
            return !spy.called;\n\
        },\n\
        \"expected %n to not have been called but was called %c%C\");\n\
    mirrorPropAsAssertion(\"calledOnce\", \"expected %n to be called once but was called %c%C\");\n\
    mirrorPropAsAssertion(\"calledTwice\", \"expected %n to be called twice but was called %c%C\");\n\
    mirrorPropAsAssertion(\"calledThrice\", \"expected %n to be called thrice but was called %c%C\");\n\
    mirrorPropAsAssertion(\"calledOn\", \"expected %n to be called with %1 as this but was called with %t\");\n\
    mirrorPropAsAssertion(\"alwaysCalledOn\", \"expected %n to always be called with %1 as this but was called with %t\");\n\
    mirrorPropAsAssertion(\"calledWithNew\", \"expected %n to be called with new\");\n\
    mirrorPropAsAssertion(\"alwaysCalledWithNew\", \"expected %n to always be called with new\");\n\
    mirrorPropAsAssertion(\"calledWith\", \"expected %n to be called with arguments %*%C\");\n\
    mirrorPropAsAssertion(\"calledWithMatch\", \"expected %n to be called with match %*%C\");\n\
    mirrorPropAsAssertion(\"alwaysCalledWith\", \"expected %n to always be called with arguments %*%C\");\n\
    mirrorPropAsAssertion(\"alwaysCalledWithMatch\", \"expected %n to always be called with match %*%C\");\n\
    mirrorPropAsAssertion(\"calledWithExactly\", \"expected %n to be called with exact arguments %*%C\");\n\
    mirrorPropAsAssertion(\"alwaysCalledWithExactly\", \"expected %n to always be called with exact arguments %*%C\");\n\
    mirrorPropAsAssertion(\"neverCalledWith\", \"expected %n to never be called with arguments %*%C\");\n\
    mirrorPropAsAssertion(\"neverCalledWithMatch\", \"expected %n to never be called with match %*%C\");\n\
    mirrorPropAsAssertion(\"threw\", \"%n did not throw exception%C\");\n\
    mirrorPropAsAssertion(\"alwaysThrew\", \"%n did not always throw exception%C\");\n\
\n\
    return assert;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/assert.js"
));
require.register("johntron-sinon/lib/sinon/sandbox.js", Function("exports, require, module",
"module.exports = function(sinon) {\n\
\n\
    var push = [].push;\n\
\n\
    function exposeValue(sandbox, config, key, value) {\n\
        if (!value) {\n\
            return;\n\
        }\n\
\n\
        if (config.injectInto) {\n\
            config.injectInto[key] = value;\n\
        } else {\n\
            push.call(sandbox.args, value);\n\
        }\n\
    }\n\
\n\
    function prepareSandboxFromConfig(config) {\n\
        var sandbox = sinon.create(sinon.sandbox);\n\
\n\
        if (config.useFakeServer) {\n\
            if (typeof config.useFakeServer == \"object\") {\n\
                sandbox.serverPrototype = config.useFakeServer;\n\
            }\n\
\n\
            sandbox.useFakeServer();\n\
        }\n\
\n\
        if (config.useFakeTimers) {\n\
            if (typeof config.useFakeTimers == \"object\") {\n\
                sandbox.useFakeTimers.apply(sandbox, config.useFakeTimers);\n\
            } else {\n\
                sandbox.useFakeTimers();\n\
            }\n\
        }\n\
\n\
        return sandbox;\n\
    }\n\
\n\
    var sandbox = sinon.extend(sinon.create(sinon.collection), {\n\
        useFakeTimers: function useFakeTimers() {\n\
            this.clock = sinon.useFakeTimers.apply(sinon, arguments);\n\
\n\
            return this.add(this.clock);\n\
        },\n\
\n\
        serverPrototype: sinon.fakeServer,\n\
\n\
        useFakeServer: function useFakeServer() {\n\
            var proto = this.serverPrototype || sinon.fakeServer;\n\
\n\
            if (!proto || !proto.create) {\n\
                return null;\n\
            }\n\
\n\
            this.server = proto.create();\n\
            return this.add(this.server);\n\
        },\n\
\n\
        inject: function (obj) {\n\
            sinon.collection.inject.call(this, obj);\n\
\n\
            if (this.clock) {\n\
                obj.clock = this.clock;\n\
            }\n\
\n\
            if (this.server) {\n\
                obj.server = this.server;\n\
                obj.requests = this.server.requests;\n\
            }\n\
\n\
            return obj;\n\
        },\n\
\n\
        create: function (config) {\n\
            if (!config) {\n\
                return sinon.create(sinon.sandbox);\n\
            }\n\
\n\
            var sandbox = prepareSandboxFromConfig(config);\n\
            sandbox.args = sandbox.args || [];\n\
            var prop, value, exposed = sandbox.inject({});\n\
\n\
            if (config.properties) {\n\
                for (var i = 0, l = config.properties.length; i < l; i++) {\n\
                    prop = config.properties[i];\n\
                    value = exposed[prop] || prop == \"sandbox\" && sandbox;\n\
                    exposeValue(sandbox, config, prop, value);\n\
                }\n\
            } else {\n\
                exposeValue(sandbox, config, \"sandbox\", value);\n\
            }\n\
\n\
            return sandbox;\n\
        }\n\
    });\n\
\n\
    sandbox.useFakeXMLHttpRequest = sandbox.useFakeServer;\n\
\n\
    return sandbox;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/sandbox.js"
));
require.register("johntron-sinon/lib/sinon/test.js", Function("exports, require, module",
"module.exports = function(sinon) {\n\
    function test(callback) {\n\
        var type = typeof callback;\n\
\n\
        if (type != \"function\") {\n\
            throw new TypeError(\"sinon.test needs to wrap a test function, got \" + type);\n\
        }\n\
\n\
        return function () {\n\
            var config = sinon.getConfig(sinon.config);\n\
            config.injectInto = config.injectIntoThis && this || config.injectInto;\n\
            var sandbox = sinon.sandbox.create(config);\n\
            var exception, result;\n\
            var args = Array.prototype.slice.call(arguments).concat(sandbox.args);\n\
\n\
            try {\n\
                result = callback.apply(this, args);\n\
            } catch (e) {\n\
                exception = e;\n\
            }\n\
\n\
            if (typeof exception !== \"undefined\") {\n\
                sandbox.restore();\n\
                throw exception;\n\
            }\n\
            else {\n\
                sandbox.verifyAndRestore();\n\
            }\n\
\n\
            return result;\n\
        };\n\
    }\n\
\n\
    test.config = {\n\
        injectIntoThis: true,\n\
        injectInto: null,\n\
        properties: [\"spy\", \"stub\", \"mock\", \"clock\", \"server\", \"requests\"],\n\
        useFakeTimers: true,\n\
        useFakeServer: true\n\
    };\n\
\n\
    return test;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/test.js"
));
require.register("johntron-sinon/lib/sinon/test_case.js", Function("exports, require, module",
"module.exports = function(sinon) {\n\
\n\
    function createTest(property, setUp, tearDown) {\n\
        return function () {\n\
            if (setUp) {\n\
                setUp.apply(this, arguments);\n\
            }\n\
\n\
            var exception, result;\n\
\n\
            try {\n\
                result = property.apply(this, arguments);\n\
            } catch (e) {\n\
                exception = e;\n\
            }\n\
\n\
            if (tearDown) {\n\
                tearDown.apply(this, arguments);\n\
            }\n\
\n\
            if (exception) {\n\
                throw exception;\n\
            }\n\
\n\
            return result;\n\
        };\n\
    }\n\
\n\
    function testCase(tests, prefix) {\n\
        /*jsl:ignore*/\n\
        if (!tests || typeof tests != \"object\") {\n\
            throw new TypeError(\"sinon.testCase needs an object with test functions\");\n\
        }\n\
        /*jsl:end*/\n\
\n\
        prefix = prefix || \"test\";\n\
        var rPrefix = new RegExp(\"^\" + prefix);\n\
        var methods = {}, testName, property, method;\n\
        var setUp = tests.setUp;\n\
        var tearDown = tests.tearDown;\n\
\n\
        for (testName in tests) {\n\
            if (tests.hasOwnProperty(testName)) {\n\
                property = tests[testName];\n\
\n\
                if (/^(setUp|tearDown)$/.test(testName)) {\n\
                    continue;\n\
                }\n\
\n\
                if (typeof property == \"function\" && rPrefix.test(testName)) {\n\
                    method = property;\n\
\n\
                    if (setUp || tearDown) {\n\
                        method = createTest(property, setUp, tearDown);\n\
                    }\n\
\n\
                    methods[testName] = sinon.test(method);\n\
                } else {\n\
                    methods[testName] = tests[testName];\n\
                }\n\
            }\n\
        }\n\
\n\
        return methods;\n\
    }\n\
\n\
    return testCase;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/test_case.js"
));
require.register("johntron-sinon/lib/sinon/assert.js", Function("exports, require, module",
"module.exports = function (sinon) {\n\
    var slice = Array.prototype.slice;\n\
    var assert;\n\
\n\
    function verifyIsStub() {\n\
        var method;\n\
\n\
        for (var i = 0, l = arguments.length; i < l; ++i) {\n\
            method = arguments[i];\n\
\n\
            if (!method) {\n\
                assert.fail(\"fake is not a spy\");\n\
            }\n\
\n\
            if (typeof method != \"function\") {\n\
                assert.fail(method + \" is not a function\");\n\
            }\n\
\n\
            if (typeof method.getCall != \"function\") {\n\
                assert.fail(method + \" is not stubbed\");\n\
            }\n\
        }\n\
    }\n\
\n\
    function failAssertion(object, msg) {\n\
        object = object || global;\n\
        var failMethod = object.fail || assert.fail;\n\
        failMethod.call(object, msg);\n\
    }\n\
\n\
    function mirrorPropAsAssertion(name, method, message) {\n\
        if (arguments.length == 2) {\n\
            message = method;\n\
            method = name;\n\
        }\n\
\n\
        assert[name] = function (fake) {\n\
            verifyIsStub(fake);\n\
\n\
            var args = slice.call(arguments, 1);\n\
            var failed = false;\n\
\n\
            if (typeof method == \"function\") {\n\
                failed = !method(fake);\n\
            } else {\n\
                failed = typeof fake[method] == \"function\" ?\n\
                    !fake[method].apply(fake, args) : !fake[method];\n\
            }\n\
\n\
            if (failed) {\n\
                failAssertion(this, fake.printf.apply(fake, [message].concat(args)));\n\
            } else {\n\
                assert.pass(name);\n\
            }\n\
        };\n\
    }\n\
\n\
    function exposedName(prefix, prop) {\n\
        return !prefix || /^fail/.test(prop) ? prop :\n\
            prefix + prop.slice(0, 1).toUpperCase() + prop.slice(1);\n\
    };\n\
\n\
    assert = {\n\
        failException: \"AssertError\",\n\
\n\
        fail: function fail(message) {\n\
            var error = new Error(message);\n\
            error.name = this.failException || assert.failException;\n\
\n\
            throw error;\n\
        },\n\
\n\
        pass: function pass(assertion) {\n\
        },\n\
\n\
        callOrder: function assertCallOrder() {\n\
            verifyIsStub.apply(null, arguments);\n\
            var expected = \"\", actual = \"\";\n\
\n\
            if (!sinon.calledInOrder(arguments)) {\n\
                try {\n\
                    expected = [].join.call(arguments, \", \");\n\
                    var calls = slice.call(arguments);\n\
                    var i = calls.length;\n\
                    while (i) {\n\
                        if (!calls[--i].called) {\n\
                            calls.splice(i, 1);\n\
                        }\n\
                    }\n\
                    actual = sinon.orderByFirstCall(calls).join(\", \");\n\
                } catch (e) {\n\
                    // If this fails, we'll just fall back to the blank string\n\
                }\n\
\n\
                failAssertion(this, \"expected \" + expected + \" to be \" +\n\
                    \"called in order but were called as \" + actual);\n\
            } else {\n\
                assert.pass(\"callOrder\");\n\
            }\n\
        },\n\
\n\
        callCount: function assertCallCount(method, count) {\n\
            verifyIsStub(method);\n\
\n\
            if (method.callCount != count) {\n\
                var msg = \"expected %n to be called \" + sinon.timesInWords(count) +\n\
                    \" but was called %c%C\";\n\
                failAssertion(this, method.printf(msg));\n\
            } else {\n\
                assert.pass(\"callCount\");\n\
            }\n\
        },\n\
\n\
        expose: function expose(target, options) {\n\
            if (!target) {\n\
                throw new TypeError(\"target is null or undefined\");\n\
            }\n\
\n\
            var o = options || {};\n\
            var prefix = typeof o.prefix == \"undefined\" && \"assert\" || o.prefix;\n\
            var includeFail = typeof o.includeFail == \"undefined\" || !!o.includeFail;\n\
\n\
            for (var method in this) {\n\
                if (method != \"export\" && (includeFail || !/^(fail)/.test(method))) {\n\
                    target[exposedName(prefix, method)] = this[method];\n\
                }\n\
            }\n\
\n\
            return target;\n\
        }\n\
    };\n\
\n\
    mirrorPropAsAssertion(\"called\", \"expected %n to have been called at least once but was never called\");\n\
    mirrorPropAsAssertion(\"notCalled\", function (spy) {\n\
            return !spy.called;\n\
        },\n\
        \"expected %n to not have been called but was called %c%C\");\n\
    mirrorPropAsAssertion(\"calledOnce\", \"expected %n to be called once but was called %c%C\");\n\
    mirrorPropAsAssertion(\"calledTwice\", \"expected %n to be called twice but was called %c%C\");\n\
    mirrorPropAsAssertion(\"calledThrice\", \"expected %n to be called thrice but was called %c%C\");\n\
    mirrorPropAsAssertion(\"calledOn\", \"expected %n to be called with %1 as this but was called with %t\");\n\
    mirrorPropAsAssertion(\"alwaysCalledOn\", \"expected %n to always be called with %1 as this but was called with %t\");\n\
    mirrorPropAsAssertion(\"calledWithNew\", \"expected %n to be called with new\");\n\
    mirrorPropAsAssertion(\"alwaysCalledWithNew\", \"expected %n to always be called with new\");\n\
    mirrorPropAsAssertion(\"calledWith\", \"expected %n to be called with arguments %*%C\");\n\
    mirrorPropAsAssertion(\"calledWithMatch\", \"expected %n to be called with match %*%C\");\n\
    mirrorPropAsAssertion(\"alwaysCalledWith\", \"expected %n to always be called with arguments %*%C\");\n\
    mirrorPropAsAssertion(\"alwaysCalledWithMatch\", \"expected %n to always be called with match %*%C\");\n\
    mirrorPropAsAssertion(\"calledWithExactly\", \"expected %n to be called with exact arguments %*%C\");\n\
    mirrorPropAsAssertion(\"alwaysCalledWithExactly\", \"expected %n to always be called with exact arguments %*%C\");\n\
    mirrorPropAsAssertion(\"neverCalledWith\", \"expected %n to never be called with arguments %*%C\");\n\
    mirrorPropAsAssertion(\"neverCalledWithMatch\", \"expected %n to never be called with match %*%C\");\n\
    mirrorPropAsAssertion(\"threw\", \"%n did not throw exception%C\");\n\
    mirrorPropAsAssertion(\"alwaysThrew\", \"%n did not always throw exception%C\");\n\
\n\
    return assert;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/assert.js"
));
require.register("johntron-sinon/lib/sinon/match.js", Function("exports, require, module",
"module.exports = function(sinon) {\n\
\n\
    function assertType(value, type, name) {\n\
        var actual = sinon.typeOf(value);\n\
        if (actual !== type) {\n\
            throw new TypeError(\"Expected type of \" + name + \" to be \" +\n\
                type + \", but was \" + actual);\n\
        }\n\
    }\n\
\n\
    var matcher = {\n\
        toString: function () {\n\
            return this.message;\n\
        }\n\
    };\n\
\n\
    function isMatcher(object) {\n\
        return matcher.isPrototypeOf(object);\n\
    }\n\
\n\
    function matchObject(expectation, actual) {\n\
        if (actual === null || actual === undefined) {\n\
            return false;\n\
        }\n\
        for (var key in expectation) {\n\
            if (expectation.hasOwnProperty(key)) {\n\
                var exp = expectation[key];\n\
                var act = actual[key];\n\
                if (match.isMatcher(exp)) {\n\
                    if (!exp.test(act)) {\n\
                        return false;\n\
                    }\n\
                } else if (sinon.typeOf(exp) === \"object\") {\n\
                    if (!matchObject(exp, act)) {\n\
                        return false;\n\
                    }\n\
                } else if (!sinon.deepEqual(exp, act)) {\n\
                    return false;\n\
                }\n\
            }\n\
        }\n\
        return true;\n\
    }\n\
\n\
    matcher.or = function (m2) {\n\
        if (!isMatcher(m2)) {\n\
            throw new TypeError(\"Matcher expected\");\n\
        }\n\
        var m1 = this;\n\
        var or = sinon.create(matcher);\n\
        or.test = function (actual) {\n\
            return m1.test(actual) || m2.test(actual);\n\
        };\n\
        or.message = m1.message + \".or(\" + m2.message + \")\";\n\
        return or;\n\
    };\n\
\n\
    matcher.and = function (m2) {\n\
        if (!isMatcher(m2)) {\n\
            throw new TypeError(\"Matcher expected\");\n\
        }\n\
        var m1 = this;\n\
        var and = sinon.create(matcher);\n\
        and.test = function (actual) {\n\
            return m1.test(actual) && m2.test(actual);\n\
        };\n\
        and.message = m1.message + \".and(\" + m2.message + \")\";\n\
        return and;\n\
    };\n\
\n\
    var match = function (expectation, message) {\n\
        var m = sinon.create(matcher);\n\
        var type = sinon.typeOf(expectation);\n\
        switch (type) {\n\
        case \"object\":\n\
            if (typeof expectation.test === \"function\") {\n\
                m.test = function (actual) {\n\
                    return expectation.test(actual) === true;\n\
                };\n\
                m.message = \"match(\" + sinon.functionName(expectation.test) + \")\";\n\
                return m;\n\
            }\n\
            var str = [];\n\
            for (var key in expectation) {\n\
                if (expectation.hasOwnProperty(key)) {\n\
                    str.push(key + \": \" + expectation[key]);\n\
                }\n\
            }\n\
            m.test = function (actual) {\n\
                return matchObject(expectation, actual);\n\
            };\n\
            m.message = \"match(\" + str.join(\", \") + \")\";\n\
            break;\n\
        case \"number\":\n\
            m.test = function (actual) {\n\
                return expectation == actual;\n\
            };\n\
            break;\n\
        case \"string\":\n\
            m.test = function (actual) {\n\
                if (typeof actual !== \"string\") {\n\
                    return false;\n\
                }\n\
                return actual.indexOf(expectation) !== -1;\n\
            };\n\
            m.message = \"match(\\\"\" + expectation + \"\\\")\";\n\
            break;\n\
        case \"regexp\":\n\
            m.test = function (actual) {\n\
                if (typeof actual !== \"string\") {\n\
                    return false;\n\
                }\n\
                return expectation.test(actual);\n\
            };\n\
            break;\n\
        case \"function\":\n\
            m.test = expectation;\n\
            if (message) {\n\
                m.message = message;\n\
            } else {\n\
                m.message = \"match(\" + sinon.functionName(expectation) + \")\";\n\
            }\n\
            break;\n\
        default:\n\
            m.test = function (actual) {\n\
              return sinon.deepEqual(expectation, actual);\n\
            };\n\
        }\n\
        if (!m.message) {\n\
            m.message = \"match(\" + expectation + \")\";\n\
        }\n\
        return m;\n\
    };\n\
\n\
    match.isMatcher = isMatcher;\n\
\n\
    match.any = match(function () {\n\
        return true;\n\
    }, \"any\");\n\
\n\
    match.defined = match(function (actual) {\n\
        return actual !== null && actual !== undefined;\n\
    }, \"defined\");\n\
\n\
    match.truthy = match(function (actual) {\n\
        return !!actual;\n\
    }, \"truthy\");\n\
\n\
    match.falsy = match(function (actual) {\n\
        return !actual;\n\
    }, \"falsy\");\n\
\n\
    match.same = function (expectation) {\n\
        return match(function (actual) {\n\
            return expectation === actual;\n\
        }, \"same(\" + expectation + \")\");\n\
    };\n\
\n\
    match.typeOf = function (type) {\n\
        assertType(type, \"string\", \"type\");\n\
        return match(function (actual) {\n\
            return sinon.typeOf(actual) === type;\n\
        }, \"typeOf(\\\"\" + type + \"\\\")\");\n\
    };\n\
\n\
    match.instanceOf = function (type) {\n\
        assertType(type, \"function\", \"type\");\n\
        return match(function (actual) {\n\
            return actual instanceof type;\n\
        }, \"instanceOf(\" + sinon.functionName(type) + \")\");\n\
    };\n\
\n\
    function createPropertyMatcher(propertyTest, messagePrefix) {\n\
        return function (property, value) {\n\
            assertType(property, \"string\", \"property\");\n\
            var onlyProperty = arguments.length === 1;\n\
            var message = messagePrefix + \"(\\\"\" + property + \"\\\"\";\n\
            if (!onlyProperty) {\n\
                message += \", \" + value;\n\
            }\n\
            message += \")\";\n\
            return match(function (actual) {\n\
                if (actual === undefined || actual === null ||\n\
                        !propertyTest(actual, property)) {\n\
                    return false;\n\
                }\n\
                return onlyProperty || sinon.deepEqual(value, actual[property]);\n\
            }, message);\n\
        };\n\
    }\n\
\n\
    match.has = createPropertyMatcher(function (actual, property) {\n\
        if (typeof actual === \"object\") {\n\
            return property in actual;\n\
        }\n\
        return actual[property] !== undefined;\n\
    }, \"has\");\n\
\n\
    match.hasOwn = createPropertyMatcher(function (actual, property) {\n\
        return actual.hasOwnProperty(property);\n\
    }, \"hasOwn\");\n\
\n\
    match.bool = match.typeOf(\"boolean\");\n\
    match.number = match.typeOf(\"number\");\n\
    match.string = match.typeOf(\"string\");\n\
    match.object = match.typeOf(\"object\");\n\
    match.func = match.typeOf(\"function\");\n\
    match.array = match.typeOf(\"array\");\n\
    match.regexp = match.typeOf(\"regexp\");\n\
    match.date = match.typeOf(\"date\");\n\
\n\
    return match;\n\
}//@ sourceURL=johntron-sinon/lib/sinon/match.js"
));
require.register("johntron-sinon/lib/sinon/util/event.js", Function("exports, require, module",
"/*jslint eqeqeq: false, onevar: false*/\n\
/*global sinon, module, require, ActiveXObject, XMLHttpRequest, DOMParser*/\n\
/**\n\
 * Minimal Event interface implementation\n\
 *\n\
 * Original implementation by Sven Fuchs: https://gist.github.com/995028\n\
 * Modifications and tests by Christian Johansen.\n\
 *\n\
 * @author Sven Fuchs (svenfuchs@artweb-design.de)\n\
 * @author Christian Johansen (christian@cjohansen.no)\n\
 * @license BSD\n\
 *\n\
 * Copyright (c) 2011 Sven Fuchs, Christian Johansen\n\
 */\n\
\"use strict\";\n\
\n\
if (typeof sinon == \"undefined\") {\n\
    this.sinon = {};\n\
}\n\
\n\
(function () {\n\
    var push = [].push;\n\
\n\
    sinon.Event = function Event(type, bubbles, cancelable, target) {\n\
        this.initEvent(type, bubbles, cancelable, target);\n\
    };\n\
\n\
    sinon.Event.prototype = {\n\
        initEvent: function(type, bubbles, cancelable, target) {\n\
            this.type = type;\n\
            this.bubbles = bubbles;\n\
            this.cancelable = cancelable;\n\
            this.target = target;\n\
        },\n\
\n\
        stopPropagation: function () {},\n\
\n\
        preventDefault: function () {\n\
            this.defaultPrevented = true;\n\
        }\n\
    };\n\
\n\
    sinon.EventTarget = {\n\
        addEventListener: function addEventListener(event, listener, useCapture) {\n\
            this.eventListeners = this.eventListeners || {};\n\
            this.eventListeners[event] = this.eventListeners[event] || [];\n\
            push.call(this.eventListeners[event], listener);\n\
        },\n\
\n\
        removeEventListener: function removeEventListener(event, listener, useCapture) {\n\
            var listeners = this.eventListeners && this.eventListeners[event] || [];\n\
\n\
            for (var i = 0, l = listeners.length; i < l; ++i) {\n\
                if (listeners[i] == listener) {\n\
                    return listeners.splice(i, 1);\n\
                }\n\
            }\n\
        },\n\
\n\
        dispatchEvent: function dispatchEvent(event) {\n\
            var type = event.type;\n\
            var listeners = this.eventListeners && this.eventListeners[type] || [];\n\
\n\
            for (var i = 0; i < listeners.length; i++) {\n\
                if (typeof listeners[i] == \"function\") {\n\
                    listeners[i].call(this, event);\n\
                } else {\n\
                    listeners[i].handleEvent(event);\n\
                }\n\
            }\n\
\n\
            return !!event.defaultPrevented;\n\
        }\n\
    };\n\
}());\n\
//@ sourceURL=johntron-sinon/lib/sinon/util/event.js"
));
require.register("johntron-sinon/lib/sinon/util/fake_server.js", Function("exports, require, module",
"/**\n\
 * @depend fake_xml_http_request.js\n\
 */\n\
/*jslint eqeqeq: false, onevar: false, regexp: false, plusplus: false*/\n\
/*global module, require, window*/\n\
/**\n\
 * The Sinon \"server\" mimics a web server that receives requests from\n\
 * sinon.FakeXMLHttpRequest and provides an API to respond to those requests,\n\
 * both synchronously and asynchronously. To respond synchronuously, canned\n\
 * answers have to be provided upfront.\n\
 *\n\
 * @author Christian Johansen (christian@cjohansen.no)\n\
 * @license BSD\n\
 *\n\
 * Copyright (c) 2010-2013 Christian Johansen\n\
 */\n\
\"use strict\";\n\
\n\
if (typeof sinon == \"undefined\") {\n\
    var sinon = {};\n\
}\n\
\n\
sinon.fakeServer = (function () {\n\
    var push = [].push;\n\
    function F() {}\n\
\n\
    function create(proto) {\n\
        F.prototype = proto;\n\
        return new F();\n\
    }\n\
\n\
    function responseArray(handler) {\n\
        var response = handler;\n\
\n\
        if (Object.prototype.toString.call(handler) != \"[object Array]\") {\n\
            response = [200, {}, handler];\n\
        }\n\
\n\
        if (typeof response[2] != \"string\") {\n\
            throw new TypeError(\"Fake server response body should be string, but was \" +\n\
                                typeof response[2]);\n\
        }\n\
\n\
        return response;\n\
    }\n\
\n\
    var wloc = typeof window !== \"undefined\" ? window.location : {};\n\
    var rCurrLoc = new RegExp(\"^\" + wloc.protocol + \"//\" + wloc.host);\n\
\n\
    function matchOne(response, reqMethod, reqUrl) {\n\
        var rmeth = response.method;\n\
        var matchMethod = !rmeth || rmeth.toLowerCase() == reqMethod.toLowerCase();\n\
        var url = response.url;\n\
        var matchUrl = !url || url == reqUrl || (typeof url.test == \"function\" && url.test(reqUrl));\n\
\n\
        return matchMethod && matchUrl;\n\
    }\n\
\n\
    function match(response, request) {\n\
        var requestMethod = this.getHTTPMethod(request);\n\
        var requestUrl = request.url;\n\
\n\
        if (!/^https?:\\/\\//.test(requestUrl) || rCurrLoc.test(requestUrl)) {\n\
            requestUrl = requestUrl.replace(rCurrLoc, \"\");\n\
        }\n\
\n\
        if (matchOne(response, this.getHTTPMethod(request), requestUrl)) {\n\
            if (typeof response.response == \"function\") {\n\
                var ru = response.url;\n\
                var args = [request].concat(ru && typeof ru.exec == \"function\" ? ru.exec(requestUrl).slice(1) : []);\n\
                return response.response.apply(response, args);\n\
            }\n\
\n\
            return true;\n\
        }\n\
\n\
        return false;\n\
    }\n\
\n\
    function log(response, request) {\n\
        var str;\n\
\n\
        str =  \"Request:\\n\
\"  + sinon.format(request)  + \"\\n\
\\n\
\";\n\
        str += \"Response:\\n\
\" + sinon.format(response) + \"\\n\
\\n\
\";\n\
\n\
        sinon.log(str);\n\
    }\n\
\n\
    return {\n\
        create: function () {\n\
            var server = create(this);\n\
            this.xhr = sinon.useFakeXMLHttpRequest();\n\
            server.requests = [];\n\
\n\
            this.xhr.onCreate = function (xhrObj) {\n\
                server.addRequest(xhrObj);\n\
            };\n\
\n\
            return server;\n\
        },\n\
\n\
        addRequest: function addRequest(xhrObj) {\n\
            var server = this;\n\
            push.call(this.requests, xhrObj);\n\
\n\
            xhrObj.onSend = function () {\n\
                server.handleRequest(this);\n\
            };\n\
\n\
            if (this.autoRespond && !this.responding) {\n\
                setTimeout(function () {\n\
                    server.responding = false;\n\
                    server.respond();\n\
                }, this.autoRespondAfter || 10);\n\
\n\
                this.responding = true;\n\
            }\n\
        },\n\
\n\
        getHTTPMethod: function getHTTPMethod(request) {\n\
            if (this.fakeHTTPMethods && /post/i.test(request.method)) {\n\
                var matches = (request.requestBody || \"\").match(/_method=([^\\b;]+)/);\n\
                return !!matches ? matches[1] : request.method;\n\
            }\n\
\n\
            return request.method;\n\
        },\n\
\n\
        handleRequest: function handleRequest(xhr) {\n\
            if (xhr.async) {\n\
                if (!this.queue) {\n\
                    this.queue = [];\n\
                }\n\
\n\
                push.call(this.queue, xhr);\n\
            } else {\n\
                this.processRequest(xhr);\n\
            }\n\
        },\n\
\n\
        respondWith: function respondWith(method, url, body) {\n\
            if (arguments.length == 1 && typeof method != \"function\") {\n\
                this.response = responseArray(method);\n\
                return;\n\
            }\n\
\n\
            if (!this.responses) { this.responses = []; }\n\
\n\
            if (arguments.length == 1) {\n\
                body = method;\n\
                url = method = null;\n\
            }\n\
\n\
            if (arguments.length == 2) {\n\
                body = url;\n\
                url = method;\n\
                method = null;\n\
            }\n\
\n\
            push.call(this.responses, {\n\
                method: method,\n\
                url: url,\n\
                response: typeof body == \"function\" ? body : responseArray(body)\n\
            });\n\
        },\n\
\n\
        respond: function respond() {\n\
            if (arguments.length > 0) this.respondWith.apply(this, arguments);\n\
            var queue = this.queue || [];\n\
            var request;\n\
\n\
            while(request = queue.shift()) {\n\
                this.processRequest(request);\n\
            }\n\
        },\n\
\n\
        processRequest: function processRequest(request) {\n\
            try {\n\
                if (request.aborted) {\n\
                    return;\n\
                }\n\
\n\
                var response = this.response || [404, {}, \"\"];\n\
\n\
                if (this.responses) {\n\
                    for (var i = 0, l = this.responses.length; i < l; i++) {\n\
                        if (match.call(this, this.responses[i], request)) {\n\
                            response = this.responses[i].response;\n\
                            break;\n\
                        }\n\
                    }\n\
                }\n\
\n\
                if (request.readyState != 4) {\n\
                    log(response, request);\n\
\n\
                    request.respond(response[0], response[1], response[2]);\n\
                }\n\
            } catch (e) {\n\
                sinon.logError(\"Fake server request processing\", e);\n\
            }\n\
        },\n\
\n\
        restore: function restore() {\n\
            return this.xhr.restore && this.xhr.restore.apply(this.xhr, arguments);\n\
        }\n\
    };\n\
}());\n\
\n\
if (typeof module !== 'undefined' && module.exports) {\n\
    module.exports = sinon;\n\
}\n\
//@ sourceURL=johntron-sinon/lib/sinon/util/fake_server.js"
));
require.register("johntron-sinon/lib/sinon/util/fake_server_with_clock.js", Function("exports, require, module",
"/**\n\
 * @depend fake_server.js\n\
 * @depend fake_timers.js\n\
 */\n\
/*jslint browser: true, eqeqeq: false, onevar: false*/\n\
/*global sinon*/\n\
/**\n\
 * Add-on for sinon.fakeServer that automatically handles a fake timer along with\n\
 * the FakeXMLHttpRequest. The direct inspiration for this add-on is jQuery\n\
 * 1.3.x, which does not use xhr object's onreadystatehandler at all - instead,\n\
 * it polls the object for completion with setInterval. Dispite the direct\n\
 * motivation, there is nothing jQuery-specific in this file, so it can be used\n\
 * in any environment where the ajax implementation depends on setInterval or\n\
 * setTimeout.\n\
 *\n\
 * @author Christian Johansen (christian@cjohansen.no)\n\
 * @license BSD\n\
 *\n\
 * Copyright (c) 2010-2013 Christian Johansen\n\
 */\n\
\"use strict\";\n\
\n\
(function () {\n\
    function Server() {}\n\
    Server.prototype = sinon.fakeServer;\n\
\n\
    sinon.fakeServerWithClock = new Server();\n\
\n\
    sinon.fakeServerWithClock.addRequest = function addRequest(xhr) {\n\
        if (xhr.async) {\n\
            if (typeof setTimeout.clock == \"object\") {\n\
                this.clock = setTimeout.clock;\n\
            } else {\n\
                this.clock = sinon.useFakeTimers();\n\
                this.resetClock = true;\n\
            }\n\
\n\
            if (!this.longestTimeout) {\n\
                var clockSetTimeout = this.clock.setTimeout;\n\
                var clockSetInterval = this.clock.setInterval;\n\
                var server = this;\n\
\n\
                this.clock.setTimeout = function (fn, timeout) {\n\
                    server.longestTimeout = Math.max(timeout, server.longestTimeout || 0);\n\
\n\
                    return clockSetTimeout.apply(this, arguments);\n\
                };\n\
\n\
                this.clock.setInterval = function (fn, timeout) {\n\
                    server.longestTimeout = Math.max(timeout, server.longestTimeout || 0);\n\
\n\
                    return clockSetInterval.apply(this, arguments);\n\
                };\n\
            }\n\
        }\n\
\n\
        return sinon.fakeServer.addRequest.call(this, xhr);\n\
    };\n\
\n\
    sinon.fakeServerWithClock.respond = function respond() {\n\
        var returnVal = sinon.fakeServer.respond.apply(this, arguments);\n\
\n\
        if (this.clock) {\n\
            this.clock.tick(this.longestTimeout || 0);\n\
            this.longestTimeout = 0;\n\
\n\
            if (this.resetClock) {\n\
                this.clock.restore();\n\
                this.resetClock = false;\n\
            }\n\
        }\n\
\n\
        return returnVal;\n\
    };\n\
\n\
    sinon.fakeServerWithClock.restore = function restore() {\n\
        if (this.clock) {\n\
            this.clock.restore();\n\
        }\n\
\n\
        return sinon.fakeServer.restore.apply(this, arguments);\n\
    };\n\
}());\n\
//@ sourceURL=johntron-sinon/lib/sinon/util/fake_server_with_clock.js"
));
require.register("johntron-sinon/lib/sinon/util/fake_timers.js", Function("exports, require, module",
"/*jslint eqeqeq: false, plusplus: false, evil: true, onevar: false, browser: true, forin: false*/\n\
/*global module, require, window*/\n\
/**\n\
 * Fake timer API\n\
 * setTimeout\n\
 * setInterval\n\
 * clearTimeout\n\
 * clearInterval\n\
 * tick\n\
 * reset\n\
 * Date\n\
 *\n\
 * Inspired by jsUnitMockTimeOut from JsUnit\n\
 *\n\
 * @author Christian Johansen (christian@cjohansen.no)\n\
 * @license BSD\n\
 *\n\
 * Copyright (c) 2010-2013 Christian Johansen\n\
 */\n\
\"use strict\";\n\
\n\
if (typeof sinon == \"undefined\") {\n\
    var sinon = {};\n\
}\n\
\n\
(function (global) {\n\
    var id = 1;\n\
\n\
    function addTimer(args, recurring) {\n\
        if (args.length === 0) {\n\
            throw new Error(\"Function requires at least 1 parameter\");\n\
        }\n\
\n\
        var toId = id++;\n\
        var delay = args[1] || 0;\n\
\n\
        if (!this.timeouts) {\n\
            this.timeouts = {};\n\
        }\n\
\n\
        this.timeouts[toId] = {\n\
            id: toId,\n\
            func: args[0],\n\
            callAt: this.now + delay,\n\
            invokeArgs: Array.prototype.slice.call(args, 2)\n\
        };\n\
\n\
        if (recurring === true) {\n\
            this.timeouts[toId].interval = delay;\n\
        }\n\
\n\
        return toId;\n\
    }\n\
\n\
    function parseTime(str) {\n\
        if (!str) {\n\
            return 0;\n\
        }\n\
\n\
        var strings = str.split(\":\");\n\
        var l = strings.length, i = l;\n\
        var ms = 0, parsed;\n\
\n\
        if (l > 3 || !/^(\\d\\d:){0,2}\\d\\d?$/.test(str)) {\n\
            throw new Error(\"tick only understands numbers and 'h:m:s'\");\n\
        }\n\
\n\
        while (i--) {\n\
            parsed = parseInt(strings[i], 10);\n\
\n\
            if (parsed >= 60) {\n\
                throw new Error(\"Invalid time \" + str);\n\
            }\n\
\n\
            ms += parsed * Math.pow(60, (l - i - 1));\n\
        }\n\
\n\
        return ms * 1000;\n\
    }\n\
\n\
    function createObject(object) {\n\
        var newObject;\n\
\n\
        if (Object.create) {\n\
            newObject = Object.create(object);\n\
        } else {\n\
            var F = function () {};\n\
            F.prototype = object;\n\
            newObject = new F();\n\
        }\n\
\n\
        newObject.Date.clock = newObject;\n\
        return newObject;\n\
    }\n\
\n\
    sinon.clock = {\n\
        now: 0,\n\
\n\
        create: function create(now) {\n\
            var clock = createObject(this);\n\
\n\
            if (typeof now == \"number\") {\n\
                clock.now = now;\n\
            }\n\
\n\
            if (!!now && typeof now == \"object\") {\n\
                throw new TypeError(\"now should be milliseconds since UNIX epoch\");\n\
            }\n\
\n\
            return clock;\n\
        },\n\
\n\
        setTimeout: function setTimeout(callback, timeout) {\n\
            return addTimer.call(this, arguments, false);\n\
        },\n\
\n\
        clearTimeout: function clearTimeout(timerId) {\n\
            if (!this.timeouts) {\n\
                this.timeouts = [];\n\
            }\n\
\n\
            if (timerId in this.timeouts) {\n\
                delete this.timeouts[timerId];\n\
            }\n\
        },\n\
\n\
        setInterval: function setInterval(callback, timeout) {\n\
            return addTimer.call(this, arguments, true);\n\
        },\n\
\n\
        clearInterval: function clearInterval(timerId) {\n\
            this.clearTimeout(timerId);\n\
        },\n\
\n\
        tick: function tick(ms) {\n\
            ms = typeof ms == \"number\" ? ms : parseTime(ms);\n\
            var tickFrom = this.now, tickTo = this.now + ms, previous = this.now;\n\
            var timer = this.firstTimerInRange(tickFrom, tickTo);\n\
\n\
            var firstException;\n\
            while (timer && tickFrom <= tickTo) {\n\
                if (this.timeouts[timer.id]) {\n\
                    tickFrom = this.now = timer.callAt;\n\
                    try {\n\
                      this.callTimer(timer);\n\
                    } catch (e) {\n\
                      firstException = firstException || e;\n\
                    }\n\
                }\n\
\n\
                timer = this.firstTimerInRange(previous, tickTo);\n\
                previous = tickFrom;\n\
            }\n\
\n\
            this.now = tickTo;\n\
\n\
            if (firstException) {\n\
              throw firstException;\n\
            }\n\
\n\
            return this.now;\n\
        },\n\
\n\
        firstTimerInRange: function (from, to) {\n\
            var timer, smallest, originalTimer;\n\
\n\
            for (var id in this.timeouts) {\n\
                if (this.timeouts.hasOwnProperty(id)) {\n\
                    if (this.timeouts[id].callAt < from || this.timeouts[id].callAt > to) {\n\
                        continue;\n\
                    }\n\
\n\
                    if (!smallest || this.timeouts[id].callAt < smallest) {\n\
                        originalTimer = this.timeouts[id];\n\
                        smallest = this.timeouts[id].callAt;\n\
\n\
                        timer = {\n\
                            func: this.timeouts[id].func,\n\
                            callAt: this.timeouts[id].callAt,\n\
                            interval: this.timeouts[id].interval,\n\
                            id: this.timeouts[id].id,\n\
                            invokeArgs: this.timeouts[id].invokeArgs\n\
                        };\n\
                    }\n\
                }\n\
            }\n\
\n\
            return timer || null;\n\
        },\n\
\n\
        callTimer: function (timer) {\n\
            if (typeof timer.interval == \"number\") {\n\
                this.timeouts[timer.id].callAt += timer.interval;\n\
            } else {\n\
                delete this.timeouts[timer.id];\n\
            }\n\
\n\
            try {\n\
                if (typeof timer.func == \"function\") {\n\
                    timer.func.apply(null, timer.invokeArgs);\n\
                } else {\n\
                    eval(timer.func);\n\
                }\n\
            } catch (e) {\n\
              var exception = e;\n\
            }\n\
\n\
            if (!this.timeouts[timer.id]) {\n\
                if (exception) {\n\
                  throw exception;\n\
                }\n\
                return;\n\
            }\n\
\n\
            if (exception) {\n\
              throw exception;\n\
            }\n\
        },\n\
\n\
        reset: function reset() {\n\
            this.timeouts = {};\n\
        },\n\
\n\
        Date: (function () {\n\
            var NativeDate = Date;\n\
\n\
            function ClockDate(year, month, date, hour, minute, second, ms) {\n\
                // Defensive and verbose to avoid potential harm in passing\n\
                // explicit undefined when user does not pass argument\n\
                switch (arguments.length) {\n\
                case 0:\n\
                    return new NativeDate(ClockDate.clock.now);\n\
                case 1:\n\
                    return new NativeDate(year);\n\
                case 2:\n\
                    return new NativeDate(year, month);\n\
                case 3:\n\
                    return new NativeDate(year, month, date);\n\
                case 4:\n\
                    return new NativeDate(year, month, date, hour);\n\
                case 5:\n\
                    return new NativeDate(year, month, date, hour, minute);\n\
                case 6:\n\
                    return new NativeDate(year, month, date, hour, minute, second);\n\
                default:\n\
                    return new NativeDate(year, month, date, hour, minute, second, ms);\n\
                }\n\
            }\n\
\n\
            return mirrorDateProperties(ClockDate, NativeDate);\n\
        }())\n\
    };\n\
\n\
    function mirrorDateProperties(target, source) {\n\
        if (source.now) {\n\
            target.now = function now() {\n\
                return target.clock.now;\n\
            };\n\
        } else {\n\
            delete target.now;\n\
        }\n\
\n\
        if (source.toSource) {\n\
            target.toSource = function toSource() {\n\
                return source.toSource();\n\
            };\n\
        } else {\n\
            delete target.toSource;\n\
        }\n\
\n\
        target.toString = function toString() {\n\
            return source.toString();\n\
        };\n\
\n\
        target.prototype = source.prototype;\n\
        target.parse = source.parse;\n\
        target.UTC = source.UTC;\n\
        target.prototype.toUTCString = source.prototype.toUTCString;\n\
        return target;\n\
    }\n\
\n\
    var methods = [\"Date\", \"setTimeout\", \"setInterval\",\n\
                   \"clearTimeout\", \"clearInterval\"];\n\
\n\
    function restore() {\n\
        var method;\n\
\n\
        for (var i = 0, l = this.methods.length; i < l; i++) {\n\
            method = this.methods[i];\n\
            if (global[method].hadOwnProperty) {\n\
                global[method] = this[\"_\" + method];\n\
            } else {\n\
                delete global[method];\n\
            }\n\
        }\n\
\n\
        // Prevent multiple executions which will completely remove these props\n\
        this.methods = [];\n\
    }\n\
\n\
    function stubGlobal(method, clock) {\n\
        clock[method].hadOwnProperty = Object.prototype.hasOwnProperty.call(global, method);\n\
        clock[\"_\" + method] = global[method];\n\
\n\
        if (method == \"Date\") {\n\
            var date = mirrorDateProperties(clock[method], global[method]);\n\
            global[method] = date;\n\
        } else {\n\
            global[method] = function () {\n\
                return clock[method].apply(clock, arguments);\n\
            };\n\
\n\
            for (var prop in clock[method]) {\n\
                if (clock[method].hasOwnProperty(prop)) {\n\
                    global[method][prop] = clock[method][prop];\n\
                }\n\
            }\n\
        }\n\
\n\
        global[method].clock = clock;\n\
    }\n\
\n\
    sinon.useFakeTimers = function useFakeTimers(now) {\n\
        var clock = sinon.clock.create(now);\n\
        clock.restore = restore;\n\
        clock.methods = Array.prototype.slice.call(arguments,\n\
                                                   typeof now == \"number\" ? 1 : 0);\n\
\n\
        if (clock.methods.length === 0) {\n\
            clock.methods = methods;\n\
        }\n\
\n\
        for (var i = 0, l = clock.methods.length; i < l; i++) {\n\
            stubGlobal(clock.methods[i], clock);\n\
        }\n\
\n\
        return clock;\n\
    };\n\
}(typeof global != \"undefined\" && typeof global !== \"function\" ? global : this));\n\
\n\
sinon.timers = {\n\
    setTimeout: setTimeout,\n\
    clearTimeout: clearTimeout,\n\
    setInterval: setInterval,\n\
    clearInterval: clearInterval,\n\
    Date: Date\n\
};\n\
\n\
if (typeof module !== 'undefined' && module.exports) {\n\
    module.exports = sinon;\n\
}\n\
//@ sourceURL=johntron-sinon/lib/sinon/util/fake_timers.js"
));
require.register("johntron-sinon/lib/sinon/util/fake_xml_http_request.js", Function("exports, require, module",
"/**\n\
 * @depend ../../sinon.js\n\
 * @depend event.js\n\
 */\n\
/*jslint eqeqeq: false, onevar: false*/\n\
/*global sinon, module, require, ActiveXObject, XMLHttpRequest, DOMParser*/\n\
/**\n\
 * Fake XMLHttpRequest object\n\
 *\n\
 * @author Christian Johansen (christian@cjohansen.no)\n\
 * @license BSD\n\
 *\n\
 * Copyright (c) 2010-2013 Christian Johansen\n\
 */\n\
\"use strict\";\n\
\n\
if (typeof sinon == \"undefined\") {\n\
    this.sinon = {};\n\
}\n\
sinon.xhr = { XMLHttpRequest: this.XMLHttpRequest };\n\
\n\
// wrapper for global\n\
(function(global) {\n\
    var xhr = sinon.xhr;\n\
    xhr.GlobalXMLHttpRequest = global.XMLHttpRequest;\n\
    xhr.GlobalActiveXObject = global.ActiveXObject;\n\
    xhr.supportsActiveX = typeof xhr.GlobalActiveXObject != \"undefined\";\n\
    xhr.supportsXHR = typeof xhr.GlobalXMLHttpRequest != \"undefined\";\n\
    xhr.workingXHR = xhr.supportsXHR ? xhr.GlobalXMLHttpRequest : xhr.supportsActiveX\n\
                                     ? function() { return new xhr.GlobalActiveXObject(\"MSXML2.XMLHTTP.3.0\") } : false;\n\
\n\
    /*jsl:ignore*/\n\
    var unsafeHeaders = {\n\
        \"Accept-Charset\": true,\n\
        \"Accept-Encoding\": true,\n\
        \"Connection\": true,\n\
        \"Content-Length\": true,\n\
        \"Cookie\": true,\n\
        \"Cookie2\": true,\n\
        \"Content-Transfer-Encoding\": true,\n\
        \"Date\": true,\n\
        \"Expect\": true,\n\
        \"Host\": true,\n\
        \"Keep-Alive\": true,\n\
        \"Referer\": true,\n\
        \"TE\": true,\n\
        \"Trailer\": true,\n\
        \"Transfer-Encoding\": true,\n\
        \"Upgrade\": true,\n\
        \"User-Agent\": true,\n\
        \"Via\": true\n\
    };\n\
    /*jsl:end*/\n\
\n\
    function FakeXMLHttpRequest() {\n\
        this.readyState = FakeXMLHttpRequest.UNSENT;\n\
        this.requestHeaders = {};\n\
        this.requestBody = null;\n\
        this.status = 0;\n\
        this.statusText = \"\";\n\
\n\
        var xhr = this;\n\
        var events = [\"loadstart\", \"load\", \"abort\", \"loadend\"];\n\
\n\
        function addEventListener(eventName) {\n\
            xhr.addEventListener(eventName, function (event) {\n\
                var listener = xhr[\"on\" + eventName];\n\
\n\
                if (listener && typeof listener == \"function\") {\n\
                    listener(event);\n\
                }\n\
            });\n\
        }\n\
\n\
        for (var i = events.length - 1; i >= 0; i--) {\n\
            addEventListener(events[i]);\n\
        }\n\
\n\
        if (typeof FakeXMLHttpRequest.onCreate == \"function\") {\n\
            FakeXMLHttpRequest.onCreate(this);\n\
        }\n\
    }\n\
\n\
    function verifyState(xhr) {\n\
        if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n\
            throw new Error(\"INVALID_STATE_ERR\");\n\
        }\n\
\n\
        if (xhr.sendFlag) {\n\
            throw new Error(\"INVALID_STATE_ERR\");\n\
        }\n\
    }\n\
\n\
    // filtering to enable a white-list version of Sinon FakeXhr,\n\
    // where whitelisted requests are passed through to real XHR\n\
    function each(collection, callback) {\n\
        if (!collection) return;\n\
        for (var i = 0, l = collection.length; i < l; i += 1) {\n\
            callback(collection[i]);\n\
        }\n\
    }\n\
    function some(collection, callback) {\n\
        for (var index = 0; index < collection.length; index++) {\n\
            if(callback(collection[index]) === true) return true;\n\
        };\n\
        return false;\n\
    }\n\
    // largest arity in XHR is 5 - XHR#open\n\
    var apply = function(obj,method,args) {\n\
        switch(args.length) {\n\
        case 0: return obj[method]();\n\
        case 1: return obj[method](args[0]);\n\
        case 2: return obj[method](args[0],args[1]);\n\
        case 3: return obj[method](args[0],args[1],args[2]);\n\
        case 4: return obj[method](args[0],args[1],args[2],args[3]);\n\
        case 5: return obj[method](args[0],args[1],args[2],args[3],args[4]);\n\
        };\n\
    };\n\
\n\
    FakeXMLHttpRequest.filters = [];\n\
    FakeXMLHttpRequest.addFilter = function(fn) {\n\
        this.filters.push(fn)\n\
    };\n\
    var IE6Re = /MSIE 6/;\n\
    FakeXMLHttpRequest.defake = function(fakeXhr,xhrArgs) {\n\
        var xhr = new sinon.xhr.workingXHR();\n\
        each([\"open\",\"setRequestHeader\",\"send\",\"abort\",\"getResponseHeader\",\n\
              \"getAllResponseHeaders\",\"addEventListener\",\"overrideMimeType\",\"removeEventListener\"],\n\
             function(method) {\n\
                 fakeXhr[method] = function() {\n\
                   return apply(xhr,method,arguments);\n\
                 };\n\
             });\n\
\n\
        var copyAttrs = function(args) {\n\
            each(args, function(attr) {\n\
              try {\n\
                fakeXhr[attr] = xhr[attr]\n\
              } catch(e) {\n\
                if(!IE6Re.test(navigator.userAgent)) throw e;\n\
              }\n\
            });\n\
        };\n\
\n\
        var stateChange = function() {\n\
            fakeXhr.readyState = xhr.readyState;\n\
            if(xhr.readyState >= FakeXMLHttpRequest.HEADERS_RECEIVED) {\n\
                copyAttrs([\"status\",\"statusText\"]);\n\
            }\n\
            if(xhr.readyState >= FakeXMLHttpRequest.LOADING) {\n\
                copyAttrs([\"responseText\"]);\n\
            }\n\
            if(xhr.readyState === FakeXMLHttpRequest.DONE) {\n\
                copyAttrs([\"responseXML\"]);\n\
            }\n\
            if(fakeXhr.onreadystatechange) fakeXhr.onreadystatechange.call(fakeXhr);\n\
        };\n\
        if(xhr.addEventListener) {\n\
          for(var event in fakeXhr.eventListeners) {\n\
              if(fakeXhr.eventListeners.hasOwnProperty(event)) {\n\
                  each(fakeXhr.eventListeners[event],function(handler) {\n\
                      xhr.addEventListener(event, handler);\n\
                  });\n\
              }\n\
          }\n\
          xhr.addEventListener(\"readystatechange\",stateChange);\n\
        } else {\n\
          xhr.onreadystatechange = stateChange;\n\
        }\n\
        apply(xhr,\"open\",xhrArgs);\n\
    };\n\
    FakeXMLHttpRequest.useFilters = false;\n\
\n\
    function verifyRequestSent(xhr) {\n\
        if (xhr.readyState == FakeXMLHttpRequest.DONE) {\n\
            throw new Error(\"Request done\");\n\
        }\n\
    }\n\
\n\
    function verifyHeadersReceived(xhr) {\n\
        if (xhr.async && xhr.readyState != FakeXMLHttpRequest.HEADERS_RECEIVED) {\n\
            throw new Error(\"No headers received\");\n\
        }\n\
    }\n\
\n\
    function verifyResponseBodyType(body) {\n\
        if (typeof body != \"string\") {\n\
            var error = new Error(\"Attempted to respond to fake XMLHttpRequest with \" +\n\
                                 body + \", which is not a string.\");\n\
            error.name = \"InvalidBodyException\";\n\
            throw error;\n\
        }\n\
    }\n\
\n\
    sinon.extend(FakeXMLHttpRequest.prototype, sinon.EventTarget, {\n\
        async: true,\n\
\n\
        open: function open(method, url, async, username, password) {\n\
            this.method = method;\n\
            this.url = url;\n\
            this.async = typeof async == \"boolean\" ? async : true;\n\
            this.username = username;\n\
            this.password = password;\n\
            this.responseText = null;\n\
            this.responseXML = null;\n\
            this.requestHeaders = {};\n\
            this.sendFlag = false;\n\
            if(sinon.FakeXMLHttpRequest.useFilters === true) {\n\
                var xhrArgs = arguments;\n\
                var defake = some(FakeXMLHttpRequest.filters,function(filter) {\n\
                    return filter.apply(this,xhrArgs)\n\
                });\n\
                if (defake) {\n\
                  return sinon.FakeXMLHttpRequest.defake(this,arguments);\n\
                }\n\
            }\n\
            this.readyStateChange(FakeXMLHttpRequest.OPENED);\n\
        },\n\
\n\
        readyStateChange: function readyStateChange(state) {\n\
            this.readyState = state;\n\
\n\
            if (typeof this.onreadystatechange == \"function\") {\n\
                try {\n\
                    this.onreadystatechange();\n\
                } catch (e) {\n\
                    sinon.logError(\"Fake XHR onreadystatechange handler\", e);\n\
                }\n\
            }\n\
\n\
            this.dispatchEvent(new sinon.Event(\"readystatechange\"));\n\
\n\
            switch (this.readyState) {\n\
                case FakeXMLHttpRequest.DONE:\n\
                    this.dispatchEvent(new sinon.Event(\"load\", false, false, this));\n\
                    this.dispatchEvent(new sinon.Event(\"loadend\", false, false, this));\n\
                    break;\n\
            }\n\
        },\n\
\n\
        setRequestHeader: function setRequestHeader(header, value) {\n\
            verifyState(this);\n\
\n\
            if (unsafeHeaders[header] || /^(Sec-|Proxy-)/.test(header)) {\n\
                throw new Error(\"Refused to set unsafe header \\\"\" + header + \"\\\"\");\n\
            }\n\
\n\
            if (this.requestHeaders[header]) {\n\
                this.requestHeaders[header] += \",\" + value;\n\
            } else {\n\
                this.requestHeaders[header] = value;\n\
            }\n\
        },\n\
\n\
        // Helps testing\n\
        setResponseHeaders: function setResponseHeaders(headers) {\n\
            this.responseHeaders = {};\n\
\n\
            for (var header in headers) {\n\
                if (headers.hasOwnProperty(header)) {\n\
                    this.responseHeaders[header] = headers[header];\n\
                }\n\
            }\n\
\n\
            if (this.async) {\n\
                this.readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED);\n\
            } else {\n\
                this.readyState = FakeXMLHttpRequest.HEADERS_RECEIVED;\n\
            }\n\
        },\n\
\n\
        // Currently treats ALL data as a DOMString (i.e. no Document)\n\
        send: function send(data) {\n\
            verifyState(this);\n\
\n\
            if (!/^(get|head)$/i.test(this.method)) {\n\
                if (this.requestHeaders[\"Content-Type\"]) {\n\
                    var value = this.requestHeaders[\"Content-Type\"].split(\";\");\n\
                    this.requestHeaders[\"Content-Type\"] = value[0] + \";charset=utf-8\";\n\
                } else {\n\
                    this.requestHeaders[\"Content-Type\"] = \"text/plain;charset=utf-8\";\n\
                }\n\
\n\
                this.requestBody = data;\n\
            }\n\
\n\
            this.errorFlag = false;\n\
            this.sendFlag = this.async;\n\
            this.readyStateChange(FakeXMLHttpRequest.OPENED);\n\
\n\
            if (typeof this.onSend == \"function\") {\n\
                this.onSend(this);\n\
            }\n\
\n\
            this.dispatchEvent(new sinon.Event(\"loadstart\", false, false, this));\n\
        },\n\
\n\
        abort: function abort() {\n\
            this.aborted = true;\n\
            this.responseText = null;\n\
            this.errorFlag = true;\n\
            this.requestHeaders = {};\n\
\n\
            if (this.readyState > sinon.FakeXMLHttpRequest.UNSENT && this.sendFlag) {\n\
                this.readyStateChange(sinon.FakeXMLHttpRequest.DONE);\n\
                this.sendFlag = false;\n\
            }\n\
\n\
            this.readyState = sinon.FakeXMLHttpRequest.UNSENT;\n\
\n\
            this.dispatchEvent(new sinon.Event(\"abort\", false, false, this));\n\
            if (typeof this.onerror === \"function\") {\n\
                this.onerror();\n\
            }\n\
        },\n\
\n\
        getResponseHeader: function getResponseHeader(header) {\n\
            if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n\
                return null;\n\
            }\n\
\n\
            if (/^Set-Cookie2?$/i.test(header)) {\n\
                return null;\n\
            }\n\
\n\
            header = header.toLowerCase();\n\
\n\
            for (var h in this.responseHeaders) {\n\
                if (h.toLowerCase() == header) {\n\
                    return this.responseHeaders[h];\n\
                }\n\
            }\n\
\n\
            return null;\n\
        },\n\
\n\
        getAllResponseHeaders: function getAllResponseHeaders() {\n\
            if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n\
                return \"\";\n\
            }\n\
\n\
            var headers = \"\";\n\
\n\
            for (var header in this.responseHeaders) {\n\
                if (this.responseHeaders.hasOwnProperty(header) &&\n\
                    !/^Set-Cookie2?$/i.test(header)) {\n\
                    headers += header + \": \" + this.responseHeaders[header] + \"\\r\\n\
\";\n\
                }\n\
            }\n\
\n\
            return headers;\n\
        },\n\
\n\
        setResponseBody: function setResponseBody(body) {\n\
            verifyRequestSent(this);\n\
            verifyHeadersReceived(this);\n\
            verifyResponseBodyType(body);\n\
\n\
            var chunkSize = this.chunkSize || 10;\n\
            var index = 0;\n\
            this.responseText = \"\";\n\
\n\
            do {\n\
                if (this.async) {\n\
                    this.readyStateChange(FakeXMLHttpRequest.LOADING);\n\
                }\n\
\n\
                this.responseText += body.substring(index, index + chunkSize);\n\
                index += chunkSize;\n\
            } while (index < body.length);\n\
\n\
            var type = this.getResponseHeader(\"Content-Type\");\n\
\n\
            if (this.responseText &&\n\
                (!type || /(text\\/xml)|(application\\/xml)|(\\+xml)/.test(type))) {\n\
                try {\n\
                    this.responseXML = FakeXMLHttpRequest.parseXML(this.responseText);\n\
                } catch (e) {\n\
                    // Unable to parse XML - no biggie\n\
                }\n\
            }\n\
\n\
            if (this.async) {\n\
                this.readyStateChange(FakeXMLHttpRequest.DONE);\n\
            } else {\n\
                this.readyState = FakeXMLHttpRequest.DONE;\n\
            }\n\
        },\n\
\n\
        respond: function respond(status, headers, body) {\n\
            this.setResponseHeaders(headers || {});\n\
            this.status = typeof status == \"number\" ? status : 200;\n\
            this.statusText = FakeXMLHttpRequest.statusCodes[this.status];\n\
            this.setResponseBody(body || \"\");\n\
            if (typeof this.onload === \"function\"){\n\
                this.onload();\n\
            }\n\
\n\
        }\n\
    });\n\
\n\
    sinon.extend(FakeXMLHttpRequest, {\n\
        UNSENT: 0,\n\
        OPENED: 1,\n\
        HEADERS_RECEIVED: 2,\n\
        LOADING: 3,\n\
        DONE: 4\n\
    });\n\
\n\
    // Borrowed from JSpec\n\
    FakeXMLHttpRequest.parseXML = function parseXML(text) {\n\
        var xmlDoc;\n\
\n\
        if (typeof DOMParser != \"undefined\") {\n\
            var parser = new DOMParser();\n\
            xmlDoc = parser.parseFromString(text, \"text/xml\");\n\
        } else {\n\
            xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n\
            xmlDoc.async = \"false\";\n\
            xmlDoc.loadXML(text);\n\
        }\n\
\n\
        return xmlDoc;\n\
    };\n\
\n\
    FakeXMLHttpRequest.statusCodes = {\n\
        100: \"Continue\",\n\
        101: \"Switching Protocols\",\n\
        200: \"OK\",\n\
        201: \"Created\",\n\
        202: \"Accepted\",\n\
        203: \"Non-Authoritative Information\",\n\
        204: \"No Content\",\n\
        205: \"Reset Content\",\n\
        206: \"Partial Content\",\n\
        300: \"Multiple Choice\",\n\
        301: \"Moved Permanently\",\n\
        302: \"Found\",\n\
        303: \"See Other\",\n\
        304: \"Not Modified\",\n\
        305: \"Use Proxy\",\n\
        307: \"Temporary Redirect\",\n\
        400: \"Bad Request\",\n\
        401: \"Unauthorized\",\n\
        402: \"Payment Required\",\n\
        403: \"Forbidden\",\n\
        404: \"Not Found\",\n\
        405: \"Method Not Allowed\",\n\
        406: \"Not Acceptable\",\n\
        407: \"Proxy Authentication Required\",\n\
        408: \"Request Timeout\",\n\
        409: \"Conflict\",\n\
        410: \"Gone\",\n\
        411: \"Length Required\",\n\
        412: \"Precondition Failed\",\n\
        413: \"Request Entity Too Large\",\n\
        414: \"Request-URI Too Long\",\n\
        415: \"Unsupported Media Type\",\n\
        416: \"Requested Range Not Satisfiable\",\n\
        417: \"Expectation Failed\",\n\
        422: \"Unprocessable Entity\",\n\
        500: \"Internal Server Error\",\n\
        501: \"Not Implemented\",\n\
        502: \"Bad Gateway\",\n\
        503: \"Service Unavailable\",\n\
        504: \"Gateway Timeout\",\n\
        505: \"HTTP Version Not Supported\"\n\
    };\n\
\n\
    sinon.useFakeXMLHttpRequest = function () {\n\
        sinon.FakeXMLHttpRequest.restore = function restore(keepOnCreate) {\n\
            if (xhr.supportsXHR) {\n\
                global.XMLHttpRequest = xhr.GlobalXMLHttpRequest;\n\
            }\n\
\n\
            if (xhr.supportsActiveX) {\n\
                global.ActiveXObject = xhr.GlobalActiveXObject;\n\
            }\n\
\n\
            delete sinon.FakeXMLHttpRequest.restore;\n\
\n\
            if (keepOnCreate !== true) {\n\
                delete sinon.FakeXMLHttpRequest.onCreate;\n\
            }\n\
        };\n\
        if (xhr.supportsXHR) {\n\
            global.XMLHttpRequest = sinon.FakeXMLHttpRequest;\n\
        }\n\
\n\
        if (xhr.supportsActiveX) {\n\
            global.ActiveXObject = function ActiveXObject(objId) {\n\
                if (objId == \"Microsoft.XMLHTTP\" || /^Msxml2\\.XMLHTTP/i.test(objId)) {\n\
\n\
                    return new sinon.FakeXMLHttpRequest();\n\
                }\n\
\n\
                return new xhr.GlobalActiveXObject(objId);\n\
            };\n\
        }\n\
\n\
        return sinon.FakeXMLHttpRequest;\n\
    };\n\
\n\
    sinon.FakeXMLHttpRequest = FakeXMLHttpRequest;\n\
})(this);\n\
\n\
if (typeof module !== 'undefined' && module.exports) {\n\
    module.exports = sinon;\n\
}\n\
//@ sourceURL=johntron-sinon/lib/sinon/util/fake_xml_http_request.js"
));
require.register("johntron-sinon/lib/sinon/util/timers_ie.js", Function("exports, require, module",
"/*global sinon, setTimeout, setInterval, clearTimeout, clearInterval, Date*/\n\
/**\n\
 * Helps IE run the fake timers. By defining global functions, IE allows\n\
 * them to be overwritten at a later point. If these are not defined like\n\
 * this, overwriting them will result in anything from an exception to browser\n\
 * crash.\n\
 *\n\
 * If you don't require fake timers to work in IE, don't include this file.\n\
 *\n\
 * @author Christian Johansen (christian@cjohansen.no)\n\
 * @license BSD\n\
 *\n\
 * Copyright (c) 2010-2013 Christian Johansen\n\
 */\n\
function setTimeout() {}\n\
function clearTimeout() {}\n\
function setInterval() {}\n\
function clearInterval() {}\n\
function Date() {}\n\
\n\
// Reassign the original functions. Now their writable attribute\n\
// should be true. Hackish, I know, but it works.\n\
setTimeout = sinon.timers.setTimeout;\n\
clearTimeout = sinon.timers.clearTimeout;\n\
setInterval = sinon.timers.setInterval;\n\
clearInterval = sinon.timers.clearInterval;\n\
Date = sinon.timers.Date;\n\
//@ sourceURL=johntron-sinon/lib/sinon/util/timers_ie.js"
));
require.register("johntron-sinon/lib/sinon/util/xhr_ie.js", Function("exports, require, module",
"/*global sinon*/\n\
/**\n\
 * Helps IE run the fake XMLHttpRequest. By defining global functions, IE allows\n\
 * them to be overwritten at a later point. If these are not defined like\n\
 * this, overwriting them will result in anything from an exception to browser\n\
 * crash.\n\
 *\n\
 * If you don't require fake XHR to work in IE, don't include this file.\n\
 *\n\
 * @author Christian Johansen (christian@cjohansen.no)\n\
 * @license BSD\n\
 *\n\
 * Copyright (c) 2010-2013 Christian Johansen\n\
 */\n\
function XMLHttpRequest() {}\n\
\n\
// Reassign the original function. Now its writable attribute\n\
// should be true. Hackish, I know, but it works.\n\
XMLHttpRequest = sinon.xhr.XMLHttpRequest || undefined;\n\
//@ sourceURL=johntron-sinon/lib/sinon/util/xhr_ie.js"
));
require.register("chaijs-assertion-error/index.js", Function("exports, require, module",
"/*!\n\
 * assertion-error\n\
 * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Return a function that will copy properties from\n\
 * one object to another excluding any originally\n\
 * listed. Returned function will create a new `{}`.\n\
 *\n\
 * @param {String} excluded properties ...\n\
 * @return {Function}\n\
 */\n\
\n\
function exclude () {\n\
  var excludes = [].slice.call(arguments);\n\
\n\
  function excludeProps (res, obj) {\n\
    Object.keys(obj).forEach(function (key) {\n\
      if (!~excludes.indexOf(key)) res[key] = obj[key];\n\
    });\n\
  }\n\
\n\
  return function extendExclude () {\n\
    var args = [].slice.call(arguments)\n\
      , i = 0\n\
      , res = {};\n\
\n\
    for (; i < args.length; i++) {\n\
      excludeProps(res, args[i]);\n\
    }\n\
\n\
    return res;\n\
  };\n\
};\n\
\n\
/*!\n\
 * Primary Exports\n\
 */\n\
\n\
module.exports = AssertionError;\n\
\n\
/**\n\
 * ### AssertionError\n\
 *\n\
 * An extension of the JavaScript `Error` constructor for\n\
 * assertion and validation scenarios.\n\
 *\n\
 * @param {String} message\n\
 * @param {Object} properties to include (optional)\n\
 * @param {callee} start stack function (optional)\n\
 */\n\
\n\
function AssertionError (message, _props, ssf) {\n\
  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n\
    , props = extend(_props || {});\n\
\n\
  // default values\n\
  this.message = message || 'Unspecified AssertionError';\n\
  this.showDiff = false;\n\
\n\
  // copy from properties\n\
  for (var key in props) {\n\
    this[key] = props[key];\n\
  }\n\
\n\
  // capture stack trace\n\
  ssf = ssf || arguments.callee;\n\
  if (ssf && Error.captureStackTrace) {\n\
    Error.captureStackTrace(this, ssf);\n\
  }\n\
}\n\
\n\
/*!\n\
 * Inherit from Error.prototype\n\
 */\n\
\n\
AssertionError.prototype = Object.create(Error.prototype);\n\
\n\
/*!\n\
 * Statically set name\n\
 */\n\
\n\
AssertionError.prototype.name = 'AssertionError';\n\
\n\
/*!\n\
 * Ensure correct constructor\n\
 */\n\
\n\
AssertionError.prototype.constructor = AssertionError;\n\
\n\
/**\n\
 * Allow errors to be converted to JSON for static transfer.\n\
 *\n\
 * @param {Boolean} include stack (default: `true`)\n\
 * @return {Object} object that can be `JSON.stringify`\n\
 */\n\
\n\
AssertionError.prototype.toJSON = function (stack) {\n\
  var extend = exclude('constructor', 'toJSON', 'stack')\n\
    , props = extend({ name: this.name }, this);\n\
\n\
  // include stack if exists and not turned off\n\
  if (false !== stack && this.stack) {\n\
    props.stack = this.stack;\n\
  }\n\
\n\
  return props;\n\
};\n\
//@ sourceURL=chaijs-assertion-error/index.js"
));
require.register("chaijs-type-detect/lib/type.js", Function("exports, require, module",
"/*!\n\
 * type-detect\n\
 * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Primary Exports\n\
 */\n\
\n\
var exports = module.exports = getType;\n\
\n\
/*!\n\
 * Detectable javascript natives\n\
 */\n\
\n\
var natives = {\n\
    '[object Array]': 'array'\n\
  , '[object RegExp]': 'regexp'\n\
  , '[object Function]': 'function'\n\
  , '[object Arguments]': 'arguments'\n\
  , '[object Date]': 'date'\n\
};\n\
\n\
/**\n\
 * ### typeOf (obj)\n\
 *\n\
 * Use several different techniques to determine\n\
 * the type of object being tested.\n\
 *\n\
 *\n\
 * @param {Mixed} object\n\
 * @return {String} object type\n\
 * @api public\n\
 */\n\
\n\
function getType (obj) {\n\
  var str = Object.prototype.toString.call(obj);\n\
  if (natives[str]) return natives[str];\n\
  if (obj === null) return 'null';\n\
  if (obj === undefined) return 'undefined';\n\
  if (obj === Object(obj)) return 'object';\n\
  return typeof obj;\n\
}\n\
\n\
exports.Library = Library;\n\
\n\
/**\n\
 * ### Library\n\
 *\n\
 * Create a repository for custom type detection.\n\
 *\n\
 * ```js\n\
 * var lib = new type.Library;\n\
 * ```\n\
 *\n\
 */\n\
\n\
function Library () {\n\
  this.tests = {};\n\
}\n\
\n\
/**\n\
 * #### .of (obj)\n\
 *\n\
 * Expose replacement `typeof` detection to the library.\n\
 *\n\
 * ```js\n\
 * if ('string' === lib.of('hello world')) {\n\
 *   // ...\n\
 * }\n\
 * ```\n\
 *\n\
 * @param {Mixed} object to test\n\
 * @return {String} type\n\
 */\n\
\n\
Library.prototype.of = getType;\n\
\n\
/**\n\
 * #### .define (type, test)\n\
 *\n\
 * Add a test to for the `.test()` assertion.\n\
 *\n\
 * Can be defined as a regular expression:\n\
 *\n\
 * ```js\n\
 * lib.define('int', /^[0-9]+$/);\n\
 * ```\n\
 *\n\
 * ... or as a function:\n\
 *\n\
 * ```js\n\
 * lib.define('bln', function (obj) {\n\
 *   if ('boolean' === lib.of(obj)) return true;\n\
 *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n\
 *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n\
 *   return !! ~blns.indexOf(obj);\n\
 * });\n\
 * ```\n\
 *\n\
 * @param {String} type\n\
 * @param {RegExp|Function} test\n\
 * @api public\n\
 */\n\
\n\
Library.prototype.define = function (type, test) {\n\
  if (arguments.length === 1) return this.tests[type];\n\
  this.tests[type] = test;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * #### .test (obj, test)\n\
 *\n\
 * Assert that an object is of type. Will first\n\
 * check natives, and if that does not pass it will\n\
 * use the user defined custom tests.\n\
 *\n\
 * ```js\n\
 * assert(lib.test('1', 'int'));\n\
 * assert(lib.test('yes', 'bln'));\n\
 * ```\n\
 *\n\
 * @param {Mixed} object\n\
 * @param {String} type\n\
 * @return {Boolean} result\n\
 * @api public\n\
 */\n\
\n\
Library.prototype.test = function (obj, type) {\n\
  if (type === getType(obj)) return true;\n\
  var test = this.tests[type];\n\
\n\
  if (test && 'regexp' === getType(test)) {\n\
    return test.test(obj);\n\
  } else if (test && 'function' === getType(test)) {\n\
    return test(obj);\n\
  } else {\n\
    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n\
  }\n\
};\n\
//@ sourceURL=chaijs-type-detect/lib/type.js"
));
require.register("chaijs-deep-eql/lib/eql.js", Function("exports, require, module",
"/*!\n\
 * deep-eql\n\
 * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Module dependencies\n\
 */\n\
\n\
var type = require('type-detect');\n\
\n\
/*!\n\
 * Buffer.isBuffer browser shim\n\
 */\n\
\n\
var Buffer;\n\
try { Buffer = require('buffer').Buffer; }\n\
catch(ex) {\n\
  Buffer = {};\n\
  Buffer.isBuffer = function() { return false; }\n\
}\n\
\n\
/*!\n\
 * Primary Export\n\
 */\n\
\n\
module.exports = deepEqual;\n\
\n\
/**\n\
 * Assert super-strict (egal) equality between\n\
 * two objects of any type.\n\
 *\n\
 * @param {Mixed} a\n\
 * @param {Mixed} b\n\
 * @param {Array} memoised (optional)\n\
 * @return {Boolean} equal match\n\
 */\n\
\n\
function deepEqual(a, b, m) {\n\
  if (sameValue(a, b)) {\n\
    return true;\n\
  } else if ('date' === type(a)) {\n\
    return dateEqual(a, b);\n\
  } else if ('regexp' === type(a)) {\n\
    return regexpEqual(a, b);\n\
  } else if (Buffer.isBuffer(a)) {\n\
    return bufferEqual(a, b);\n\
  } else if ('arguments' === type(a)) {\n\
    return argumentsEqual(a, b, m);\n\
  } else if (!typeEqual(a, b)) {\n\
    return false;\n\
  } else if (('object' !== type(a) && 'object' !== type(b))\n\
  && ('array' !== type(a) && 'array' !== type(b))) {\n\
    return sameValue(a, b);\n\
  } else {\n\
    return objectEqual(a, b, m);\n\
  }\n\
}\n\
\n\
/*!\n\
 * Strict (egal) equality test. Ensures that NaN always\n\
 * equals NaN and `-0` does not equal `+0`.\n\
 *\n\
 * @param {Mixed} a\n\
 * @param {Mixed} b\n\
 * @return {Boolean} equal match\n\
 */\n\
\n\
function sameValue(a, b) {\n\
  if (a === b) return a !== 0 || 1 / a === 1 / b;\n\
  return a !== a && b !== b;\n\
}\n\
\n\
/*!\n\
 * Compare the types of two given objects and\n\
 * return if they are equal. Note that an Array\n\
 * has a type of `array` (not `object`) and arguments\n\
 * have a type of `arguments` (not `array`/`object`).\n\
 *\n\
 * @param {Mixed} a\n\
 * @param {Mixed} b\n\
 * @return {Boolean} result\n\
 */\n\
\n\
function typeEqual(a, b) {\n\
  return type(a) === type(b);\n\
}\n\
\n\
/*!\n\
 * Compare two Date objects by asserting that\n\
 * the time values are equal using `saveValue`.\n\
 *\n\
 * @param {Date} a\n\
 * @param {Date} b\n\
 * @return {Boolean} result\n\
 */\n\
\n\
function dateEqual(a, b) {\n\
  if ('date' !== type(b)) return false;\n\
  return sameValue(a.getTime(), b.getTime());\n\
}\n\
\n\
/*!\n\
 * Compare two regular expressions by converting them\n\
 * to string and checking for `sameValue`.\n\
 *\n\
 * @param {RegExp} a\n\
 * @param {RegExp} b\n\
 * @return {Boolean} result\n\
 */\n\
\n\
function regexpEqual(a, b) {\n\
  if ('regexp' !== type(b)) return false;\n\
  return sameValue(a.toString(), b.toString());\n\
}\n\
\n\
/*!\n\
 * Assert deep equality of two `arguments` objects.\n\
 * Unfortunately, these must be sliced to arrays\n\
 * prior to test to ensure no bad behavior.\n\
 *\n\
 * @param {Arguments} a\n\
 * @param {Arguments} b\n\
 * @param {Array} memoize (optional)\n\
 * @return {Boolean} result\n\
 */\n\
\n\
function argumentsEqual(a, b, m) {\n\
  if ('arguments' !== type(b)) return false;\n\
  a = [].slice.call(a);\n\
  b = [].slice.call(b);\n\
  return deepEqual(a, b, m);\n\
}\n\
\n\
/*!\n\
 * Get enumerable properties of a given object.\n\
 *\n\
 * @param {Object} a\n\
 * @return {Array} property names\n\
 */\n\
\n\
function enumerable(a) {\n\
  var res = [];\n\
  for (var key in a) res.push(key);\n\
  return res;\n\
}\n\
\n\
/*!\n\
 * Simple equality for flat iterable objects\n\
 * such as Arrays or Node.js buffers.\n\
 *\n\
 * @param {Iterable} a\n\
 * @param {Iterable} b\n\
 * @return {Boolean} result\n\
 */\n\
\n\
function iterableEqual(a, b) {\n\
  if (a.length !==  b.length) return false;\n\
\n\
  var i = 0;\n\
  var match = true;\n\
\n\
  for (; i < a.length; i++) {\n\
    if (a[i] !== b[i]) {\n\
      match = false;\n\
      break;\n\
    }\n\
  }\n\
\n\
  return match;\n\
}\n\
\n\
/*!\n\
 * Extension to `iterableEqual` specifically\n\
 * for Node.js Buffers.\n\
 *\n\
 * @param {Buffer} a\n\
 * @param {Mixed} b\n\
 * @return {Boolean} result\n\
 */\n\
\n\
function bufferEqual(a, b) {\n\
  if (!Buffer.isBuffer(b)) return false;\n\
  return iterableEqual(a, b);\n\
}\n\
\n\
/*!\n\
 * Block for `objectEqual` ensuring non-existing\n\
 * values don't get in.\n\
 *\n\
 * @param {Mixed} object\n\
 * @return {Boolean} result\n\
 */\n\
\n\
function isValue(a) {\n\
  return a !== null && a !== undefined;\n\
}\n\
\n\
/*!\n\
 * Recursively check the equality of two objects.\n\
 * Once basic sameness has been established it will\n\
 * defer to `deepEqual` for each enumerable key\n\
 * in the object.\n\
 *\n\
 * @param {Mixed} a\n\
 * @param {Mixed} b\n\
 * @return {Boolean} result\n\
 */\n\
\n\
function objectEqual(a, b, m) {\n\
  if (!isValue(a) || !isValue(b)) {\n\
    return false;\n\
  }\n\
\n\
  if (a.prototype !== b.prototype) {\n\
    return false;\n\
  }\n\
\n\
  var i;\n\
  if (m) {\n\
    for (i = 0; i < m.length; i++) {\n\
      if ((m[i][0] === a && m[i][1] === b)\n\
      ||  (m[i][0] === b && m[i][1] === a)) {\n\
        return true;\n\
      }\n\
    }\n\
  } else {\n\
    m = [];\n\
  }\n\
\n\
  try {\n\
    var ka = enumerable(a);\n\
    var kb = enumerable(b);\n\
  } catch (ex) {\n\
    return false;\n\
  }\n\
\n\
  ka.sort();\n\
  kb.sort();\n\
\n\
  if (!iterableEqual(ka, kb)) {\n\
    return false;\n\
  }\n\
\n\
  m.push([ a, b ]);\n\
\n\
  var key;\n\
  for (i = ka.length - 1; i >= 0; i--) {\n\
    key = ka[i];\n\
    if (!deepEqual(a[key], b[key], m)) {\n\
      return false;\n\
    }\n\
  }\n\
\n\
  return true;\n\
}\n\
//@ sourceURL=chaijs-deep-eql/lib/eql.js"
));
require.register("chaijs-chai/index.js", Function("exports, require, module",
"module.exports = require('./lib/chai');\n\
//@ sourceURL=chaijs-chai/index.js"
));
require.register("chaijs-chai/lib/chai.js", Function("exports, require, module",
"/*!\n\
 * chai\n\
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
var used = []\n\
  , exports = module.exports = {};\n\
\n\
/*!\n\
 * Chai version\n\
 */\n\
\n\
exports.version = '1.8.1';\n\
\n\
/*!\n\
 * Assertion Error\n\
 */\n\
\n\
exports.AssertionError = require('assertion-error');\n\
\n\
/*!\n\
 * Utils for plugins (not exported)\n\
 */\n\
\n\
var util = require('./chai/utils');\n\
\n\
/**\n\
 * # .use(function)\n\
 *\n\
 * Provides a way to extend the internals of Chai\n\
 *\n\
 * @param {Function}\n\
 * @returns {this} for chaining\n\
 * @api public\n\
 */\n\
\n\
exports.use = function (fn) {\n\
  if (!~used.indexOf(fn)) {\n\
    fn(this, util);\n\
    used.push(fn);\n\
  }\n\
\n\
  return this;\n\
};\n\
\n\
/*!\n\
 * Primary `Assertion` prototype\n\
 */\n\
\n\
var assertion = require('./chai/assertion');\n\
exports.use(assertion);\n\
\n\
/*!\n\
 * Core Assertions\n\
 */\n\
\n\
var core = require('./chai/core/assertions');\n\
exports.use(core);\n\
\n\
/*!\n\
 * Expect interface\n\
 */\n\
\n\
var expect = require('./chai/interface/expect');\n\
exports.use(expect);\n\
\n\
/*!\n\
 * Should interface\n\
 */\n\
\n\
var should = require('./chai/interface/should');\n\
exports.use(should);\n\
\n\
/*!\n\
 * Assert interface\n\
 */\n\
\n\
var assert = require('./chai/interface/assert');\n\
exports.use(assert);\n\
//@ sourceURL=chaijs-chai/lib/chai.js"
));
require.register("chaijs-chai/lib/chai/assertion.js", Function("exports, require, module",
"/*!\n\
 * chai\n\
 * http://chaijs.com\n\
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
module.exports = function (_chai, util) {\n\
  /*!\n\
   * Module dependencies.\n\
   */\n\
\n\
  var AssertionError = _chai.AssertionError\n\
    , flag = util.flag;\n\
\n\
  /*!\n\
   * Module export.\n\
   */\n\
\n\
  _chai.Assertion = Assertion;\n\
\n\
  /*!\n\
   * Assertion Constructor\n\
   *\n\
   * Creates object for chaining.\n\
   *\n\
   * @api private\n\
   */\n\
\n\
  function Assertion (obj, msg, stack) {\n\
    flag(this, 'ssfi', stack || arguments.callee);\n\
    flag(this, 'object', obj);\n\
    flag(this, 'message', msg);\n\
  }\n\
\n\
  /*!\n\
    * ### Assertion.includeStack\n\
    *\n\
    * User configurable property, influences whether stack trace\n\
    * is included in Assertion error message. Default of false\n\
    * suppresses stack trace in the error message\n\
    *\n\
    *     Assertion.includeStack = true;  // enable stack on error\n\
    *\n\
    * @api public\n\
    */\n\
\n\
  Assertion.includeStack = false;\n\
\n\
  /*!\n\
   * ### Assertion.showDiff\n\
   *\n\
   * User configurable property, influences whether or not\n\
   * the `showDiff` flag should be included in the thrown\n\
   * AssertionErrors. `false` will always be `false`; `true`\n\
   * will be true when the assertion has requested a diff\n\
   * be shown.\n\
   *\n\
   * @api public\n\
   */\n\
\n\
  Assertion.showDiff = true;\n\
\n\
  Assertion.addProperty = function (name, fn) {\n\
    util.addProperty(this.prototype, name, fn);\n\
  };\n\
\n\
  Assertion.addMethod = function (name, fn) {\n\
    util.addMethod(this.prototype, name, fn);\n\
  };\n\
\n\
  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n\
    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n\
  };\n\
\n\
  Assertion.overwriteProperty = function (name, fn) {\n\
    util.overwriteProperty(this.prototype, name, fn);\n\
  };\n\
\n\
  Assertion.overwriteMethod = function (name, fn) {\n\
    util.overwriteMethod(this.prototype, name, fn);\n\
  };\n\
\n\
  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n\
    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n\
  };\n\
\n\
  /*!\n\
   * ### .assert(expression, message, negateMessage, expected, actual)\n\
   *\n\
   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n\
   *\n\
   * @name assert\n\
   * @param {Philosophical} expression to be tested\n\
   * @param {String} message to display if fails\n\
   * @param {String} negatedMessage to display if negated expression fails\n\
   * @param {Mixed} expected value (remember to check for negation)\n\
   * @param {Mixed} actual (optional) will default to `this.obj`\n\
   * @api private\n\
   */\n\
\n\
  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n\
    var ok = util.test(this, arguments);\n\
    if (true !== showDiff) showDiff = false;\n\
    if (true !== Assertion.showDiff) showDiff = false;\n\
\n\
    if (!ok) {\n\
      var msg = util.getMessage(this, arguments)\n\
        , actual = util.getActual(this, arguments);\n\
      throw new AssertionError(msg, {\n\
          actual: actual\n\
        , expected: expected\n\
        , showDiff: showDiff\n\
      }, (Assertion.includeStack) ? this.assert : flag(this, 'ssfi'));\n\
    }\n\
  };\n\
\n\
  /*!\n\
   * ### ._obj\n\
   *\n\
   * Quick reference to stored `actual` value for plugin developers.\n\
   *\n\
   * @api private\n\
   */\n\
\n\
  Object.defineProperty(Assertion.prototype, '_obj',\n\
    { get: function () {\n\
        return flag(this, 'object');\n\
      }\n\
    , set: function (val) {\n\
        flag(this, 'object', val);\n\
      }\n\
  });\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/assertion.js"
));
require.register("chaijs-chai/lib/chai/core/assertions.js", Function("exports, require, module",
"/*!\n\
 * chai\n\
 * http://chaijs.com\n\
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
module.exports = function (chai, _) {\n\
  var Assertion = chai.Assertion\n\
    , toString = Object.prototype.toString\n\
    , flag = _.flag;\n\
\n\
  /**\n\
   * ### Language Chains\n\
   *\n\
   * The following are provided as chainable getters to\n\
   * improve the readability of your assertions. They\n\
   * do not provide an testing capability unless they\n\
   * have been overwritten by a plugin.\n\
   *\n\
   * **Chains**\n\
   *\n\
   * - to\n\
   * - be\n\
   * - been\n\
   * - is\n\
   * - that\n\
   * - and\n\
   * - has\n\
   * - have\n\
   * - with\n\
   * - at\n\
   * - of\n\
   * - same\n\
   *\n\
   * @name language chains\n\
   * @api public\n\
   */\n\
\n\
  [ 'to', 'be', 'been'\n\
  , 'is', 'and', 'has', 'have'\n\
  , 'with', 'that', 'at'\n\
  , 'of', 'same' ].forEach(function (chain) {\n\
    Assertion.addProperty(chain, function () {\n\
      return this;\n\
    });\n\
  });\n\
\n\
  /**\n\
   * ### .not\n\
   *\n\
   * Negates any of assertions following in the chain.\n\
   *\n\
   *     expect(foo).to.not.equal('bar');\n\
   *     expect(goodFn).to.not.throw(Error);\n\
   *     expect({ foo: 'baz' }).to.have.property('foo')\n\
   *       .and.not.equal('bar');\n\
   *\n\
   * @name not\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('not', function () {\n\
    flag(this, 'negate', true);\n\
  });\n\
\n\
  /**\n\
   * ### .deep\n\
   *\n\
   * Sets the `deep` flag, later used by the `equal` and\n\
   * `property` assertions.\n\
   *\n\
   *     expect(foo).to.deep.equal({ bar: 'baz' });\n\
   *     expect({ foo: { bar: { baz: 'quux' } } })\n\
   *       .to.have.deep.property('foo.bar.baz', 'quux');\n\
   *\n\
   * @name deep\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('deep', function () {\n\
    flag(this, 'deep', true);\n\
  });\n\
\n\
  /**\n\
   * ### .a(type)\n\
   *\n\
   * The `a` and `an` assertions are aliases that can be\n\
   * used either as language chains or to assert a value's\n\
   * type.\n\
   *\n\
   *     // typeof\n\
   *     expect('test').to.be.a('string');\n\
   *     expect({ foo: 'bar' }).to.be.an('object');\n\
   *     expect(null).to.be.a('null');\n\
   *     expect(undefined).to.be.an('undefined');\n\
   *\n\
   *     // language chain\n\
   *     expect(foo).to.be.an.instanceof(Foo);\n\
   *\n\
   * @name a\n\
   * @alias an\n\
   * @param {String} type\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function an (type, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    type = type.toLowerCase();\n\
    var obj = flag(this, 'object')\n\
      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\
\n\
    this.assert(\n\
        type === _.type(obj)\n\
      , 'expected #{this} to be ' + article + type\n\
      , 'expected #{this} not to be ' + article + type\n\
    );\n\
  }\n\
\n\
  Assertion.addChainableMethod('an', an);\n\
  Assertion.addChainableMethod('a', an);\n\
\n\
  /**\n\
   * ### .include(value)\n\
   *\n\
   * The `include` and `contain` assertions can be used as either property\n\
   * based language chains or as methods to assert the inclusion of an object\n\
   * in an array or a substring in a string. When used as language chains,\n\
   * they toggle the `contain` flag for the `keys` assertion.\n\
   *\n\
   *     expect([1,2,3]).to.include(2);\n\
   *     expect('foobar').to.contain('foo');\n\
   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n\
   *\n\
   * @name include\n\
   * @alias contain\n\
   * @param {Object|String|Number} obj\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function includeChainingBehavior () {\n\
    flag(this, 'contains', true);\n\
  }\n\
\n\
  function include (val, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
\n\
    if (_.type(val) === 'object') {\n\
      if (!flag(this, 'negate')) {\n\
        for (var k in val) new Assertion(obj).property(k, val[k]);\n\
        return;\n\
      }\n\
      var subset = {}\n\
      for (var k in val) subset[k] = obj[k]\n\
      var expected = _.eql(subset, val);\n\
    } else {\n\
      var expected = obj && ~obj.indexOf(val)\n\
    }\n\
    this.assert(\n\
        expected\n\
      , 'expected #{this} to include ' + _.inspect(val)\n\
      , 'expected #{this} to not include ' + _.inspect(val));\n\
  }\n\
\n\
  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n\
  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n\
\n\
  /**\n\
   * ### .ok\n\
   *\n\
   * Asserts that the target is truthy.\n\
   *\n\
   *     expect('everthing').to.be.ok;\n\
   *     expect(1).to.be.ok;\n\
   *     expect(false).to.not.be.ok;\n\
   *     expect(undefined).to.not.be.ok;\n\
   *     expect(null).to.not.be.ok;\n\
   *\n\
   * @name ok\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('ok', function () {\n\
    this.assert(\n\
        flag(this, 'object')\n\
      , 'expected #{this} to be truthy'\n\
      , 'expected #{this} to be falsy');\n\
  });\n\
\n\
  /**\n\
   * ### .true\n\
   *\n\
   * Asserts that the target is `true`.\n\
   *\n\
   *     expect(true).to.be.true;\n\
   *     expect(1).to.not.be.true;\n\
   *\n\
   * @name true\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('true', function () {\n\
    this.assert(\n\
        true === flag(this, 'object')\n\
      , 'expected #{this} to be true'\n\
      , 'expected #{this} to be false'\n\
      , this.negate ? false : true\n\
    );\n\
  });\n\
\n\
  /**\n\
   * ### .false\n\
   *\n\
   * Asserts that the target is `false`.\n\
   *\n\
   *     expect(false).to.be.false;\n\
   *     expect(0).to.not.be.false;\n\
   *\n\
   * @name false\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('false', function () {\n\
    this.assert(\n\
        false === flag(this, 'object')\n\
      , 'expected #{this} to be false'\n\
      , 'expected #{this} to be true'\n\
      , this.negate ? true : false\n\
    );\n\
  });\n\
\n\
  /**\n\
   * ### .null\n\
   *\n\
   * Asserts that the target is `null`.\n\
   *\n\
   *     expect(null).to.be.null;\n\
   *     expect(undefined).not.to.be.null;\n\
   *\n\
   * @name null\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('null', function () {\n\
    this.assert(\n\
        null === flag(this, 'object')\n\
      , 'expected #{this} to be null'\n\
      , 'expected #{this} not to be null'\n\
    );\n\
  });\n\
\n\
  /**\n\
   * ### .undefined\n\
   *\n\
   * Asserts that the target is `undefined`.\n\
   *\n\
   *     expect(undefined).to.be.undefined;\n\
   *     expect(null).to.not.be.undefined;\n\
   *\n\
   * @name undefined\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('undefined', function () {\n\
    this.assert(\n\
        undefined === flag(this, 'object')\n\
      , 'expected #{this} to be undefined'\n\
      , 'expected #{this} not to be undefined'\n\
    );\n\
  });\n\
\n\
  /**\n\
   * ### .exist\n\
   *\n\
   * Asserts that the target is neither `null` nor `undefined`.\n\
   *\n\
   *     var foo = 'hi'\n\
   *       , bar = null\n\
   *       , baz;\n\
   *\n\
   *     expect(foo).to.exist;\n\
   *     expect(bar).to.not.exist;\n\
   *     expect(baz).to.not.exist;\n\
   *\n\
   * @name exist\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('exist', function () {\n\
    this.assert(\n\
        null != flag(this, 'object')\n\
      , 'expected #{this} to exist'\n\
      , 'expected #{this} to not exist'\n\
    );\n\
  });\n\
\n\
\n\
  /**\n\
   * ### .empty\n\
   *\n\
   * Asserts that the target's length is `0`. For arrays, it checks\n\
   * the `length` property. For objects, it gets the count of\n\
   * enumerable keys.\n\
   *\n\
   *     expect([]).to.be.empty;\n\
   *     expect('').to.be.empty;\n\
   *     expect({}).to.be.empty;\n\
   *\n\
   * @name empty\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('empty', function () {\n\
    var obj = flag(this, 'object')\n\
      , expected = obj;\n\
\n\
    if (Array.isArray(obj) || 'string' === typeof object) {\n\
      expected = obj.length;\n\
    } else if (typeof obj === 'object') {\n\
      expected = Object.keys(obj).length;\n\
    }\n\
\n\
    this.assert(\n\
        !expected\n\
      , 'expected #{this} to be empty'\n\
      , 'expected #{this} not to be empty'\n\
    );\n\
  });\n\
\n\
  /**\n\
   * ### .arguments\n\
   *\n\
   * Asserts that the target is an arguments object.\n\
   *\n\
   *     function test () {\n\
   *       expect(arguments).to.be.arguments;\n\
   *     }\n\
   *\n\
   * @name arguments\n\
   * @alias Arguments\n\
   * @api public\n\
   */\n\
\n\
  function checkArguments () {\n\
    var obj = flag(this, 'object')\n\
      , type = Object.prototype.toString.call(obj);\n\
    this.assert(\n\
        '[object Arguments]' === type\n\
      , 'expected #{this} to be arguments but got ' + type\n\
      , 'expected #{this} to not be arguments'\n\
    );\n\
  }\n\
\n\
  Assertion.addProperty('arguments', checkArguments);\n\
  Assertion.addProperty('Arguments', checkArguments);\n\
\n\
  /**\n\
   * ### .equal(value)\n\
   *\n\
   * Asserts that the target is strictly equal (`===`) to `value`.\n\
   * Alternately, if the `deep` flag is set, asserts that\n\
   * the target is deeply equal to `value`.\n\
   *\n\
   *     expect('hello').to.equal('hello');\n\
   *     expect(42).to.equal(42);\n\
   *     expect(1).to.not.equal(true);\n\
   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });\n\
   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });\n\
   *\n\
   * @name equal\n\
   * @alias equals\n\
   * @alias eq\n\
   * @alias deep.equal\n\
   * @param {Mixed} value\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function assertEqual (val, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    if (flag(this, 'deep')) {\n\
      return this.eql(val);\n\
    } else {\n\
      this.assert(\n\
          val === obj\n\
        , 'expected #{this} to equal #{exp}'\n\
        , 'expected #{this} to not equal #{exp}'\n\
        , val\n\
        , this._obj\n\
        , true\n\
      );\n\
    }\n\
  }\n\
\n\
  Assertion.addMethod('equal', assertEqual);\n\
  Assertion.addMethod('equals', assertEqual);\n\
  Assertion.addMethod('eq', assertEqual);\n\
\n\
  /**\n\
   * ### .eql(value)\n\
   *\n\
   * Asserts that the target is deeply equal to `value`.\n\
   *\n\
   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });\n\
   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);\n\
   *\n\
   * @name eql\n\
   * @alias eqls\n\
   * @param {Mixed} value\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function assertEql(obj, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    this.assert(\n\
        _.eql(obj, flag(this, 'object'))\n\
      , 'expected #{this} to deeply equal #{exp}'\n\
      , 'expected #{this} to not deeply equal #{exp}'\n\
      , obj\n\
      , this._obj\n\
      , true\n\
    );\n\
  }\n\
\n\
  Assertion.addMethod('eql', assertEql);\n\
  Assertion.addMethod('eqls', assertEql);\n\
\n\
  /**\n\
   * ### .above(value)\n\
   *\n\
   * Asserts that the target is greater than `value`.\n\
   *\n\
   *     expect(10).to.be.above(5);\n\
   *\n\
   * Can also be used in conjunction with `length` to\n\
   * assert a minimum length. The benefit being a\n\
   * more informative error message than if the length\n\
   * was supplied directly.\n\
   *\n\
   *     expect('foo').to.have.length.above(2);\n\
   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n\
   *\n\
   * @name above\n\
   * @alias gt\n\
   * @alias greaterThan\n\
   * @param {Number} value\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function assertAbove (n, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    if (flag(this, 'doLength')) {\n\
      new Assertion(obj, msg).to.have.property('length');\n\
      var len = obj.length;\n\
      this.assert(\n\
          len > n\n\
        , 'expected #{this} to have a length above #{exp} but got #{act}'\n\
        , 'expected #{this} to not have a length above #{exp}'\n\
        , n\n\
        , len\n\
      );\n\
    } else {\n\
      this.assert(\n\
          obj > n\n\
        , 'expected #{this} to be above ' + n\n\
        , 'expected #{this} to be at most ' + n\n\
      );\n\
    }\n\
  }\n\
\n\
  Assertion.addMethod('above', assertAbove);\n\
  Assertion.addMethod('gt', assertAbove);\n\
  Assertion.addMethod('greaterThan', assertAbove);\n\
\n\
  /**\n\
   * ### .least(value)\n\
   *\n\
   * Asserts that the target is greater than or equal to `value`.\n\
   *\n\
   *     expect(10).to.be.at.least(10);\n\
   *\n\
   * Can also be used in conjunction with `length` to\n\
   * assert a minimum length. The benefit being a\n\
   * more informative error message than if the length\n\
   * was supplied directly.\n\
   *\n\
   *     expect('foo').to.have.length.of.at.least(2);\n\
   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);\n\
   *\n\
   * @name least\n\
   * @alias gte\n\
   * @param {Number} value\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function assertLeast (n, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    if (flag(this, 'doLength')) {\n\
      new Assertion(obj, msg).to.have.property('length');\n\
      var len = obj.length;\n\
      this.assert(\n\
          len >= n\n\
        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n\
        , 'expected #{this} to have a length below #{exp}'\n\
        , n\n\
        , len\n\
      );\n\
    } else {\n\
      this.assert(\n\
          obj >= n\n\
        , 'expected #{this} to be at least ' + n\n\
        , 'expected #{this} to be below ' + n\n\
      );\n\
    }\n\
  }\n\
\n\
  Assertion.addMethod('least', assertLeast);\n\
  Assertion.addMethod('gte', assertLeast);\n\
\n\
  /**\n\
   * ### .below(value)\n\
   *\n\
   * Asserts that the target is less than `value`.\n\
   *\n\
   *     expect(5).to.be.below(10);\n\
   *\n\
   * Can also be used in conjunction with `length` to\n\
   * assert a maximum length. The benefit being a\n\
   * more informative error message than if the length\n\
   * was supplied directly.\n\
   *\n\
   *     expect('foo').to.have.length.below(4);\n\
   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n\
   *\n\
   * @name below\n\
   * @alias lt\n\
   * @alias lessThan\n\
   * @param {Number} value\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function assertBelow (n, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    if (flag(this, 'doLength')) {\n\
      new Assertion(obj, msg).to.have.property('length');\n\
      var len = obj.length;\n\
      this.assert(\n\
          len < n\n\
        , 'expected #{this} to have a length below #{exp} but got #{act}'\n\
        , 'expected #{this} to not have a length below #{exp}'\n\
        , n\n\
        , len\n\
      );\n\
    } else {\n\
      this.assert(\n\
          obj < n\n\
        , 'expected #{this} to be below ' + n\n\
        , 'expected #{this} to be at least ' + n\n\
      );\n\
    }\n\
  }\n\
\n\
  Assertion.addMethod('below', assertBelow);\n\
  Assertion.addMethod('lt', assertBelow);\n\
  Assertion.addMethod('lessThan', assertBelow);\n\
\n\
  /**\n\
   * ### .most(value)\n\
   *\n\
   * Asserts that the target is less than or equal to `value`.\n\
   *\n\
   *     expect(5).to.be.at.most(5);\n\
   *\n\
   * Can also be used in conjunction with `length` to\n\
   * assert a maximum length. The benefit being a\n\
   * more informative error message than if the length\n\
   * was supplied directly.\n\
   *\n\
   *     expect('foo').to.have.length.of.at.most(4);\n\
   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);\n\
   *\n\
   * @name most\n\
   * @alias lte\n\
   * @param {Number} value\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function assertMost (n, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    if (flag(this, 'doLength')) {\n\
      new Assertion(obj, msg).to.have.property('length');\n\
      var len = obj.length;\n\
      this.assert(\n\
          len <= n\n\
        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n\
        , 'expected #{this} to have a length above #{exp}'\n\
        , n\n\
        , len\n\
      );\n\
    } else {\n\
      this.assert(\n\
          obj <= n\n\
        , 'expected #{this} to be at most ' + n\n\
        , 'expected #{this} to be above ' + n\n\
      );\n\
    }\n\
  }\n\
\n\
  Assertion.addMethod('most', assertMost);\n\
  Assertion.addMethod('lte', assertMost);\n\
\n\
  /**\n\
   * ### .within(start, finish)\n\
   *\n\
   * Asserts that the target is within a range.\n\
   *\n\
   *     expect(7).to.be.within(5,10);\n\
   *\n\
   * Can also be used in conjunction with `length` to\n\
   * assert a length range. The benefit being a\n\
   * more informative error message than if the length\n\
   * was supplied directly.\n\
   *\n\
   *     expect('foo').to.have.length.within(2,4);\n\
   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n\
   *\n\
   * @name within\n\
   * @param {Number} start lowerbound inclusive\n\
   * @param {Number} finish upperbound inclusive\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addMethod('within', function (start, finish, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object')\n\
      , range = start + '..' + finish;\n\
    if (flag(this, 'doLength')) {\n\
      new Assertion(obj, msg).to.have.property('length');\n\
      var len = obj.length;\n\
      this.assert(\n\
          len >= start && len <= finish\n\
        , 'expected #{this} to have a length within ' + range\n\
        , 'expected #{this} to not have a length within ' + range\n\
      );\n\
    } else {\n\
      this.assert(\n\
          obj >= start && obj <= finish\n\
        , 'expected #{this} to be within ' + range\n\
        , 'expected #{this} to not be within ' + range\n\
      );\n\
    }\n\
  });\n\
\n\
  /**\n\
   * ### .instanceof(constructor)\n\
   *\n\
   * Asserts that the target is an instance of `constructor`.\n\
   *\n\
   *     var Tea = function (name) { this.name = name; }\n\
   *       , Chai = new Tea('chai');\n\
   *\n\
   *     expect(Chai).to.be.an.instanceof(Tea);\n\
   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);\n\
   *\n\
   * @name instanceof\n\
   * @param {Constructor} constructor\n\
   * @param {String} message _optional_\n\
   * @alias instanceOf\n\
   * @api public\n\
   */\n\
\n\
  function assertInstanceOf (constructor, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var name = _.getName(constructor);\n\
    this.assert(\n\
        flag(this, 'object') instanceof constructor\n\
      , 'expected #{this} to be an instance of ' + name\n\
      , 'expected #{this} to not be an instance of ' + name\n\
    );\n\
  };\n\
\n\
  Assertion.addMethod('instanceof', assertInstanceOf);\n\
  Assertion.addMethod('instanceOf', assertInstanceOf);\n\
\n\
  /**\n\
   * ### .property(name, [value])\n\
   *\n\
   * Asserts that the target has a property `name`, optionally asserting that\n\
   * the value of that property is strictly equal to  `value`.\n\
   * If the `deep` flag is set, you can use dot- and bracket-notation for deep\n\
   * references into objects and arrays.\n\
   *\n\
   *     // simple referencing\n\
   *     var obj = { foo: 'bar' };\n\
   *     expect(obj).to.have.property('foo');\n\
   *     expect(obj).to.have.property('foo', 'bar');\n\
   *\n\
   *     // deep referencing\n\
   *     var deepObj = {\n\
   *         green: { tea: 'matcha' }\n\
   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]\n\
   *     };\n\
\n\
   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');\n\
   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');\n\
   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');\n\
   *\n\
   * You can also use an array as the starting point of a `deep.property`\n\
   * assertion, or traverse nested arrays.\n\
   *\n\
   *     var arr = [\n\
   *         [ 'chai', 'matcha', 'konacha' ]\n\
   *       , [ { tea: 'chai' }\n\
   *         , { tea: 'matcha' }\n\
   *         , { tea: 'konacha' } ]\n\
   *     ];\n\
   *\n\
   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');\n\
   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');\n\
   *\n\
   * Furthermore, `property` changes the subject of the assertion\n\
   * to be the value of that property from the original object. This\n\
   * permits for further chainable assertions on that property.\n\
   *\n\
   *     expect(obj).to.have.property('foo')\n\
   *       .that.is.a('string');\n\
   *     expect(deepObj).to.have.property('green')\n\
   *       .that.is.an('object')\n\
   *       .that.deep.equals({ tea: 'matcha' });\n\
   *     expect(deepObj).to.have.property('teas')\n\
   *       .that.is.an('array')\n\
   *       .with.deep.property('[2]')\n\
   *         .that.deep.equals({ tea: 'konacha' });\n\
   *\n\
   * @name property\n\
   * @alias deep.property\n\
   * @param {String} name\n\
   * @param {Mixed} value (optional)\n\
   * @param {String} message _optional_\n\
   * @returns value of property for chaining\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addMethod('property', function (name, val, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
\n\
    var descriptor = flag(this, 'deep') ? 'deep property ' : 'property '\n\
      , negate = flag(this, 'negate')\n\
      , obj = flag(this, 'object')\n\
      , value = flag(this, 'deep')\n\
        ? _.getPathValue(name, obj)\n\
        : obj[name];\n\
\n\
    if (negate && undefined !== val) {\n\
      if (undefined === value) {\n\
        msg = (msg != null) ? msg + ': ' : '';\n\
        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));\n\
      }\n\
    } else {\n\
      this.assert(\n\
          undefined !== value\n\
        , 'expected #{this} to have a ' + descriptor + _.inspect(name)\n\
        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n\
    }\n\
\n\
    if (undefined !== val) {\n\
      this.assert(\n\
          val === value\n\
        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n\
        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'\n\
        , val\n\
        , value\n\
      );\n\
    }\n\
\n\
    flag(this, 'object', value);\n\
  });\n\
\n\
\n\
  /**\n\
   * ### .ownProperty(name)\n\
   *\n\
   * Asserts that the target has an own property `name`.\n\
   *\n\
   *     expect('test').to.have.ownProperty('length');\n\
   *\n\
   * @name ownProperty\n\
   * @alias haveOwnProperty\n\
   * @param {String} name\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function assertOwnProperty (name, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    this.assert(\n\
        obj.hasOwnProperty(name)\n\
      , 'expected #{this} to have own property ' + _.inspect(name)\n\
      , 'expected #{this} to not have own property ' + _.inspect(name)\n\
    );\n\
  }\n\
\n\
  Assertion.addMethod('ownProperty', assertOwnProperty);\n\
  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\
\n\
  /**\n\
   * ### .length(value)\n\
   *\n\
   * Asserts that the target's `length` property has\n\
   * the expected value.\n\
   *\n\
   *     expect([ 1, 2, 3]).to.have.length(3);\n\
   *     expect('foobar').to.have.length(6);\n\
   *\n\
   * Can also be used as a chain precursor to a value\n\
   * comparison for the length property.\n\
   *\n\
   *     expect('foo').to.have.length.above(2);\n\
   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n\
   *     expect('foo').to.have.length.below(4);\n\
   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n\
   *     expect('foo').to.have.length.within(2,4);\n\
   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n\
   *\n\
   * @name length\n\
   * @alias lengthOf\n\
   * @param {Number} length\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  function assertLengthChain () {\n\
    flag(this, 'doLength', true);\n\
  }\n\
\n\
  function assertLength (n, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    new Assertion(obj, msg).to.have.property('length');\n\
    var len = obj.length;\n\
\n\
    this.assert(\n\
        len == n\n\
      , 'expected #{this} to have a length of #{exp} but got #{act}'\n\
      , 'expected #{this} to not have a length of #{act}'\n\
      , n\n\
      , len\n\
    );\n\
  }\n\
\n\
  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n\
  Assertion.addMethod('lengthOf', assertLength, assertLengthChain);\n\
\n\
  /**\n\
   * ### .match(regexp)\n\
   *\n\
   * Asserts that the target matches a regular expression.\n\
   *\n\
   *     expect('foobar').to.match(/^foo/);\n\
   *\n\
   * @name match\n\
   * @param {RegExp} RegularExpression\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addMethod('match', function (re, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    this.assert(\n\
        re.exec(obj)\n\
      , 'expected #{this} to match ' + re\n\
      , 'expected #{this} not to match ' + re\n\
    );\n\
  });\n\
\n\
  /**\n\
   * ### .string(string)\n\
   *\n\
   * Asserts that the string target contains another string.\n\
   *\n\
   *     expect('foobar').to.have.string('bar');\n\
   *\n\
   * @name string\n\
   * @param {String} string\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addMethod('string', function (str, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    new Assertion(obj, msg).is.a('string');\n\
\n\
    this.assert(\n\
        ~obj.indexOf(str)\n\
      , 'expected #{this} to contain ' + _.inspect(str)\n\
      , 'expected #{this} to not contain ' + _.inspect(str)\n\
    );\n\
  });\n\
\n\
\n\
  /**\n\
   * ### .keys(key1, [key2], [...])\n\
   *\n\
   * Asserts that the target has exactly the given keys, or\n\
   * asserts the inclusion of some keys when using the\n\
   * `include` or `contain` modifiers.\n\
   *\n\
   *     expect({ foo: 1, bar: 2 }).to.have.keys(['foo', 'bar']);\n\
   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.keys('foo', 'bar');\n\
   *\n\
   * @name keys\n\
   * @alias key\n\
   * @param {String...|Array} keys\n\
   * @api public\n\
   */\n\
\n\
  function assertKeys (keys) {\n\
    var obj = flag(this, 'object')\n\
      , str\n\
      , ok = true;\n\
\n\
    keys = keys instanceof Array\n\
      ? keys\n\
      : Array.prototype.slice.call(arguments);\n\
\n\
    if (!keys.length) throw new Error('keys required');\n\
\n\
    var actual = Object.keys(obj)\n\
      , len = keys.length;\n\
\n\
    // Inclusion\n\
    ok = keys.every(function(key){\n\
      return ~actual.indexOf(key);\n\
    });\n\
\n\
    // Strict\n\
    if (!flag(this, 'negate') && !flag(this, 'contains')) {\n\
      ok = ok && keys.length == actual.length;\n\
    }\n\
\n\
    // Key string\n\
    if (len > 1) {\n\
      keys = keys.map(function(key){\n\
        return _.inspect(key);\n\
      });\n\
      var last = keys.pop();\n\
      str = keys.join(', ') + ', and ' + last;\n\
    } else {\n\
      str = _.inspect(keys[0]);\n\
    }\n\
\n\
    // Form\n\
    str = (len > 1 ? 'keys ' : 'key ') + str;\n\
\n\
    // Have / include\n\
    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\
\n\
    // Assertion\n\
    this.assert(\n\
        ok\n\
      , 'expected #{this} to ' + str\n\
      , 'expected #{this} to not ' + str\n\
    );\n\
  }\n\
\n\
  Assertion.addMethod('keys', assertKeys);\n\
  Assertion.addMethod('key', assertKeys);\n\
\n\
  /**\n\
   * ### .throw(constructor)\n\
   *\n\
   * Asserts that the function target will throw a specific error, or specific type of error\n\
   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test\n\
   * for the error's message.\n\
   *\n\
   *     var err = new ReferenceError('This is a bad function.');\n\
   *     var fn = function () { throw err; }\n\
   *     expect(fn).to.throw(ReferenceError);\n\
   *     expect(fn).to.throw(Error);\n\
   *     expect(fn).to.throw(/bad function/);\n\
   *     expect(fn).to.not.throw('good function');\n\
   *     expect(fn).to.throw(ReferenceError, /bad function/);\n\
   *     expect(fn).to.throw(err);\n\
   *     expect(fn).to.not.throw(new RangeError('Out of range.'));\n\
   *\n\
   * Please note that when a throw expectation is negated, it will check each\n\
   * parameter independently, starting with error constructor type. The appropriate way\n\
   * to check for the existence of a type of error but for a message that does not match\n\
   * is to use `and`.\n\
   *\n\
   *     expect(fn).to.throw(ReferenceError)\n\
   *        .and.not.throw(/good function/);\n\
   *\n\
   * @name throw\n\
   * @alias throws\n\
   * @alias Throw\n\
   * @param {ErrorConstructor} constructor\n\
   * @param {String|RegExp} expected error message\n\
   * @param {String} message _optional_\n\
   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n\
   * @returns error for chaining (null if no error)\n\
   * @api public\n\
   */\n\
\n\
  function assertThrows (constructor, errMsg, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    new Assertion(obj, msg).is.a('function');\n\
\n\
    var thrown = false\n\
      , desiredError = null\n\
      , name = null\n\
      , thrownError = null;\n\
\n\
    if (arguments.length === 0) {\n\
      errMsg = null;\n\
      constructor = null;\n\
    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {\n\
      errMsg = constructor;\n\
      constructor = null;\n\
    } else if (constructor && constructor instanceof Error) {\n\
      desiredError = constructor;\n\
      constructor = null;\n\
      errMsg = null;\n\
    } else if (typeof constructor === 'function') {\n\
      name = (new constructor()).name;\n\
    } else {\n\
      constructor = null;\n\
    }\n\
\n\
    try {\n\
      obj();\n\
    } catch (err) {\n\
      // first, check desired error\n\
      if (desiredError) {\n\
        this.assert(\n\
            err === desiredError\n\
          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n\
          , 'expected #{this} to not throw #{exp}'\n\
          , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n\
          , (err instanceof Error ? err.toString() : err)\n\
        );\n\
        flag(this, 'object', err);\n\
\n\
        return this;\n\
      }\n\
      // next, check constructor\n\
      if (constructor) {\n\
        this.assert(\n\
            err instanceof constructor\n\
          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n\
          , 'expected #{this} to not throw #{exp} but #{act} was thrown'\n\
          , name\n\
          , (err instanceof Error ? err.toString() : err)\n\
        );\n\
\n\
        if (!errMsg) {\n\
          flag(this, 'object', err);\n\
          return this;\n\
        }\n\
      }\n\
      // next, check message\n\
      var message = 'object' === _.type(err) && \"message\" in err\n\
        ? err.message\n\
        : '' + err;\n\
\n\
      if ((message != null) && errMsg && errMsg instanceof RegExp) {\n\
        this.assert(\n\
            errMsg.exec(message)\n\
          , 'expected #{this} to throw error matching #{exp} but got #{act}'\n\
          , 'expected #{this} to throw error not matching #{exp}'\n\
          , errMsg\n\
          , message\n\
        );\n\
        flag(this, 'object', err);\n\
\n\
        return this;\n\
      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {\n\
        this.assert(\n\
            ~message.indexOf(errMsg)\n\
          , 'expected #{this} to throw error including #{exp} but got #{act}'\n\
          , 'expected #{this} to throw error not including #{act}'\n\
          , errMsg\n\
          , message\n\
        );\n\
        flag(this, 'object', err);\n\
\n\
        return this;\n\
      } else {\n\
        thrown = true;\n\
        thrownError = err;\n\
      }\n\
    }\n\
\n\
    var actuallyGot = ''\n\
      , expectedThrown = name !== null\n\
        ? name\n\
        : desiredError\n\
          ? '#{exp}' //_.inspect(desiredError)\n\
          : 'an error';\n\
\n\
    if (thrown) {\n\
      actuallyGot = ' but #{act} was thrown'\n\
    }\n\
\n\
    this.assert(\n\
        thrown === true\n\
      , 'expected #{this} to throw ' + expectedThrown + actuallyGot\n\
      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot\n\
      , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n\
      , (thrownError instanceof Error ? thrownError.toString() : thrownError)\n\
    );\n\
    flag(this, 'object', null);\n\
  };\n\
\n\
  Assertion.addMethod('throw', assertThrows);\n\
  Assertion.addMethod('throws', assertThrows);\n\
  Assertion.addMethod('Throw', assertThrows);\n\
\n\
  /**\n\
   * ### .respondTo(method)\n\
   *\n\
   * Asserts that the object or class target will respond to a method.\n\
   *\n\
   *     Klass.prototype.bar = function(){};\n\
   *     expect(Klass).to.respondTo('bar');\n\
   *     expect(obj).to.respondTo('bar');\n\
   *\n\
   * To check if a constructor will respond to a static function,\n\
   * set the `itself` flag.\n\
   *\n\
   *     Klass.baz = function(){};\n\
   *     expect(Klass).itself.to.respondTo('baz');\n\
   *\n\
   * @name respondTo\n\
   * @param {String} method\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addMethod('respondTo', function (method, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object')\n\
      , itself = flag(this, 'itself')\n\
      , context = ('function' === _.type(obj) && !itself)\n\
        ? obj.prototype[method]\n\
        : obj[method];\n\
\n\
    this.assert(\n\
        'function' === typeof context\n\
      , 'expected #{this} to respond to ' + _.inspect(method)\n\
      , 'expected #{this} to not respond to ' + _.inspect(method)\n\
    );\n\
  });\n\
\n\
  /**\n\
   * ### .itself\n\
   *\n\
   * Sets the `itself` flag, later used by the `respondTo` assertion.\n\
   *\n\
   *     function Foo() {}\n\
   *     Foo.bar = function() {}\n\
   *     Foo.prototype.baz = function() {}\n\
   *\n\
   *     expect(Foo).itself.to.respondTo('bar');\n\
   *     expect(Foo).itself.not.to.respondTo('baz');\n\
   *\n\
   * @name itself\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addProperty('itself', function () {\n\
    flag(this, 'itself', true);\n\
  });\n\
\n\
  /**\n\
   * ### .satisfy(method)\n\
   *\n\
   * Asserts that the target passes a given truth test.\n\
   *\n\
   *     expect(1).to.satisfy(function(num) { return num > 0; });\n\
   *\n\
   * @name satisfy\n\
   * @param {Function} matcher\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addMethod('satisfy', function (matcher, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    this.assert(\n\
        matcher(obj)\n\
      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n\
      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n\
      , this.negate ? false : true\n\
      , matcher(obj)\n\
    );\n\
  });\n\
\n\
  /**\n\
   * ### .closeTo(expected, delta)\n\
   *\n\
   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n\
   *\n\
   *     expect(1.5).to.be.closeTo(1, 0.5);\n\
   *\n\
   * @name closeTo\n\
   * @param {Number} expected\n\
   * @param {Number} delta\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addMethod('closeTo', function (expected, delta, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
    this.assert(\n\
        Math.abs(obj - expected) <= delta\n\
      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n\
      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n\
    );\n\
  });\n\
\n\
  function isSubsetOf(subset, superset) {\n\
    return subset.every(function(elem) {\n\
      return superset.indexOf(elem) !== -1;\n\
    })\n\
  }\n\
\n\
  /**\n\
   * ### .members(set)\n\
   *\n\
   * Asserts that the target is a superset of `set`,\n\
   * or that the target and `set` have the same members.\n\
   *\n\
   *     expect([1, 2, 3]).to.include.members([3, 2]);\n\
   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);\n\
   *\n\
   *     expect([4, 2]).to.have.members([2, 4]);\n\
   *     expect([5, 2]).to.not.have.members([5, 2, 1]);\n\
   *\n\
   * @name members\n\
   * @param {Array} set\n\
   * @param {String} message _optional_\n\
   * @api public\n\
   */\n\
\n\
  Assertion.addMethod('members', function (subset, msg) {\n\
    if (msg) flag(this, 'message', msg);\n\
    var obj = flag(this, 'object');\n\
\n\
    new Assertion(obj).to.be.an('array');\n\
    new Assertion(subset).to.be.an('array');\n\
\n\
    if (flag(this, 'contains')) {\n\
      return this.assert(\n\
          isSubsetOf(subset, obj)\n\
        , 'expected #{this} to be a superset of #{act}'\n\
        , 'expected #{this} to not be a superset of #{act}'\n\
        , obj\n\
        , subset\n\
      );\n\
    }\n\
\n\
    this.assert(\n\
        isSubsetOf(obj, subset) && isSubsetOf(subset, obj)\n\
        , 'expected #{this} to have the same members as #{act}'\n\
        , 'expected #{this} to not have the same members as #{act}'\n\
        , obj\n\
        , subset\n\
    );\n\
  });\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/core/assertions.js"
));
require.register("chaijs-chai/lib/chai/interface/assert.js", Function("exports, require, module",
"/*!\n\
 * chai\n\
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
\n\
module.exports = function (chai, util) {\n\
\n\
  /*!\n\
   * Chai dependencies.\n\
   */\n\
\n\
  var Assertion = chai.Assertion\n\
    , flag = util.flag;\n\
\n\
  /*!\n\
   * Module export.\n\
   */\n\
\n\
  /**\n\
   * ### assert(expression, message)\n\
   *\n\
   * Write your own test expressions.\n\
   *\n\
   *     assert('foo' !== 'bar', 'foo is not bar');\n\
   *     assert(Array.isArray([]), 'empty arrays are arrays');\n\
   *\n\
   * @param {Mixed} expression to test for truthiness\n\
   * @param {String} message to display on error\n\
   * @name assert\n\
   * @api public\n\
   */\n\
\n\
  var assert = chai.assert = function (express, errmsg) {\n\
    var test = new Assertion(null);\n\
    test.assert(\n\
        express\n\
      , errmsg\n\
      , '[ negation message unavailable ]'\n\
    );\n\
  };\n\
\n\
  /**\n\
   * ### .fail(actual, expected, [message], [operator])\n\
   *\n\
   * Throw a failure. Node.js `assert` module-compatible.\n\
   *\n\
   * @name fail\n\
   * @param {Mixed} actual\n\
   * @param {Mixed} expected\n\
   * @param {String} message\n\
   * @param {String} operator\n\
   * @api public\n\
   */\n\
\n\
  assert.fail = function (actual, expected, message, operator) {\n\
    throw new chai.AssertionError({\n\
        actual: actual\n\
      , expected: expected\n\
      , message: message\n\
      , operator: operator\n\
      , stackStartFunction: assert.fail\n\
    });\n\
  };\n\
\n\
  /**\n\
   * ### .ok(object, [message])\n\
   *\n\
   * Asserts that `object` is truthy.\n\
   *\n\
   *     assert.ok('everything', 'everything is ok');\n\
   *     assert.ok(false, 'this will fail');\n\
   *\n\
   * @name ok\n\
   * @param {Mixed} object to test\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.ok = function (val, msg) {\n\
    new Assertion(val, msg).is.ok;\n\
  };\n\
\n\
  /**\n\
   * ### .notOk(object, [message])\n\
   *\n\
   * Asserts that `object` is falsy.\n\
   *\n\
   *     assert.notOk('everything', 'this will fail');\n\
   *     assert.notOk(false, 'this will pass');\n\
   *\n\
   * @name notOk\n\
   * @param {Mixed} object to test\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notOk = function (val, msg) {\n\
    new Assertion(val, msg).is.not.ok;\n\
  };\n\
\n\
  /**\n\
   * ### .equal(actual, expected, [message])\n\
   *\n\
   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n\
   *\n\
   *     assert.equal(3, '3', '== coerces values to strings');\n\
   *\n\
   * @name equal\n\
   * @param {Mixed} actual\n\
   * @param {Mixed} expected\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.equal = function (act, exp, msg) {\n\
    var test = new Assertion(act, msg);\n\
\n\
    test.assert(\n\
        exp == flag(test, 'object')\n\
      , 'expected #{this} to equal #{exp}'\n\
      , 'expected #{this} to not equal #{act}'\n\
      , exp\n\
      , act\n\
    );\n\
  };\n\
\n\
  /**\n\
   * ### .notEqual(actual, expected, [message])\n\
   *\n\
   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n\
   *\n\
   *     assert.notEqual(3, 4, 'these numbers are not equal');\n\
   *\n\
   * @name notEqual\n\
   * @param {Mixed} actual\n\
   * @param {Mixed} expected\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notEqual = function (act, exp, msg) {\n\
    var test = new Assertion(act, msg);\n\
\n\
    test.assert(\n\
        exp != flag(test, 'object')\n\
      , 'expected #{this} to not equal #{exp}'\n\
      , 'expected #{this} to equal #{act}'\n\
      , exp\n\
      , act\n\
    );\n\
  };\n\
\n\
  /**\n\
   * ### .strictEqual(actual, expected, [message])\n\
   *\n\
   * Asserts strict equality (`===`) of `actual` and `expected`.\n\
   *\n\
   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n\
   *\n\
   * @name strictEqual\n\
   * @param {Mixed} actual\n\
   * @param {Mixed} expected\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.strictEqual = function (act, exp, msg) {\n\
    new Assertion(act, msg).to.equal(exp);\n\
  };\n\
\n\
  /**\n\
   * ### .notStrictEqual(actual, expected, [message])\n\
   *\n\
   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n\
   *\n\
   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n\
   *\n\
   * @name notStrictEqual\n\
   * @param {Mixed} actual\n\
   * @param {Mixed} expected\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notStrictEqual = function (act, exp, msg) {\n\
    new Assertion(act, msg).to.not.equal(exp);\n\
  };\n\
\n\
  /**\n\
   * ### .deepEqual(actual, expected, [message])\n\
   *\n\
   * Asserts that `actual` is deeply equal to `expected`.\n\
   *\n\
   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n\
   *\n\
   * @name deepEqual\n\
   * @param {Mixed} actual\n\
   * @param {Mixed} expected\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.deepEqual = function (act, exp, msg) {\n\
    new Assertion(act, msg).to.eql(exp);\n\
  };\n\
\n\
  /**\n\
   * ### .notDeepEqual(actual, expected, [message])\n\
   *\n\
   * Assert that `actual` is not deeply equal to `expected`.\n\
   *\n\
   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n\
   *\n\
   * @name notDeepEqual\n\
   * @param {Mixed} actual\n\
   * @param {Mixed} expected\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notDeepEqual = function (act, exp, msg) {\n\
    new Assertion(act, msg).to.not.eql(exp);\n\
  };\n\
\n\
  /**\n\
   * ### .isTrue(value, [message])\n\
   *\n\
   * Asserts that `value` is true.\n\
   *\n\
   *     var teaServed = true;\n\
   *     assert.isTrue(teaServed, 'the tea has been served');\n\
   *\n\
   * @name isTrue\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isTrue = function (val, msg) {\n\
    new Assertion(val, msg).is['true'];\n\
  };\n\
\n\
  /**\n\
   * ### .isFalse(value, [message])\n\
   *\n\
   * Asserts that `value` is false.\n\
   *\n\
   *     var teaServed = false;\n\
   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n\
   *\n\
   * @name isFalse\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isFalse = function (val, msg) {\n\
    new Assertion(val, msg).is['false'];\n\
  };\n\
\n\
  /**\n\
   * ### .isNull(value, [message])\n\
   *\n\
   * Asserts that `value` is null.\n\
   *\n\
   *     assert.isNull(err, 'there was no error');\n\
   *\n\
   * @name isNull\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNull = function (val, msg) {\n\
    new Assertion(val, msg).to.equal(null);\n\
  };\n\
\n\
  /**\n\
   * ### .isNotNull(value, [message])\n\
   *\n\
   * Asserts that `value` is not null.\n\
   *\n\
   *     var tea = 'tasty chai';\n\
   *     assert.isNotNull(tea, 'great, time for tea!');\n\
   *\n\
   * @name isNotNull\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNotNull = function (val, msg) {\n\
    new Assertion(val, msg).to.not.equal(null);\n\
  };\n\
\n\
  /**\n\
   * ### .isUndefined(value, [message])\n\
   *\n\
   * Asserts that `value` is `undefined`.\n\
   *\n\
   *     var tea;\n\
   *     assert.isUndefined(tea, 'no tea defined');\n\
   *\n\
   * @name isUndefined\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isUndefined = function (val, msg) {\n\
    new Assertion(val, msg).to.equal(undefined);\n\
  };\n\
\n\
  /**\n\
   * ### .isDefined(value, [message])\n\
   *\n\
   * Asserts that `value` is not `undefined`.\n\
   *\n\
   *     var tea = 'cup of chai';\n\
   *     assert.isDefined(tea, 'tea has been defined');\n\
   *\n\
   * @name isDefined\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isDefined = function (val, msg) {\n\
    new Assertion(val, msg).to.not.equal(undefined);\n\
  };\n\
\n\
  /**\n\
   * ### .isFunction(value, [message])\n\
   *\n\
   * Asserts that `value` is a function.\n\
   *\n\
   *     function serveTea() { return 'cup of tea'; };\n\
   *     assert.isFunction(serveTea, 'great, we can have tea now');\n\
   *\n\
   * @name isFunction\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isFunction = function (val, msg) {\n\
    new Assertion(val, msg).to.be.a('function');\n\
  };\n\
\n\
  /**\n\
   * ### .isNotFunction(value, [message])\n\
   *\n\
   * Asserts that `value` is _not_ a function.\n\
   *\n\
   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n\
   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n\
   *\n\
   * @name isNotFunction\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNotFunction = function (val, msg) {\n\
    new Assertion(val, msg).to.not.be.a('function');\n\
  };\n\
\n\
  /**\n\
   * ### .isObject(value, [message])\n\
   *\n\
   * Asserts that `value` is an object (as revealed by\n\
   * `Object.prototype.toString`).\n\
   *\n\
   *     var selection = { name: 'Chai', serve: 'with spices' };\n\
   *     assert.isObject(selection, 'tea selection is an object');\n\
   *\n\
   * @name isObject\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isObject = function (val, msg) {\n\
    new Assertion(val, msg).to.be.a('object');\n\
  };\n\
\n\
  /**\n\
   * ### .isNotObject(value, [message])\n\
   *\n\
   * Asserts that `value` is _not_ an object.\n\
   *\n\
   *     var selection = 'chai'\n\
   *     assert.isObject(selection, 'tea selection is not an object');\n\
   *     assert.isObject(null, 'null is not an object');\n\
   *\n\
   * @name isNotObject\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNotObject = function (val, msg) {\n\
    new Assertion(val, msg).to.not.be.a('object');\n\
  };\n\
\n\
  /**\n\
   * ### .isArray(value, [message])\n\
   *\n\
   * Asserts that `value` is an array.\n\
   *\n\
   *     var menu = [ 'green', 'chai', 'oolong' ];\n\
   *     assert.isArray(menu, 'what kind of tea do we want?');\n\
   *\n\
   * @name isArray\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isArray = function (val, msg) {\n\
    new Assertion(val, msg).to.be.an('array');\n\
  };\n\
\n\
  /**\n\
   * ### .isNotArray(value, [message])\n\
   *\n\
   * Asserts that `value` is _not_ an array.\n\
   *\n\
   *     var menu = 'green|chai|oolong';\n\
   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n\
   *\n\
   * @name isNotArray\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNotArray = function (val, msg) {\n\
    new Assertion(val, msg).to.not.be.an('array');\n\
  };\n\
\n\
  /**\n\
   * ### .isString(value, [message])\n\
   *\n\
   * Asserts that `value` is a string.\n\
   *\n\
   *     var teaOrder = 'chai';\n\
   *     assert.isString(teaOrder, 'order placed');\n\
   *\n\
   * @name isString\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isString = function (val, msg) {\n\
    new Assertion(val, msg).to.be.a('string');\n\
  };\n\
\n\
  /**\n\
   * ### .isNotString(value, [message])\n\
   *\n\
   * Asserts that `value` is _not_ a string.\n\
   *\n\
   *     var teaOrder = 4;\n\
   *     assert.isNotString(teaOrder, 'order placed');\n\
   *\n\
   * @name isNotString\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNotString = function (val, msg) {\n\
    new Assertion(val, msg).to.not.be.a('string');\n\
  };\n\
\n\
  /**\n\
   * ### .isNumber(value, [message])\n\
   *\n\
   * Asserts that `value` is a number.\n\
   *\n\
   *     var cups = 2;\n\
   *     assert.isNumber(cups, 'how many cups');\n\
   *\n\
   * @name isNumber\n\
   * @param {Number} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNumber = function (val, msg) {\n\
    new Assertion(val, msg).to.be.a('number');\n\
  };\n\
\n\
  /**\n\
   * ### .isNotNumber(value, [message])\n\
   *\n\
   * Asserts that `value` is _not_ a number.\n\
   *\n\
   *     var cups = '2 cups please';\n\
   *     assert.isNotNumber(cups, 'how many cups');\n\
   *\n\
   * @name isNotNumber\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNotNumber = function (val, msg) {\n\
    new Assertion(val, msg).to.not.be.a('number');\n\
  };\n\
\n\
  /**\n\
   * ### .isBoolean(value, [message])\n\
   *\n\
   * Asserts that `value` is a boolean.\n\
   *\n\
   *     var teaReady = true\n\
   *       , teaServed = false;\n\
   *\n\
   *     assert.isBoolean(teaReady, 'is the tea ready');\n\
   *     assert.isBoolean(teaServed, 'has tea been served');\n\
   *\n\
   * @name isBoolean\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isBoolean = function (val, msg) {\n\
    new Assertion(val, msg).to.be.a('boolean');\n\
  };\n\
\n\
  /**\n\
   * ### .isNotBoolean(value, [message])\n\
   *\n\
   * Asserts that `value` is _not_ a boolean.\n\
   *\n\
   *     var teaReady = 'yep'\n\
   *       , teaServed = 'nope';\n\
   *\n\
   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n\
   *     assert.isNotBoolean(teaServed, 'has tea been served');\n\
   *\n\
   * @name isNotBoolean\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.isNotBoolean = function (val, msg) {\n\
    new Assertion(val, msg).to.not.be.a('boolean');\n\
  };\n\
\n\
  /**\n\
   * ### .typeOf(value, name, [message])\n\
   *\n\
   * Asserts that `value`'s type is `name`, as determined by\n\
   * `Object.prototype.toString`.\n\
   *\n\
   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n\
   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n\
   *     assert.typeOf('tea', 'string', 'we have a string');\n\
   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n\
   *     assert.typeOf(null, 'null', 'we have a null');\n\
   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n\
   *\n\
   * @name typeOf\n\
   * @param {Mixed} value\n\
   * @param {String} name\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.typeOf = function (val, type, msg) {\n\
    new Assertion(val, msg).to.be.a(type);\n\
  };\n\
\n\
  /**\n\
   * ### .notTypeOf(value, name, [message])\n\
   *\n\
   * Asserts that `value`'s type is _not_ `name`, as determined by\n\
   * `Object.prototype.toString`.\n\
   *\n\
   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n\
   *\n\
   * @name notTypeOf\n\
   * @param {Mixed} value\n\
   * @param {String} typeof name\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notTypeOf = function (val, type, msg) {\n\
    new Assertion(val, msg).to.not.be.a(type);\n\
  };\n\
\n\
  /**\n\
   * ### .instanceOf(object, constructor, [message])\n\
   *\n\
   * Asserts that `value` is an instance of `constructor`.\n\
   *\n\
   *     var Tea = function (name) { this.name = name; }\n\
   *       , chai = new Tea('chai');\n\
   *\n\
   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n\
   *\n\
   * @name instanceOf\n\
   * @param {Object} object\n\
   * @param {Constructor} constructor\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.instanceOf = function (val, type, msg) {\n\
    new Assertion(val, msg).to.be.instanceOf(type);\n\
  };\n\
\n\
  /**\n\
   * ### .notInstanceOf(object, constructor, [message])\n\
   *\n\
   * Asserts `value` is not an instance of `constructor`.\n\
   *\n\
   *     var Tea = function (name) { this.name = name; }\n\
   *       , chai = new String('chai');\n\
   *\n\
   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n\
   *\n\
   * @name notInstanceOf\n\
   * @param {Object} object\n\
   * @param {Constructor} constructor\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notInstanceOf = function (val, type, msg) {\n\
    new Assertion(val, msg).to.not.be.instanceOf(type);\n\
  };\n\
\n\
  /**\n\
   * ### .include(haystack, needle, [message])\n\
   *\n\
   * Asserts that `haystack` includes `needle`. Works\n\
   * for strings and arrays.\n\
   *\n\
   *     assert.include('foobar', 'bar', 'foobar contains string \"bar\"');\n\
   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');\n\
   *\n\
   * @name include\n\
   * @param {Array|String} haystack\n\
   * @param {Mixed} needle\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.include = function (exp, inc, msg) {\n\
    new Assertion(exp, msg).include(inc);\n\
  };\n\
\n\
  /**\n\
   * ### .notInclude(haystack, needle, [message])\n\
   *\n\
   * Asserts that `haystack` does not include `needle`. Works\n\
   * for strings and arrays.\n\
   *i\n\
   *     assert.notInclude('foobar', 'baz', 'string not include substring');\n\
   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');\n\
   *\n\
   * @name notInclude\n\
   * @param {Array|String} haystack\n\
   * @param {Mixed} needle\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notInclude = function (exp, inc, msg) {\n\
    new Assertion(exp, msg).not.include(inc);\n\
  };\n\
\n\
  /**\n\
   * ### .match(value, regexp, [message])\n\
   *\n\
   * Asserts that `value` matches the regular expression `regexp`.\n\
   *\n\
   *     assert.match('foobar', /^foo/, 'regexp matches');\n\
   *\n\
   * @name match\n\
   * @param {Mixed} value\n\
   * @param {RegExp} regexp\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.match = function (exp, re, msg) {\n\
    new Assertion(exp, msg).to.match(re);\n\
  };\n\
\n\
  /**\n\
   * ### .notMatch(value, regexp, [message])\n\
   *\n\
   * Asserts that `value` does not match the regular expression `regexp`.\n\
   *\n\
   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n\
   *\n\
   * @name notMatch\n\
   * @param {Mixed} value\n\
   * @param {RegExp} regexp\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notMatch = function (exp, re, msg) {\n\
    new Assertion(exp, msg).to.not.match(re);\n\
  };\n\
\n\
  /**\n\
   * ### .property(object, property, [message])\n\
   *\n\
   * Asserts that `object` has a property named by `property`.\n\
   *\n\
   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n\
   *\n\
   * @name property\n\
   * @param {Object} object\n\
   * @param {String} property\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.property = function (obj, prop, msg) {\n\
    new Assertion(obj, msg).to.have.property(prop);\n\
  };\n\
\n\
  /**\n\
   * ### .notProperty(object, property, [message])\n\
   *\n\
   * Asserts that `object` does _not_ have a property named by `property`.\n\
   *\n\
   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n\
   *\n\
   * @name notProperty\n\
   * @param {Object} object\n\
   * @param {String} property\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notProperty = function (obj, prop, msg) {\n\
    new Assertion(obj, msg).to.not.have.property(prop);\n\
  };\n\
\n\
  /**\n\
   * ### .deepProperty(object, property, [message])\n\
   *\n\
   * Asserts that `object` has a property named by `property`, which can be a\n\
   * string using dot- and bracket-notation for deep reference.\n\
   *\n\
   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');\n\
   *\n\
   * @name deepProperty\n\
   * @param {Object} object\n\
   * @param {String} property\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.deepProperty = function (obj, prop, msg) {\n\
    new Assertion(obj, msg).to.have.deep.property(prop);\n\
  };\n\
\n\
  /**\n\
   * ### .notDeepProperty(object, property, [message])\n\
   *\n\
   * Asserts that `object` does _not_ have a property named by `property`, which\n\
   * can be a string using dot- and bracket-notation for deep reference.\n\
   *\n\
   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n\
   *\n\
   * @name notDeepProperty\n\
   * @param {Object} object\n\
   * @param {String} property\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.notDeepProperty = function (obj, prop, msg) {\n\
    new Assertion(obj, msg).to.not.have.deep.property(prop);\n\
  };\n\
\n\
  /**\n\
   * ### .propertyVal(object, property, value, [message])\n\
   *\n\
   * Asserts that `object` has a property named by `property` with value given\n\
   * by `value`.\n\
   *\n\
   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n\
   *\n\
   * @name propertyVal\n\
   * @param {Object} object\n\
   * @param {String} property\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.propertyVal = function (obj, prop, val, msg) {\n\
    new Assertion(obj, msg).to.have.property(prop, val);\n\
  };\n\
\n\
  /**\n\
   * ### .propertyNotVal(object, property, value, [message])\n\
   *\n\
   * Asserts that `object` has a property named by `property`, but with a value\n\
   * different from that given by `value`.\n\
   *\n\
   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');\n\
   *\n\
   * @name propertyNotVal\n\
   * @param {Object} object\n\
   * @param {String} property\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.propertyNotVal = function (obj, prop, val, msg) {\n\
    new Assertion(obj, msg).to.not.have.property(prop, val);\n\
  };\n\
\n\
  /**\n\
   * ### .deepPropertyVal(object, property, value, [message])\n\
   *\n\
   * Asserts that `object` has a property named by `property` with value given\n\
   * by `value`. `property` can use dot- and bracket-notation for deep\n\
   * reference.\n\
   *\n\
   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n\
   *\n\
   * @name deepPropertyVal\n\
   * @param {Object} object\n\
   * @param {String} property\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.deepPropertyVal = function (obj, prop, val, msg) {\n\
    new Assertion(obj, msg).to.have.deep.property(prop, val);\n\
  };\n\
\n\
  /**\n\
   * ### .deepPropertyNotVal(object, property, value, [message])\n\
   *\n\
   * Asserts that `object` has a property named by `property`, but with a value\n\
   * different from that given by `value`. `property` can use dot- and\n\
   * bracket-notation for deep reference.\n\
   *\n\
   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n\
   *\n\
   * @name deepPropertyNotVal\n\
   * @param {Object} object\n\
   * @param {String} property\n\
   * @param {Mixed} value\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.deepPropertyNotVal = function (obj, prop, val, msg) {\n\
    new Assertion(obj, msg).to.not.have.deep.property(prop, val);\n\
  };\n\
\n\
  /**\n\
   * ### .lengthOf(object, length, [message])\n\
   *\n\
   * Asserts that `object` has a `length` property with the expected value.\n\
   *\n\
   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n\
   *     assert.lengthOf('foobar', 5, 'string has length of 6');\n\
   *\n\
   * @name lengthOf\n\
   * @param {Mixed} object\n\
   * @param {Number} length\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.lengthOf = function (exp, len, msg) {\n\
    new Assertion(exp, msg).to.have.length(len);\n\
  };\n\
\n\
  /**\n\
   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])\n\
   *\n\
   * Asserts that `function` will throw an error that is an instance of\n\
   * `constructor`, or alternately that it will throw an error with message\n\
   * matching `regexp`.\n\
   *\n\
   *     assert.throw(fn, 'function throws a reference error');\n\
   *     assert.throw(fn, /function throws a reference error/);\n\
   *     assert.throw(fn, ReferenceError);\n\
   *     assert.throw(fn, ReferenceError, 'function throws a reference error');\n\
   *     assert.throw(fn, ReferenceError, /function throws a reference error/);\n\
   *\n\
   * @name throws\n\
   * @alias throw\n\
   * @alias Throw\n\
   * @param {Function} function\n\
   * @param {ErrorConstructor} constructor\n\
   * @param {RegExp} regexp\n\
   * @param {String} message\n\
   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n\
   * @api public\n\
   */\n\
\n\
  assert.Throw = function (fn, errt, errs, msg) {\n\
    if ('string' === typeof errt || errt instanceof RegExp) {\n\
      errs = errt;\n\
      errt = null;\n\
    }\n\
\n\
    new Assertion(fn, msg).to.Throw(errt, errs);\n\
  };\n\
\n\
  /**\n\
   * ### .doesNotThrow(function, [constructor/regexp], [message])\n\
   *\n\
   * Asserts that `function` will _not_ throw an error that is an instance of\n\
   * `constructor`, or alternately that it will not throw an error with message\n\
   * matching `regexp`.\n\
   *\n\
   *     assert.doesNotThrow(fn, Error, 'function does not throw');\n\
   *\n\
   * @name doesNotThrow\n\
   * @param {Function} function\n\
   * @param {ErrorConstructor} constructor\n\
   * @param {RegExp} regexp\n\
   * @param {String} message\n\
   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n\
   * @api public\n\
   */\n\
\n\
  assert.doesNotThrow = function (fn, type, msg) {\n\
    if ('string' === typeof type) {\n\
      msg = type;\n\
      type = null;\n\
    }\n\
\n\
    new Assertion(fn, msg).to.not.Throw(type);\n\
  };\n\
\n\
  /**\n\
   * ### .operator(val1, operator, val2, [message])\n\
   *\n\
   * Compares two values using `operator`.\n\
   *\n\
   *     assert.operator(1, '<', 2, 'everything is ok');\n\
   *     assert.operator(1, '>', 2, 'this will fail');\n\
   *\n\
   * @name operator\n\
   * @param {Mixed} val1\n\
   * @param {String} operator\n\
   * @param {Mixed} val2\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.operator = function (val, operator, val2, msg) {\n\
    if (!~['==', '===', '>', '>=', '<', '<=', '!=', '!=='].indexOf(operator)) {\n\
      throw new Error('Invalid operator \"' + operator + '\"');\n\
    }\n\
    var test = new Assertion(eval(val + operator + val2), msg);\n\
    test.assert(\n\
        true === flag(test, 'object')\n\
      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n\
      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n\
  };\n\
\n\
  /**\n\
   * ### .closeTo(actual, expected, delta, [message])\n\
   *\n\
   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n\
   *\n\
   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n\
   *\n\
   * @name closeTo\n\
   * @param {Number} actual\n\
   * @param {Number} expected\n\
   * @param {Number} delta\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.closeTo = function (act, exp, delta, msg) {\n\
    new Assertion(act, msg).to.be.closeTo(exp, delta);\n\
  };\n\
\n\
  /**\n\
   * ### .sameMembers(set1, set2, [message])\n\
   *\n\
   * Asserts that `set1` and `set2` have the same members.\n\
   * Order is not taken into account.\n\
   *\n\
   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n\
   *\n\
   * @name sameMembers\n\
   * @param {Array} superset\n\
   * @param {Array} subset\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.sameMembers = function (set1, set2, msg) {\n\
    new Assertion(set1, msg).to.have.same.members(set2);\n\
  }\n\
\n\
  /**\n\
   * ### .includeMembers(superset, subset, [message])\n\
   *\n\
   * Asserts that `subset` is included in `superset`.\n\
   * Order is not taken into account.\n\
   *\n\
   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');\n\
   *\n\
   * @name includeMembers\n\
   * @param {Array} superset\n\
   * @param {Array} subset\n\
   * @param {String} message\n\
   * @api public\n\
   */\n\
\n\
  assert.includeMembers = function (superset, subset, msg) {\n\
    new Assertion(superset, msg).to.include.members(subset);\n\
  }\n\
\n\
  /*!\n\
   * Undocumented / untested\n\
   */\n\
\n\
  assert.ifError = function (val, msg) {\n\
    new Assertion(val, msg).to.not.be.ok;\n\
  };\n\
\n\
  /*!\n\
   * Aliases.\n\
   */\n\
\n\
  (function alias(name, as){\n\
    assert[as] = assert[name];\n\
    return alias;\n\
  })\n\
  ('Throw', 'throw')\n\
  ('Throw', 'throws');\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/interface/assert.js"
));
require.register("chaijs-chai/lib/chai/interface/expect.js", Function("exports, require, module",
"/*!\n\
 * chai\n\
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
module.exports = function (chai, util) {\n\
  chai.expect = function (val, message) {\n\
    return new chai.Assertion(val, message);\n\
  };\n\
};\n\
\n\
//@ sourceURL=chaijs-chai/lib/chai/interface/expect.js"
));
require.register("chaijs-chai/lib/chai/interface/should.js", Function("exports, require, module",
"/*!\n\
 * chai\n\
 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
module.exports = function (chai, util) {\n\
  var Assertion = chai.Assertion;\n\
\n\
  function loadShould () {\n\
    // modify Object.prototype to have `should`\n\
    Object.defineProperty(Object.prototype, 'should',\n\
      {\n\
        set: function (value) {\n\
          // See https://github.com/chaijs/chai/issues/86: this makes\n\
          // `whatever.should = someValue` actually set `someValue`, which is\n\
          // especially useful for `global.should = require('chai').should()`.\n\
          //\n\
          // Note that we have to use [[DefineProperty]] instead of [[Put]]\n\
          // since otherwise we would trigger this very setter!\n\
          Object.defineProperty(this, 'should', {\n\
            value: value,\n\
            enumerable: true,\n\
            configurable: true,\n\
            writable: true\n\
          });\n\
        }\n\
      , get: function(){\n\
          if (this instanceof String || this instanceof Number) {\n\
            return new Assertion(this.constructor(this));\n\
          } else if (this instanceof Boolean) {\n\
            return new Assertion(this == true);\n\
          }\n\
          return new Assertion(this);\n\
        }\n\
      , configurable: true\n\
    });\n\
\n\
    var should = {};\n\
\n\
    should.equal = function (val1, val2, msg) {\n\
      new Assertion(val1, msg).to.equal(val2);\n\
    };\n\
\n\
    should.Throw = function (fn, errt, errs, msg) {\n\
      new Assertion(fn, msg).to.Throw(errt, errs);\n\
    };\n\
\n\
    should.exist = function (val, msg) {\n\
      new Assertion(val, msg).to.exist;\n\
    }\n\
\n\
    // negation\n\
    should.not = {}\n\
\n\
    should.not.equal = function (val1, val2, msg) {\n\
      new Assertion(val1, msg).to.not.equal(val2);\n\
    };\n\
\n\
    should.not.Throw = function (fn, errt, errs, msg) {\n\
      new Assertion(fn, msg).to.not.Throw(errt, errs);\n\
    };\n\
\n\
    should.not.exist = function (val, msg) {\n\
      new Assertion(val, msg).to.not.exist;\n\
    }\n\
\n\
    should['throw'] = should['Throw'];\n\
    should.not['throw'] = should.not['Throw'];\n\
\n\
    return should;\n\
  };\n\
\n\
  chai.should = loadShould;\n\
  chai.Should = loadShould;\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/interface/should.js"
));
require.register("chaijs-chai/lib/chai/utils/addChainableMethod.js", Function("exports, require, module",
"/*!\n\
 * Chai - addChainingMethod utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Module dependencies\n\
 */\n\
\n\
var transferFlags = require('./transferFlags');\n\
\n\
/*!\n\
 * Module variables\n\
 */\n\
\n\
// Check whether `__proto__` is supported\n\
var hasProtoSupport = '__proto__' in Object;\n\
\n\
// Without `__proto__` support, this module will need to add properties to a function.\n\
// However, some Function.prototype methods cannot be overwritten,\n\
// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).\n\
var excludeNames = /^(?:length|name|arguments|caller)$/;\n\
\n\
// Cache `Function` properties\n\
var call  = Function.prototype.call,\n\
    apply = Function.prototype.apply;\n\
\n\
/**\n\
 * ### addChainableMethod (ctx, name, method, chainingBehavior)\n\
 *\n\
 * Adds a method to an object, such that the method can also be chained.\n\
 *\n\
 *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n\
 *       var obj = utils.flag(this, 'object');\n\
 *       new chai.Assertion(obj).to.be.equal(str);\n\
 *     });\n\
 *\n\
 * Can also be accessed directly from `chai.Assertion`.\n\
 *\n\
 *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n\
 *\n\
 * The result can then be used as both a method assertion, executing both `method` and\n\
 * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n\
 *\n\
 *     expect(fooStr).to.be.foo('bar');\n\
 *     expect(fooStr).to.be.foo.equal('foo');\n\
 *\n\
 * @param {Object} ctx object to which the method is added\n\
 * @param {String} name of method to add\n\
 * @param {Function} method function to be used for `name`, when called\n\
 * @param {Function} chainingBehavior function to be called every time the property is accessed\n\
 * @name addChainableMethod\n\
 * @api public\n\
 */\n\
\n\
module.exports = function (ctx, name, method, chainingBehavior) {\n\
  if (typeof chainingBehavior !== 'function') {\n\
    chainingBehavior = function () { };\n\
  }\n\
\n\
  var chainableBehavior = {\n\
      method: method\n\
    , chainingBehavior: chainingBehavior\n\
  };\n\
\n\
  // save the methods so we can overwrite them later, if we need to.\n\
  if (!ctx.__methods) {\n\
    ctx.__methods = {};\n\
  }\n\
  ctx.__methods[name] = chainableBehavior;\n\
\n\
  Object.defineProperty(ctx, name,\n\
    { get: function () {\n\
        chainableBehavior.chainingBehavior.call(this);\n\
\n\
        var assert = function () {\n\
          var result = chainableBehavior.method.apply(this, arguments);\n\
          return result === undefined ? this : result;\n\
        };\n\
\n\
        // Use `__proto__` if available\n\
        if (hasProtoSupport) {\n\
          // Inherit all properties from the object by replacing the `Function` prototype\n\
          var prototype = assert.__proto__ = Object.create(this);\n\
          // Restore the `call` and `apply` methods from `Function`\n\
          prototype.call = call;\n\
          prototype.apply = apply;\n\
        }\n\
        // Otherwise, redefine all properties (slow!)\n\
        else {\n\
          var asserterNames = Object.getOwnPropertyNames(ctx);\n\
          asserterNames.forEach(function (asserterName) {\n\
            if (!excludeNames.test(asserterName)) {\n\
              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n\
              Object.defineProperty(assert, asserterName, pd);\n\
            }\n\
          });\n\
        }\n\
\n\
        transferFlags(this, assert);\n\
        return assert;\n\
      }\n\
    , configurable: true\n\
  });\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/addChainableMethod.js"
));
require.register("chaijs-chai/lib/chai/utils/addMethod.js", Function("exports, require, module",
"/*!\n\
 * Chai - addMethod utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### .addMethod (ctx, name, method)\n\
 *\n\
 * Adds a method to the prototype of an object.\n\
 *\n\
 *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n\
 *       var obj = utils.flag(this, 'object');\n\
 *       new chai.Assertion(obj).to.be.equal(str);\n\
 *     });\n\
 *\n\
 * Can also be accessed directly from `chai.Assertion`.\n\
 *\n\
 *     chai.Assertion.addMethod('foo', fn);\n\
 *\n\
 * Then can be used as any other assertion.\n\
 *\n\
 *     expect(fooStr).to.be.foo('bar');\n\
 *\n\
 * @param {Object} ctx object to which the method is added\n\
 * @param {String} name of method to add\n\
 * @param {Function} method function to be used for name\n\
 * @name addMethod\n\
 * @api public\n\
 */\n\
\n\
module.exports = function (ctx, name, method) {\n\
  ctx[name] = function () {\n\
    var result = method.apply(this, arguments);\n\
    return result === undefined ? this : result;\n\
  };\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/addMethod.js"
));
require.register("chaijs-chai/lib/chai/utils/addProperty.js", Function("exports, require, module",
"/*!\n\
 * Chai - addProperty utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### addProperty (ctx, name, getter)\n\
 *\n\
 * Adds a property to the prototype of an object.\n\
 *\n\
 *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n\
 *       var obj = utils.flag(this, 'object');\n\
 *       new chai.Assertion(obj).to.be.instanceof(Foo);\n\
 *     });\n\
 *\n\
 * Can also be accessed directly from `chai.Assertion`.\n\
 *\n\
 *     chai.Assertion.addProperty('foo', fn);\n\
 *\n\
 * Then can be used as any other assertion.\n\
 *\n\
 *     expect(myFoo).to.be.foo;\n\
 *\n\
 * @param {Object} ctx object to which the property is added\n\
 * @param {String} name of property to add\n\
 * @param {Function} getter function to be used for name\n\
 * @name addProperty\n\
 * @api public\n\
 */\n\
\n\
module.exports = function (ctx, name, getter) {\n\
  Object.defineProperty(ctx, name,\n\
    { get: function () {\n\
        var result = getter.call(this);\n\
        return result === undefined ? this : result;\n\
      }\n\
    , configurable: true\n\
  });\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/addProperty.js"
));
require.register("chaijs-chai/lib/chai/utils/flag.js", Function("exports, require, module",
"/*!\n\
 * Chai - flag utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### flag(object ,key, [value])\n\
 *\n\
 * Get or set a flag value on an object. If a\n\
 * value is provided it will be set, else it will\n\
 * return the currently set value or `undefined` if\n\
 * the value is not set.\n\
 *\n\
 *     utils.flag(this, 'foo', 'bar'); // setter\n\
 *     utils.flag(this, 'foo'); // getter, returns `bar`\n\
 *\n\
 * @param {Object} object (constructed Assertion\n\
 * @param {String} key\n\
 * @param {Mixed} value (optional)\n\
 * @name flag\n\
 * @api private\n\
 */\n\
\n\
module.exports = function (obj, key, value) {\n\
  var flags = obj.__flags || (obj.__flags = Object.create(null));\n\
  if (arguments.length === 3) {\n\
    flags[key] = value;\n\
  } else {\n\
    return flags[key];\n\
  }\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/flag.js"
));
require.register("chaijs-chai/lib/chai/utils/getActual.js", Function("exports, require, module",
"/*!\n\
 * Chai - getActual utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * # getActual(object, [actual])\n\
 *\n\
 * Returns the `actual` value for an Assertion\n\
 *\n\
 * @param {Object} object (constructed Assertion)\n\
 * @param {Arguments} chai.Assertion.prototype.assert arguments\n\
 */\n\
\n\
module.exports = function (obj, args) {\n\
  var actual = args[4];\n\
  return 'undefined' !== typeof actual ? actual : obj._obj;\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/getActual.js"
));
require.register("chaijs-chai/lib/chai/utils/getEnumerableProperties.js", Function("exports, require, module",
"/*!\n\
 * Chai - getEnumerableProperties utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### .getEnumerableProperties(object)\n\
 *\n\
 * This allows the retrieval of enumerable property names of an object,\n\
 * inherited or not.\n\
 *\n\
 * @param {Object} object\n\
 * @returns {Array}\n\
 * @name getEnumerableProperties\n\
 * @api public\n\
 */\n\
\n\
module.exports = function getEnumerableProperties(object) {\n\
  var result = [];\n\
  for (var name in object) {\n\
    result.push(name);\n\
  }\n\
  return result;\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/getEnumerableProperties.js"
));
require.register("chaijs-chai/lib/chai/utils/getMessage.js", Function("exports, require, module",
"/*!\n\
 * Chai - message composition utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Module dependancies\n\
 */\n\
\n\
var flag = require('./flag')\n\
  , getActual = require('./getActual')\n\
  , inspect = require('./inspect')\n\
  , objDisplay = require('./objDisplay');\n\
\n\
/**\n\
 * ### .getMessage(object, message, negateMessage)\n\
 *\n\
 * Construct the error message based on flags\n\
 * and template tags. Template tags will return\n\
 * a stringified inspection of the object referenced.\n\
 *\n\
 * Message template tags:\n\
 * - `#{this}` current asserted object\n\
 * - `#{act}` actual value\n\
 * - `#{exp}` expected value\n\
 *\n\
 * @param {Object} object (constructed Assertion)\n\
 * @param {Arguments} chai.Assertion.prototype.assert arguments\n\
 * @name getMessage\n\
 * @api public\n\
 */\n\
\n\
module.exports = function (obj, args) {\n\
  var negate = flag(obj, 'negate')\n\
    , val = flag(obj, 'object')\n\
    , expected = args[3]\n\
    , actual = getActual(obj, args)\n\
    , msg = negate ? args[2] : args[1]\n\
    , flagMsg = flag(obj, 'message');\n\
\n\
  msg = msg || '';\n\
  msg = msg\n\
    .replace(/#{this}/g, objDisplay(val))\n\
    .replace(/#{act}/g, objDisplay(actual))\n\
    .replace(/#{exp}/g, objDisplay(expected));\n\
\n\
  return flagMsg ? flagMsg + ': ' + msg : msg;\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/getMessage.js"
));
require.register("chaijs-chai/lib/chai/utils/getName.js", Function("exports, require, module",
"/*!\n\
 * Chai - getName utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * # getName(func)\n\
 *\n\
 * Gets the name of a function, in a cross-browser way.\n\
 *\n\
 * @param {Function} a function (usually a constructor)\n\
 */\n\
\n\
module.exports = function (func) {\n\
  if (func.name) return func.name;\n\
\n\
  var match = /^\\s?function ([^(]*)\\(/.exec(func);\n\
  return match && match[1] ? match[1] : \"\";\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/getName.js"
));
require.register("chaijs-chai/lib/chai/utils/getPathValue.js", Function("exports, require, module",
"/*!\n\
 * Chai - getPathValue utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * @see https://github.com/logicalparadox/filtr\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### .getPathValue(path, object)\n\
 *\n\
 * This allows the retrieval of values in an\n\
 * object given a string path.\n\
 *\n\
 *     var obj = {\n\
 *         prop1: {\n\
 *             arr: ['a', 'b', 'c']\n\
 *           , str: 'Hello'\n\
 *         }\n\
 *       , prop2: {\n\
 *             arr: [ { nested: 'Universe' } ]\n\
 *           , str: 'Hello again!'\n\
 *         }\n\
 *     }\n\
 *\n\
 * The following would be the results.\n\
 *\n\
 *     getPathValue('prop1.str', obj); // Hello\n\
 *     getPathValue('prop1.att[2]', obj); // b\n\
 *     getPathValue('prop2.arr[0].nested', obj); // Universe\n\
 *\n\
 * @param {String} path\n\
 * @param {Object} object\n\
 * @returns {Object} value or `undefined`\n\
 * @name getPathValue\n\
 * @api public\n\
 */\n\
\n\
var getPathValue = module.exports = function (path, obj) {\n\
  var parsed = parsePath(path);\n\
  return _getPathValue(parsed, obj);\n\
};\n\
\n\
/*!\n\
 * ## parsePath(path)\n\
 *\n\
 * Helper function used to parse string object\n\
 * paths. Use in conjunction with `_getPathValue`.\n\
 *\n\
 *      var parsed = parsePath('myobject.property.subprop');\n\
 *\n\
 * ### Paths:\n\
 *\n\
 * * Can be as near infinitely deep and nested\n\
 * * Arrays are also valid using the formal `myobject.document[3].property`.\n\
 *\n\
 * @param {String} path\n\
 * @returns {Object} parsed\n\
 * @api private\n\
 */\n\
\n\
function parsePath (path) {\n\
  var str = path.replace(/\\[/g, '.[')\n\
    , parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n\
  return parts.map(function (value) {\n\
    var re = /\\[(\\d+)\\]$/\n\
      , mArr = re.exec(value)\n\
    if (mArr) return { i: parseFloat(mArr[1]) };\n\
    else return { p: value };\n\
  });\n\
};\n\
\n\
/*!\n\
 * ## _getPathValue(parsed, obj)\n\
 *\n\
 * Helper companion function for `.parsePath` that returns\n\
 * the value located at the parsed address.\n\
 *\n\
 *      var value = getPathValue(parsed, obj);\n\
 *\n\
 * @param {Object} parsed definition from `parsePath`.\n\
 * @param {Object} object to search against\n\
 * @returns {Object|Undefined} value\n\
 * @api private\n\
 */\n\
\n\
function _getPathValue (parsed, obj) {\n\
  var tmp = obj\n\
    , res;\n\
  for (var i = 0, l = parsed.length; i < l; i++) {\n\
    var part = parsed[i];\n\
    if (tmp) {\n\
      if ('undefined' !== typeof part.p)\n\
        tmp = tmp[part.p];\n\
      else if ('undefined' !== typeof part.i)\n\
        tmp = tmp[part.i];\n\
      if (i == (l - 1)) res = tmp;\n\
    } else {\n\
      res = undefined;\n\
    }\n\
  }\n\
  return res;\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/getPathValue.js"
));
require.register("chaijs-chai/lib/chai/utils/getProperties.js", Function("exports, require, module",
"/*!\n\
 * Chai - getProperties utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### .getProperties(object)\n\
 *\n\
 * This allows the retrieval of property names of an object, enumerable or not,\n\
 * inherited or not.\n\
 *\n\
 * @param {Object} object\n\
 * @returns {Array}\n\
 * @name getProperties\n\
 * @api public\n\
 */\n\
\n\
module.exports = function getProperties(object) {\n\
  var result = Object.getOwnPropertyNames(subject);\n\
\n\
  function addProperty(property) {\n\
    if (result.indexOf(property) === -1) {\n\
      result.push(property);\n\
    }\n\
  }\n\
\n\
  var proto = Object.getPrototypeOf(subject);\n\
  while (proto !== null) {\n\
    Object.getOwnPropertyNames(proto).forEach(addProperty);\n\
    proto = Object.getPrototypeOf(proto);\n\
  }\n\
\n\
  return result;\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/getProperties.js"
));
require.register("chaijs-chai/lib/chai/utils/index.js", Function("exports, require, module",
"/*!\n\
 * chai\n\
 * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Main exports\n\
 */\n\
\n\
var exports = module.exports = {};\n\
\n\
/*!\n\
 * test utility\n\
 */\n\
\n\
exports.test = require('./test');\n\
\n\
/*!\n\
 * type utility\n\
 */\n\
\n\
exports.type = require('./type');\n\
\n\
/*!\n\
 * message utility\n\
 */\n\
\n\
exports.getMessage = require('./getMessage');\n\
\n\
/*!\n\
 * actual utility\n\
 */\n\
\n\
exports.getActual = require('./getActual');\n\
\n\
/*!\n\
 * Inspect util\n\
 */\n\
\n\
exports.inspect = require('./inspect');\n\
\n\
/*!\n\
 * Object Display util\n\
 */\n\
\n\
exports.objDisplay = require('./objDisplay');\n\
\n\
/*!\n\
 * Flag utility\n\
 */\n\
\n\
exports.flag = require('./flag');\n\
\n\
/*!\n\
 * Flag transferring utility\n\
 */\n\
\n\
exports.transferFlags = require('./transferFlags');\n\
\n\
/*!\n\
 * Deep equal utility\n\
 */\n\
\n\
exports.eql = require('deep-eql');\n\
\n\
/*!\n\
 * Deep path value\n\
 */\n\
\n\
exports.getPathValue = require('./getPathValue');\n\
\n\
/*!\n\
 * Function name\n\
 */\n\
\n\
exports.getName = require('./getName');\n\
\n\
/*!\n\
 * add Property\n\
 */\n\
\n\
exports.addProperty = require('./addProperty');\n\
\n\
/*!\n\
 * add Method\n\
 */\n\
\n\
exports.addMethod = require('./addMethod');\n\
\n\
/*!\n\
 * overwrite Property\n\
 */\n\
\n\
exports.overwriteProperty = require('./overwriteProperty');\n\
\n\
/*!\n\
 * overwrite Method\n\
 */\n\
\n\
exports.overwriteMethod = require('./overwriteMethod');\n\
\n\
/*!\n\
 * Add a chainable method\n\
 */\n\
\n\
exports.addChainableMethod = require('./addChainableMethod');\n\
\n\
/*!\n\
 * Overwrite chainable method\n\
 */\n\
\n\
exports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\
\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/index.js"
));
require.register("chaijs-chai/lib/chai/utils/inspect.js", Function("exports, require, module",
"// This is (almost) directly from Node.js utils\n\
// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\
\n\
var getName = require('./getName');\n\
var getProperties = require('./getProperties');\n\
var getEnumerableProperties = require('./getEnumerableProperties');\n\
\n\
module.exports = inspect;\n\
\n\
/**\n\
 * Echos the value of a value. Trys to print the value out\n\
 * in the best way possible given the different types.\n\
 *\n\
 * @param {Object} obj The object to print out.\n\
 * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n\
 *    properties of objects.\n\
 * @param {Number} depth Depth in which to descend in object. Default is 2.\n\
 * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n\
 *    output. Default is false (no coloring).\n\
 */\n\
function inspect(obj, showHidden, depth, colors) {\n\
  var ctx = {\n\
    showHidden: showHidden,\n\
    seen: [],\n\
    stylize: function (str) { return str; }\n\
  };\n\
  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n\
}\n\
\n\
// https://gist.github.com/1044128/\n\
var getOuterHTML = function(element) {\n\
  if ('outerHTML' in element) return element.outerHTML;\n\
  var ns = \"http://www.w3.org/1999/xhtml\";\n\
  var container = document.createElementNS(ns, '_');\n\
  var elemProto = (window.HTMLElement || window.Element).prototype;\n\
  var xmlSerializer = new XMLSerializer();\n\
  var html;\n\
  if (document.xmlVersion) {\n\
    return xmlSerializer.serializeToString(element);\n\
  } else {\n\
    container.appendChild(element.cloneNode(false));\n\
    html = container.innerHTML.replace('><', '>' + element.innerHTML + '<');\n\
    container.innerHTML = '';\n\
    return html;\n\
  }\n\
};\n\
\n\
// Returns true if object is a DOM element.\n\
var isDOMElement = function (object) {\n\
  if (typeof HTMLElement === 'object') {\n\
    return object instanceof HTMLElement;\n\
  } else {\n\
    return object &&\n\
      typeof object === 'object' &&\n\
      object.nodeType === 1 &&\n\
      typeof object.nodeName === 'string';\n\
  }\n\
};\n\
\n\
function formatValue(ctx, value, recurseTimes) {\n\
  // Provide a hook for user-specified inspect functions.\n\
  // Check that value is an object with an inspect function on it\n\
  if (value && typeof value.inspect === 'function' &&\n\
      // Filter out the util module, it's inspect function is special\n\
      value.inspect !== exports.inspect &&\n\
      // Also filter out any prototype objects using the circular check.\n\
      !(value.constructor && value.constructor.prototype === value)) {\n\
    var ret = value.inspect(recurseTimes);\n\
    if (typeof ret !== 'string') {\n\
      ret = formatValue(ctx, ret, recurseTimes);\n\
    }\n\
    return ret;\n\
  }\n\
\n\
  // Primitive types cannot have properties\n\
  var primitive = formatPrimitive(ctx, value);\n\
  if (primitive) {\n\
    return primitive;\n\
  }\n\
\n\
  // If it's DOM elem, get outer HTML.\n\
  if (isDOMElement(value)) {\n\
    return getOuterHTML(value);\n\
  }\n\
\n\
  // Look up the keys of the object.\n\
  var visibleKeys = getEnumerableProperties(value);\n\
  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\
\n\
  // Some type of object without properties can be shortcutted.\n\
  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n\
  // a `stack` plus `description` property; ignore those for consistency.\n\
  if (keys.length === 0 || (isError(value) && (\n\
      (keys.length === 1 && keys[0] === 'stack') ||\n\
      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n\
     ))) {\n\
    if (typeof value === 'function') {\n\
      var name = getName(value);\n\
      var nameSuffix = name ? ': ' + name : '';\n\
      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n\
    }\n\
    if (isRegExp(value)) {\n\
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\
    }\n\
    if (isDate(value)) {\n\
      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n\
    }\n\
    if (isError(value)) {\n\
      return formatError(value);\n\
    }\n\
  }\n\
\n\
  var base = '', array = false, braces = ['{', '}'];\n\
\n\
  // Make Array say that they are Array\n\
  if (isArray(value)) {\n\
    array = true;\n\
    braces = ['[', ']'];\n\
  }\n\
\n\
  // Make functions say that they are functions\n\
  if (typeof value === 'function') {\n\
    var name = getName(value);\n\
    var nameSuffix = name ? ': ' + name : '';\n\
    base = ' [Function' + nameSuffix + ']';\n\
  }\n\
\n\
  // Make RegExps say that they are RegExps\n\
  if (isRegExp(value)) {\n\
    base = ' ' + RegExp.prototype.toString.call(value);\n\
  }\n\
\n\
  // Make dates with properties first say the date\n\
  if (isDate(value)) {\n\
    base = ' ' + Date.prototype.toUTCString.call(value);\n\
  }\n\
\n\
  // Make error with message first say the error\n\
  if (isError(value)) {\n\
    return formatError(value);\n\
  }\n\
\n\
  if (keys.length === 0 && (!array || value.length == 0)) {\n\
    return braces[0] + base + braces[1];\n\
  }\n\
\n\
  if (recurseTimes < 0) {\n\
    if (isRegExp(value)) {\n\
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\
    } else {\n\
      return ctx.stylize('[Object]', 'special');\n\
    }\n\
  }\n\
\n\
  ctx.seen.push(value);\n\
\n\
  var output;\n\
  if (array) {\n\
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\
  } else {\n\
    output = keys.map(function(key) {\n\
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\
    });\n\
  }\n\
\n\
  ctx.seen.pop();\n\
\n\
  return reduceToSingleString(output, base, braces);\n\
}\n\
\n\
\n\
function formatPrimitive(ctx, value) {\n\
  switch (typeof value) {\n\
    case 'undefined':\n\
      return ctx.stylize('undefined', 'undefined');\n\
\n\
    case 'string':\n\
      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\
                                               .replace(/'/g, \"\\\\'\")\n\
                                               .replace(/\\\\\"/g, '\"') + '\\'';\n\
      return ctx.stylize(simple, 'string');\n\
\n\
    case 'number':\n\
      return ctx.stylize('' + value, 'number');\n\
\n\
    case 'boolean':\n\
      return ctx.stylize('' + value, 'boolean');\n\
  }\n\
  // For some reason typeof null is \"object\", so special case here.\n\
  if (value === null) {\n\
    return ctx.stylize('null', 'null');\n\
  }\n\
}\n\
\n\
\n\
function formatError(value) {\n\
  return '[' + Error.prototype.toString.call(value) + ']';\n\
}\n\
\n\
\n\
function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\
  var output = [];\n\
  for (var i = 0, l = value.length; i < l; ++i) {\n\
    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n\
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\
          String(i), true));\n\
    } else {\n\
      output.push('');\n\
    }\n\
  }\n\
  keys.forEach(function(key) {\n\
    if (!key.match(/^\\d+$/)) {\n\
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\
          key, true));\n\
    }\n\
  });\n\
  return output;\n\
}\n\
\n\
\n\
function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\
  var name, str;\n\
  if (value.__lookupGetter__) {\n\
    if (value.__lookupGetter__(key)) {\n\
      if (value.__lookupSetter__(key)) {\n\
        str = ctx.stylize('[Getter/Setter]', 'special');\n\
      } else {\n\
        str = ctx.stylize('[Getter]', 'special');\n\
      }\n\
    } else {\n\
      if (value.__lookupSetter__(key)) {\n\
        str = ctx.stylize('[Setter]', 'special');\n\
      }\n\
    }\n\
  }\n\
  if (visibleKeys.indexOf(key) < 0) {\n\
    name = '[' + key + ']';\n\
  }\n\
  if (!str) {\n\
    if (ctx.seen.indexOf(value[key]) < 0) {\n\
      if (recurseTimes === null) {\n\
        str = formatValue(ctx, value[key], null);\n\
      } else {\n\
        str = formatValue(ctx, value[key], recurseTimes - 1);\n\
      }\n\
      if (str.indexOf('\\n\
') > -1) {\n\
        if (array) {\n\
          str = str.split('\\n\
').map(function(line) {\n\
            return '  ' + line;\n\
          }).join('\\n\
').substr(2);\n\
        } else {\n\
          str = '\\n\
' + str.split('\\n\
').map(function(line) {\n\
            return '   ' + line;\n\
          }).join('\\n\
');\n\
        }\n\
      }\n\
    } else {\n\
      str = ctx.stylize('[Circular]', 'special');\n\
    }\n\
  }\n\
  if (typeof name === 'undefined') {\n\
    if (array && key.match(/^\\d+$/)) {\n\
      return str;\n\
    }\n\
    name = JSON.stringify('' + key);\n\
    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\
      name = name.substr(1, name.length - 2);\n\
      name = ctx.stylize(name, 'name');\n\
    } else {\n\
      name = name.replace(/'/g, \"\\\\'\")\n\
                 .replace(/\\\\\"/g, '\"')\n\
                 .replace(/(^\"|\"$)/g, \"'\");\n\
      name = ctx.stylize(name, 'string');\n\
    }\n\
  }\n\
\n\
  return name + ': ' + str;\n\
}\n\
\n\
\n\
function reduceToSingleString(output, base, braces) {\n\
  var numLinesEst = 0;\n\
  var length = output.reduce(function(prev, cur) {\n\
    numLinesEst++;\n\
    if (cur.indexOf('\\n\
') >= 0) numLinesEst++;\n\
    return prev + cur.length + 1;\n\
  }, 0);\n\
\n\
  if (length > 60) {\n\
    return braces[0] +\n\
           (base === '' ? '' : base + '\\n\
 ') +\n\
           ' ' +\n\
           output.join(',\\n\
  ') +\n\
           ' ' +\n\
           braces[1];\n\
  }\n\
\n\
  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\
}\n\
\n\
function isArray(ar) {\n\
  return Array.isArray(ar) ||\n\
         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n\
}\n\
\n\
function isRegExp(re) {\n\
  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n\
}\n\
\n\
function isDate(d) {\n\
  return typeof d === 'object' && objectToString(d) === '[object Date]';\n\
}\n\
\n\
function isError(e) {\n\
  return typeof e === 'object' && objectToString(e) === '[object Error]';\n\
}\n\
\n\
function objectToString(o) {\n\
  return Object.prototype.toString.call(o);\n\
}\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/inspect.js"
));
require.register("chaijs-chai/lib/chai/utils/objDisplay.js", Function("exports, require, module",
"/*!\n\
 * Chai - flag utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Module dependancies\n\
 */\n\
\n\
var inspect = require('./inspect');\n\
\n\
/**\n\
 * ### .objDisplay (object)\n\
 *\n\
 * Determines if an object or an array matches\n\
 * criteria to be inspected in-line for error\n\
 * messages or should be truncated.\n\
 *\n\
 * @param {Mixed} javascript object to inspect\n\
 * @name objDisplay\n\
 * @api public\n\
 */\n\
\n\
module.exports = function (obj) {\n\
  var str = inspect(obj)\n\
    , type = Object.prototype.toString.call(obj);\n\
\n\
  if (str.length >= 40) {\n\
    if (type === '[object Function]') {\n\
      return !obj.name || obj.name === ''\n\
        ? '[Function]'\n\
        : '[Function: ' + obj.name + ']';\n\
    } else if (type === '[object Array]') {\n\
      return '[ Array(' + obj.length + ') ]';\n\
    } else if (type === '[object Object]') {\n\
      var keys = Object.keys(obj)\n\
        , kstr = keys.length > 2\n\
          ? keys.splice(0, 2).join(', ') + ', ...'\n\
          : keys.join(', ');\n\
      return '{ Object (' + kstr + ') }';\n\
    } else {\n\
      return str;\n\
    }\n\
  } else {\n\
    return str;\n\
  }\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/objDisplay.js"
));
require.register("chaijs-chai/lib/chai/utils/overwriteMethod.js", Function("exports, require, module",
"/*!\n\
 * Chai - overwriteMethod utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### overwriteMethod (ctx, name, fn)\n\
 *\n\
 * Overwites an already existing method and provides\n\
 * access to previous function. Must return function\n\
 * to be used for name.\n\
 *\n\
 *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n\
 *       return function (str) {\n\
 *         var obj = utils.flag(this, 'object');\n\
 *         if (obj instanceof Foo) {\n\
 *           new chai.Assertion(obj.value).to.equal(str);\n\
 *         } else {\n\
 *           _super.apply(this, arguments);\n\
 *         }\n\
 *       }\n\
 *     });\n\
 *\n\
 * Can also be accessed directly from `chai.Assertion`.\n\
 *\n\
 *     chai.Assertion.overwriteMethod('foo', fn);\n\
 *\n\
 * Then can be used as any other assertion.\n\
 *\n\
 *     expect(myFoo).to.equal('bar');\n\
 *\n\
 * @param {Object} ctx object whose method is to be overwritten\n\
 * @param {String} name of method to overwrite\n\
 * @param {Function} method function that returns a function to be used for name\n\
 * @name overwriteMethod\n\
 * @api public\n\
 */\n\
\n\
module.exports = function (ctx, name, method) {\n\
  var _method = ctx[name]\n\
    , _super = function () { return this; };\n\
\n\
  if (_method && 'function' === typeof _method)\n\
    _super = _method;\n\
\n\
  ctx[name] = function () {\n\
    var result = method(_super).apply(this, arguments);\n\
    return result === undefined ? this : result;\n\
  }\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/overwriteMethod.js"
));
require.register("chaijs-chai/lib/chai/utils/overwriteProperty.js", Function("exports, require, module",
"/*!\n\
 * Chai - overwriteProperty utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### overwriteProperty (ctx, name, fn)\n\
 *\n\
 * Overwites an already existing property getter and provides\n\
 * access to previous value. Must return function to use as getter.\n\
 *\n\
 *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n\
 *       return function () {\n\
 *         var obj = utils.flag(this, 'object');\n\
 *         if (obj instanceof Foo) {\n\
 *           new chai.Assertion(obj.name).to.equal('bar');\n\
 *         } else {\n\
 *           _super.call(this);\n\
 *         }\n\
 *       }\n\
 *     });\n\
 *\n\
 *\n\
 * Can also be accessed directly from `chai.Assertion`.\n\
 *\n\
 *     chai.Assertion.overwriteProperty('foo', fn);\n\
 *\n\
 * Then can be used as any other assertion.\n\
 *\n\
 *     expect(myFoo).to.be.ok;\n\
 *\n\
 * @param {Object} ctx object whose property is to be overwritten\n\
 * @param {String} name of property to overwrite\n\
 * @param {Function} getter function that returns a getter function to be used for name\n\
 * @name overwriteProperty\n\
 * @api public\n\
 */\n\
\n\
module.exports = function (ctx, name, getter) {\n\
  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n\
    , _super = function () {};\n\
\n\
  if (_get && 'function' === typeof _get.get)\n\
    _super = _get.get\n\
\n\
  Object.defineProperty(ctx, name,\n\
    { get: function () {\n\
        var result = getter(_super).call(this);\n\
        return result === undefined ? this : result;\n\
      }\n\
    , configurable: true\n\
  });\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/overwriteProperty.js"
));
require.register("chaijs-chai/lib/chai/utils/overwriteChainableMethod.js", Function("exports, require, module",
"/*!\n\
 * Chai - overwriteChainableMethod utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### overwriteChainableMethod (ctx, name, fn)\n\
 *\n\
 * Overwites an already existing chainable method\n\
 * and provides access to the previous function or\n\
 * property.  Must return functions to be used for\n\
 * name.\n\
 *\n\
 *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',\n\
 *       function (_super) {\n\
 *       }\n\
 *     , function (_super) {\n\
 *       }\n\
 *     );\n\
 *\n\
 * Can also be accessed directly from `chai.Assertion`.\n\
 *\n\
 *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n\
 *\n\
 * Then can be used as any other assertion.\n\
 *\n\
 *     expect(myFoo).to.have.length(3);\n\
 *     expect(myFoo).to.have.length.above(3);\n\
 *\n\
 * @param {Object} ctx object whose method / property is to be overwritten\n\
 * @param {String} name of method / property to overwrite\n\
 * @param {Function} method function that returns a function to be used for name\n\
 * @param {Function} chainingBehavior function that returns a function to be used for property\n\
 * @name overwriteChainableMethod\n\
 * @api public\n\
 */\n\
\n\
module.exports = function (ctx, name, method, chainingBehavior) {\n\
  var chainableBehavior = ctx.__methods[name];\n\
\n\
  var _chainingBehavior = chainableBehavior.chainingBehavior;\n\
  chainableBehavior.chainingBehavior = function () {\n\
    var result = chainingBehavior(_chainingBehavior).call(this);\n\
    return result === undefined ? this : result;\n\
  };\n\
\n\
  var _method = chainableBehavior.method;\n\
  chainableBehavior.method = function () {\n\
    var result = method(_method).apply(this, arguments);\n\
    return result === undefined ? this : result;\n\
  };\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/overwriteChainableMethod.js"
));
require.register("chaijs-chai/lib/chai/utils/test.js", Function("exports, require, module",
"/*!\n\
 * Chai - test utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Module dependancies\n\
 */\n\
\n\
var flag = require('./flag');\n\
\n\
/**\n\
 * # test(object, expression)\n\
 *\n\
 * Test and object for expression.\n\
 *\n\
 * @param {Object} object (constructed Assertion)\n\
 * @param {Arguments} chai.Assertion.prototype.assert arguments\n\
 */\n\
\n\
module.exports = function (obj, args) {\n\
  var negate = flag(obj, 'negate')\n\
    , expr = args[0];\n\
  return negate ? !expr : expr;\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/test.js"
));
require.register("chaijs-chai/lib/chai/utils/transferFlags.js", Function("exports, require, module",
"/*!\n\
 * Chai - transferFlags utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/**\n\
 * ### transferFlags(assertion, object, includeAll = true)\n\
 *\n\
 * Transfer all the flags for `assertion` to `object`. If\n\
 * `includeAll` is set to `false`, then the base Chai\n\
 * assertion flags (namely `object`, `ssfi`, and `message`)\n\
 * will not be transferred.\n\
 *\n\
 *\n\
 *     var newAssertion = new Assertion();\n\
 *     utils.transferFlags(assertion, newAssertion);\n\
 *\n\
 *     var anotherAsseriton = new Assertion(myObj);\n\
 *     utils.transferFlags(assertion, anotherAssertion, false);\n\
 *\n\
 * @param {Assertion} assertion the assertion to transfer the flags from\n\
 * @param {Object} object the object to transfer the flags too; usually a new assertion\n\
 * @param {Boolean} includeAll\n\
 * @name getAllFlags\n\
 * @api private\n\
 */\n\
\n\
module.exports = function (assertion, object, includeAll) {\n\
  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\
\n\
  if (!object.__flags) {\n\
    object.__flags = Object.create(null);\n\
  }\n\
\n\
  includeAll = arguments.length === 3 ? includeAll : true;\n\
\n\
  for (var flag in flags) {\n\
    if (includeAll ||\n\
        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {\n\
      object.__flags[flag] = flags[flag];\n\
    }\n\
  }\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/transferFlags.js"
));
require.register("chaijs-chai/lib/chai/utils/type.js", Function("exports, require, module",
"/*!\n\
 * Chai - type utility\n\
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\
 * MIT Licensed\n\
 */\n\
\n\
/*!\n\
 * Detectable javascript natives\n\
 */\n\
\n\
var natives = {\n\
    '[object Arguments]': 'arguments'\n\
  , '[object Array]': 'array'\n\
  , '[object Date]': 'date'\n\
  , '[object Function]': 'function'\n\
  , '[object Number]': 'number'\n\
  , '[object RegExp]': 'regexp'\n\
  , '[object String]': 'string'\n\
};\n\
\n\
/**\n\
 * ### type(object)\n\
 *\n\
 * Better implementation of `typeof` detection that can\n\
 * be used cross-browser. Handles the inconsistencies of\n\
 * Array, `null`, and `undefined` detection.\n\
 *\n\
 *     utils.type({}) // 'object'\n\
 *     utils.type(null) // `null'\n\
 *     utils.type(undefined) // `undefined`\n\
 *     utils.type([]) // `array`\n\
 *\n\
 * @param {Mixed} object to detect type of\n\
 * @name type\n\
 * @api private\n\
 */\n\
\n\
module.exports = function (obj) {\n\
  var str = Object.prototype.toString.call(obj);\n\
  if (natives[str]) return natives[str];\n\
  if (obj === null) return 'null';\n\
  if (obj === undefined) return 'undefined';\n\
  if (obj === Object(obj)) return 'object';\n\
  return typeof obj;\n\
};\n\
//@ sourceURL=chaijs-chai/lib/chai/utils/type.js"
));
require.register("johntron-asap/asap.js", Function("exports, require, module",
"\"use strict\";\n\
\n\
// Use the fastest possible means to execute a task in a future turn\n\
// of the event loop.\n\
\n\
// linked list of tasks (single, with head node)\n\
var head = {task: void 0, next: null};\n\
var tail = head;\n\
var flushing = false;\n\
var requestFlush = void 0;\n\
var hasSetImmediate = typeof setImmediate === \"function\";\n\
var domain;\n\
\n\
if (typeof global != 'undefined') {\n\
\t// Avoid shims from browserify.\n\
\t// The existence of `global` in browsers is guaranteed by browserify.\n\
\tvar process = global.process;\n\
}\n\
\n\
// Note that some fake-Node environments,\n\
// like the Mocha test runner, introduce a `process` global.\n\
var isNodeJS = !!process && ({}).toString.call(process) === \"[object process]\";\n\
\n\
function flush() {\n\
    /* jshint loopfunc: true */\n\
\n\
    while (head.next) {\n\
        head = head.next;\n\
        var task = head.task;\n\
        head.task = void 0;\n\
\n\
        try {\n\
            task();\n\
\n\
        } catch (e) {\n\
            if (isNodeJS) {\n\
                // In node, uncaught exceptions are considered fatal errors.\n\
                // Re-throw them to interrupt flushing!\n\
\n\
                // Ensure continuation if an uncaught exception is suppressed\n\
                // listening process.on(\"uncaughtException\") or domain(\"error\").\n\
                requestFlush();\n\
\n\
                throw e;\n\
\n\
            } else {\n\
                // In browsers, uncaught exceptions are not fatal.\n\
                // Re-throw them asynchronously to avoid slow-downs.\n\
                setTimeout(function () {\n\
                    throw e;\n\
                }, 0);\n\
            }\n\
        }\n\
    }\n\
\n\
    flushing = false;\n\
}\n\
\n\
if (isNodeJS) {\n\
    // Node.js\n\
    requestFlush = function () {\n\
        // Ensure flushing is not bound to any domain.\n\
        var currentDomain = process.domain;\n\
        if (currentDomain) {\n\
            domain = domain || (1,require)(\"domain\");\n\
            domain.active = process.domain = null;\n\
        }\n\
\n\
        // Avoid tick recursion - use setImmediate if it exists.\n\
        if (flushing && hasSetImmediate) {\n\
            setImmediate(flush);\n\
        } else {\n\
            process.nextTick(flush);\n\
        }\n\
\n\
        if (currentDomain) {\n\
            domain.active = process.domain = currentDomain;\n\
        }\n\
    };\n\
\n\
} else if (hasSetImmediate) {\n\
    // In IE10, or https://github.com/NobleJS/setImmediate\n\
    requestFlush = function () {\n\
        setImmediate(flush);\n\
    };\n\
\n\
} else if (typeof MessageChannel !== \"undefined\") {\n\
    // modern browsers\n\
    // http://www.nonblocking.io/2011/06/windownexttick.html\n\
    var channel = new MessageChannel();\n\
    // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n\
    // working message ports the first time a page loads.\n\
    channel.port1.onmessage = function () {\n\
        requestFlush = requestPortFlush;\n\
        channel.port1.onmessage = flush;\n\
        flush();\n\
    };\n\
    var requestPortFlush = function () {\n\
        // Opera requires us to provide a message payload, regardless of\n\
        // whether we use it.\n\
        channel.port2.postMessage(0);\n\
    };\n\
    requestFlush = function () {\n\
        setTimeout(flush, 0);\n\
        requestPortFlush();\n\
    };\n\
\n\
} else {\n\
    // old browsers\n\
    requestFlush = function () {\n\
        setTimeout(flush, 0);\n\
    };\n\
}\n\
\n\
function asap(task) {\n\
    if (isNodeJS && process.domain) {\n\
        task = process.domain.bind(task);\n\
    }\n\
\n\
    tail = tail.next = {task: task, next: null};\n\
\n\
    if (!flushing) {\n\
        requestFlush();\n\
        flushing = true;\n\
    }\n\
};\n\
\n\
module.exports = asap;\n\
//@ sourceURL=johntron-asap/asap.js"
));
require.register("johntron-promise/index.js", Function("exports, require, module",
"'use strict'\n\
\n\
//This file contains then/promise specific extensions to the core promise API\n\
\n\
var Promise = require('./core.js')\n\
var asap = require('asap')\n\
\n\
module.exports = Promise\n\
\n\
/* Static Functions */\n\
\n\
function ValuePromise(value) {\n\
  this.then = function (onFulfilled) {\n\
    if (typeof onFulfilled !== 'function') return this\n\
    return new Promise(function (resolve, reject) {\n\
      asap(function () {\n\
        try {\n\
          resolve(onFulfilled(value))\n\
        } catch (ex) {\n\
          reject(ex);\n\
        }\n\
      })\n\
    })\n\
  }\n\
}\n\
ValuePromise.prototype = Object.create(Promise.prototype)\n\
\n\
var TRUE = new ValuePromise(true)\n\
var FALSE = new ValuePromise(false)\n\
var NULL = new ValuePromise(null)\n\
var UNDEFINED = new ValuePromise(undefined)\n\
var ZERO = new ValuePromise(0)\n\
var EMPTYSTRING = new ValuePromise('')\n\
\n\
Promise.from = function (value) {\n\
  if (value instanceof Promise) return value\n\
\n\
  if (value === null) return NULL\n\
  if (value === undefined) return UNDEFINED\n\
  if (value === true) return TRUE\n\
  if (value === false) return FALSE\n\
  if (value === 0) return ZERO\n\
  if (value === '') return EMPTYSTRING\n\
\n\
  if (typeof value === 'object' || typeof value === 'function') {\n\
    try {\n\
      var then = value.then\n\
      if (typeof then === 'function') {\n\
        return new Promise(then.bind(value))\n\
      }\n\
    } catch (ex) {\n\
      return new Promise(function (resolve, reject) {\n\
        reject(ex)\n\
      })\n\
    }\n\
  }\n\
\n\
  return new ValuePromise(value)\n\
}\n\
Promise.denodeify = function (fn) {\n\
  return function () {\n\
    var self = this\n\
    var args = Array.prototype.slice.call(arguments)\n\
    return new Promise(function (resolve, reject) {\n\
      args.push(function (err, res) {\n\
        if (err) reject(err)\n\
        else resolve(res)\n\
      })\n\
      fn.apply(self, args)\n\
    })\n\
  }\n\
}\n\
Promise.nodeify = function (fn) {\n\
  return function () {\n\
    var args = Array.prototype.slice.call(arguments)\n\
    var callback = typeof args[args.length - 1] === 'function' ? args.pop() : null\n\
    try {\n\
      return fn.apply(this, arguments).nodeify(callback)\n\
    } catch (ex) {\n\
      if (callback == null) {\n\
        return new Promise(function (resolve, reject) { reject(ex) })\n\
      } else {\n\
        asap(function () {\n\
          callback(ex)\n\
        })\n\
      }\n\
    }\n\
  }\n\
}\n\
\n\
Promise.all = function () {\n\
  var args = Array.prototype.slice.call(arguments.length === 1 && Array.isArray(arguments[0]) ? arguments[0] : arguments)\n\
\n\
  return new Promise(function (resolve, reject) {\n\
    if (args.length === 0) return resolve([])\n\
    var remaining = args.length\n\
    function res(i, val) {\n\
      try {\n\
        if (val && (typeof val === 'object' || typeof val === 'function')) {\n\
          var then = val.then\n\
          if (typeof then === 'function') {\n\
            then.call(val, function (val) { res(i, val) }, reject)\n\
            return\n\
          }\n\
        }\n\
        args[i] = val\n\
        if (--remaining === 0) {\n\
          resolve(args);\n\
        }\n\
      } catch (ex) {\n\
        reject(ex)\n\
      }\n\
    }\n\
    for (var i = 0; i < args.length; i++) {\n\
      res(i, args[i])\n\
    }\n\
  })\n\
}\n\
\n\
/* Prototype Methods */\n\
\n\
Promise.prototype.done = function (onFulfilled, onRejected) {\n\
  var self = arguments.length ? this.then.apply(this, arguments) : this\n\
  self.then(null, function (err) {\n\
    asap(function () {\n\
      throw err\n\
    })\n\
  })\n\
}\n\
Promise.prototype.nodeify = function (callback) {\n\
  if (callback == null) return this\n\
\n\
  this.then(function (value) {\n\
    asap(function () {\n\
      callback(null, value)\n\
    })\n\
  }, function (err) {\n\
    asap(function () {\n\
      callback(err)\n\
    })\n\
  })\n\
}//@ sourceURL=johntron-promise/index.js"
));
require.register("johntron-promise/core.js", Function("exports, require, module",
"'use strict'\n\
\n\
var asap = require('asap')\n\
\n\
module.exports = Promise\n\
function Promise(fn) {\n\
  if (!(this instanceof Promise)) return new Promise(fn)\n\
  if (typeof fn !== 'function') throw new TypeError('not a function')\n\
  var state = null\n\
  var value = null\n\
  var deferreds = []\n\
  var self = this\n\
\n\
  this.then = function(onFulfilled, onRejected) {\n\
    return new Promise(function(resolve, reject) {\n\
      handle(new Handler(onFulfilled, onRejected, resolve, reject))\n\
    })\n\
  }\n\
\n\
  function handle(deferred) {\n\
    if (state === null) {\n\
      deferreds.push(deferred)\n\
      return\n\
    }\n\
    asap(function() {\n\
      var cb = state ? deferred.onFulfilled : deferred.onRejected\n\
      if (cb === null) {\n\
        (state ? deferred.resolve : deferred.reject)(value)\n\
        return\n\
      }\n\
      var ret\n\
      try {\n\
        ret = cb(value)\n\
      }\n\
      catch (e) {\n\
        deferred.reject(e)\n\
        return\n\
      }\n\
      deferred.resolve(ret)\n\
    })\n\
  }\n\
\n\
  function resolve(newValue) {\n\
    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\
      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.')\n\
      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n\
        var then = newValue.then\n\
        if (typeof then === 'function') {\n\
          doResolve(then.bind(newValue), resolve, reject)\n\
          return\n\
        }\n\
      }\n\
      state = true\n\
      value = newValue\n\
      finale()\n\
    } catch (e) { reject(e) }\n\
  }\n\
\n\
  function reject(newValue) {\n\
    state = false\n\
    value = newValue\n\
    finale()\n\
  }\n\
\n\
  function finale() {\n\
    for (var i = 0, len = deferreds.length; i < len; i++)\n\
      handle(deferreds[i])\n\
    deferreds = null\n\
  }\n\
\n\
  doResolve(fn, resolve, reject)\n\
}\n\
\n\
\n\
function Handler(onFulfilled, onRejected, resolve, reject){\n\
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null\n\
  this.onRejected = typeof onRejected === 'function' ? onRejected : null\n\
  this.resolve = resolve\n\
  this.reject = reject\n\
}\n\
\n\
/**\n\
 * Take a potentially misbehaving resolver function and make sure\n\
 * onFulfilled and onRejected are only called once.\n\
 *\n\
 * Makes no guarantees about asynchrony.\n\
 */\n\
function doResolve(fn, onFulfilled, onRejected) {\n\
  var done = false;\n\
  try {\n\
    fn(function (value) {\n\
      if (done) return\n\
      done = true\n\
      onFulfilled(value)\n\
    }, function (reason) {\n\
      if (done) return\n\
      done = true\n\
      onRejected(reason)\n\
    })\n\
  } catch (ex) {\n\
    if (done) return\n\
    done = true\n\
    onRejected(ex)\n\
  }\n\
}\n\
//@ sourceURL=johntron-promise/core.js"
));
require.register("visionmedia-page.js/index.js", Function("exports, require, module",
"\n\
;(function(){\n\
\n\
  /**\n\
   * Perform initial dispatch.\n\
   */\n\
\n\
  var dispatch = true;\n\
\n\
  /**\n\
   * Base path.\n\
   */\n\
\n\
  var base = '';\n\
\n\
  /**\n\
   * Running flag.\n\
   */\n\
\n\
  var running;\n\
\n\
  /**\n\
   * Register `path` with callback `fn()`,\n\
   * or route `path`, or `page.start()`.\n\
   *\n\
   *   page(fn);\n\
   *   page('*', fn);\n\
   *   page('/user/:id', load, user);\n\
   *   page('/user/' + user.id, { some: 'thing' });\n\
   *   page('/user/' + user.id);\n\
   *   page();\n\
   *\n\
   * @param {String|Function} path\n\
   * @param {Function} fn...\n\
   * @api public\n\
   */\n\
\n\
  function page(path, fn) {\n\
    // <callback>\n\
    if ('function' == typeof path) {\n\
      return page('*', path);\n\
    }\n\
\n\
    // route <path> to <callback ...>\n\
    if ('function' == typeof fn) {\n\
      var route = new Route(path);\n\
      for (var i = 1; i < arguments.length; ++i) {\n\
        page.callbacks.push(route.middleware(arguments[i]));\n\
      }\n\
    // show <path> with [state]\n\
    } else if ('string' == typeof path) {\n\
      page.show(path, fn);\n\
    // start [options]\n\
    } else {\n\
      page.start(path);\n\
    }\n\
  }\n\
\n\
  /**\n\
   * Callback functions.\n\
   */\n\
\n\
  page.callbacks = [];\n\
\n\
  /**\n\
   * Get or set basepath to `path`.\n\
   *\n\
   * @param {String} path\n\
   * @api public\n\
   */\n\
\n\
  page.base = function(path){\n\
    if (0 == arguments.length) return base;\n\
    base = path;\n\
  };\n\
\n\
  /**\n\
   * Bind with the given `options`.\n\
   *\n\
   * Options:\n\
   *\n\
   *    - `click` bind to click events [true]\n\
   *    - `popstate` bind to popstate [true]\n\
   *    - `dispatch` perform initial dispatch [true]\n\
   *\n\
   * @param {Object} options\n\
   * @api public\n\
   */\n\
\n\
  page.start = function(options){\n\
    options = options || {};\n\
    if (running) return;\n\
    running = true;\n\
    if (false === options.dispatch) dispatch = false;\n\
    if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);\n\
    if (false !== options.click) window.addEventListener('click', onclick, false);\n\
    if (!dispatch) return;\n\
    var url = location.pathname + location.search + location.hash;\n\
    page.replace(url, null, true, dispatch);\n\
  };\n\
\n\
  /**\n\
   * Unbind click and popstate event handlers.\n\
   *\n\
   * @api public\n\
   */\n\
\n\
  page.stop = function(){\n\
    running = false;\n\
    removeEventListener('click', onclick, false);\n\
    removeEventListener('popstate', onpopstate, false);\n\
  };\n\
\n\
  /**\n\
   * Show `path` with optional `state` object.\n\
   *\n\
   * @param {String} path\n\
   * @param {Object} state\n\
   * @param {Boolean} dispatch\n\
   * @return {Context}\n\
   * @api public\n\
   */\n\
\n\
  page.show = function(path, state, dispatch){\n\
    var ctx = new Context(path, state);\n\
    if (false !== dispatch) page.dispatch(ctx);\n\
    if (!ctx.unhandled) ctx.pushState();\n\
    return ctx;\n\
  };\n\
\n\
  /**\n\
   * Replace `path` with optional `state` object.\n\
   *\n\
   * @param {String} path\n\
   * @param {Object} state\n\
   * @return {Context}\n\
   * @api public\n\
   */\n\
\n\
  page.replace = function(path, state, init, dispatch){\n\
    var ctx = new Context(path, state);\n\
    ctx.init = init;\n\
    if (null == dispatch) dispatch = true;\n\
    if (dispatch) page.dispatch(ctx);\n\
    ctx.save();\n\
    return ctx;\n\
  };\n\
\n\
  /**\n\
   * Dispatch the given `ctx`.\n\
   *\n\
   * @param {Object} ctx\n\
   * @api private\n\
   */\n\
\n\
  page.dispatch = function(ctx){\n\
    var i = 0;\n\
\n\
    function next() {\n\
      var fn = page.callbacks[i++];\n\
      if (!fn) return unhandled(ctx);\n\
      fn(ctx, next);\n\
    }\n\
\n\
    next();\n\
  };\n\
\n\
  /**\n\
   * Unhandled `ctx`. When it's not the initial\n\
   * popstate then redirect. If you wish to handle\n\
   * 404s on your own use `page('*', callback)`.\n\
   *\n\
   * @param {Context} ctx\n\
   * @api private\n\
   */\n\
\n\
  function unhandled(ctx) {\n\
    var current = window.location.pathname + window.location.search;\n\
    if (current == ctx.canonicalPath) return;\n\
    page.stop();\n\
    ctx.unhandled = true;\n\
    window.location = ctx.canonicalPath;\n\
  }\n\
\n\
  /**\n\
   * Initialize a new \"request\" `Context`\n\
   * with the given `path` and optional initial `state`.\n\
   *\n\
   * @param {String} path\n\
   * @param {Object} state\n\
   * @api public\n\
   */\n\
\n\
  function Context(path, state) {\n\
    if ('/' == path[0] && 0 != path.indexOf(base)) path = base + path;\n\
    var i = path.indexOf('?');\n\
\n\
    this.canonicalPath = path;\n\
    this.path = path.replace(base, '') || '/';\n\
\n\
    this.title = document.title;\n\
    this.state = state || {};\n\
    this.state.path = path;\n\
    this.querystring = ~i ? path.slice(i + 1) : '';\n\
    this.pathname = ~i ? path.slice(0, i) : path;\n\
    this.params = [];\n\
\n\
    // fragment\n\
    this.hash = '';\n\
    if (!~this.path.indexOf('#')) return;\n\
    var parts = this.path.split('#');\n\
    this.path = parts[0];\n\
    this.hash = parts[1] || '';\n\
    this.querystring = this.querystring.split('#')[0];\n\
  }\n\
\n\
  /**\n\
   * Expose `Context`.\n\
   */\n\
\n\
  page.Context = Context;\n\
\n\
  /**\n\
   * Push state.\n\
   *\n\
   * @api private\n\
   */\n\
\n\
  Context.prototype.pushState = function(){\n\
    history.pushState(this.state, this.title, this.canonicalPath);\n\
  };\n\
\n\
  /**\n\
   * Save the context state.\n\
   *\n\
   * @api public\n\
   */\n\
\n\
  Context.prototype.save = function(){\n\
    history.replaceState(this.state, this.title, this.canonicalPath);\n\
  };\n\
\n\
  /**\n\
   * Initialize `Route` with the given HTTP `path`,\n\
   * and an array of `callbacks` and `options`.\n\
   *\n\
   * Options:\n\
   *\n\
   *   - `sensitive`    enable case-sensitive routes\n\
   *   - `strict`       enable strict matching for trailing slashes\n\
   *\n\
   * @param {String} path\n\
   * @param {Object} options.\n\
   * @api private\n\
   */\n\
\n\
  function Route(path, options) {\n\
    options = options || {};\n\
    this.path = path;\n\
    this.method = 'GET';\n\
    this.regexp = pathtoRegexp(path\n\
      , this.keys = []\n\
      , options.sensitive\n\
      , options.strict);\n\
  }\n\
\n\
  /**\n\
   * Expose `Route`.\n\
   */\n\
\n\
  page.Route = Route;\n\
\n\
  /**\n\
   * Return route middleware with\n\
   * the given callback `fn()`.\n\
   *\n\
   * @param {Function} fn\n\
   * @return {Function}\n\
   * @api public\n\
   */\n\
\n\
  Route.prototype.middleware = function(fn){\n\
    var self = this;\n\
    return function(ctx, next){\n\
      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);\n\
      next();\n\
    };\n\
  };\n\
\n\
  /**\n\
   * Check if this route matches `path`, if so\n\
   * populate `params`.\n\
   *\n\
   * @param {String} path\n\
   * @param {Array} params\n\
   * @return {Boolean}\n\
   * @api private\n\
   */\n\
\n\
  Route.prototype.match = function(path, params){\n\
    var keys = this.keys\n\
      , qsIndex = path.indexOf('?')\n\
      , pathname = ~qsIndex ? path.slice(0, qsIndex) : path\n\
      , m = this.regexp.exec(decodeURIComponent(pathname));\n\
\n\
    if (!m) return false;\n\
\n\
    for (var i = 1, len = m.length; i < len; ++i) {\n\
      var key = keys[i - 1];\n\
\n\
      var val = 'string' == typeof m[i]\n\
        ? decodeURIComponent(m[i])\n\
        : m[i];\n\
\n\
      if (key) {\n\
        params[key.name] = undefined !== params[key.name]\n\
          ? params[key.name]\n\
          : val;\n\
      } else {\n\
        params.push(val);\n\
      }\n\
    }\n\
\n\
    return true;\n\
  };\n\
\n\
  /**\n\
   * Normalize the given path string,\n\
   * returning a regular expression.\n\
   *\n\
   * An empty array should be passed,\n\
   * which will contain the placeholder\n\
   * key names. For example \"/user/:id\" will\n\
   * then contain [\"id\"].\n\
   *\n\
   * @param  {String|RegExp|Array} path\n\
   * @param  {Array} keys\n\
   * @param  {Boolean} sensitive\n\
   * @param  {Boolean} strict\n\
   * @return {RegExp}\n\
   * @api private\n\
   */\n\
\n\
  function pathtoRegexp(path, keys, sensitive, strict) {\n\
    if (path instanceof RegExp) return path;\n\
    if (path instanceof Array) path = '(' + path.join('|') + ')';\n\
    path = path\n\
      .concat(strict ? '' : '/?')\n\
      .replace(/\\/\\(/g, '(?:/')\n\
      .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?/g, function(_, slash, format, key, capture, optional){\n\
        keys.push({ name: key, optional: !! optional });\n\
        slash = slash || '';\n\
        return ''\n\
          + (optional ? '' : slash)\n\
          + '(?:'\n\
          + (optional ? slash : '')\n\
          + (format || '') + (capture || (format && '([^/.]+?)' || '([^/]+?)')) + ')'\n\
          + (optional || '');\n\
      })\n\
      .replace(/([\\/.])/g, '\\\\$1')\n\
      .replace(/\\*/g, '(.*)');\n\
    return new RegExp('^' + path + '$', sensitive ? '' : 'i');\n\
  }\n\
\n\
  /**\n\
   * Handle \"populate\" events.\n\
   */\n\
\n\
  function onpopstate(e) {\n\
    if (e.state) {\n\
      var path = e.state.path;\n\
      page.replace(path, e.state);\n\
    }\n\
  }\n\
\n\
  /**\n\
   * Handle \"click\" events.\n\
   */\n\
\n\
  function onclick(e) {\n\
    if (1 != which(e)) return;\n\
    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\
    if (e.defaultPrevented) return;\n\
\n\
    // ensure link\n\
    var el = e.target;\n\
    while (el && 'A' != el.nodeName) el = el.parentNode;\n\
    if (!el || 'A' != el.nodeName) return;\n\
\n\
    // ensure non-hash for the same path\n\
    var link = el.getAttribute('href');\n\
    if (el.pathname == location.pathname && (el.hash || '#' == link)) return;\n\
\n\
    // check target\n\
    if (el.target) return;\n\
\n\
    // x-origin\n\
    if (!sameOrigin(el.href)) return;\n\
\n\
    // rebuild path\n\
    var path = el.pathname + el.search + (el.hash || '');\n\
\n\
    // same page\n\
    var orig = path + el.hash;\n\
\n\
    path = path.replace(base, '');\n\
    if (base && orig == path) return;\n\
\n\
    e.preventDefault();\n\
    page.show(orig);\n\
  }\n\
\n\
  /**\n\
   * Event button.\n\
   */\n\
\n\
  function which(e) {\n\
    e = e || window.event;\n\
    return null == e.which\n\
      ? e.button\n\
      : e.which;\n\
  }\n\
\n\
  /**\n\
   * Check if `href` is the same origin.\n\
   */\n\
\n\
  function sameOrigin(href) {\n\
    var origin = location.protocol + '//' + location.hostname;\n\
    if (location.port) origin += ':' + location.port;\n\
    return 0 == href.indexOf(origin);\n\
  }\n\
\n\
  /**\n\
   * Expose `page`.\n\
   */\n\
\n\
  if ('undefined' == typeof module) {\n\
    window.page = page;\n\
  } else {\n\
    module.exports = page;\n\
  }\n\
\n\
})();\n\
//@ sourceURL=visionmedia-page.js/index.js"
));

require.register("component-event/index.js", Function("exports, require, module",
"var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n\
    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n\
    prefix = bind !== 'addEventListener' ? 'on' : '';\n\
\n\
/**\n\
 * Bind `el` event `type` to `fn`.\n\
 *\n\
 * @param {Element} el\n\
 * @param {String} type\n\
 * @param {Function} fn\n\
 * @param {Boolean} capture\n\
 * @return {Function}\n\
 * @api public\n\
 */\n\
\n\
exports.bind = function(el, type, fn, capture){\n\
  el[bind](prefix + type, fn, capture || false);\n\
  return fn;\n\
};\n\
\n\
/**\n\
 * Unbind `el` event `type`'s callback `fn`.\n\
 *\n\
 * @param {Element} el\n\
 * @param {String} type\n\
 * @param {Function} fn\n\
 * @param {Boolean} capture\n\
 * @return {Function}\n\
 * @api public\n\
 */\n\
\n\
exports.unbind = function(el, type, fn, capture){\n\
  el[unbind](prefix + type, fn, capture || false);\n\
  return fn;\n\
};//@ sourceURL=component-event/index.js"
));
require.register("component-classes/index.js", Function("exports, require, module",
"/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var index = require('indexof');\n\
\n\
/**\n\
 * Whitespace regexp.\n\
 */\n\
\n\
var re = /\\s+/;\n\
\n\
/**\n\
 * toString reference.\n\
 */\n\
\n\
var toString = Object.prototype.toString;\n\
\n\
/**\n\
 * Wrap `el` in a `ClassList`.\n\
 *\n\
 * @param {Element} el\n\
 * @return {ClassList}\n\
 * @api public\n\
 */\n\
\n\
module.exports = function(el){\n\
  return new ClassList(el);\n\
};\n\
\n\
/**\n\
 * Initialize a new ClassList for `el`.\n\
 *\n\
 * @param {Element} el\n\
 * @api private\n\
 */\n\
\n\
function ClassList(el) {\n\
  if (!el) throw new Error('A DOM element reference is required');\n\
  this.el = el;\n\
  this.list = el.classList;\n\
}\n\
\n\
/**\n\
 * Add class `name` if not already present.\n\
 *\n\
 * @param {String} name\n\
 * @return {ClassList}\n\
 * @api public\n\
 */\n\
\n\
ClassList.prototype.add = function(name){\n\
  // classList\n\
  if (this.list) {\n\
    this.list.add(name);\n\
    return this;\n\
  }\n\
\n\
  // fallback\n\
  var arr = this.array();\n\
  var i = index(arr, name);\n\
  if (!~i) arr.push(name);\n\
  this.el.className = arr.join(' ');\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Remove class `name` when present, or\n\
 * pass a regular expression to remove\n\
 * any which match.\n\
 *\n\
 * @param {String|RegExp} name\n\
 * @return {ClassList}\n\
 * @api public\n\
 */\n\
\n\
ClassList.prototype.remove = function(name){\n\
  if ('[object RegExp]' == toString.call(name)) {\n\
    return this.removeMatching(name);\n\
  }\n\
\n\
  // classList\n\
  if (this.list) {\n\
    this.list.remove(name);\n\
    return this;\n\
  }\n\
\n\
  // fallback\n\
  var arr = this.array();\n\
  var i = index(arr, name);\n\
  if (~i) arr.splice(i, 1);\n\
  this.el.className = arr.join(' ');\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Remove all classes matching `re`.\n\
 *\n\
 * @param {RegExp} re\n\
 * @return {ClassList}\n\
 * @api private\n\
 */\n\
\n\
ClassList.prototype.removeMatching = function(re){\n\
  var arr = this.array();\n\
  for (var i = 0; i < arr.length; i++) {\n\
    if (re.test(arr[i])) {\n\
      this.remove(arr[i]);\n\
    }\n\
  }\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Toggle class `name`, can force state via `force`.\n\
 *\n\
 * For browsers that support classList, but do not support `force` yet,\n\
 * the mistake will be detected and corrected.\n\
 *\n\
 * @param {String} name\n\
 * @param {Boolean} force\n\
 * @return {ClassList}\n\
 * @api public\n\
 */\n\
\n\
ClassList.prototype.toggle = function(name, force){\n\
  // classList\n\
  if (this.list) {\n\
    if (\"undefined\" !== typeof force) {\n\
      if (force !== this.list.toggle(name, force)) {\n\
        this.list.toggle(name); // toggle again to correct\n\
      }\n\
    } else {\n\
      this.list.toggle(name);\n\
    }\n\
    return this;\n\
  }\n\
\n\
  // fallback\n\
  if (\"undefined\" !== typeof force) {\n\
    if (!force) {\n\
      this.remove(name);\n\
    } else {\n\
      this.add(name);\n\
    }\n\
  } else {\n\
    if (this.has(name)) {\n\
      this.remove(name);\n\
    } else {\n\
      this.add(name);\n\
    }\n\
  }\n\
\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Return an array of classes.\n\
 *\n\
 * @return {Array}\n\
 * @api public\n\
 */\n\
\n\
ClassList.prototype.array = function(){\n\
  var str = this.el.className.replace(/^\\s+|\\s+$/g, '');\n\
  var arr = str.split(re);\n\
  if ('' === arr[0]) arr.shift();\n\
  return arr;\n\
};\n\
\n\
/**\n\
 * Check if class `name` is present.\n\
 *\n\
 * @param {String} name\n\
 * @return {ClassList}\n\
 * @api public\n\
 */\n\
\n\
ClassList.prototype.has =\n\
ClassList.prototype.contains = function(name){\n\
  return this.list\n\
    ? this.list.contains(name)\n\
    : !! ~index(this.array(), name);\n\
};\n\
//@ sourceURL=component-classes/index.js"
));
require.register("component-ie/index.js", Function("exports, require, module",
"/**\n\
 * Export `ie`.\n\
 */\n\
\n\
module.exports = ie();\n\
\n\
/**\n\
 * Initialize `ie`\n\
 *\n\
 * @return {Number|undefined}\n\
 * @api public\n\
 */\n\
\n\
function ie() {\n\
  for( var v = 3,\n\
           el = document.createElement('b'),\n\
           // empty array as loop breaker (and exception-avoider) for non-IE and IE10+\n\
           all = el.all || [];\n\
       // i tag not well-formed since we know that IE5-IE9 won't mind\n\
       el.innerHTML = '<!--[if gt IE ' + (++v) + ']><i><![endif]-->',\n\
       all[0];\n\
     );\n\
  // return the documentMode for IE10+ compatibility\n\
  // non-IE will get undefined\n\
  return v > 4 ? v : document.documentMode;\n\
}\n\
//@ sourceURL=component-ie/index.js"
));
require.register("johntron-superagent-no-cache/index.js", Function("exports, require, module",
"var ie = require('ie');\n\
\n\
function with_query_strings(request) {\n\
    request._query = [Date.now().toString()]\n\
    return request;\n\
}\n\
\n\
module.exports = function (request) {\n\
\trequest.set('X-Requested-With', 'XMLHttpRequest');\n\
\trequest.set('Cache-Control', 'no-cache,no-store,must-revalidate,max-age=-1');\n\
\n\
    if (ie) {\n\
        with_query_strings(request);\n\
    }\n\
\n\
\treturn request;\n\
};//@ sourceURL=johntron-superagent-no-cache/index.js"
));
require.register("logger/index.js", Function("exports, require, module",
"/*global $:true, navigator:true */\n\
\n\
var window = window || {},\n\
    navigator = window.navigator || {},\n\
    noop = function () {},\n\
    logger,\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache');\n\
\n\
/**\n\
 * Creates an object that can log messages to a server via AJAX\n\
 *\n\
 * @param level\n\
 * @param environment Object containing additional info to send in all messages\n\
 * @param target_url URL to send log messages to\n\
 * @constructor\n\
 */\n\
function Logger(level, environment, target_url) {\n\
    this.set_level(level);\n\
    this.environment = this.get_environment(environment);\n\
    this.target_url = target_url;\n\
\n\
    // Expose dependencies for test stubbing\n\
    this.request = request;\n\
}\n\
\n\
Logger.levels = {\n\
    critical: 1,\n\
    error: 2,\n\
    warning: 4,\n\
    info: 8,\n\
    debug: 16\n\
};\n\
\n\
Logger.strings = {\n\
    critical: 'CRITICAL',\n\
    error: 'ERROR',\n\
    warning: 'WARNING',\n\
    info: 'INFO',\n\
    debug: 'DEBUG'\n\
};\n\
\n\
Logger.console_map = {\n\
    critical: noop,\n\
    error: noop,\n\
    warning: noop,\n\
    info: noop,\n\
    debug: noop\n\
};\n\
\n\
if (window.console) {\n\
    Logger.console_map = {\n\
        critical: window.console.error,\n\
        error: window.console.error,\n\
        warning: window.console.warn || window.console.error,\n\
        info: window.console.info,\n\
        debug: window.console.debug || window.console.info\n\
    };\n\
}\n\
\n\
Logger.prototype.use = function (fn) {\n\
    fn(this);\n\
};\n\
\n\
Logger.prototype.log = function (level, e) {\n\
    var console_handler;\n\
\n\
    e = this.get_error_object(level, e);\n\
\n\
    if (this.level >= Logger.levels.debug && window.console) {\n\
        console_handler = Logger.console_map[level].bind(window.console);\n\
        // Allow arbitrary parameters to be logged with console.log()\n\
        var args = [e.message].concat([].slice.call(arguments, 2));\n\
        console_handler.apply(window, args);\n\
    }\n\
\n\
    if (this.target_url) {\n\
        try {\n\
            this.request.post(this.target_url)\n\
                .use(no_cache)\n\
                .send(e)\n\
                .set('Content-type', 'application/json')\n\
                .end(noop, Logger.console_map.error);\n\
        } catch (ex) {\n\
            // Avoid endless loops when errors occur during transmission\n\
            return;\n\
        }\n\
    }\n\
};\n\
\n\
/**\n\
 * Change logging level\n\
 *\n\
 * @param level\n\
 * @param and_below Boolean include logging levels below `level` (default: true)\n\
 * @returns {Logger.level|int}\n\
 */\n\
Logger.prototype.set_level = function (level, and_below) {\n\
    var l;\n\
\n\
    if (typeof level === 'string') {\n\
        level = Logger.levels[level.toLowerCase()] || Logger.levels.error;\n\
\n\
    }\n\
\n\
    and_below = and_below === undefined ? true : and_below; // Default to true\n\
    if (and_below) {\n\
        // Include all levels below specified level\n\
        level += level - 1;\n\
    }\n\
\n\
    this.level = level;\n\
\n\
    // Create Logger.* methods for each *active* log level\n\
    for (l in Logger.levels) {\n\
        if (Logger.levels.hasOwnProperty(l)) {\n\
            /*jslint bitwise:true */\n\
            if (Logger.levels[l] & this.level) {\n\
                // Log level is enabled\n\
                this[l] = this.log.bind(this, l);\n\
            } else {\n\
                // Disabled\n\
                this[l] = noop;\n\
            }\n\
            /*jslint bitwise:false */\n\
        }\n\
    }\n\
\n\
    return this.level;\n\
};\n\
\n\
/**\n\
 * Used internally to create a JSON-friendly object from most kinds of\n\
 * variable\n\
 *\n\
 * @param level One of levels.*\n\
 * @param e\n\
 * @returns Object\n\
 */\n\
Logger.prototype.get_error_object = function (level, e) {\n\
    var new_e = {};\n\
\n\
    // Convert all errors to objects\n\
    if (typeof e === 'object') {\n\
        // Include non-enumerable properties (i.e. Error.message)\n\
        Object.getOwnPropertyNames(e).forEach(function (prop) {\n\
            new_e[prop] = e[prop];\n\
        });\n\
\n\
        e = new_e;\n\
    } else {\n\
        e = {message: e};\n\
    }\n\
\n\
    e.type = Logger.strings[level];\n\
\n\
    // Merge additional info\n\
    e.environment = this.environment;\n\
\n\
    // Include a timestamp\n\
    e.timestamp = new Date();\n\
\n\
    return e;\n\
};\n\
\n\
Logger.prototype.get_environment = function (environment) {\n\
    var property;\n\
\n\
    // Add browser attributes\n\
    for (property in navigator) {\n\
        if (navigator.hasOwnProperty(property)) {\n\
            environment[property] = navigator[property];\n\
        }\n\
    }\n\
\n\
    return environment;\n\
};\n\
\n\
function handleWindowError(message, url, linenumber, colnumber, errorObj) {\n\
    var e = {\n\
        message: message,\n\
        url: url,\n\
        linenumber: url,\n\
        colnumber: colnumber,\n\
        errorObj: errorObj\n\
    };\n\
\n\
    this.error(e);\n\
\n\
    return true;\n\
}\n\
\n\
Logger.prototype.attachWindowErrorHandler = function () {\n\
    window.onerror = handleWindowError.bind(this);\n\
};\n\
\n\
module.exports = Logger;\n\
//@ sourceURL=logger/index.js"
));
require.register("logger-jquery-ajax/index.js", Function("exports, require, module",
"/*global $:true */\n\
\n\
function handler(jqXhr, textStatus, e) {\n\
    e.ajax = true;\n\
    e.timeStamp = jqXhr.timeStamp;\n\
    e.textStatus = textStatus;\n\
    this.error(e);\n\
}\n\
\n\
module.exports = function (logger) {\n\
    // Handle ajax errors and pass em' back to the server\n\
    $(document).ajaxError(handler.bind(logger));\n\
};\n\
//@ sourceURL=logger-jquery-ajax/index.js"
));
require.register("asset-manager/index.js", Function("exports, require, module",
"//http://www.html5rocks.com/en/tutorials/games/assetmanager/\n\
\n\
function AssetManager() {\n\
    this.successCount = 0;\n\
    this.errorCount = 0;\n\
    this.cache = {};\n\
    this.downloadQueue = [];\n\
}\n\
\n\
module.exports = AssetManager;\n\
\n\
AssetManager.prototype.queueDownload = function (path) {\n\
    var self = AssetManager.typesafe(this);\n\
\n\
    if (self.downloadQueue.indexOf(path) === -1) {\n\
        self.downloadQueue.push(path);\n\
    }\n\
};\n\
\n\
AssetManager.prototype.downloadAll = function (callback) {\n\
    var self = AssetManager.typesafe(this);\n\
\n\
    if (self.downloadQueue.length === 0 || self.isDone()) {\n\
        callback();\n\
    }\n\
\n\
    for (var i = 0; i < self.downloadQueue.length; i++) {\n\
        var path = this.downloadQueue[i];\n\
        var img = new Image();\n\
        img.addEventListener(\"load\", function () {\n\
            self.successCount++;\n\
            if (self.isDone()) {\n\
                callback();\n\
            }\n\
        }, false);\n\
        img.addEventListener(\"error\", function () {\n\
            self.errorCount++;\n\
            if (self.isDone()) {\n\
                callback();\n\
            }\n\
        }, false);\n\
        img.src = path;\n\
        self.cache[path] = img;\n\
    }\n\
};\n\
\n\
AssetManager.prototype.getAsset = function (path) {\n\
    var self = AssetManager.typesafe(this);\n\
\n\
    return self.cache[path];\n\
}\n\
\n\
AssetManager.prototype.isDone = function () {\n\
    var self = AssetManager.typesafe(this);\n\
\n\
    return self.downloadQueue.length === self.successCount + self.errorCount;\n\
};\n\
\n\
//Type check\n\
AssetManager.typesafe = function (that) {\n\
    if (!(that instanceof AssetManager)) {\n\
        throw new Error('This method must be executed on a AssetManager');\n\
    }\n\
\n\
    return that;\n\
};//@ sourceURL=asset-manager/index.js"
));
require.register("component-query/index.js", Function("exports, require, module",
"function one(selector, el) {\n\
  return el.querySelector(selector);\n\
}\n\
\n\
exports = module.exports = function(selector, el){\n\
  el = el || document;\n\
  return one(selector, el);\n\
};\n\
\n\
exports.all = function(selector, el){\n\
  el = el || document;\n\
  return el.querySelectorAll(selector);\n\
};\n\
\n\
exports.engine = function(obj){\n\
  if (!obj.one) throw new Error('.one callback required');\n\
  if (!obj.all) throw new Error('.all callback required');\n\
  one = obj.one;\n\
  exports.all = obj.all;\n\
  return exports;\n\
};\n\
//@ sourceURL=component-query/index.js"
));
require.register("component-matches-selector/index.js", Function("exports, require, module",
"/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var query = require('query');\n\
\n\
/**\n\
 * Element prototype.\n\
 */\n\
\n\
var proto = Element.prototype;\n\
\n\
/**\n\
 * Vendor function.\n\
 */\n\
\n\
var vendor = proto.matches\n\
  || proto.webkitMatchesSelector\n\
  || proto.mozMatchesSelector\n\
  || proto.msMatchesSelector\n\
  || proto.oMatchesSelector;\n\
\n\
/**\n\
 * Expose `match()`.\n\
 */\n\
\n\
module.exports = match;\n\
\n\
/**\n\
 * Match `el` to `selector`.\n\
 *\n\
 * @param {Element} el\n\
 * @param {String} selector\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
function match(el, selector) {\n\
  if (vendor) return vendor.call(el, selector);\n\
  var nodes = query.all(selector, el.parentNode);\n\
  for (var i = 0; i < nodes.length; ++i) {\n\
    if (nodes[i] == el) return true;\n\
  }\n\
  return false;\n\
}\n\
//@ sourceURL=component-matches-selector/index.js"
));
require.register("yields-traverse/index.js", Function("exports, require, module",
"\n\
/**\n\
 * dependencies\n\
 */\n\
\n\
var matches = require('matches-selector');\n\
\n\
/**\n\
 * Traverse with the given `el`, `selector` and `len`.\n\
 *\n\
 * @param {String} type\n\
 * @param {Element} el\n\
 * @param {String} selector\n\
 * @param {Number} len\n\
 * @return {Array}\n\
 * @api public\n\
 */\n\
\n\
module.exports = function(type, el, selector, len){\n\
  var el = el[type]\n\
    , n = len || 1\n\
    , ret = [];\n\
\n\
  if (!el) return ret;\n\
\n\
  do {\n\
    if (n == ret.length) break;\n\
    if (1 != el.nodeType) continue;\n\
    if (matches(el, selector)) ret.push(el);\n\
    if (!selector) ret.push(el);\n\
  } while (el = el[type]);\n\
\n\
  return ret;\n\
}\n\
//@ sourceURL=yields-traverse/index.js"
));
require.register("ianstormtaylor-next-sibling/index.js", Function("exports, require, module",
"\n\
var traverse = require('traverse');\n\
\n\
\n\
/**\n\
 * Expose `nextSibling`.\n\
 */\n\
\n\
module.exports = nextSibling;\n\
\n\
\n\
/**\n\
 * Get the next sibling for an `el`.\n\
 *\n\
 * @param {Element} el\n\
 * @param {String} selector (optional)\n\
 */\n\
\n\
function nextSibling (el, selector) {\n\
  el = traverse('nextSibling', el, selector)[0];\n\
  return el || null;\n\
}//@ sourceURL=ianstormtaylor-next-sibling/index.js"
));
require.register("lightbox/index.js", Function("exports, require, module",
"/*global $: true */\n\
\n\
var emitter = require('emitter'),\n\
    lightboxOptionDefaults = {\n\
        url: \"\",\n\
        selector: \"\",\n\
        data: null,\n\
        cancelSelector: null,\n\
        isModal: false,\n\
        onOpenComplete: $.noop,\n\
        onClose: $.noop\n\
    };\n\
\n\
function Lightbox(template) {\n\
    if ('[object Function]' === Object.prototype.toString.call(template)) {\n\
        this.getTemplate = template;\n\
    } else {\n\
        this.getTemplate = function () {};\n\
    }\n\
    this.lastCancelSelector = '';\n\
}\n\
\n\
emitter(Lightbox.prototype);\n\
\n\
module.exports = Lightbox;\n\
\n\
//Warning: if used with a click event be sure to stopPropogation so click handlers on body aren't fired.\n\
Lightbox.prototype.open = function (options) {\n\
    if (this.isOpen) {\n\
        this.close();\n\
    }\n\
\n\
    options = $.extend({}, lightboxOptionDefaults, options);\n\
\n\
    this.getTemplate(options.url, options.selector, this.openWithElement.bind(this, options));\n\
};\n\
\n\
Lightbox.prototype.error = function (header, message) {\n\
    message = message || header;\n\
\n\
    var workingVm = new LightboxWorkingViewModel(header, message);\n\
    workingVm.status('error');\n\
    this.working(workingVm);\n\
};\n\
\n\
Lightbox.prototype.openWithElement = function (options, element) {\n\
    if ($(\"#fade\").length === 0) {\n\
        $(\"body\").append(\"<div id='fade'></div>\");\n\
        $(\"#fade\").append(element.tmpl(options.data));\n\
    } else {\n\
        $(\"#fade\").empty().append(element);\n\
    }\n\
\n\
    this.bindEvents(options.isModal, options.cancelSelector, options.onClose);\n\
\n\
    options.onOpenComplete(element);\n\
    if ($(window).height() < $(\"#fade > div\").height()) {\n\
        bodyHeight = $(window).height() - 25;\n\
        $(\"#fade > div\").height(bodyHeight);\n\
        $(\"#fade > div\").css({'overflow-y': 'scroll', 'overflow-x': 'hidden'});\n\
    }\n\
    this.isOpen = true;\n\
};\n\
\n\
Lightbox.prototype.bindEvents = function (isModal, cancelSelector, onClose) {\n\
    this.unbindEvents();\n\
\n\
    if (!isModal) {\n\
        $(\"#fade\").on(\"keydown.lightbox\", function (e) {\n\
            if (e.which === 27) { //esc\n\
                onClose();\n\
                this.close();\n\
            }\n\
        }.bind(this));\n\
        $(\"body\").on(\"click.lightbox\", function (e) {\n\
            var $overlay = document.querySelector('#fade'),\n\
                $target = e.target;\n\
\n\
            // Make sure they were clicking inside the lightbox overlay (#fade)\n\
            // but outside of the dialog\n\
            if ($overlay.contains($target)) {\n\
                onClose();\n\
                this.close();\n\
            }\n\
        }.bind(this));\n\
        $(cancelSelector).on(\"click.lightbox\", function (e) {\n\
            onClose();\n\
            this.close();\n\
        }.bind(this));\n\
\n\
        this.lastCancelSelector = cancelSelector;\n\
    }\n\
    $(\"#fade\").children().on(\"click.lightbox\", function (e) {\n\
        e.stopPropagation();\n\
    });\n\
};\n\
\n\
Lightbox.prototype.unbindEvents = function () {\n\
    $(\"body\").off(\".lightbox\");\n\
    $(this.lastCancelSelector).off(\".lightbox\");\n\
    $(\"#fade\").children().off(\".lightbox\");\n\
};\n\
\n\
Lightbox.prototype.openError = function (header, message) {\n\
    var lightboxErrorVm = new LightboxErrorViewModel(header, message);\n\
\n\
    var options = {\n\
        url: 'html/lightbox_tmpl',\n\
        selector: '#lightbox-error-template',\n\
        cancelSelector: '.ok-button',\n\
        onOpenComplete: function () {\n\
            ko.applyBindings(lightboxErrorVm, document.getElementById('lightbox-error'));\n\
        }\n\
    };\n\
\n\
    this.open(options);\n\
};\n\
\n\
Lightbox.prototype.openDeviceAuthError = function (testConfigVm, device, header, message) {\n\
    var lightboxErrorVm = new LightboxDeviceAuthErrorViewModel(testConfigVm, device, header, message);\n\
\n\
    var options = {\n\
        url: 'templates/lightbox.tmpl.html',\n\
        selector: '#lightbox-device-auth-error-template',\n\
        cancelSelector: '.cancel',\n\
        onOpenComplete: function () {\n\
            ko.applyBindings(lightboxErrorVm, document.getElementById('lightbox-device-auth-error'));\n\
        }\n\
    };\n\
\n\
    this.open(options);\n\
};\n\
\n\
Lightbox.prototype.openAlert = function (header, message) {\n\
    var lightboxWarningVm = new LightboxErrorViewModel(header, message);\n\
\n\
    var options = {\n\
        url: 'templates/lightbox.tmpl.html',\n\
        selector: '#lightbox-alert-template',\n\
        cancelSelector: '.ok-button',\n\
        onOpenComplete: function () {\n\
            ko.applyBindings(lightboxWarningVm, document.getElementById('lightbox-alert'));\n\
        }\n\
    };\n\
\n\
    this.open(options);\n\
};\n\
\n\
\n\
Lightbox.prototype.openWarning = function (header, message) {\n\
    var lightboxWarningVm = new LightboxErrorViewModel(header, message);\n\
\n\
    var options = {\n\
        url: 'templates/lightbox.tmpl.html',\n\
        selector: '#lightbox-error-warning-template',\n\
        cancelSelector: '.ok-button',\n\
        onOpenComplete: function () {\n\
            ko.applyBindings(lightboxWarningVm, document.getElementById('lightbox-error-warning'));\n\
        }\n\
    };\n\
\n\
    this.open(options);\n\
};\n\
\n\
Lightbox.prototype.confirmIgnoreWorking = function () {\n\
    var text = 'Working';\n\
    if (this instanceof LightboxWorkingViewModel) {\n\
        text = this.actionText().replace('...', '');\n\
    }\n\
    return \"Are you sure you want to leave the page while \" + text + \"?\";\n\
}\n\
\n\
Lightbox.prototype.working = function (workingVm) {\n\
    var $lb = document.getElementById('lightbox-working');\n\
\n\
    window.onbeforeunload = this.confirmIgnoreWorking.bind(workingVm);\n\
    if ($lb) {\n\
        ko.applyBindings(workingVm, $lb);\n\
    } else {\n\
        this.open({\n\
            url: 'html/lightbox_tmpl',\n\
            selector: '#lightbox-working-template',\n\
            cancelSelector: '.cancel-button',\n\
            isModal: true,\n\
            onOpenComplete: function () {\n\
                ko.applyBindings(workingVm, document.getElementById('lightbox-working'));\n\
            }\n\
        });\n\
    }\n\
    return workingVm;\n\
}\n\
\n\
Lightbox.prototype.close = function () {\n\
    $(\"#fade\").remove();\n\
    $(\"body\").off(\".lightbox\");\n\
    this.isOpen = false;\n\
    window.onbeforeunload = null;\n\
    this.emit('close');\n\
}\n\
\n\
Lightbox.prototype.confirmation_dialog = function (invoker, text, okFunction) {\n\
    var self = this;\n\
    invoker.okFunction = function() {\n\
        self.close();\n\
        okFunction.call(invoker);\n\
    };\n\
    invoker.lightboxText = text;\n\
    this.open({\n\
        url: 'html/lightbox_tmpl',\n\
        selector: '#lightbox-warning-template',\n\
        cancelSelector: '.cancel-button',\n\
        onOpenComplete: function () {\n\
            ko.applyBindings(invoker, document.getElementById('lightbox-warning'));\n\
        }\n\
    });\n\
};\n\
//@ sourceURL=lightbox/index.js"
));
require.register("utility-functions/index.js", Function("exports, require, module",
"/*global logger:true */\n\
\n\
var Lightbox = require('lightbox'),\n\
    classes = require('classes'),\n\
    next = require('next-sibling'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache');\n\
\n\
/**\n\
 *\n\
 * @param url\n\
 * @param template_selector\n\
 * @param callback - Receives template (a <script> element - see below)\n\
 * @param reload\n\
 * @param log\n\
 */\n\
function getTemplate(url, template_selector, callback, reload, log) {\n\
    callback = callback || $.noop;\n\
    log = (log === null || log === undefined) ? true : log;\n\
    if ($(template_selector).length > 0 && reload) {\n\
        $(template_selector).remove();\n\
    }\n\
    if ($(template_selector).length < 1) {\n\
        $.ajax({\n\
            url: url,\n\
            dataType: \"html\",\n\
            success: function (templateData) {\n\
                $(\"body\").append(templateData);\n\
                var $template = $(template_selector);\n\
                if ($template.length < 1 && log) {\n\
                    logger.warning(\"Tried to get element: \" + template_selector + \" in \" + url + \" but was not found.\");\n\
                }\n\
                // Warning: $template is a <script> element with string\n\
                // content - we need to call $.tmpl() on this to convert its\n\
                // contents to DOM elements. See\n\
                // axon/components-spirent/lightbox/index.js:openWithElement()\n\
                // for an example of how to do this.\n\
                callback($template);\n\
            }\n\
        });\n\
    } else {\n\
        callback($(template_selector));\n\
    }\n\
}\n\
\n\
function greaterOf(control, test) {\n\
    return control > test ? control : test;\n\
}\n\
\n\
function arrayToJSON(array) {\n\
    var jsonArray = [];\n\
    for (var i = 0; i < array.length; i++) {\n\
        jsonArray.push(array[i].toJSON());\n\
    }\n\
    return jsonArray;\n\
}\n\
\n\
function setTags(taggedObject, tagJson) {\n\
    taggedObject.tags.removeAll();\n\
    var tags = new Array();\n\
    if (tagJson) {\n\
        if (tagJson[\"user_defined\"])\n\
            taggedObject.tags(tagJson[\"user_defined\"]);\n\
        if (tagJson[\"company\"])\n\
            taggedObject.customer(tagJson[\"company\"]);\n\
        if (tagJson[\"location\"])\n\
            taggedObject.location(tagJson[\"location\"]);\n\
\n\
        if (tagJson[\"favorite\"])\n\
            taggedObject.favorite(tagJson[\"favorite\"]);\n\
        else\n\
            taggedObject.favorite(false);\n\
    }\n\
    return taggedObject;\n\
}\n\
\n\
function getTags(taggedObject) {\n\
    var tags = { user_defined: new Array() };\n\
    var tagArray = taggedObject.tags();\n\
    for (var i = 0; i < tagArray.length; i++)\n\
        tags.user_defined.push(tagArray[i]);\n\
\n\
    if (taggedObject.customer() && taggedObject.customer() != \"select one\") {\n\
        tags.company = taggedObject.customer();\n\
    }\n\
    if (taggedObject.location() && taggedObject.location() != \"select one\") {\n\
        tags.location = taggedObject.location();\n\
    }\n\
    if (taggedObject.favorite()) {\n\
        tags.favorite = taggedObject.favorite();\n\
    }\n\
    return tags;\n\
}\n\
\n\
function trimTag(tag) {\n\
    // trim outter whitespace and non-alphanumeric characters\n\
    return tag.replace(/^\\s+|\\s+$|[^a-zA-Z0-9\\s]+/g, '');\n\
}\n\
\n\
function sanitizeUnqualifiedTagGroup(tags) {\n\
    // trim everything other than alphanumeric, spaces and commas\n\
    return tags.replace(/[^,a-zA-Z0-9\\s]+/g, '').replace(/,,/g, ',');\n\
}\n\
\n\
function formatRequestData(key, data) {\n\
    if (key.indexOf(\"get\") == -1) {\n\
        return ko.toJSON(data);//{ \"data\": data };\n\
    }\n\
    else {\n\
        var jsonData = ko.toJSON(data);\n\
        util.logData(jsonData);\n\
        return 'data=' + jsonData;\n\
    }\n\
}\n\
\n\
function getConfigSetting(key) {\n\
    var rootPath = \"/spirent/\";\n\
    var stubsPath = \"stubs/\";\n\
\n\
    var config = {\n\
        \"get_axon_tests\": rootPath + \"get_axon_tests.json\",\n\
        \"get_test_templates\": rootPath + \"get_test_templates.json\",\n\
        \"get_favorite_tests\": rootPath + \"get_favorite_tests.json\",\n\
        \"get_datapoints\": rootPath + \"get_datapoints.json\",\n\
        \"devices_status\": rootPath + \"devices/status\",\n\
        \"time_sync_status\": rootPath + \"status/time_sync\",\n\
        \"get_playlists\": rootPath + \"get_playlists.json\",\n\
        \"get_playlist_tracks\": rootPath + \"get_playlist_tracks.json\",\n\
        \"get_tracks\": rootPath + \"get_tracks.json\",\n\
        \"get_results\": rootPath + \"get_results.json\",\n\
        \"get_endpoints\": rootPath + \"get_endpoints.json\",\n\
        \"get_devices\": rootPath + \"get_devices.json\",\n\
        \"get_customers\": rootPath + \"get_customer_tags.json\",\n\
        \"get_locations\": rootPath + \"get_location_tags.json\",\n\
        \"get_language\": rootPath + \"get_language\",\n\
        \"set_language\": rootPath + \"set_language\",\n\
        \"get_result_history\": rootPath + \"get_result_history.json\",\n\
        \"get_portlets\": rootPath + \"get_portlets.json\",\n\
        \"get_tags\": rootPath + \"get_user_defined_tags.json\",\n\
        \"save_axon_test\": rootPath + \"save_axon_test\",\n\
        \"save_test_template\": rootPath + \"save_test_template\",\n\
        \"save_track\": rootPath + \"save_track\",\n\
        \"save_playlist\": rootPath + \"save_playlist\",\n\
        \"save_endpoint\": rootPath + \"save_endpoint\",\n\
        \"save_device\": rootPath + \"save_device\",\n\
        \"save_result\": rootPath + \"save_result\",\n\
        \"config_test\": rootPath + \"config_test\",\n\
        \"run_test\": rootPath + \"run_test\",\n\
        \"create_test_event\": rootPath + \"schedule/test-events\",\n\
        \"get_istestready\": rootPath + \"get_istestready\",\n\
        \"get_result_types\": rootPath + \"get_result_types.json\",\n\
        \"cancel_test\": rootPath + \"cancel_test\",\n\
        \"request_final_table\": rootPath + \"request_final_table\",\n\
        \"upgrade_device\": rootPath + \"upgrade_device\",\n\
        \"get_display_messages\": rootPath + \"get_display_messages.json\",\n\
        \"get_global_settings\": rootPath + \"get_global_settings.json\",\n\
        \"save_customers\": rootPath + \"save_customers\",\n\
        \"save_locations\": rootPath + \"save_locations\",\n\
        \"save_global_settings\": rootPath + \"save_global_settings\",\n\
        \"save_wifi_settings\": rootPath + \"save_wifi_settings\",\n\
        \"verify_password\": rootPath + \"verify_password.json\",\n\
        \"set_admin_password\": rootPath + \"set_admin_password\",\n\
        \"backup\": rootPath + \"backup\",\n\
        \"restore_backup\": rootPath + \"restore_backup\",\n\
        \"reboot_axon\": rootPath + \"reboot_axon\",\n\
        \"shutdown_axon\": rootPath + \"shutdown_axon\",\n\
        \"get_task_status\": rootPath + \"get_task_status\",\n\
        \"delete_track\": rootPath + \"delete_track\",\n\
        \"delete_playlist\": rootPath + \"delete_playlist\",\n\
        \"delete_endpoint\": rootPath + \"delete_endpoint\",\n\
        \"get_axon_logs\": rootPath + \"get_axon_logs\",\n\
        \"delete_device\": rootPath + \"delete_device\",\n\
        \"get_device_time_sync\": rootPath + \"get_device_time_sync\",\n\
        \"get_timing_accuracies\": rootPath + \"get_timing_accuracies.json\",\n\
        \"delete_backup\": rootPath + \"delete_backup\",\n\
        \"archive_backup\": rootPath + \"archive_backup\",\n\
        \"import_backup\": rootPath + \"import_backup\",\n\
        \"get_backup_status\": rootPath + \"get_backup_status\",\n\
        \"check_updates\": rootPath + \"check_updates\"\n\
    };\n\
\n\
\n\
    if (config[key])\n\
        return config[key];\n\
    else\n\
        logger.warn('unknown config key: \"' + key + '\"');\n\
}\n\
\n\
function logData(data) {\n\
    logger.info(data);\n\
}\n\
\n\
function isNullOrEmpty(val) {\n\
    return val == null || val.length == 0 || /\\S/.test(val) == false;\n\
}\n\
\n\
function objectsEqual(control, test) {\n\
    return JSON.stringify(control) == JSON.stringify(test);\n\
}\n\
\n\
function trueOrOptional(value) {\n\
    return value === undefined || value === null || value === true;\n\
}\n\
\n\
function toType(obj) {\n\
    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\n\
}\n\
\n\
function setObservableArray(observableArray, array) {\n\
    observableArray.removeAll();\n\
    for (var i = 0; i < array.length; i++) {\n\
        observableArray.push(array[i]);\n\
    }\n\
}\n\
function parseUnixTimestampStringToDate(string, desiredFormat) {\n\
    var newdate = parseInt(string),\n\
        outputFormat;\n\
    if (!desiredFormat) {\n\
        outputFormat = \"MM-dd-yy HH:mm\";\n\
    } else {\n\
        outputFormat = desiredFormat;\n\
    }\n\
    return new Date(newdate * 1000).format(outputFormat);\n\
}\n\
function commafyNumber(number) {\n\
    var parts = number.toString().split(\".\");\n\
    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\
    return parts.join(\".\");\n\
}\n\
\n\
function getMagnitude(number) {\n\
    var isNegative = number < 0;\n\
    number = Math.abs(number);\n\
\n\
    if (number == 0) {\n\
        return 0;\n\
    } else if (number >= 1) {\n\
        var i = 0;\n\
        while (number >= 10) {\n\
            number /= 10;\n\
            i++;\n\
        }\n\
        var mag = Math.pow(10, i);\n\
        return isNegative ? mag * -1 : mag;\n\
    } else {\n\
        var i = 0;\n\
        while (number < 1) {\n\
            number *= 10;\n\
            i--;\n\
        }\n\
        var mag = Math.pow(10, i);\n\
        return isNegative ? mag * -1 : mag;\n\
    }\n\
}\n\
\n\
function minOrDefault(control, test) {\n\
    control = parseFloat(control);\n\
    test = parseFloat(test);\n\
    if (isNaN(control) && isNaN(test)) {\n\
        return;\n\
    }\n\
    if (!isNaN(control) && isNaN(test)) {\n\
        return control;\n\
    }\n\
    if (isNaN(control) && !isNaN(test)) {\n\
        return test;\n\
    }\n\
    return control > test ? test : control;\n\
}\n\
\n\
function maxOrDefault(control, test) {\n\
    control = parseFloat(control);\n\
    test = parseFloat(test);\n\
    if (isNaN(control) && isNaN(test)) {\n\
        return;\n\
    }\n\
    if (!isNaN(control) && isNaN(test)) {\n\
        return control;\n\
    }\n\
    if (isNaN(control) && !isNaN(test)) {\n\
        return test;\n\
    }\n\
    return control < test ? test : control;\n\
}\n\
\n\
function floatFix(number) {\n\
    return (parseFloat(number.toPrecision(3)));\n\
}\n\
\n\
function padNumber(number, length) {\n\
    number = number.toString();\n\
    if (number.length < length) {\n\
        while (number.length < length) {\n\
            number = \"0\" + number;\n\
        }\n\
    }\n\
    return number;\n\
}\n\
\n\
function recursiveUnwrapObservable(value, returnCounter) {\n\
    var result = value;\n\
    var counter = 0;\n\
\n\
    while (ko.isObservable(result)) {\n\
        result = result();\n\
        counter++;\n\
    }\n\
\n\
    if (returnCounter) {\n\
        return {\n\
            value: result,\n\
            counter: counter\n\
        }\n\
    }\n\
\n\
    return result;\n\
}\n\
\n\
function stringAdd() {\n\
    var total = 0;\n\
    for (var i = 0; i < arguments.length; i++) {\n\
        var number = parseInt(arguments[i]);\n\
\n\
        if (isNaN(number)) {\n\
            throw \"Argument \" + i + \" is not a number.\";\n\
        }\n\
        total += number;\n\
    }\n\
\n\
    return total.toString();\n\
}\n\
\n\
function applyFunction(array, func, args) {\n\
    if ($.isFunction(func)) {\n\
        for (var i = 0; i < array.length; i++) {\n\
            if (array[i])\n\
                func.apply(array[i], args);\n\
        }\n\
    }\n\
\n\
    if (typeof func == 'string') {\n\
        for (var i = 0; i < array.length; i++) {\n\
            if (array[i])\n\
                array[i][func].apply(array[i], args);\n\
        }\n\
    }\n\
}\n\
\n\
function sortArrayByObjectKeyKoObservable(field, reverse, primer) {\n\
    var key = function (x) {\n\
        return primer ? primer(x[field]) : x[field]\n\
    };\n\
    return function (a, b) {\n\
        var A = a[field](), B = b[field]();\n\
        return ( (A < B) ? -1 : ((A > B) ? 1 : 0) ) * [-1, 1][+!!reverse];\n\
    }\n\
}\n\
function sortArrayByObjectKey(field, reverse, primer) {\n\
    var key = function (x) {\n\
        return primer ? primer(x[field]) : x[field]\n\
    };\n\
\n\
    return function (a, b) {\n\
        var A = key(a), B = key(b);\n\
        return ( (A < B) ? -1 : ((A > B) ? 1 : 0) ) * [-1, 1][+!!reverse];\n\
    }\n\
}\n\
\n\
function sort_devices (devices) {\n\
    var localChassisRecord = devices.shift();\n\
    devices.sort(function(a,b) {\n\
        var a_name = typeof a.name === 'function' ? a.name() : a.name,\n\
            b_name = typeof b.name === 'function' ? b.name() : b.name;\n\
\n\
        return (a_name > b_name) ? 1 : ((b_name > a_name) ? -1 : 0);\n\
    } );\n\
    devices.unshift(localChassisRecord);\n\
    return devices;\n\
}\n\
\n\
function arraysShareValue(array1, array2, caseInsensitive) {\n\
    if (!caseInsensitive) {\n\
        for (var i = 0; i < array1.length; i++) {\n\
            if (array2.indexOf(array1[i]) != -1) {\n\
                return true;\n\
            }\n\
        }\n\
\n\
        return false;\n\
    }\n\
\n\
\n\
    array1 = $.map(array1, function (n) {\n\
        return(n.toUpperCase());\n\
    });\n\
    array2 = $.map(array2, function (n) {\n\
        return(n.toUpperCase());\n\
    });\n\
\n\
    for (var i = 0; i < array1.length; i++) {\n\
        if (array2.indexOf(array1[i]) != -1) {\n\
            return true;\n\
        }\n\
    }\n\
}\n\
\n\
function warningLightbox(text, okCallback, closeOnOk) {\n\
    var viewModel = {\n\
        lightboxText: text,\n\
        okFunction: function () {\n\
            okCallback.apply(this, arguments);\n\
            if (trueOrOptional(closeOnOk)) {\n\
                lightbox.close();\n\
            }\n\
        }\n\
    };\n\
\n\
    util.lightbox.open({\n\
        url: 'html/lightbox_tmpl',\n\
        selector: '#lightbox-warning-template',\n\
        cancelSelector: '.cancel-button',\n\
        onOpenComplete: function () {\n\
            ko.applyBindings(viewModel, document.getElementById('lightbox-warning'));\n\
        }\n\
    });\n\
}\n\
\n\
function debounce(func, threshold, execAsap){\n\
    var timeout;\n\
    if (false !== execAsap) execAsap = true;\n\
\n\
    return function debounced(){\n\
        var obj = this, args = arguments;\n\
\n\
        function delayed () {\n\
            if (!execAsap) {\n\
                func.apply(obj, args);\n\
            }\n\
            timeout = null;\n\
        }\n\
\n\
        if (timeout) {\n\
            clearTimeout(timeout);\n\
        } else if (execAsap) {\n\
            func.apply(obj, args);\n\
        }\n\
\n\
        timeout = setTimeout(delayed, threshold || 100);\n\
    };\n\
}\n\
\n\
function clear_validation_messages (el) {\n\
    var message;\n\
\n\
    classes(el).remove('valid').remove('invalid');\n\
\n\
    while (message = next(el, '.validator-message')) {\n\
        if (el.parentNode) el.parentNode.removeChild(message);\n\
    }\n\
}\n\
\n\
function clear_all_validation_messages (el) {\n\
    var $temps;\n\
\n\
    $temps = el.querySelectorAll('.invalid, .valid');\n\
\n\
    [].forEach.call($temps, function($temp){\n\
        classes($temp).remove('valid').remove('invalid');\n\
    });\n\
\n\
    $temps = el.querySelectorAll('.validator-message');\n\
\n\
    [].forEach.call($temps, function($temp){\n\
        if ($temp.parentNode) $temp.parentNode.removeChild($temp);\n\
    });\n\
}\n\
\n\
function get_chassis_reservationa_status (callback) {\n\
    request\n\
        .get('/spirent/get_reservation_status')\n\
        .use(no_cache)\n\
        .end(function(error, response){\n\
            var data;\n\
\n\
            if(error){\n\
                return callback(null,error);\n\
            };\n\
\n\
            if( response.body && response.body.result === 'FAILURE' ){\n\
                return callback(null,response.body.message);\n\
            };\n\
\n\
            data =  response.body;\n\
\n\
            return callback(data);\n\
\n\
\n\
        });\n\
}\n\
\n\
function decimal_format (value, digit) {\n\
    var weight = Math.pow(10, digit);\n\
    return isNaN(value)?value:Math.round(value * weight)/weight;\n\
}\n\
\n\
var util = module.exports = {\n\
    getTemplate: getTemplate,\n\
    arrayToJSON: arrayToJSON,\n\
    getRequestMethod: function() { return 'POST'; },\n\
    setObservableArray: setObservableArray,\n\
    commafyNumber: commafyNumber,\n\
    getMagnitude: getMagnitude,\n\
    maxOrDefault: maxOrDefault,\n\
    minOrDefault: minOrDefault,\n\
    trueOrOptional: trueOrOptional,\n\
    floatFix: floatFix,\n\
    padNumber: padNumber,\n\
    greaterOf: greaterOf,\n\
    lightbox: new Lightbox(getTemplate),\n\
    warningLightbox: warningLightbox,\n\
    setTags: setTags,\n\
    getTags: getTags,\n\
    getConfigSetting: getConfigSetting,\n\
    formatRequestData: formatRequestData,\n\
    logData: logData,\n\
    toType: toType,\n\
    objectsEqual: objectsEqual,\n\
    isNullOrEmpty: isNullOrEmpty,\n\
    recursiveUnwrapObservable: recursiveUnwrapObservable,\n\
    stringAdd: stringAdd,\n\
    applyFunction: applyFunction,\n\
    arraysShareValue: arraysShareValue,\n\
    sortArrayByObjectKey: sortArrayByObjectKey,\n\
    sortArrayByObjectKeyKoObservable: sortArrayByObjectKeyKoObservable,\n\
    sort_devices: sort_devices,\n\
    parseUnixTimestampStringToDate: parseUnixTimestampStringToDate,\n\
    trimTag: trimTag,\n\
    sanitizeUnqualifiedTagGroup: sanitizeUnqualifiedTagGroup,\n\
    debounce: debounce,\n\
    clear_validation_messages: clear_validation_messages,\n\
    clear_all_validation_messages: clear_all_validation_messages,\n\
    get_chassis_reservationa_status: get_chassis_reservationa_status,\n\
    decimal_format:decimal_format\n\
};//@ sourceURL=utility-functions/index.js"
));
require.register("translator/index.js", Function("exports, require, module",
"function resolvePluralFormId(dictionary, pluralIndicator) {\n\
    var n = pluralIndicator;\n\
    // TODO replace eval with a better alternative\n\
    return eval(dictionary.pluralFormExpression);\n\
}\n\
\n\
function getMessage(dictionary, messageKey, pluralIndicator) {\n\
    var message = dictionary.content[messageKey];\n\
\n\
    if (message === undefined) {\n\
        window.logger.info('Missing translation for: ' + messageKey);\n\
        message = messageKey;\n\
    }\n\
\n\
    if (typeof message === 'object') {\n\
        if (pluralIndicator === null) {\n\
            throw \"pluralIndicator is required\";\n\
        }\n\
\n\
        message = message[resolvePluralFormId(dictionary, pluralIndicator)];\n\
    }\n\
\n\
    return message;\n\
}\n\
\n\
function interpolate(message, mapping) {\n\
    // TODO implement more efficient algorithm of interpolation\n\
    var result = message,\n\
        prop;\n\
\n\
    for (prop in mapping) {\n\
        if (mapping.hasOwnProperty(prop)) {\n\
            result = result.replace('{' + prop + '}', mapping[prop]);\n\
        }\n\
    }\n\
\n\
    return result;\n\
}\n\
\n\
function translate(dictionary, messageKey, mapping, pluralIndicatorAttr) {\n\
    var pluralIndicator = null,\n\
        message;\n\
\n\
    if (pluralIndicatorAttr !== undefined) {\n\
        pluralIndicator = mapping[pluralIndicatorAttr];\n\
    }\n\
\n\
    message = getMessage(dictionary, messageKey, pluralIndicator);\n\
\n\
    if (mapping !== undefined) {\n\
        if (message !== undefined) {\n\
            message = interpolate(message, mapping);\n\
        } else {\n\
            logger.warning(\"Missing translation for messageKey: \" + messageKey);\n\
            message = interpolate(messageKey, mapping);\n\
        }\n\
    }\n\
\n\
    return message;\n\
}\n\
\n\
/**\n\
 * @param dictionary is an object containing translations for one\n\
 * language. Example of dictionary:\n\
 * {\n\
     *     pluralFormExpression: '(n==1 ? 0 : 1)',\n\
     *     content: {\n\
     *         'License Upload': 'License Upload',\n\
     *         'Showing {number} Tracks': {\n\
     *             0: 'Showing {number} Track',\n\
     *             1: 'Showing {number} Tracks'\n\
     *         }\n\
     *     }\n\
     * }\n\
 * @returns {Function} accepting three arguments: message key, object\n\
 * containing message parameters, name of parameter used for defining\n\
 * plural form.\n\
 */\n\
function Translator(dictionary) {\n\
    return translate.bind(this, dictionary);\n\
}\n\
\n\
module.exports = Translator;//@ sourceURL=translator/index.js"
));
require.register("dictionary-provider/index.js", Function("exports, require, module",
"var request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    dictionaries = {};\n\
\n\
function DictionaryProvider(language, next) {\n\
    if (dictionaries.hasOwnProperty(language)) {\n\
        next(dictionaries[language]);\n\
    }\n\
\n\
    // Load the dict before firing callback\n\
    DictionaryProvider.load(language, next);\n\
}\n\
\n\
module.exports = DictionaryProvider;\n\
\n\
DictionaryProvider.set = function (language, dict) {\n\
    dictionaries[language] = dict;\n\
};\n\
\n\
DictionaryProvider.get = function (language) {\n\
    return dictionaries[language];\n\
};\n\
\n\
DictionaryProvider.load = function (language, callback) {\n\
    request.get('/static/translations/' + language + '.json?' + window.Axon.build_number)\n\
        .use(no_cache)\n\
        .set('Accept', 'application/json')\n\
        .end(function (res) {\n\
\n\
            DictionaryProvider.set(language, res.body);\n\
            callback(DictionaryProvider.get(language));\n\
        });\n\
};//@ sourceURL=dictionary-provider/index.js"
));
require.register("spirent-view-model/index.js", Function("exports, require, module",
"var translate_tests_configurations = require('./test-configurations-adapter.js');\n\
\n\
function SpirentViewModel() {\n\
    var self = this;\n\
    var $ = jQuery;\n\
\n\
    self.user = ko.observable();\n\
\n\
    self.availableTracks = ko.observableArray();\n\
    self.availablePlaylists = ko.observableArray();\n\
    self.availableDevices = ko.observableArray();\n\
    self.availableEndpoints = ko.observableArray();\n\
    self.availableTests = ko.observableArray();\n\
    self.favoriteTests = ko.observableArray();\n\
    self.factoryTests = ko.observableArray();\n\
    self.userTests = ko.observableArray();\n\
    self.availableTestsByCategory = ko.observableDictionary({});\n\
    self.availableTracksMap = null;\n\
    self.availableDatapointsMap = ko.observableArray();\n\
    self.availableResultTypes = new Array();\n\
    self.availableDisplayMessages = new Array();\n\
    self.availableCustomers = ko.observableArray();\n\
    self.availableLocations = ko.observableArray();\n\
    self.language = ko.observable();\n\
    self.availableTags = ko.observableArray();\n\
    self.testResultsHistory = ko.observableArray();\n\
    self.testResultsHistoryHandlers = new Array();\n\
\n\
    self.allTests = [];\n\
\n\
    self.startingTab = 'dashboard';\n\
\n\
    self.defaultThrottleDuration = 1;\n\
\n\
    self.selectedTab = ko.observable();\n\
\n\
    self.testTemplateName = ko.observable('placeholder-template');\n\
    self.dashboardTemplateName = ko.observable('placeholder-template');\n\
    self.administrationTemplateName = ko.observable('placeholder-template');\n\
    self.historyTemplateName = ko.observable('placeholder-template');\n\
    self.helpcenterTemplateName = ko.observable('placeholder-template');\n\
\n\
    self.dashboardTabClass = ko.computed(function () {\n\
        return 'dashboard ' + self.getTabClassFor('dashboard');\n\
    }).extend({ throttle: self.defaultThrottleDuration });\n\
\n\
    self.testLibraryTabClass = ko.computed(function () {\n\
        return 'library ' + self.getTabClassFor('testLibrary');\n\
    }).extend({ throttle: self.defaultThrottleDuration });\n\
\n\
    self.testTabClass = ko.computed(function () {\n\
        return 'player ' + self.getTabClassFor('test');\n\
    }).extend({ throttle: self.defaultThrottleDuration });\n\
\n\
    self.calendarTabClass = ko.computed(function () {\n\
        return 'calendar ' + self.getTabClassFor('calendar');\n\
    }).extend({ throttle: self.defaultThrottleDuration });\n\
\n\
    self.historyTabClass = ko.computed(function () {\n\
        return 'history ' + self.getTabClassFor('history');\n\
    }).extend({ throttle: self.defaultThrottleDuration });\n\
\n\
    self.administrationTabClass = ko.computed(function () {\n\
        return 'administration ' + self.getTabClassFor('administration');\n\
    }).extend({ throttle: self.defaultThrottleDuration });\n\
\n\
    self.vmGlobalSettings = new GlobalSettingsViewModel(self);\n\
\n\
    self.vmDashboard = new DashboardViewModel(self);\n\
    self.vmTest = new TestViewModel(self);\n\
    self.vmHistory = new HistoryViewModel(self);\n\
    self.vmAdministration = new AdministrationViewModel(self);\n\
\n\
    self.completionPercent = 40;\n\
    self.completionMessage = \"\";\n\
    self.ajaxModels = new Array(translate(\"Global Settings\"),\n\
        translate(\"Tracks\"),\n\
        translate(\"Devices\"),\n\
        translate(\"Endpoints\"),\n\
        translate(\"Tests\"),\n\
        translate(\"Datapoints\"),\n\
        translate(\"Result Types\"),\n\
        translate(\"Customers\"),\n\
        translate(\"Locations\"),\n\
        translate(\"Languages\"),\n\
        translate(\"Tags\"),\n\
        translate(\"Display Messages\"),\n\
        translate(\"Playlists\"),\n\
        translate(\"Test Library\"),\n\
        translate(\"Favorite Tests\"),\n\
        translate(\"Recent Results\"));\n\
    self.ajaxModelsToComplete = self.ajaxModels.slice(0);\n\
    self.failedAjaxModels = new Array();\n\
};\n\
\n\
SpirentViewModel.typesafe = function (that) {\n\
    if (!(that instanceof SpirentViewModel)) {\n\
        throw 'This method must be executed on a SpirentViewModel';\n\
    }\n\
\n\
    return that;\n\
};\n\
\n\
SpirentViewModel.prototype.updateAppLoadMessage = function (model, failed) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.ajaxModelsToComplete.splice($.inArray(model, self.ajaxModelsToComplete), 1);\n\
    if (failed) {\n\
        self.failedAjaxModels.push(model);\n\
        logger.error('Get ' + model + ' Failed');\n\
    }\n\
\n\
    if (self.ajaxModelsToComplete.length > 1) {\n\
        if (failed) {\n\
            self.completionMessage = translate('Failed to load {name}...', {\n\
                name: model\n\
            });\n\
        } else {\n\
            self.completionMessage = translate('Loaded {name}...', {\n\
                name: model\n\
            });\n\
        }\n\
    } else {\n\
        if (self.failedAjaxModels.length == 0) {\n\
            self.completionMessage = translate('Loading {name}...', {\n\
                name: model\n\
            });\n\
        } else {\n\
            self.header = translate('App Loading Error');\n\
            self.message = translate('The following failed to load:<br>{failed}<br><br>Please contact Spirent support at {link}', {\n\
                failed: self.failedAjaxModels.join('<br>'),\n\
                link: '<a href=\"http://support.spirentforbusiness.com\">support.spirentforbusiness.com</a>'\n\
            });\n\
            util.lightbox.open({\n\
                url: 'html/lightbox_tmpl',\n\
                selector: '#lightbox-error-template',\n\
                cancelSelector: '.ok-button',\n\
                onOpenComplete: function () {\n\
                    ko.applyBindings(self, document.getElementById('lightbox-error'));\n\
                }\n\
            });\n\
            return;\n\
        }\n\
    }\n\
\n\
    var completion = self.ajaxModels.length - self.ajaxModelsToComplete.length;\n\
    completion /= self.ajaxModels.length; // 0 to 1\n\
    completion *= 60; // Entire process should take 60% of total completion\n\
\n\
    util.lightbox.working(new LightboxWorkingViewModel(\"Loading\", self.completionMessage, self.completionPercent + completion));\n\
};\n\
\n\
SpirentViewModel.prototype.init = function (callback) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    var settingsAjax = self.getGlobalSettings()\n\
        .done(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[0]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[0], true);\n\
        });\n\
\n\
    var tracksAjax = self.getAvailableTracks()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[1]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[1], true);\n\
        });\n\
\n\
    var devicesAjax = self.getAvailableDevices()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[2]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[2], true);\n\
        });\n\
\n\
    var endpointAjax = self.getAvailableEndpoints()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[3]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[3]);\n\
        });\n\
\n\
    var testsAjax = self.getAvailableTests()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[4]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[4], true);\n\
        });\n\
\n\
    var tmplsTestsAjax = self.getTmplTests()\n\
        .done(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[13]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[13], true);\n\
        });\n\
\n\
    var favoriteTestsAjax = self.getFavoriteTests()\n\
        .done(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[14]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[14], true);\n\
        });\n\
\n\
    var historyResults = self.getResultHistory()\n\
        .done(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[15]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[15], true);\n\
        });\n\
\n\
    var dataPointsAjax = self.getAvailableDatapoints()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[5]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[5], true);\n\
        });\n\
\n\
    var resultTypesAjax = self.getResultTypes()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[6]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[6], true);\n\
        });\n\
\n\
    var customersAjax = self.getAvailableCustomers()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[7]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[7], true);\n\
        });\n\
\n\
    var locationsAjax = self.getAvailableLocations()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[8]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[8], true);\n\
        });\n\
\n\
    var languageAjax = self.getLanguage()\n\
        .done(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[9]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[9], true);\n\
        });\n\
\n\
    var tagsAjax = self.getAvailableTags()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[10]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[10], true);\n\
        });\n\
\n\
    var messageAjax = self.getAvailableDisplayMessages()\n\
        .done(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[11]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[11], true);\n\
        });\n\
\n\
    var playlistAjax = self.getAvailablePlaylists()\n\
        .done(function () {\n\
            //self.updateAppLoadMessage(self.ajaxModels[12]);\n\
        })\n\
        .fail(function () {\n\
            self.updateAppLoadMessage(self.ajaxModels[12], true);\n\
        });\n\
\n\
\n\
    self.selectTab(self.startingTab);\n\
\n\
    self.initStart = (new Date()).getTime();\n\
\n\
    return $.when(\n\
        settingsAjax,\n\
        tracksAjax,\n\
        playlistAjax,\n\
        devicesAjax,\n\
        endpointAjax,\n\
        testsAjax,\n\
        tmplsTestsAjax,\n\
        favoriteTestsAjax,\n\
        historyResults,\n\
        dataPointsAjax,\n\
        resultTypesAjax,\n\
        customersAjax,\n\
        locationsAjax,\n\
        languageAjax,\n\
        tagsAjax,\n\
        messageAjax\n\
    );\n\
};\n\
\n\
SpirentViewModel.prototype.setUser = function (user) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.user = user;\n\
};\n\
\n\
SpirentViewModel.prototype.refreshTestDraggables = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.vmTest.refreshTestDraggables();\n\
};\n\
\n\
SpirentViewModel.prototype.loadTest = function (test) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.vmTest.loadTest(test);\n\
};\n\
SpirentViewModel.prototype.loadRecentTest = function (historyItem) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.vmTest.loadRecentTest(historyItem);\n\
};\n\
\n\
SpirentViewModel.prototype.getTabClassFor = function (tabName) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    if (self.selectedTab() == tabName) {\n\
        return 'selected';\n\
    }\n\
\n\
    return '';\n\
};\n\
\n\
SpirentViewModel.prototype.showTest = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.selectTab('test');\n\
};\n\
\n\
SpirentViewModel.prototype.showDashboard = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.selectTab('dashboard');\n\
};\n\
\n\
SpirentViewModel.prototype.showCalendar = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.selectTab('calendar');\n\
};\n\
\n\
SpirentViewModel.prototype.showHistory = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.selectTab('history');\n\
};\n\
\n\
SpirentViewModel.prototype.showAdministration = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.selectTab('administration');\n\
};\n\
\n\
SpirentViewModel.prototype.selectTab = function (tabName) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    function showTab () {\n\
        if($('#' + tabName + '-template').length == 0){\n\
            util.getTemplate('html/' + tabName + '_tmpl', '#' + tabName + '-template', function(template){\n\
                self[tabName + 'TemplateName'](tabName + '-template');\n\
                self.selectedTab(tabName);\n\
            });\n\
        } else {\n\
            // added this here, because when template was already loaded somewhere - tab content will never show\n\
            self[tabName + 'TemplateName'](tabName + '-template');\n\
            self.selectedTab(tabName);\n\
        }\n\
    }\n\
\n\
    switch (tabName) {\n\
        case 'dashboard':\n\
            showTab();\n\
            self.getResultHistory()\n\
            break\n\
        case 'test':\n\
        case 'history':\n\
            showTab();\n\
            break;\n\
        case 'administration':\n\
            if ($('#administration-template').length == 0) {\n\
                util.getTemplate('html/administration_tmpl', '#administration-template', function (template) {\n\
                    var $parent = document.querySelector('#main > .administration'),\n\
                        template = template.get(0).innerHTML;\n\
                    if(!$parent.innerHTML.length > 0)\n\
                        self.vmAdministration.render($parent, template);\n\
                    self.administrationTemplateName('administration-template');\n\
\n\
                    self.selectedTab('administration');\n\
                });\n\
            } else {\n\
                self.selectedTab('administration');\n\
                self.vmAdministration.selectTab(null);\n\
            }\n\
            break;\n\
        case 'calendar':\n\
            self.selectedTab(tabName);\n\
            self.getResultHistory()\n\
            break;\n\
        case 'testLibrary':\n\
            break;\n\
    }\n\
\n\
    appHistory.push(self);\n\
};\n\
\n\
SpirentViewModel.prototype.getGlobalSettings = function (callback, reload) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    var url = util.getConfigSetting('get_global_settings');\n\
    if (reload)\n\
        url += '?reload=1'\n\
\n\
    var ajax = $.ajax({\n\
        type: 'POST',\n\
        url: url,\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            self.vmGlobalSettings.axonBackups.removeAll();\n\
            self.vmGlobalSettings.currentIp = data.host;\n\
            self.vmGlobalSettings.currentSsid = data.ssid;\n\
            self.vmGlobalSettings.currentWpaKey = data.wpa_key;\n\
            self.vmGlobalSettings.inflate(data);\n\
            if (callback){\n\
                callback();\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.getAvailableCustomers = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availableCustomers.removeAll();\n\
\n\
    var ajax = $.ajax({\n\
        type: 'GET',\n\
        url: util.getConfigSetting('get_customers'),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availableCustomers = data;\n\
\n\
            //self.availableCustomers.push(\"select one\");\n\
            for (var i = 0; i < availableCustomers.length; i++) {\n\
                self.availableCustomers.push(availableCustomers[i]);\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.getAvailableLocations = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availableLocations.removeAll();\n\
\n\
    var ajax = $.ajax({\n\
        type: 'GET',\n\
        url: util.getConfigSetting('get_locations'),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availableLocations = data;\n\
\n\
            //self.availableLocations.push(\"select one\");\n\
            for (var i = 0; i < availableLocations.length; i++) {\n\
                self.availableLocations.push(availableLocations[i]);\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.getLanguage = function() {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    var ajax = $.ajax({\n\
        type: 'GET',\n\
        url: util.getConfigSetting('get_language'),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            self.language(data.language);\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.getAvailableTags = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availableTags.removeAll();\n\
\n\
    var ajax = $.ajax({\n\
        type: 'GET',\n\
        url: util.getConfigSetting('get_tags'),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availableTags = data;\n\
\n\
            for (var i = 0; i < availableTags.length; i++) {\n\
                self.availableTags.push(availableTags[i]);\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax\n\
};\n\
\n\
SpirentViewModel.prototype.getAvailableTagsAsAutoSuggestData = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    var tags = self.availableTags();\n\
\n\
    var data = new Array();\n\
\n\
    for (var i = 0; i < tags.length; i++) {\n\
        data.push({\"value\": tags[i]});\n\
    }\n\
\n\
    return data;\n\
};\n\
\n\
SpirentViewModel.prototype.getTmplTests = function (callback) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.vmDashboard.tmplTests.removeAll();\n\
\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_test_templates\"),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            for (var i = 0; i < data.length; i++) {\n\
                self.factoryTests().push(data[i]);\n\
            };\n\
            self.fillAvailableTestsWithResults(data, true);\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.getFavoriteTests = function (params, callback) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    var offset = 0;\n\
    var url = util.getConfigSetting(\"get_favorite_tests\");\n\
    if (params) {\n\
        if (params['page']) {\n\
            offset = params['page'];\n\
            url += '?page=' + params['page'];\n\
            if (params['page_size']) {\n\
                offset = (offset - 1) * params['page_size'];\n\
                url += '&page_size=' + params['page_size'];\n\
            } else {\n\
                offset = (offset - 1) * 5;\n\
            }\n\
        } else {\n\
            if (params['page_size']) {\n\
                url += '?page_size=' + params['page_size'];\n\
            }\n\
        }\n\
    }\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: url,\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            self.vmDashboard.totalFavoriteTests = data['total_number'];\n\
            self.vmDashboard.favoriteTests.removeAll();\n\
\n\
            self.fillFavoriteTests(data['data'], offset);\n\
            self.fillAvailableTestsWithResults(data['data'], false);\n\
\n\
            if (callback){\n\
                callback();\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.getAvailableTests = function (params, callback) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    var url = util.getConfigSetting(\"get_axon_tests\");\n\
    if (params) {\n\
        if (params['test_id']) {\n\
            url += '?test_id=' + params['test_id'];\n\
        } else {\n\
            if (params['page']) {\n\
                url += '?page=' + params['page'];\n\
                if (params['page_size']) {\n\
                    url += '&page_size=' + params['page_size'];\n\
                }\n\
            } else {\n\
                if (params['page_size']) {\n\
                    url += '?page_size=' + params['page_size'];\n\
                }\n\
            }\n\
        }\n\
    }\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: url,\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            for (var i = 0; i < data.length; i++) {\n\
                if (data[i].is_user_save) {\n\
                    self.userTests().push(data[i]);\n\
                }\n\
            };\n\
            self.fillAvailableTestsWithResults(data, false);\n\
\n\
            if (callback){\n\
                callback();\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.fillAvailableTestsWithResults = function (data, isFactoryTest){\n\
    var self = SpirentViewModel.typesafe(this);\n\
    var availableTests = data = translate_tests_configurations(data);\n\
    var existingTest;\n\
\n\
    for (var i = 0; i < availableTests.length; i++) {\n\
        var test = new TestTemplateViewModel(self);\n\
        test.inflate(availableTests[i]);\n\
        test.isFactoryTest(isFactoryTest);\n\
        test.isTemplate(isFactoryTest);\n\
\n\
        if (isFactoryTest) {\n\
            existingTest = ko.utils.arrayFirst(self.availableTests(), function (item) {\n\
                return (test.id() === item.id()) && item.isTemplate();\n\
            });\n\
            if (existingTest === null) {\n\
                self.availableTests.push(test);\n\
                self.allTests.push(test);\n\
            }\n\
\n\
            // Update template tests list\n\
            existingTest = ko.utils.arrayFirst(self.vmDashboard.tmplTests(), function (item) {\n\
                return (item.id() === test.id() && item.isFactoryTest() && item.isTemplate());\n\
            });\n\
            if (existingTest === null) {\n\
                // To make 'Throughput Test' at the second position in 'Test Library'\n\
                if (test.template_name() == 'Throughput Test') {\n\
                    if (self.vmDashboard.tmplTests().length > 1) {\n\
                        // Insert value\n\
                        self.vmDashboard.tmplTests.splice(1, 0, test);\n\
                    } else {\n\
                        self.vmDashboard.tmplTests.push(test);\n\
                    }\n\
                } else {\n\
                    self.vmDashboard.tmplTests.push(test);\n\
                }\n\
            }\n\
            self.addToCategoryView(test);\n\
        } else if (test.isUserSave) {\n\
            existingTest = ko.utils.arrayFirst(self.availableTests(), function (item) {\n\
                return (test.id() === item.id()) && item.isUserSave;\n\
            });\n\
            if (existingTest === null) {\n\
                self.availableTests.push(test);\n\
                self.allTests.push(test);\n\
            } else {\n\
                self.availableTests.remove(existingTest);\n\
                self.availableTests.push(test);\n\
                self.allTests.pop(existingTest);\n\
                self.allTests.push(test);\n\
            }\n\
            self.addToCategoryView(test);\n\
        } else {\n\
            existingTest = ko.utils.arrayFirst(self.allTests, function (item) {\n\
                return (test.id() === item.id()) && !item.isUserSave;\n\
            });\n\
            if (existingTest === null) {\n\
                self.allTests.push(test);\n\
            } else {\n\
                self.allTests.pop(existingTest);\n\
                self.allTests.push(test);\n\
            }\n\
        }\n\
    }\n\
\n\
    self.availableTests.sort(util.sortArrayByObjectKeyKoObservable(\"name\", true));\n\
\n\
    if (self.vmTest.startingTab == 'tests') {\n\
        self.vmTest.initializeAvailableTestsDraggable();\n\
    }\n\
};\n\
\n\
SpirentViewModel.prototype.fillFavoriteTests = function (data, offset){\n\
    var self = SpirentViewModel.typesafe(this);\n\
    var favoriteTests = data = translate_tests_configurations(data);\n\
    var existingTest;\n\
\n\
    // Keep favorite test number is consistent with DB in FrontEnd cache\n\
    if (self.vmDashboard.totalFavoriteTests > self.favoriteTests().length) {\n\
        for (var i = self.favoriteTests().length; i < self.vmDashboard.totalFavoriteTests; i++) {\n\
            self.favoriteTests.push(undefined);\n\
        }\n\
    } else if (self.vmDashboard.totalFavoriteTests < self.favoriteTests().length) {\n\
        for (var i = self.favoriteTests().length - 1; i >= 0; i--) {\n\
            if (self.favoriteTests()[i] == undefined) {\n\
                self.favoriteTests.splice(i, 1);\n\
            }\n\
        }\n\
    }\n\
\n\
    for (var i = 0; i < favoriteTests.length; i++) {\n\
        var test = new TestTemplateViewModel(self);\n\
        test.inflate(favoriteTests[i]);\n\
\n\
        if (offset != undefined) {\n\
            // If offset is set, we query favorite tests from DB, so the favorite property has already been set\n\
            self.favoriteTests()[offset + i] = test;\n\
            if (i < 5) {\n\
                self.vmDashboard.favoriteTests.push(test);\n\
            }\n\
        } else {\n\
            // Make sure self.favoriteTests() has value before we use it\n\
            if (self.favoriteTests().length == 0 && test.favorite()) {\n\
                self.favoriteTests.push(test);\n\
                self.vmDashboard.totalFavoriteTests += 1;\n\
            }\n\
\n\
            // Update favorite tests list\n\
            existingTest = ko.utils.arrayFirst(self.favoriteTests(), function (item) {\n\
                if (item != undefined) {\n\
                    return item.id() === test.id();\n\
                }\n\
                return false;\n\
            });\n\
            if (existingTest !== null) {\n\
                var index = self.favoriteTests.indexOf(existingTest);\n\
                // Update\n\
                if (test.favorite()) {\n\
                    if (index != -1) {\n\
                        self.favoriteTests()[index] = test;\n\
                    }\n\
                } else {\n\
                    // Remove\n\
                    if (index != -1) {\n\
                        self.favoriteTests.remove(existingTest);\n\
                        if (self.vmDashboard.favoriteTests.indexOf(existingTest) != -1) {\n\
                            if (self.favoriteTests().length > index) {\n\
                                if (self.favoriteTests()[index] !== undefined) {\n\
                                    if (self.vmDashboard.favoriteTests.indexOf(self.favoriteTests()[index]) == -1) {\n\
                                        self.vmDashboard.favoriteTests.push(self.favoriteTests()[index])\n\
                                    }\n\
                                }\n\
                            }\n\
                        }\n\
                        self.vmDashboard.totalFavoriteTests -= 1;\n\
                    }\n\
                }\n\
            } else {\n\
                // Do nothing if the Frontend cache is empty here\n\
                if (self.favoriteTests().length == 0 && !test.favorite()) {\n\
                    continue;\n\
                }\n\
                if (self.favoriteTests()[0].id() < test.id() && test.favorite()) {\n\
                    self.favoriteTests.unshift(test);\n\
                    self.vmDashboard.totalFavoriteTests += 1;\n\
                } else if (self.favoriteTests()[0].id() > test.id() && test.favorite()) {\n\
                    var position = undefined;\n\
                    // First loop to determine whether there is a proper position for insert\n\
                    for (var k = 0; k < self.favoriteTests().length; k++) {\n\
                        if (self.favoriteTests()[k] == undefined) {\n\
                            continue;\n\
                        }\n\
                        if (self.favoriteTests()[k].id() > test.id()) {\n\
                            continue;\n\
                        } else {\n\
                            position = k;\n\
                            break;\n\
                        }\n\
                    }\n\
                    if (position == undefined) {\n\
                        if (self.favoriteTests()[self.favoriteTests().length - 1] != undefined) {\n\
                            self.favoriteTests.push(test);\n\
                        } else {\n\
                            self.favoriteTests()[self.favoriteTests().length - 1] = test;\n\
                        }\n\
                    } else {\n\
                        // Second loop to determine the insert position\n\
                        var slice = self.favoriteTests.slice(position, self.favoriteTests().length);\n\
                        slice.unshift(test);\n\
                        self.favoriteTests = self.favoriteTests.slice(0, position).concat(slice);\n\
\n\
                    }\n\
                    self.vmDashboard.totalFavoriteTests += 1;\n\
                }\n\
            }\n\
\n\
            existingTest = ko.utils.arrayFirst(self.vmDashboard.favoriteTests(), function (item) {\n\
                return item.id() === test.id();\n\
            });\n\
            if (existingTest !== null) {\n\
                // Update\n\
                if (test.favorite()) {\n\
                    var index = self.vmDashboard.favoriteTests.indexOf(existingTest);\n\
                    self.vmDashboard.favoriteTests()[index] = test;\n\
                } else {\n\
                    // Remove\n\
                    if (self.vmDashboard.favoriteTests.indexOf(existingTest) != -1) {\n\
                        self.vmDashboard.favoriteTests.remove(existingTest);\n\
                    }\n\
                }\n\
            } else {\n\
                if (self.vmDashboard.favoriteTests().length == 0 && test.favorite()) {\n\
                    self.vmDashboard.favoriteTests.push(test);\n\
                    continue;\n\
                }\n\
                if (self.vmDashboard.favoriteTests()[0].id() < test.id() && test.favorite()) {\n\
                    self.vmDashboard.favoriteTests.unshift(test);\n\
                    if (self.vmDashboard.favoriteTests().length > 5) {\n\
                        self.vmDashboard.favoriteTests.pop();\n\
                    }\n\
                }\n\
            }\n\
        }\n\
    }\n\
};\n\
\n\
SpirentViewModel.prototype.insertUserTest = function (userTest){\n\
    var self = SpirentViewModel.typesafe(this),\n\
        existingUserTest,\n\
        userTestId,\n\
        flatUserTest;\n\
\n\
    userTestId = userTest.id();\n\
\n\
    existingUserTest = ko.utils.arrayFirst(self.userTests(), function (item) {\n\
        return userTestId === item.id;\n\
    });\n\
\n\
    if (existingUserTest !== null) {\n\
        self.userTests.remove(existingUserTest);\n\
    }\n\
\n\
    self.updateTestNameInRecentTests(userTest);\n\
\n\
    flatUserTest = userTest.toFlatObject();\n\
    self.fillAvailableTestsWithResults([flatUserTest], false);\n\
    self.userTests().push(flatUserTest);\n\
};\n\
\n\
SpirentViewModel.prototype.removeUserTest = function (userTest){\n\
    var self = SpirentViewModel.typesafe(this),\n\
        existingUserTest;\n\
\n\
    existingUserTest = ko.utils.arrayFirst(self.availableTests(), function (item) {\n\
        return userTest.id() === item.id() && !item.isTemplate();\n\
    });\n\
\n\
    if (existingUserTest !== null) {\n\
        self.availableTests.remove(existingUserTest);\n\
    }\n\
\n\
    existingUserTest = ko.utils.arrayFirst(self.allTests, function (item) {\n\
        return userTest.id() === item.id() && !item.isTemplate();\n\
    });\n\
\n\
    if (existingUserTest !== null) {\n\
        self.allTests.pop(existingUserTest);\n\
    }\n\
\n\
    existingUserTest = ko.utils.arrayFirst(self.favoriteTests(), function (item) {\n\
        return userTest.id() === item.id() && userTest.isUserSave && userTest.favorite();\n\
    });\n\
\n\
    if (existingUserTest !== null) {\n\
        self.favoriteTests.remove(existingUserTest);\n\
    }\n\
\n\
    existingUserTest = ko.utils.arrayFirst(self.vmDashboard.favoriteTests(), function (item) {\n\
        return userTest.id() === item.id() && userTest.isUserSave && userTest.favorite();\n\
    });\n\
\n\
    if (existingUserTest !== null) {\n\
        self.vmDashboard.favoriteTests.remove(existingUserTest);\n\
    }\n\
};\n\
\n\
SpirentViewModel.prototype.updateTestNameInRecentTests = function (userTest){\n\
    var self = SpirentViewModel.typesafe(this),\n\
        userTestId,\n\
        userTestName,\n\
        testResultsHistory,\n\
        i;\n\
\n\
    userTestId = userTest.id();\n\
    userTestName = userTest.name();\n\
\n\
    testResultsHistory = self.testResultsHistory();\n\
\n\
    for (i = 0; i < testResultsHistory.length; i += 1) {\n\
        if (testResultsHistory[i].test_id == userTestId) {\n\
            testResultsHistory[i].categories.unshift(userTestName);\n\
        }\n\
    }\n\
};\n\
\n\
SpirentViewModel.prototype.getResultHistory = function (params, callback) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    var url = util.getConfigSetting(\"get_result_history\");\n\
    var isRefreshDashboard = true;\n\
    if (params) {\n\
        if (params['result_id']) {\n\
            isRefreshDashboard = false;\n\
            url += '?result_id=' + params['result_id'];\n\
        } else {\n\
            if (params['page']) {\n\
                url += '?page=' + params['page'];\n\
                if (params['page_size']) {\n\
                    url += '&page_size=' + params['page_size'];\n\
                }\n\
            } else {\n\
                if (params['page_size']) {\n\
                    url += '?page_size=' + params['page_size'];\n\
                }\n\
            }\n\
        }\n\
    }\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: url,\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            if (data['total_number']) {\n\
                self.vmDashboard.totalHistoryResults = data['total_number'];\n\
            }\n\
            self.fillHistoryTestsResults(data['data'], isRefreshDashboard);\n\
\n\
            for (var i = 0; i < self.testResultsHistoryHandlers.length; i++) {\n\
                self.testResultsHistoryHandlers[i].updateCache(data['data']);\n\
            }\n\
\n\
            if (callback){\n\
                callback();\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.fillHistoryTestsResults = function (data, isRefreshDashboard){\n\
    var self = SpirentViewModel.typesafe(this);\n\
    var recentTests = data;\n\
    var existingHistoryResult;\n\
    if (isRefreshDashboard) {\n\
        self.vmDashboard.testResultsHistory.removeAll();\n\
    }\n\
\n\
    for (var i = 0; i < recentTests.length; i++) {\n\
        var recentTest = new TestHistoryViewModel(self.vmDashboard);\n\
        recentTest.inflate(recentTests[i]);\n\
\n\
        existingHistoryResult = ko.utils.arrayFirst(self.testResultsHistory(), function (item) {\n\
            return item.result_id() === recentTest.result_id();\n\
        });\n\
\n\
        if (existingHistoryResult === null) {\n\
            self.testResultsHistory.push(recentTest);\n\
        }\n\
\n\
        if (isRefreshDashboard) {\n\
            self.vmDashboard.testResultsHistory.push(recentTest);\n\
        } else {\n\
            if (self.vmDashboard.testResultsHistory()[0].result_id() < recentTest.result_id()) {\n\
                self.vmDashboard.testResultsHistory.unshift(recentTest);\n\
            }\n\
        }\n\
    }\n\
    self.testResultsHistory.sort(function(pre, next) {return (pre.result_id() > next.result_id() ? -1 : 1)});\n\
};\n\
\n\
SpirentViewModel.prototype.getAvailableDatapoints = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availableDatapointsMap.removeAll();\n\
\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_datapoints\"),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availableDatapoints = data;\n\
\n\
            for (var i = 0; i < availableDatapoints.length; i++) {\n\
                var datapoint = availableDatapoints[i];\n\
                self.availableDatapointsMap()[datapoint.id] = datapoint;\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
SpirentViewModel.prototype.getAvailableTracks = function (callback) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.availableTracks.removeAll();\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_tracks\"),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availableTracks = data;\n\
            self.availableTracksMap = new Array();\n\
\n\
            for (var i = 0; i < availableTracks.length; i++) {\n\
                var availableTrack = new TestTrackViewModel(self);\n\
                if (!availableTracks[i].js_bw_compute || availableTracks[i].js_bw_compute ==\"\"){\n\
                    availableTracks[i].js_bw_compute=\"var computeFunction=function(){var trafficSettings = self.trafficSettings();if (trafficSettings == null || trafficSettings == undefined) {return;}var trackProperties = self.trackProperties();if (trackProperties.length == 0) {return;}var totalPropertiesBandwidth = 0;for (var i = 0; i < trackProperties.length; i++) {totalPropertiesBandwidth += trackProperties[i].bandwidth();}return (trafficSettings.value() * totalPropertiesBandwidth);};\";\n\
                }\n\
                availableTrack.inflate(availableTracks[i]);\n\
                self.availableTracks.push(availableTrack);\n\
\n\
                self.availableTracksMap[availableTracks[i].id] = availableTrack;\n\
            }\n\
\n\
            var availablePlaylists = self.availablePlaylists();\n\
            if (availablePlaylists.length > 0) {\n\
                for (i = 0; i < availablePlaylists.length; i++) {\n\
                    var tracks = availablePlaylists[i].tracks();\n\
                    for (var j = 0; j < tracks.length; j++) {\n\
                        var track = tracks[j]();\n\
                        var trackId = track.id();\n\
                        track.name = self.availableTracksMap[trackId].name;\n\
                        if(availablePlaylists[i].isReadOnly)\n\
                            track.trackProperties = self.availableTracksMap[trackId].trackProperties;\n\
                        track.layer = self.availableTracksMap[trackId].layer;\n\
                    }\n\
                }\n\
            }\n\
            self.availableTracks.sort(util.sortArrayByObjectKeyKoObservable(\"name\", true));\n\
            if (callback){\n\
                callback();\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
SpirentViewModel.prototype.getAvailablePlaylists = function (callback) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availablePlaylists.removeAll();\n\
\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_playlist_tracks\"),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availablePlaylists = data;\n\
\n\
            for (var i = 0; i < availablePlaylists.length; i++) {\n\
                var playlist = new TestPlaylistViewModel(self);\n\
\n\
                playlist.inflate(availablePlaylists[i]);\n\
\n\
                self.availablePlaylists.push(playlist);\n\
            }\n\
\n\
            var availableTracks = self.availableTracks();\n\
            if (availableTracks.length > 0) {\n\
                for (i = 0; i < availablePlaylists.length; i++) {\n\
                    var playlistTracks = self.availablePlaylists()[i].tracks();\n\
                    for (var j = 0; j < playlistTracks.length; j++) {\n\
                        var thisTrack = playlistTracks[j]();\n\
                        var foundTrack = self.availableTracksMap[thisTrack.id()];\n\
                        thisTrack.name = foundTrack.name;\n\
                        if(availablePlaylists[i].isReadOnly)\n\
                            thisTrack.trackProperties = foundTrack.trackProperties;\n\
                        thisTrack.layer = foundTrack.layer;\n\
                    }\n\
\n\
                    self.availablePlaylists()[i].setMinTrackLayer();\n\
                    self.availablePlaylists()[i].calculatePercentagesForApplicationLayerTracks();\n\
                }\n\
            }\n\
            self.availablePlaylists.sort(util.sortArrayByObjectKeyKoObservable(\"name\", true));\n\
            if (callback){\n\
                callback();\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
SpirentViewModel.prototype.getAvailableDevices = function (callback, responseData) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availableDevices.removeAll();\n\
\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_devices\"),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availableDevices = data;\n\
            if (availableDevices.length > 1){\n\
                availableDevices = util.sort_devices(availableDevices);\n\
            }\n\
\n\
            for (var i = 0; i < availableDevices.length; i++) {\n\
                var device = new TestDeviceViewModel(self);\n\
                device.inflate(availableDevices[i]);\n\
\n\
                self.availableDevices.push(device);\n\
            }\n\
            if (callback){\n\
                callback(responseData);\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.updateDeviceTimeSyncCapabilities = function (data) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availableDevices().forEach(function(device) {\n\
        device.updateTimeSyncCapability(data); // Handles mapping of devices\n\
    });\n\
};\n\
\n\
SpirentViewModel.prototype.getAvailableEndpoints = function (callback) {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availableEndpoints.removeAll();\n\
\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_endpoints\"),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availableEndpoints = data;\n\
\n\
            for (var i = 0; i < availableEndpoints.length; i++) {\n\
                var endpoint = new EndpointViewModel(self);\n\
                endpoint.inflate(availableEndpoints[i]);\n\
                self.availableEndpoints.push(endpoint);\n\
            }\n\
\n\
            self.availableEndpoints.sort(util.sortArrayByObjectKeyKoObservable(\"name\", true));\n\
            if (callback){\n\
                callback();\n\
            }\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
SpirentViewModel.prototype.getResultTypes = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.availableResultTypes = new Array();\n\
\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_result_types\"),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            var availableResultTypes = data;\n\
\n\
            for (var i = 0; i < availableResultTypes.length; i++) {\n\
                self.availableResultTypes.push(new ResultTypeViewModel(availableResultTypes[i]));\n\
            }\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            util.logData(textStatus);\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
\n\
SpirentViewModel.prototype.getAvailableDisplayMessages = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    var ajax = $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_display_messages\"),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            self.availableDisplayMessages = data;\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            util.logData(textStatus);\n\
        }\n\
    });\n\
\n\
    return ajax;\n\
};\n\
SpirentViewModel.prototype.addToCategoryView = function (newTest) {\n\
    var self = SpirentViewModel.typesafe(this)\n\
    var categories = newTest.categories();\n\
\n\
    for (var i = 0; i < categories.length; i += 1) {\n\
        var category = categories[i];\n\
        if (self.availableTestsByCategory.indexOf(category.type) === -1) {\n\
            self.availableTestsByCategory.set(category.type, {\n\
                categoryName: category.name,\n\
                tests: [newTest]\n\
            });\n\
            self.availableTestsByCategory.items.sort(function(category1, category2){\n\
                return category1.value().categoryName < category2.value().categoryName;\n\
            });\n\
        } else {\n\
            var testsByCategory = self.availableTestsByCategory.get(category.type)().tests;\n\
\n\
            var existingTest = ko.utils.arrayFirst(testsByCategory, function (item) {\n\
                return newTest.id() === item.id() && newTest.isUserSave === item.isUserSave;\n\
            });\n\
\n\
            if (existingTest !== null) {\n\
                testsByCategory.splice(testsByCategory.indexOf(existingTest), 1);\n\
            }\n\
\n\
            // To make 'Throughput Test' at the second position in 'Test Library'\n\
            if (newTest.template_name() == 'Throughput Test') {\n\
                if (testsByCategory.length > 1) {\n\
                    // Insert value\n\
                    testsByCategory.splice(1, 0, newTest);\n\
                } else {\n\
                    testsByCategory.push(newTest);\n\
                }\n\
            } else {\n\
                testsByCategory.push(newTest);\n\
            }\n\
        }\n\
    }\n\
};\n\
SpirentViewModel.prototype.deleteTest = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    logger.info(\"removeFromCategoryView unimplemented\");\n\
    //find test\n\
    //remove from array\n\
    //removeFromCategoryView();\n\
};\n\
SpirentViewModel.prototype.openTestCreationLightbox = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    self.vmTest.openTestCreationLightbox();\n\
};\n\
SpirentViewModel.prototype.openTestCreationLightboxUnlessLoaded = function () {\n\
    var self = SpirentViewModel.typesafe(this);\n\
    if(!self.vmTest.vmConfiguration.isLoaded())\n\
        self.vmTest.openTestCreationLightbox();\n\
    else\n\
        self.showTest();\n\
};\n\
\n\
SpirentViewModel.prototype.getState = function(){\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    var stateViewModel = {};\n\
\n\
    stateViewModel.mainTab = self.selectedTab();\n\
    stateViewModel.testTab = self.vmTest.selectedTab();\n\
    stateViewModel.adminTab = self.vmAdministration.selectedTab();\n\
    stateViewModel.resultsTab = self.vmTest.vmResults.selectedTab();\n\
\n\
    return stateViewModel;\n\
};\n\
\n\
SpirentViewModel.prototype.restoreState = function(stateViewModel){\n\
    var self = SpirentViewModel.typesafe(this);\n\
\n\
    self.selectedTab(stateViewModel.mainTab);\n\
    self.vmTest.selectedTab(stateViewModel.testTab);\n\
    self.vmAdministration.selectedTab(stateViewModel.adminTab);\n\
    self.vmTest.vmResults.selectTab(stateViewModel.resultsTab);\n\
};\n\
\n\
module.exports = SpirentViewModel;//@ sourceURL=spirent-view-model/index.js"
));
require.register("spirent-view-model/test-configurations-adapter.js", Function("exports, require, module",
"/**\n\
 * Translates JSON objects from REST endpoint into something UI code can use.\n\
 * Provides an abstraction layer between REST API and UI code.\n\
 *\n\
 * @param config Array of test configuration JSON data (from REST API)\n\
 * @return Array\n\
 */\n\
module.exports = function (config) {\n\
    return config.map(function (test) {\n\
        // Move the player type (unicast/multicast) from supplemental config to\n\
        // top of test - helps instantiate the proper traffic player later on\n\
        if (test.supplemental_configuration && test.supplemental_configuration.default_player_type) {\n\
            test.default_player_type = test.supplemental_configuration.default_player_type;\n\
            delete test.supplemental_configuration.default_player_type;\n\
        }\n\
\n\
        if (test.traffic_players && test.traffic_players.length) {\n\
            // Move any stored multicast settings to top of traffic players\n\
            test.traffic_players = test.traffic_players.map(function (player) {\n\
                if (player.supplemental_configuration && player.supplemental_configuration.multicast_settings) {\n\
                    player.multicast_settings = player.supplemental_configuration.multicast_settings;\n\
                    delete player.supplemental_configuration.multicast_settings;\n\
\n\
                    if (Object.keys(player.supplemental_configuration).length === 0) {\n\
                        delete player.supplemental_configuration;\n\
                    }\n\
                }\n\
\n\
                return player;\n\
            });\n\
        }\n\
\n\
        return test;\n\
    });\n\
};//@ sourceURL=spirent-view-model/test-configurations-adapter.js"
));
require.register("component-to-function/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Expose `toFunction()`.\n\
 */\n\
\n\
module.exports = toFunction;\n\
\n\
/**\n\
 * Convert `obj` to a `Function`.\n\
 *\n\
 * @param {Mixed} obj\n\
 * @return {Function}\n\
 * @api private\n\
 */\n\
\n\
function toFunction(obj) {\n\
  switch ({}.toString.call(obj)) {\n\
    case '[object Object]':\n\
      return objectToFunction(obj);\n\
    case '[object Function]':\n\
      return obj;\n\
    case '[object String]':\n\
      return stringToFunction(obj);\n\
    case '[object RegExp]':\n\
      return regexpToFunction(obj);\n\
    default:\n\
      return defaultToFunction(obj);\n\
  }\n\
}\n\
\n\
/**\n\
 * Default to strict equality.\n\
 *\n\
 * @param {Mixed} val\n\
 * @return {Function}\n\
 * @api private\n\
 */\n\
\n\
function defaultToFunction(val) {\n\
  return function(obj){\n\
    return val === obj;\n\
  }\n\
}\n\
\n\
/**\n\
 * Convert `re` to a function.\n\
 *\n\
 * @param {RegExp} re\n\
 * @return {Function}\n\
 * @api private\n\
 */\n\
\n\
function regexpToFunction(re) {\n\
  return function(obj){\n\
    return re.test(obj);\n\
  }\n\
}\n\
\n\
/**\n\
 * Convert property `str` to a function.\n\
 *\n\
 * @param {String} str\n\
 * @return {Function}\n\
 * @api private\n\
 */\n\
\n\
function stringToFunction(str) {\n\
  // immediate such as \"> 20\"\n\
  if (/^ *\\W+/.test(str)) return new Function('_', 'return _ ' + str);\n\
\n\
  // properties such as \"name.first\" or \"age > 18\"\n\
  return new Function('_', 'return _.' + str);\n\
}\n\
\n\
/**\n\
 * Convert `object` to a function.\n\
 *\n\
 * @param {Object} object\n\
 * @return {Function}\n\
 * @api private\n\
 */\n\
\n\
function objectToFunction(obj) {\n\
  var match = {}\n\
  for (var key in obj) {\n\
    match[key] = typeof obj[key] === 'string'\n\
      ? defaultToFunction(obj[key])\n\
      : toFunction(obj[key])\n\
  }\n\
  return function(val){\n\
    if (typeof val !== 'object') return false;\n\
    for (var key in match) {\n\
      if (!(key in val)) return false;\n\
      if (!match[key](val[key])) return false;\n\
    }\n\
    return true;\n\
  }\n\
}\n\
//@ sourceURL=component-to-function/index.js"
));
require.register("component-type/index.js", Function("exports, require, module",
"/**\n\
 * toString ref.\n\
 */\n\
\n\
var toString = Object.prototype.toString;\n\
\n\
/**\n\
 * Return the type of `val`.\n\
 *\n\
 * @param {Mixed} val\n\
 * @return {String}\n\
 * @api public\n\
 */\n\
\n\
module.exports = function(val){\n\
  switch (toString.call(val)) {\n\
    case '[object Date]': return 'date';\n\
    case '[object RegExp]': return 'regexp';\n\
    case '[object Arguments]': return 'arguments';\n\
    case '[object Array]': return 'array';\n\
    case '[object Error]': return 'error';\n\
  }\n\
\n\
  if (val === null) return 'null';\n\
  if (val === undefined) return 'undefined';\n\
  if (val !== val) return 'nan';\n\
  if (val && val.nodeType === 1) return 'element';\n\
\n\
  return typeof val.valueOf();\n\
};\n\
//@ sourceURL=component-type/index.js"
));
require.register("component-each/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var toFunction = require('to-function');\n\
var type;\n\
\n\
try {\n\
  type = require('type-component');\n\
} catch (e) {\n\
  type = require('type');\n\
}\n\
\n\
/**\n\
 * HOP reference.\n\
 */\n\
\n\
var has = Object.prototype.hasOwnProperty;\n\
\n\
/**\n\
 * Iterate the given `obj` and invoke `fn(val, i)`.\n\
 *\n\
 * @param {String|Array|Object} obj\n\
 * @param {Function} fn\n\
 * @api public\n\
 */\n\
\n\
module.exports = function(obj, fn){\n\
  fn = toFunction(fn);\n\
  switch (type(obj)) {\n\
    case 'array':\n\
      return array(obj, fn);\n\
    case 'object':\n\
      if ('number' == typeof obj.length) return array(obj, fn);\n\
      return object(obj, fn);\n\
    case 'string':\n\
      return string(obj, fn);\n\
  }\n\
};\n\
\n\
/**\n\
 * Iterate string chars.\n\
 *\n\
 * @param {String} obj\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
function string(obj, fn) {\n\
  for (var i = 0; i < obj.length; ++i) {\n\
    fn(obj.charAt(i), i);\n\
  }\n\
}\n\
\n\
/**\n\
 * Iterate object keys.\n\
 *\n\
 * @param {Object} obj\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
function object(obj, fn) {\n\
  for (var key in obj) {\n\
    if (has.call(obj, key)) {\n\
      fn(key, obj[key]);\n\
    }\n\
  }\n\
}\n\
\n\
/**\n\
 * Iterate array-ish.\n\
 *\n\
 * @param {Array|Object} obj\n\
 * @param {Function} fn\n\
 * @api private\n\
 */\n\
\n\
function array(obj, fn) {\n\
  for (var i = 0; i < obj.length; ++i) {\n\
    fn(obj[i], i);\n\
  }\n\
}\n\
//@ sourceURL=component-each/index.js"
));
require.register("juliangruber-isarray/index.js", Function("exports, require, module",
"module.exports = Array.isArray || function (arr) {\n\
  return Object.prototype.toString.call(arr) == '[object Array]';\n\
};\n\
//@ sourceURL=juliangruber-isarray/index.js"
));
require.register("component-enumerable/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var toFunction = require('to-function')\n\
  , isArray = require(\"isarray\")\n\
  , proto = {};\n\
\n\
/**\n\
 * Expose `Enumerable`.\n\
 */\n\
\n\
module.exports = Enumerable;\n\
\n\
/**\n\
 * Mixin to `obj`.\n\
 *\n\
 *    var Enumerable = require('enumerable');\n\
 *    Enumerable(Something.prototype);\n\
 *\n\
 * @param {Object} obj\n\
 * @return {Object} obj\n\
 */\n\
\n\
function mixin(obj){\n\
  for (var key in proto) obj[key] = proto[key];\n\
  obj.__iterate__ = obj.__iterate__ || defaultIterator;\n\
  return obj;\n\
}\n\
\n\
/**\n\
 * Initialize a new `Enumerable` with the given `obj`.\n\
 *\n\
 * @param {Object} obj\n\
 * @api private\n\
 */\n\
\n\
function Enumerable(obj) {\n\
  if (!(this instanceof Enumerable)) {\n\
    if (isArray(obj)) return new Enumerable(obj);\n\
    return mixin(obj);\n\
  }\n\
  this.obj = obj;\n\
}\n\
\n\
/*!\n\
 * Default iterator utilizing `.length` and subscripts.\n\
 */\n\
\n\
function defaultIterator() {\n\
  var self = this;\n\
  return {\n\
    length: function(){ return self.length },\n\
    get: function(i){ return self[i] }\n\
  }\n\
}\n\
\n\
/**\n\
 * Return a string representation of this enumerable.\n\
 *\n\
 *    [Enumerable [1,2,3]]\n\
 *\n\
 * @return {String}\n\
 * @api public\n\
 */\n\
\n\
Enumerable.prototype.inspect =\n\
Enumerable.prototype.toString = function(){\n\
  return '[Enumerable ' + JSON.stringify(this.obj) + ']';\n\
};\n\
\n\
/**\n\
 * Iterate enumerable.\n\
 *\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
Enumerable.prototype.__iterate__ = function(){\n\
  var obj = this.obj;\n\
  obj.__iterate__ = obj.__iterate__ || defaultIterator;\n\
  return obj.__iterate__();\n\
};\n\
\n\
/**\n\
 * Iterate each value and invoke `fn(val, i)`.\n\
 *\n\
 *    users.each(function(val, i){\n\
 *\n\
 *    })\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Object} self\n\
 * @api public\n\
 */\n\
\n\
proto.forEach =\n\
proto.each = function(fn){\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    fn(vals.get(i), i);\n\
  }\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Map each return value from `fn(val, i)`.\n\
 *\n\
 * Passing a callback function:\n\
 *\n\
 *    users.map(function(user){\n\
 *      return user.name.first\n\
 *    })\n\
 *\n\
 * Passing a property string:\n\
 *\n\
 *    users.map('name.first')\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Enumerable}\n\
 * @api public\n\
 */\n\
\n\
proto.map = function(fn){\n\
  fn = toFunction(fn);\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  var arr = [];\n\
  for (var i = 0; i < len; ++i) {\n\
    arr.push(fn(vals.get(i), i));\n\
  }\n\
  return new Enumerable(arr);\n\
};\n\
\n\
/**\n\
 * Select all values that return a truthy value of `fn(val, i)`.\n\
 *\n\
 *    users.select(function(user){\n\
 *      return user.age > 20\n\
 *    })\n\
 *\n\
 *  With a property:\n\
 *\n\
 *    items.select('complete')\n\
 *\n\
 * @param {Function|String} fn\n\
 * @return {Enumerable}\n\
 * @api public\n\
 */\n\
\n\
proto.filter =\n\
proto.select = function(fn){\n\
  fn = toFunction(fn);\n\
  var val;\n\
  var arr = [];\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    val = vals.get(i);\n\
    if (fn(val, i)) arr.push(val);\n\
  }\n\
  return new Enumerable(arr);\n\
};\n\
\n\
/**\n\
 * Select all unique values.\n\
 *\n\
 *    nums.unique()\n\
 *\n\
 * @return {Enumerable}\n\
 * @api public\n\
 */\n\
\n\
proto.unique = function(){\n\
  var val;\n\
  var arr = [];\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    val = vals.get(i);\n\
    if (~arr.indexOf(val)) continue;\n\
    arr.push(val);\n\
  }\n\
  return new Enumerable(arr);\n\
};\n\
\n\
/**\n\
 * Reject all values that return a truthy value of `fn(val, i)`.\n\
 *\n\
 * Rejecting using a callback:\n\
 *\n\
 *    users.reject(function(user){\n\
 *      return user.age < 20\n\
 *    })\n\
 *\n\
 * Rejecting with a property:\n\
 *\n\
 *    items.reject('complete')\n\
 *\n\
 * Rejecting values via `==`:\n\
 *\n\
 *    data.reject(null)\n\
 *    users.reject(tobi)\n\
 *\n\
 * @param {Function|String|Mixed} fn\n\
 * @return {Enumerable}\n\
 * @api public\n\
 */\n\
\n\
proto.reject = function(fn){\n\
  var val;\n\
  var arr = [];\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
\n\
  if ('string' == typeof fn) fn = toFunction(fn);\n\
\n\
  if (fn) {\n\
    for (var i = 0; i < len; ++i) {\n\
      val = vals.get(i);\n\
      if (!fn(val, i)) arr.push(val);\n\
    }\n\
  } else {\n\
    for (var i = 0; i < len; ++i) {\n\
      val = vals.get(i);\n\
      if (val != fn) arr.push(val);\n\
    }\n\
  }\n\
\n\
  return new Enumerable(arr);\n\
};\n\
\n\
/**\n\
 * Reject `null` and `undefined`.\n\
 *\n\
 *    [1, null, 5, undefined].compact()\n\
 *    // => [1,5]\n\
 *\n\
 * @return {Enumerable}\n\
 * @api public\n\
 */\n\
\n\
\n\
proto.compact = function(){\n\
  return this.reject(null);\n\
};\n\
\n\
/**\n\
 * Return the first value when `fn(val, i)` is truthy,\n\
 * otherwise return `undefined`.\n\
 *\n\
 *    users.find(function(user){\n\
 *      return user.role == 'admin'\n\
 *    })\n\
 *\n\
 * With a property string:\n\
 *\n\
 *    users.find('age > 20')\n\
 *\n\
 * @param {Function|String} fn\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
proto.find = function(fn){\n\
  fn = toFunction(fn);\n\
  var val;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    val = vals.get(i);\n\
    if (fn(val, i)) return val;\n\
  }\n\
};\n\
\n\
/**\n\
 * Return the last value when `fn(val, i)` is truthy,\n\
 * otherwise return `undefined`.\n\
 *\n\
 *    users.findLast(function(user){\n\
 *      return user.role == 'admin'\n\
 *    })\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
proto.findLast = function(fn){\n\
  fn = toFunction(fn);\n\
  var val;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = len - 1; i > -1; --i) {\n\
    val = vals.get(i);\n\
    if (fn(val, i)) return val;\n\
  }\n\
};\n\
\n\
/**\n\
 * Assert that all invocations of `fn(val, i)` are truthy.\n\
 *\n\
 * For example ensuring that all pets are ferrets:\n\
 *\n\
 *    pets.all(function(pet){\n\
 *      return pet.species == 'ferret'\n\
 *    })\n\
 *\n\
 *    users.all('admin')\n\
 *\n\
 * @param {Function|String} fn\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
proto.all =\n\
proto.every = function(fn){\n\
  fn = toFunction(fn);\n\
  var val;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    val = vals.get(i);\n\
    if (!fn(val, i)) return false;\n\
  }\n\
  return true;\n\
};\n\
\n\
/**\n\
 * Assert that none of the invocations of `fn(val, i)` are truthy.\n\
 *\n\
 * For example ensuring that no pets are admins:\n\
 *\n\
 *    pets.none(function(p){ return p.admin })\n\
 *    pets.none('admin')\n\
 *\n\
 * @param {Function|String} fn\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
proto.none = function(fn){\n\
  fn = toFunction(fn);\n\
  var val;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    val = vals.get(i);\n\
    if (fn(val, i)) return false;\n\
  }\n\
  return true;\n\
};\n\
\n\
/**\n\
 * Assert that at least one invocation of `fn(val, i)` is truthy.\n\
 *\n\
 * For example checking to see if any pets are ferrets:\n\
 *\n\
 *    pets.any(function(pet){\n\
 *      return pet.species == 'ferret'\n\
 *    })\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
proto.any = function(fn){\n\
  fn = toFunction(fn);\n\
  var val;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    val = vals.get(i);\n\
    if (fn(val, i)) return true;\n\
  }\n\
  return false;\n\
};\n\
\n\
/**\n\
 * Count the number of times `fn(val, i)` returns true.\n\
 *\n\
 *    var n = pets.count(function(pet){\n\
 *      return pet.species == 'ferret'\n\
 *    })\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
proto.count = function(fn){\n\
  var val;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  var n = 0;\n\
  for (var i = 0; i < len; ++i) {\n\
    val = vals.get(i);\n\
    if (fn(val, i)) ++n;\n\
  }\n\
  return n;\n\
};\n\
\n\
/**\n\
 * Determine the indexof `obj` or return `-1`.\n\
 *\n\
 * @param {Mixed} obj\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
proto.indexOf = function(obj){\n\
  var val;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    val = vals.get(i);\n\
    if (val === obj) return i;\n\
  }\n\
  return -1;\n\
};\n\
\n\
/**\n\
 * Check if `obj` is present in this enumerable.\n\
 *\n\
 * @param {Mixed} obj\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
proto.has = function(obj){\n\
  return !! ~this.indexOf(obj);\n\
};\n\
\n\
/**\n\
 * Reduce with `fn(accumulator, val, i)` using\n\
 * optional `init` value defaulting to the first\n\
 * enumerable value.\n\
 *\n\
 * @param {Function} fn\n\
 * @param {Mixed} [val]\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
proto.reduce = function(fn, init){\n\
  var val;\n\
  var i = 0;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
\n\
  val = null == init\n\
    ? vals.get(i++)\n\
    : init;\n\
\n\
  for (; i < len; ++i) {\n\
    val = fn(val, vals.get(i), i);\n\
  }\n\
\n\
  return val;\n\
};\n\
\n\
/**\n\
 * Determine the max value.\n\
 *\n\
 * With a callback function:\n\
 *\n\
 *    pets.max(function(pet){\n\
 *      return pet.age\n\
 *    })\n\
 *\n\
 * With property strings:\n\
 *\n\
 *    pets.max('age')\n\
 *\n\
 * With immediate values:\n\
 *\n\
 *    nums.max()\n\
 *\n\
 * @param {Function|String} fn\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
proto.max = function(fn){\n\
  var val;\n\
  var n = 0;\n\
  var max = -Infinity;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
\n\
  if (fn) {\n\
    fn = toFunction(fn);\n\
    for (var i = 0; i < len; ++i) {\n\
      n = fn(vals.get(i), i);\n\
      max = n > max ? n : max;\n\
    }\n\
  } else {\n\
    for (var i = 0; i < len; ++i) {\n\
      n = vals.get(i);\n\
      max = n > max ? n : max;\n\
    }\n\
  }\n\
\n\
  return max;\n\
};\n\
\n\
/**\n\
 * Determine the min value.\n\
 *\n\
 * With a callback function:\n\
 *\n\
 *    pets.min(function(pet){\n\
 *      return pet.age\n\
 *    })\n\
 *\n\
 * With property strings:\n\
 *\n\
 *    pets.min('age')\n\
 *\n\
 * With immediate values:\n\
 *\n\
 *    nums.min()\n\
 *\n\
 * @param {Function|String} fn\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
proto.min = function(fn){\n\
  var val;\n\
  var n = 0;\n\
  var min = Infinity;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
\n\
  if (fn) {\n\
    fn = toFunction(fn);\n\
    for (var i = 0; i < len; ++i) {\n\
      n = fn(vals.get(i), i);\n\
      min = n < min ? n : min;\n\
    }\n\
  } else {\n\
    for (var i = 0; i < len; ++i) {\n\
      n = vals.get(i);\n\
      min = n < min ? n : min;\n\
    }\n\
  }\n\
\n\
  return min;\n\
};\n\
\n\
/**\n\
 * Determine the sum.\n\
 *\n\
 * With a callback function:\n\
 *\n\
 *    pets.sum(function(pet){\n\
 *      return pet.age\n\
 *    })\n\
 *\n\
 * With property strings:\n\
 *\n\
 *    pets.sum('age')\n\
 *\n\
 * With immediate values:\n\
 *\n\
 *    nums.sum()\n\
 *\n\
 * @param {Function|String} fn\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
proto.sum = function(fn){\n\
  var ret;\n\
  var n = 0;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
\n\
  if (fn) {\n\
    fn = toFunction(fn);\n\
    for (var i = 0; i < len; ++i) {\n\
      n += fn(vals.get(i), i);\n\
    }\n\
  } else {\n\
    for (var i = 0; i < len; ++i) {\n\
      n += vals.get(i);\n\
    }\n\
  }\n\
\n\
  return n;\n\
};\n\
\n\
/**\n\
 * Determine the average value.\n\
 *\n\
 * With a callback function:\n\
 *\n\
 *    pets.avg(function(pet){\n\
 *      return pet.age\n\
 *    })\n\
 *\n\
 * With property strings:\n\
 *\n\
 *    pets.avg('age')\n\
 *\n\
 * With immediate values:\n\
 *\n\
 *    nums.avg()\n\
 *\n\
 * @param {Function|String} fn\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
proto.avg =\n\
proto.mean = function(fn){\n\
  var ret;\n\
  var n = 0;\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
\n\
  if (fn) {\n\
    fn = toFunction(fn);\n\
    for (var i = 0; i < len; ++i) {\n\
      n += fn(vals.get(i), i);\n\
    }\n\
  } else {\n\
    for (var i = 0; i < len; ++i) {\n\
      n += vals.get(i);\n\
    }\n\
  }\n\
\n\
  return n / len;\n\
};\n\
\n\
/**\n\
 * Return the first value, or first `n` values.\n\
 *\n\
 * @param {Number|Function} [n]\n\
 * @return {Array|Mixed}\n\
 * @api public\n\
 */\n\
\n\
proto.first = function(n){\n\
  if ('function' == typeof n) return this.find(n);\n\
  var vals = this.__iterate__();\n\
\n\
  if (n) {\n\
    var len = Math.min(n, vals.length());\n\
    var arr = new Array(len);\n\
    for (var i = 0; i < len; ++i) {\n\
      arr[i] = vals.get(i);\n\
    }\n\
    return arr;\n\
  }\n\
\n\
  return vals.get(0);\n\
};\n\
\n\
/**\n\
 * Return the last value, or last `n` values.\n\
 *\n\
 * @param {Number|Function} [n]\n\
 * @return {Array|Mixed}\n\
 * @api public\n\
 */\n\
\n\
proto.last = function(n){\n\
  if ('function' == typeof n) return this.findLast(n);\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
\n\
  if (n) {\n\
    var i = Math.max(0, len - n);\n\
    var arr = [];\n\
    for (; i < len; ++i) {\n\
      arr.push(vals.get(i));\n\
    }\n\
    return arr;\n\
  }\n\
\n\
  return vals.get(len - 1);\n\
};\n\
\n\
/**\n\
 * Return values in groups of `n`.\n\
 *\n\
 * @param {Number} n\n\
 * @return {Enumerable}\n\
 * @api public\n\
 */\n\
\n\
proto.inGroupsOf = function(n){\n\
  var arr = [];\n\
  var group = [];\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
\n\
  for (var i = 0; i < len; ++i) {\n\
    group.push(vals.get(i));\n\
    if ((i + 1) % n == 0) {\n\
      arr.push(group);\n\
      group = [];\n\
    }\n\
  }\n\
\n\
  if (group.length) arr.push(group);\n\
\n\
  return new Enumerable(arr);\n\
};\n\
\n\
/**\n\
 * Return the value at the given index.\n\
 *\n\
 * @param {Number} i\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
proto.at = function(i){\n\
  return this.__iterate__().get(i);\n\
};\n\
\n\
/**\n\
 * Return a regular `Array`.\n\
 *\n\
 * @return {Array}\n\
 * @api public\n\
 */\n\
\n\
proto.toJSON =\n\
proto.array = function(){\n\
  var arr = [];\n\
  var vals = this.__iterate__();\n\
  var len = vals.length();\n\
  for (var i = 0; i < len; ++i) {\n\
    arr.push(vals.get(i));\n\
  }\n\
  return arr;\n\
};\n\
\n\
/**\n\
 * Return the enumerable value.\n\
 *\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
proto.value = function(){\n\
  return this.obj;\n\
};\n\
\n\
/**\n\
 * Mixin enumerable.\n\
 */\n\
\n\
mixin(Enumerable.prototype);\n\
//@ sourceURL=component-enumerable/index.js"
));
require.register("component-collection/index.js", Function("exports, require, module",
"\n\
try {\n\
  var Enumerable = require('enumerable');\n\
} catch (e) {\n\
  var Enumerable = require('enumerable-component');\n\
}\n\
\n\
/**\n\
 * Expose `Collection`.\n\
 */\n\
\n\
module.exports = Collection;\n\
\n\
/**\n\
 * Initialize a new collection with the given `models`.\n\
 *\n\
 * @param {Array} models\n\
 * @api public\n\
 */\n\
\n\
function Collection(models) {\n\
  this.models = models || [];\n\
}\n\
\n\
/**\n\
 * Mixin enumerable.\n\
 */\n\
\n\
Enumerable(Collection.prototype);\n\
\n\
/**\n\
 * Iterator implementation.\n\
 */\n\
\n\
Collection.prototype.__iterate__ = function(){\n\
  var self = this;\n\
  return {\n\
    length: function(){ return self.length() },\n\
    get: function(i){ return self.models[i] }\n\
  }\n\
};\n\
\n\
/**\n\
 * Return the collection length.\n\
 *\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
Collection.prototype.length = function(){\n\
  return this.models.length;\n\
};\n\
\n\
/**\n\
 * Add `model` to the collection and return the index.\n\
 *\n\
 * @param {Object} model\n\
 * @return {Number}\n\
 * @api public\n\
 */\n\
\n\
Collection.prototype.push = function(model){\n\
  return this.models.push(model);\n\
};\n\
//@ sourceURL=component-collection/index.js"
));
require.register("visionmedia-superagent/lib/client.js", Function("exports, require, module",
"\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Emitter = require('emitter');\n\
var reduce = require('reduce');\n\
\n\
/**\n\
 * Root reference for iframes.\n\
 */\n\
\n\
var root = 'undefined' == typeof window\n\
  ? this\n\
  : window;\n\
\n\
/**\n\
 * Noop.\n\
 */\n\
\n\
function noop(){};\n\
\n\
/**\n\
 * Check if `obj` is a host object,\n\
 * we don't want to serialize these :)\n\
 *\n\
 * TODO: future proof, move to compoent land\n\
 *\n\
 * @param {Object} obj\n\
 * @return {Boolean}\n\
 * @api private\n\
 */\n\
\n\
function isHost(obj) {\n\
  var str = {}.toString.call(obj);\n\
\n\
  switch (str) {\n\
    case '[object File]':\n\
    case '[object Blob]':\n\
    case '[object FormData]':\n\
      return true;\n\
    default:\n\
      return false;\n\
  }\n\
}\n\
\n\
/**\n\
 * Determine XHR.\n\
 */\n\
\n\
function getXHR() {\n\
  if (root.XMLHttpRequest\n\
    && ('file:' != root.location.protocol || !root.ActiveXObject)) {\n\
    return new XMLHttpRequest;\n\
  } else {\n\
    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\
    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\
    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\
    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\
  }\n\
  return false;\n\
}\n\
\n\
/**\n\
 * Removes leading and trailing whitespace, added to support IE.\n\
 *\n\
 * @param {String} s\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
var trim = ''.trim\n\
  ? function(s) { return s.trim(); }\n\
  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\
\n\
/**\n\
 * Check if `obj` is an object.\n\
 *\n\
 * @param {Object} obj\n\
 * @return {Boolean}\n\
 * @api private\n\
 */\n\
\n\
function isObject(obj) {\n\
  return obj === Object(obj);\n\
}\n\
\n\
/**\n\
 * Serialize the given `obj`.\n\
 *\n\
 * @param {Object} obj\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function serialize(obj) {\n\
  if (!isObject(obj)) return obj;\n\
  var pairs = [];\n\
  for (var key in obj) {\n\
    pairs.push(encodeURIComponent(key)\n\
      + '=' + encodeURIComponent(obj[key]));\n\
  }\n\
  return pairs.join('&');\n\
}\n\
\n\
/**\n\
 * Expose serialization method.\n\
 */\n\
\n\
 request.serializeObject = serialize;\n\
\n\
 /**\n\
  * Parse the given x-www-form-urlencoded `str`.\n\
  *\n\
  * @param {String} str\n\
  * @return {Object}\n\
  * @api private\n\
  */\n\
\n\
function parseString(str) {\n\
  var obj = {};\n\
  var pairs = str.split('&');\n\
  var parts;\n\
  var pair;\n\
\n\
  for (var i = 0, len = pairs.length; i < len; ++i) {\n\
    pair = pairs[i];\n\
    parts = pair.split('=');\n\
    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n\
  }\n\
\n\
  return obj;\n\
}\n\
\n\
/**\n\
 * Expose parser.\n\
 */\n\
\n\
request.parseString = parseString;\n\
\n\
/**\n\
 * Default MIME type map.\n\
 *\n\
 *     superagent.types.xml = 'application/xml';\n\
 *\n\
 */\n\
\n\
request.types = {\n\
  html: 'text/html',\n\
  json: 'application/json',\n\
  urlencoded: 'application/x-www-form-urlencoded',\n\
  'form': 'application/x-www-form-urlencoded',\n\
  'form-data': 'application/x-www-form-urlencoded'\n\
};\n\
\n\
/**\n\
 * Default serialization map.\n\
 *\n\
 *     superagent.serialize['application/xml'] = function(obj){\n\
 *       return 'generated xml here';\n\
 *     };\n\
 *\n\
 */\n\
\n\
 request.serialize = {\n\
   'application/x-www-form-urlencoded': serialize,\n\
   'application/json': JSON.stringify\n\
 };\n\
\n\
 /**\n\
  * Default parsers.\n\
  *\n\
  *     superagent.parse['application/xml'] = function(str){\n\
  *       return { object parsed from str };\n\
  *     };\n\
  *\n\
  */\n\
\n\
request.parse = {\n\
  'application/x-www-form-urlencoded': parseString,\n\
  'application/json': JSON.parse\n\
};\n\
\n\
/**\n\
 * Parse the given header `str` into\n\
 * an object containing the mapped fields.\n\
 *\n\
 * @param {String} str\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function parseHeader(str) {\n\
  var lines = str.split(/\\r?\\n\
/);\n\
  var fields = {};\n\
  var index;\n\
  var line;\n\
  var field;\n\
  var val;\n\
\n\
  lines.pop(); // trailing CRLF\n\
\n\
  for (var i = 0, len = lines.length; i < len; ++i) {\n\
    line = lines[i];\n\
    index = line.indexOf(':');\n\
    field = line.slice(0, index).toLowerCase();\n\
    val = trim(line.slice(index + 1));\n\
    fields[field] = val;\n\
  }\n\
\n\
  return fields;\n\
}\n\
\n\
/**\n\
 * Return the mime type for the given `str`.\n\
 *\n\
 * @param {String} str\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
function type(str){\n\
  return str.split(/ *; */).shift();\n\
};\n\
\n\
/**\n\
 * Return header field parameters.\n\
 *\n\
 * @param {String} str\n\
 * @return {Object}\n\
 * @api private\n\
 */\n\
\n\
function params(str){\n\
  return reduce(str.split(/ *; */), function(obj, str){\n\
    var parts = str.split(/ *= */)\n\
      , key = parts.shift()\n\
      , val = parts.shift();\n\
\n\
    if (key && val) obj[key] = val;\n\
    return obj;\n\
  }, {});\n\
};\n\
\n\
/**\n\
 * Initialize a new `Response` with the given `xhr`.\n\
 *\n\
 *  - set flags (.ok, .error, etc)\n\
 *  - parse header\n\
 *\n\
 * Examples:\n\
 *\n\
 *  Aliasing `superagent` as `request` is nice:\n\
 *\n\
 *      request = superagent;\n\
 *\n\
 *  We can use the promise-like API, or pass callbacks:\n\
 *\n\
 *      request.get('/').end(function(res){});\n\
 *      request.get('/', function(res){});\n\
 *\n\
 *  Sending data can be chained:\n\
 *\n\
 *      request\n\
 *        .post('/user')\n\
 *        .send({ name: 'tj' })\n\
 *        .end(function(res){});\n\
 *\n\
 *  Or passed to `.send()`:\n\
 *\n\
 *      request\n\
 *        .post('/user')\n\
 *        .send({ name: 'tj' }, function(res){});\n\
 *\n\
 *  Or passed to `.post()`:\n\
 *\n\
 *      request\n\
 *        .post('/user', { name: 'tj' })\n\
 *        .end(function(res){});\n\
 *\n\
 * Or further reduced to a single call for simple cases:\n\
 *\n\
 *      request\n\
 *        .post('/user', { name: 'tj' }, function(res){});\n\
 *\n\
 * @param {XMLHTTPRequest} xhr\n\
 * @param {Object} options\n\
 * @api private\n\
 */\n\
\n\
function Response(req, options) {\n\
  options = options || {};\n\
  this.req = req;\n\
  this.xhr = this.req.xhr;\n\
  this.text = this.xhr.responseText;\n\
  this.setStatusProperties(this.xhr.status);\n\
  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\
  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\
  // getResponseHeader still works. so we get content-type even if getting\n\
  // other headers fails.\n\
  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\
  this.setHeaderProperties(this.header);\n\
  this.body = this.parseBody(this.text);\n\
}\n\
\n\
/**\n\
 * Get case-insensitive `field` value.\n\
 *\n\
 * @param {String} field\n\
 * @return {String}\n\
 * @api public\n\
 */\n\
\n\
Response.prototype.get = function(field){\n\
  return this.header[field.toLowerCase()];\n\
};\n\
\n\
/**\n\
 * Set header related properties:\n\
 *\n\
 *   - `.type` the content type without params\n\
 *\n\
 * A response of \"Content-Type: text/plain; charset=utf-8\"\n\
 * will provide you with a `.type` of \"text/plain\".\n\
 *\n\
 * @param {Object} header\n\
 * @api private\n\
 */\n\
\n\
Response.prototype.setHeaderProperties = function(header){\n\
  // content-type\n\
  var ct = this.header['content-type'] || '';\n\
  this.type = type(ct);\n\
\n\
  // params\n\
  var obj = params(ct);\n\
  for (var key in obj) this[key] = obj[key];\n\
};\n\
\n\
/**\n\
 * Parse the given body `str`.\n\
 *\n\
 * Used for auto-parsing of bodies. Parsers\n\
 * are defined on the `superagent.parse` object.\n\
 *\n\
 * @param {String} str\n\
 * @return {Mixed}\n\
 * @api private\n\
 */\n\
\n\
Response.prototype.parseBody = function(str){\n\
  var parse = request.parse[this.type];\n\
  return parse\n\
    ? parse(str)\n\
    : null;\n\
};\n\
\n\
/**\n\
 * Set flags such as `.ok` based on `status`.\n\
 *\n\
 * For example a 2xx response will give you a `.ok` of __true__\n\
 * whereas 5xx will be __false__ and `.error` will be __true__. The\n\
 * `.clientError` and `.serverError` are also available to be more\n\
 * specific, and `.statusType` is the class of error ranging from 1..5\n\
 * sometimes useful for mapping respond colors etc.\n\
 *\n\
 * \"sugar\" properties are also defined for common cases. Currently providing:\n\
 *\n\
 *   - .noContent\n\
 *   - .badRequest\n\
 *   - .unauthorized\n\
 *   - .notAcceptable\n\
 *   - .notFound\n\
 *\n\
 * @param {Number} status\n\
 * @api private\n\
 */\n\
\n\
Response.prototype.setStatusProperties = function(status){\n\
  var type = status / 100 | 0;\n\
\n\
  // status / class\n\
  this.status = status;\n\
  this.statusType = type;\n\
\n\
  // basics\n\
  this.info = 1 == type;\n\
  this.ok = 2 == type;\n\
  this.clientError = 4 == type;\n\
  this.serverError = 5 == type;\n\
  this.error = (4 == type || 5 == type)\n\
    ? this.toError()\n\
    : false;\n\
\n\
  // sugar\n\
  this.accepted = 202 == status;\n\
  this.noContent = 204 == status || 1223 == status;\n\
  this.badRequest = 400 == status;\n\
  this.unauthorized = 401 == status;\n\
  this.notAcceptable = 406 == status;\n\
  this.notFound = 404 == status;\n\
  this.forbidden = 403 == status;\n\
};\n\
\n\
/**\n\
 * Return an `Error` representative of this response.\n\
 *\n\
 * @return {Error}\n\
 * @api public\n\
 */\n\
\n\
Response.prototype.toError = function(){\n\
  var req = this.req;\n\
  var method = req.method;\n\
  var path = req.path;\n\
\n\
  var msg = 'cannot ' + method + ' ' + path + ' (' + this.status + ')';\n\
  var err = new Error(msg);\n\
  err.status = this.status;\n\
  err.method = method;\n\
  err.path = path;\n\
\n\
  return err;\n\
};\n\
\n\
/**\n\
 * Expose `Response`.\n\
 */\n\
\n\
request.Response = Response;\n\
\n\
/**\n\
 * Initialize a new `Request` with the given `method` and `url`.\n\
 *\n\
 * @param {String} method\n\
 * @param {String} url\n\
 * @api public\n\
 */\n\
\n\
function Request(method, url) {\n\
  var self = this;\n\
  Emitter.call(this);\n\
  this._query = this._query || [];\n\
  this.method = method;\n\
  this.url = url;\n\
  this.header = {};\n\
  this._header = {};\n\
  this.on('end', function(){\n\
    var res = new Response(self);\n\
    if ('HEAD' == method) res.text = null;\n\
    self.callback(null, res);\n\
  });\n\
}\n\
\n\
/**\n\
 * Inherit from `Emitter.prototype`.\n\
 */\n\
\n\
Request.prototype = new Emitter;\n\
Request.prototype.constructor = Request;\n\
\n\
/**\n\
 * Set timeout to `ms`.\n\
 *\n\
 * @param {Number} ms\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.timeout = function(ms){\n\
  this._timeout = ms;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Clear previous timeout.\n\
 *\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.clearTimeout = function(){\n\
  this._timeout = 0;\n\
  clearTimeout(this._timer);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Abort the request, and clear potential timeout.\n\
 *\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.abort = function(){\n\
  if (this.aborted) return;\n\
  this.aborted = true;\n\
  this.xhr.abort();\n\
  this.clearTimeout();\n\
  this.emit('abort');\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set header `field` to `val`, or multiple fields with one object.\n\
 *\n\
 * Examples:\n\
 *\n\
 *      req.get('/')\n\
 *        .set('Accept', 'application/json')\n\
 *        .set('X-API-Key', 'foobar')\n\
 *        .end(callback);\n\
 *\n\
 *      req.get('/')\n\
 *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\
 *        .end(callback);\n\
 *\n\
 * @param {String|Object} field\n\
 * @param {String} val\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.set = function(field, val){\n\
  if (isObject(field)) {\n\
    for (var key in field) {\n\
      this.set(key, field[key]);\n\
    }\n\
    return this;\n\
  }\n\
  this._header[field.toLowerCase()] = val;\n\
  this.header[field] = val;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Get case-insensitive header `field` value.\n\
 *\n\
 * @param {String} field\n\
 * @return {String}\n\
 * @api private\n\
 */\n\
\n\
Request.prototype.getHeader = function(field){\n\
  return this._header[field.toLowerCase()];\n\
};\n\
\n\
/**\n\
 * Set Content-Type to `type`, mapping values from `request.types`.\n\
 *\n\
 * Examples:\n\
 *\n\
 *      superagent.types.xml = 'application/xml';\n\
 *\n\
 *      request.post('/')\n\
 *        .type('xml')\n\
 *        .send(xmlstring)\n\
 *        .end(callback);\n\
 *\n\
 *      request.post('/')\n\
 *        .type('application/xml')\n\
 *        .send(xmlstring)\n\
 *        .end(callback);\n\
 *\n\
 * @param {String} type\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.type = function(type){\n\
  this.set('Content-Type', request.types[type] || type);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Set Authorization field value with `user` and `pass`.\n\
 *\n\
 * @param {String} user\n\
 * @param {String} pass\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.auth = function(user, pass){\n\
  var str = btoa(user + ':' + pass);\n\
  this.set('Authorization', 'Basic ' + str);\n\
  return this;\n\
};\n\
\n\
/**\n\
* Add query-string `val`.\n\
*\n\
* Examples:\n\
*\n\
*   request.get('/shoes')\n\
*     .query('size=10')\n\
*     .query({ color: 'blue' })\n\
*\n\
* @param {Object|String} val\n\
* @return {Request} for chaining\n\
* @api public\n\
*/\n\
\n\
Request.prototype.query = function(val){\n\
  if ('string' != typeof val) val = serialize(val);\n\
  this._query.push(val);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Send `data`, defaulting the `.type()` to \"json\" when\n\
 * an object is given.\n\
 *\n\
 * Examples:\n\
 *\n\
 *       // querystring\n\
 *       request.get('/search')\n\
 *         .end(callback)\n\
 *\n\
 *       // multiple data \"writes\"\n\
 *       request.get('/search')\n\
 *         .send({ search: 'query' })\n\
 *         .send({ range: '1..5' })\n\
 *         .send({ order: 'desc' })\n\
 *         .end(callback)\n\
 *\n\
 *       // manual json\n\
 *       request.post('/user')\n\
 *         .type('json')\n\
 *         .send('{\"name\":\"tj\"})\n\
 *         .end(callback)\n\
 *\n\
 *       // auto json\n\
 *       request.post('/user')\n\
 *         .send({ name: 'tj' })\n\
 *         .end(callback)\n\
 *\n\
 *       // manual x-www-form-urlencoded\n\
 *       request.post('/user')\n\
 *         .type('form')\n\
 *         .send('name=tj')\n\
 *         .end(callback)\n\
 *\n\
 *       // auto x-www-form-urlencoded\n\
 *       request.post('/user')\n\
 *         .type('form')\n\
 *         .send({ name: 'tj' })\n\
 *         .end(callback)\n\
 *\n\
 *       // defaults to x-www-form-urlencoded\n\
  *      request.post('/user')\n\
  *        .send('name=tobi')\n\
  *        .send('species=ferret')\n\
  *        .end(callback)\n\
 *\n\
 * @param {String|Object} data\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.send = function(data){\n\
  var obj = isObject(data);\n\
  var type = this.getHeader('Content-Type');\n\
\n\
  // merge\n\
  if (obj && isObject(this._data)) {\n\
    for (var key in data) {\n\
      this._data[key] = data[key];\n\
    }\n\
  } else if ('string' == typeof data) {\n\
    if (!type) this.type('form');\n\
    type = this.getHeader('Content-Type');\n\
    if ('application/x-www-form-urlencoded' == type) {\n\
      this._data = this._data\n\
        ? this._data + '&' + data\n\
        : data;\n\
    } else {\n\
      this._data = (this._data || '') + data;\n\
    }\n\
  } else {\n\
    this._data = data;\n\
  }\n\
\n\
  if (!obj) return this;\n\
  if (!type) this.type('json');\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Invoke the callback with `err` and `res`\n\
 * and handle arity check.\n\
 *\n\
 * @param {Error} err\n\
 * @param {Response} res\n\
 * @api private\n\
 */\n\
\n\
Request.prototype.callback = function(err, res){\n\
  var fn = this._callback;\n\
  if (2 == fn.length) return fn(err, res);\n\
  if (err) return this.emit('error', err);\n\
  fn(res);\n\
};\n\
\n\
/**\n\
 * Invoke callback with x-domain error.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Request.prototype.crossDomainError = function(){\n\
  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n\
  err.crossDomain = true;\n\
  this.callback(err);\n\
};\n\
\n\
/**\n\
 * Invoke callback with timeout error.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
Request.prototype.timeoutError = function(){\n\
  var timeout = this._timeout;\n\
  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\
  err.timeout = timeout;\n\
  this.callback(err);\n\
};\n\
\n\
/**\n\
 * Enable transmission of cookies with x-domain requests.\n\
 *\n\
 * Note that for this to work the origin must not be\n\
 * using \"Access-Control-Allow-Origin\" with a wildcard,\n\
 * and also must set \"Access-Control-Allow-Credentials\"\n\
 * to \"true\".\n\
 *\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.withCredentials = function(){\n\
  this._withCredentials = true;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Initiate request, invoking callback `fn(res)`\n\
 * with an instanceof `Response`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Request} for chaining\n\
 * @api public\n\
 */\n\
\n\
Request.prototype.end = function(fn){\n\
  var self = this;\n\
  var xhr = this.xhr = getXHR();\n\
  var query = this._query.join('&');\n\
  var timeout = this._timeout;\n\
  var data = this._data;\n\
\n\
  // store callback\n\
  this._callback = fn || noop;\n\
\n\
  // CORS\n\
  if (this._withCredentials) xhr.withCredentials = true;\n\
\n\
  // state change\n\
  xhr.onreadystatechange = function(){\n\
    if (4 != xhr.readyState) return;\n\
    if (0 == xhr.status) {\n\
      if (self.aborted) return self.timeoutError();\n\
      return self.crossDomainError();\n\
    }\n\
    self.emit('end');\n\
  };\n\
\n\
  // progress\n\
  if (xhr.upload) {\n\
    xhr.upload.onprogress = function(e){\n\
      e.percent = e.loaded / e.total * 100;\n\
      self.emit('progress', e);\n\
    };\n\
  }\n\
\n\
  // timeout\n\
  if (timeout && !this._timer) {\n\
    this._timer = setTimeout(function(){\n\
      self.abort();\n\
    }, timeout);\n\
  }\n\
\n\
  // querystring\n\
  if (query) {\n\
    query = request.serializeObject(query);\n\
    this.url += ~this.url.indexOf('?')\n\
      ? '&' + query\n\
      : '?' + query;\n\
  }\n\
\n\
  // initiate request\n\
  xhr.open(this.method, this.url, true);\n\
\n\
  // body\n\
  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n\
    // serialize stuff\n\
    var serialize = request.serialize[this.getHeader('Content-Type')];\n\
    if (serialize) data = serialize(data);\n\
  }\n\
\n\
  // set header fields\n\
  for (var field in this.header) {\n\
    if (null == this.header[field]) continue;\n\
    xhr.setRequestHeader(field, this.header[field]);\n\
  }\n\
\n\
  // send stuff\n\
  xhr.send(data);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Expose `Request`.\n\
 */\n\
\n\
request.Request = Request;\n\
\n\
/**\n\
 * Issue a request:\n\
 *\n\
 * Examples:\n\
 *\n\
 *    request('GET', '/users').end(callback)\n\
 *    request('/users').end(callback)\n\
 *    request('/users', callback)\n\
 *\n\
 * @param {String} method\n\
 * @param {String|Function} url or callback\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
function request(method, url) {\n\
  // callback\n\
  if ('function' == typeof url) {\n\
    return new Request('GET', method).end(url);\n\
  }\n\
\n\
  // url first\n\
  if (1 == arguments.length) {\n\
    return new Request('GET', method);\n\
  }\n\
\n\
  return new Request(method, url);\n\
}\n\
\n\
/**\n\
 * GET `url` with optional callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed|Function} data or fn\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.get = function(url, data, fn){\n\
  var req = request('GET', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.query(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * GET `url` with optional callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed|Function} data or fn\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.head = function(url, data, fn){\n\
  var req = request('HEAD', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.send(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * DELETE `url` with optional callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.del = function(url, fn){\n\
  var req = request('DELETE', url);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * PATCH `url` with optional `data` and callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed} data\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.patch = function(url, data, fn){\n\
  var req = request('PATCH', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.send(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * POST `url` with optional `data` and callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed} data\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.post = function(url, data, fn){\n\
  var req = request('POST', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.send(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * PUT `url` with optional `data` and callback `fn(res)`.\n\
 *\n\
 * @param {String} url\n\
 * @param {Mixed|Function} data or fn\n\
 * @param {Function} fn\n\
 * @return {Request}\n\
 * @api public\n\
 */\n\
\n\
request.put = function(url, data, fn){\n\
  var req = request('PUT', url);\n\
  if ('function' == typeof data) fn = data, data = null;\n\
  if (data) req.send(data);\n\
  if (fn) req.end(fn);\n\
  return req;\n\
};\n\
\n\
/**\n\
 * Expose `request`.\n\
 */\n\
\n\
module.exports = request;\n\
//@ sourceURL=visionmedia-superagent/lib/client.js"
));
require.register("johntron-model/lib/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var proto = require('./proto');\n\
var statics = require('./static');\n\
var Emitter = require('emitter');\n\
\n\
/**\n\
 * Expose `createModel`.\n\
 */\n\
\n\
module.exports = createModel;\n\
\n\
/**\n\
 * Create a new model constructor with the given `name`.\n\
 *\n\
 * @param {String} name\n\
 * @return {Function}\n\
 * @api public\n\
 */\n\
\n\
function createModel(name) {\n\
  if ('string' != typeof name) throw new TypeError('model name required');\n\
\n\
  /**\n\
   * Initialize a new model with the given `attrs`.\n\
   *\n\
   * @param {Object} attrs\n\
   * @api public\n\
   */\n\
\n\
  function model(attrs) {\n\
    if (!(this instanceof model)) return new model(attrs);\n\
    attrs = attrs || {};\n\
    this._callbacks = {};\n\
    this.attrs = attrs;\n\
    this.dirty = attrs;\n\
    this.model.emit('construct', this, attrs);\n\
  }\n\
\n\
  // mixin emitter\n\
\n\
  Emitter(model);\n\
\n\
  // statics\n\
\n\
  model.modelName = name;\n\
  model._base = '/' + name.toLowerCase() + 's';\n\
  model.attrs = {};\n\
  model.validators = [];\n\
  model._headers = {};\n\
  for (var key in statics) model[key] = statics[key];\n\
\n\
  // prototype\n\
\n\
  model.prototype = {};\n\
  model.prototype.model = model;\n\
  for (var key in proto) model.prototype[key] = proto[key];\n\
\n\
  return model;\n\
}\n\
\n\
//@ sourceURL=johntron-model/lib/index.js"
));
require.register("johntron-model/lib/static.js", Function("exports, require, module",
"/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Collection = require('collection');\n\
var request = require('superagent');\n\
var noop = function(){};\n\
\n\
/**\n\
 * Expose request for configuration\n\
 */\n\
\n\
exports.request = request;\n\
\n\
/**\n\
 * Construct a url to the given `path`.\n\
 *\n\
 * Example:\n\
 *\n\
 *    User.url('add')\n\
 *    // => \"/users/add\"\n\
 *\n\
 * @param {String} path\n\
 * @return {String}\n\
 * @api public\n\
 */\n\
\n\
exports.url = function(path){\n\
  var url = this._base;\n\
  if (undefined === path) return url;\n\
  return url + '/' + path;\n\
};\n\
\n\
/**\n\
 * Set base path for urls.\n\
 * Note this is defaulted to '/' + modelName.toLowerCase() + 's'\n\
 *\n\
 * Example:\n\
 *\n\
 *   User.route('/api/u')\n\
 *\n\
 * @param {String} path \n\
 * @return {Function} self\n\
 * @api public\n\
 */\n\
\n\
exports.route = function(path){\n\
  this._base = path;\n\
  return this;\n\
}\n\
\n\
/**\n\
 * Add custom http headers to all requests.\n\
 *\n\
 * Example:\n\
 *\n\
 *   User.headers({\n\
 *    'X-CSRF-Token': 'some token',\n\
 *    'X-API-Token': 'api token \n\
 *   });\n\
 *\n\
 * @param {String|Object} header(s)\n\
 * @param {String} value\n\
 * @return {Function} self\n\
 * @api public\n\
 */\n\
\n\
exports.headers = function(headers){\n\
  for(var i in headers){\n\
    this._headers[i] = headers[i];\n\
  }\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Add validation `fn()`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Function} self\n\
 * @api public\n\
 */\n\
\n\
exports.validate = function(fn){\n\
  this.validators.push(fn);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Use the given plugin `fn()`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Function} self\n\
 * @api public\n\
 */\n\
\n\
exports.use = function(fn){\n\
  fn(this);\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Define attr with the given `name` and `options`.\n\
 *\n\
 * @param {String} name\n\
 * @param {Object} options\n\
 * @return {Function} self\n\
 * @api public\n\
 */\n\
\n\
exports.attr = function(name, options){\n\
  this.attrs[name] = options || {};\n\
\n\
  // implied pk\n\
  if ('_id' == name || 'id' == name) {\n\
    this.attrs[name].primaryKey = true;\n\
    this.primaryKey = name;\n\
  }\n\
\n\
  // getter / setter method\n\
  this.prototype[name] = function(val){\n\
    if (0 == arguments.length) return this.attrs[name];\n\
    var prev = this.attrs[name];\n\
    this.dirty[name] = val;\n\
    this.attrs[name] = val;\n\
    this.model.emit('change', this, name, val, prev);\n\
    this.model.emit('change ' + name, this, val, prev);\n\
    this.emit('change', name, val, prev);\n\
    this.emit('change ' + name, val, prev);\n\
    return this;\n\
  };\n\
\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Remove all and invoke `fn(err)`.\n\
 *\n\
 * @param {Function} [fn]\n\
 * @api public\n\
 */\n\
\n\
exports.destroyAll = function(fn){\n\
  fn = fn || noop;\n\
  var self = this;\n\
  var url = this.url('');\n\
  this.request\n\
    .del(url)\n\
    .set(this._headers)\n\
    .end(function(res){\n\
      if (res.error) return fn(error(res), null, res);\n\
      fn(null, [], res);\n\
    });\n\
};\n\
\n\
/**\n\
 * Get all and invoke `fn(err, array)`.\n\
 *\n\
 * @param {Function} fn\n\
 * @api public\n\
 */\n\
\n\
exports.all = function(fn){\n\
  var self = this;\n\
  var url = this.url('');\n\
  this.request\n\
    .get(url)\n\
    .set(this._headers)\n\
    .end(function(res){\n\
      if (res.error) return fn(error(res), null, res);\n\
      var col = new Collection;\n\
      for (var i = 0, len = res.body.length; i < len; ++i) {\n\
        col.push(new self(res.body[i]));\n\
      }\n\
      fn(null, col, res);\n\
    });\n\
};\n\
\n\
/**\n\
 * Get `id` and invoke `fn(err, model)`.\n\
 *\n\
 * @param {Mixed} id\n\
 * @param {Function} fn\n\
 * @api public\n\
 */\n\
\n\
exports.get = function(id, fn){\n\
  var self = this;\n\
  var url = this.url(id);\n\
  this.request\n\
    .get(url)\n\
    .set(this._headers)\n\
    .end(function(res){\n\
      if (res.error) return fn(error(res), null, res);\n\
      var model = new self(res.body);\n\
      fn(null, model, res);\n\
    });\n\
};\n\
\n\
/**\n\
 * Response error helper.\n\
 *\n\
 * @param {Response} er\n\
 * @return {Error}\n\
 * @api private\n\
 */\n\
\n\
function error(res) {\n\
  return new Error('got ' + res.status + ' response');\n\
}\n\
//@ sourceURL=johntron-model/lib/static.js"
));
require.register("johntron-model/lib/proto.js", Function("exports, require, module",
"\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var Emitter = require('emitter');\n\
var request = require('superagent');\n\
var each = require('each');\n\
var noop = function(){};\n\
\n\
/**\n\
 * Mixin emitter.\n\
 */\n\
\n\
Emitter(exports);\n\
\n\
/**\n\
 * Expose request for configuration\n\
 */\n\
exports.request = request;\n\
\n\
/**\n\
 * Register an error `msg` on `attr`.\n\
 *\n\
 * @param {String} attr\n\
 * @param {String} msg\n\
 * @return {Object} self\n\
 * @api public\n\
 */\n\
\n\
exports.error = function(attr, msg){\n\
  this.errors.push({\n\
    attr: attr,\n\
    message: msg\n\
  });\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Check if this model is new.\n\
 *\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
exports.isNew = function(){\n\
  var key = this.model.primaryKey;\n\
  return ! this.has(key);\n\
};\n\
\n\
/**\n\
 * Get / set the primary key.\n\
 *\n\
 * @param {Mixed} val\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
exports.primary = function(val){\n\
  var key = this.model.primaryKey;\n\
  if (0 == arguments.length) return this[key]();\n\
  return this[key](val);\n\
};\n\
\n\
/**\n\
 * Validate the model and return a boolean.\n\
 *\n\
 * Example:\n\
 *\n\
 *    user.isValid()\n\
 *    // => false\n\
 *\n\
 *    user.errors\n\
 *    // => [{ attr: ..., message: ... }]\n\
 *\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
exports.isValid = function(){\n\
  this.validate();\n\
  return 0 == this.errors.length;\n\
};\n\
\n\
/**\n\
 * Return `false` or an object\n\
 * containing the \"dirty\" attributes.\n\
 *\n\
 * Optionally check for a specific `attr`.\n\
 *\n\
 * @param {String} [attr]\n\
 * @return {Object|Boolean}\n\
 * @api public\n\
 */\n\
\n\
exports.changed = function(attr){\n\
  var dirty = this.dirty;\n\
  if (Object.keys(dirty).length) {\n\
    if (attr) return !! dirty[attr];\n\
    return dirty;\n\
  }\n\
  return false;\n\
};\n\
\n\
/**\n\
 * Perform validations.\n\
 *\n\
 * @api private\n\
 */\n\
\n\
exports.validate = function(){\n\
  var self = this;\n\
  var fns = this.model.validators;\n\
  this.errors = [];\n\
  each(fns, function(fn){ fn(self) });\n\
};\n\
\n\
/**\n\
 * Destroy the model and mark it as `.destroyed`\n\
 * and invoke `fn(err)`.\n\
 *\n\
 * Events:\n\
 *\n\
 *  - `destroying` before deletion\n\
 *  - `destroy` on deletion\n\
 *\n\
 * @param {Function} [fn]\n\
 * @api public\n\
 */\n\
\n\
exports.destroy = function(fn){\n\
  fn = fn || noop;\n\
  if (this.isNew()) return fn(new Error('not saved'));\n\
  var self = this;\n\
  var url = this.url();\n\
  this.model.emit('destroying', this);\n\
  this.emit('destroying');\n\
  this.request\n\
    .del(url)\n\
    .set(this.model._headers)\n\
    .end(function(res){\n\
      if (res.error) return fn(error(res), res);\n\
      self.destroyed = true;\n\
      self.model.emit('destroy', self, res);\n\
      self.emit('destroy');\n\
      fn(null, res);\n\
    });\n\
};\n\
\n\
/**\n\
 * Save and invoke `fn(err)`.\n\
 *\n\
 * Events:\n\
 *\n\
 *  - `saving` pre-update or save, after validation\n\
 *  - `save` on updates and saves\n\
 *\n\
 * @param {Function} [fn]\n\
 * @api public\n\
 */\n\
\n\
exports.save = function(fn){\n\
  if (!this.isNew()) return this.update(fn);\n\
  var self = this;\n\
  var url = this.model.url();\n\
  var key = this.model.primaryKey;\n\
  fn = fn || noop;\n\
  if (!this.isValid()) return fn(new Error('validation failed'));\n\
  this.model.emit('saving', this);\n\
  this.emit('saving');\n\
  this.request\n\
    .post(url)\n\
    .set(this.model._headers)\n\
    .send(self)\n\
    .end(function(res){\n\
      if (res.error) return fn(error(res), res);\n\
      if (res.body && key) self.primary(res.body[key]);\n\
      self.dirty = {};\n\
      self.model.emit('save', self, res);\n\
      self.emit('save');\n\
      fn(null, res);\n\
    });\n\
};\n\
\n\
/**\n\
 * Update and invoke `fn(err)`.\n\
 *\n\
 * @param {Function} [fn]\n\
 * @api private\n\
 */\n\
\n\
exports.update = function(fn){\n\
  var self = this;\n\
  var url = this.url();\n\
  fn = fn || noop;\n\
  if (!this.isValid()) return fn(new Error('validation failed'));\n\
  this.model.emit('saving', this);\n\
  this.emit('saving');\n\
  this.request\n\
    .put(url)\n\
    .set(this.model._headers)\n\
    .send(self)\n\
    .end(function(res){\n\
      if (res.error) return fn(error(res), res);\n\
      self.dirty = {};\n\
      self.model.emit('save', self, res);\n\
      self.emit('save');\n\
      fn(null, res);\n\
    });\n\
};\n\
\n\
/**\n\
 * Return a url for `path` relative to this model.\n\
 *\n\
 * Example:\n\
 *\n\
 *    var user = new User({ id: 5 });\n\
 *    user.url('edit');\n\
 *    // => \"/users/5/edit\"\n\
 *\n\
 * @param {String} path\n\
 * @return {String}\n\
 * @api public\n\
 */\n\
\n\
exports.url = function(path){\n\
  var model = this.model;\n\
  var url = model._base;\n\
  var id = this.primary();\n\
  if (0 == arguments.length) return url + '/' + id;\n\
  return url + '/' + id + '/' + path;\n\
};\n\
\n\
/**\n\
 * Set multiple `attrs`.\n\
 *\n\
 * @param {Object} attrs\n\
 * @return {Object} self\n\
 * @api public\n\
 */\n\
\n\
exports.set = function(attrs){\n\
  for (var key in attrs) {\n\
    this[key](attrs[key]);\n\
  }\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Get `attr` value.\n\
 *\n\
 * @param {String} attr\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
exports.get = function(attr){\n\
  return this.attrs[attr];\n\
};\n\
\n\
/**\n\
 * Check if `attr` is present (not `null` or `undefined`).\n\
 *\n\
 * @param {String} attr\n\
 * @return {Boolean}\n\
 * @api public\n\
 */\n\
\n\
exports.has = function(attr){\n\
  return null != this.attrs[attr];\n\
};\n\
\n\
/**\n\
 * Return the JSON representation of the model.\n\
 *\n\
 * @return {Object}\n\
 * @api public\n\
 */\n\
\n\
exports.toJSON = function(){\n\
  return this.attrs;\n\
};\n\
\n\
/**\n\
 * Response error helper.\n\
 *\n\
 * @param {Response} er\n\
 * @return {Error}\n\
 * @api private\n\
 */\n\
\n\
function error(res) {\n\
  return new Error('got ' + res.status + ' response');\n\
}\n\
//@ sourceURL=johntron-model/lib/proto.js"
));
require.register("component-clone/index.js", Function("exports, require, module",
"/**\n\
 * Module dependencies.\n\
 */\n\
\n\
try {\n\
  var type = require('type');\n\
} catch (e) {\n\
  var type = require('type-component');\n\
}\n\
\n\
/**\n\
 * Module exports.\n\
 */\n\
\n\
module.exports = clone;\n\
\n\
/**\n\
 * Clones objects.\n\
 *\n\
 * @param {Mixed} any object\n\
 * @api public\n\
 */\n\
\n\
function clone(obj){\n\
  switch (type(obj)) {\n\
    case 'object':\n\
      var copy = {};\n\
      for (var key in obj) {\n\
        if (obj.hasOwnProperty(key)) {\n\
          copy[key] = clone(obj[key]);\n\
        }\n\
      }\n\
      return copy;\n\
\n\
    case 'array':\n\
      var copy = new Array(obj.length);\n\
      for (var i = 0, l = obj.length; i < l; i++) {\n\
        copy[i] = clone(obj[i]);\n\
      }\n\
      return copy;\n\
\n\
    case 'regexp':\n\
      // from millermedeiros/amd-utils - MIT\n\
      var flags = '';\n\
      flags += obj.multiline ? 'm' : '';\n\
      flags += obj.global ? 'g' : '';\n\
      flags += obj.ignoreCase ? 'i' : '';\n\
      return new RegExp(obj.source, flags);\n\
\n\
    case 'date':\n\
      return new Date(obj.getTime());\n\
\n\
    default: // string, number, boolean, …\n\
      return obj;\n\
  }\n\
}\n\
//@ sourceURL=component-clone/index.js"
));
require.register("manuelstofer-each/index.js", Function("exports, require, module",
"\"use strict\";\n\
\n\
var nativeForEach = [].forEach;\n\
\n\
// Underscore's each function\n\
module.exports = function (obj, iterator, context) {\n\
    if (obj == null) return;\n\
    if (nativeForEach && obj.forEach === nativeForEach) {\n\
        obj.forEach(iterator, context);\n\
    } else if (obj.length === +obj.length) {\n\
        for (var i = 0, l = obj.length; i < l; i++) {\n\
            if (iterator.call(context, obj[i], i, obj) === {}) return;\n\
        }\n\
    } else {\n\
        for (var key in obj) {\n\
            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\
                if (iterator.call(context, obj[key], key, obj) === {}) return;\n\
            }\n\
        }\n\
    }\n\
};\n\
//@ sourceURL=manuelstofer-each/index.js"
));
require.register("manuelstofer-is/index.js", Function("exports, require, module",
"\"use strict\";\n\
var each = require('each'),\n\
    toString = Object.prototype.toString,\n\
    types = ['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Array'];\n\
\n\
each(types, function (type) {\n\
    module.exports[type.toLowerCase()] = function (obj) {\n\
        return toString.call(obj) === '[object ' + type + ']';\n\
    };\n\
});\n\
\n\
if (Array.isArray) {\n\
    module.exports.array = Array.isArray;\n\
}\n\
\n\
module.exports.object = function (obj) {\n\
    return obj === Object(obj);\n\
};\n\
\n\
//@ sourceURL=manuelstofer-is/index.js"
));
require.register("segmentio-model-defaults/index.js", Function("exports, require, module",
"\n\
try {\n\
  var clone = require('clone');\n\
  var each = require('each');\n\
  var type = require('type');\n\
} catch (e) {\n\
  var clone = require('clone-component');\n\
  var each = require('each-component');\n\
  var type = require('component-type');\n\
}\n\
\n\
var is = require('is');\n\
\n\
/**\n\
 * Plugin.\n\
 *\n\
 * @param {Function|Object} values  The default values dictionary or the Model.\n\
 */\n\
\n\
module.exports = function (values) {\n\
  if ('object' === type(values)) {\n\
    return function (Model) {\n\
      bind(Model, values);\n\
    };\n\
  } else {\n\
    return bind(values);\n\
  }\n\
};\n\
\n\
\n\
/**\n\
 * Bind to the model's construct event.\n\
 *\n\
 * @param {Function} Model  The model constructor.\n\
 */\n\
\n\
function bind (Model, defaults) {\n\
  defaults || (defaults = {});\n\
  Model.on('construct', function (model, attrs) {\n\
    each(Model.attrs, function (key, options) {\n\
      var value = undefined != options.default\n\
        ? options.default\n\
        : defaults[key];\n\
\n\
      if (value !== undefined) apply(model, key, value);\n\
    });\n\
  });\n\
}\n\
\n\
\n\
/**\n\
 * Default a `model` with a `value` for a `key` if it doesn't exist. Use a clone\n\
 * of the value if it is not passed from a function, so that it's\n\
 * easy to declare objects and arrays without worrying about copying by reference.\n\
 *\n\
 * @param {Model}          model  The model.\n\
 * @param {String}         key    The key to back by a default.\n\
 * @param {Mixed|Function} value  The default value to use.\n\
 */\n\
\n\
function apply (model, key, value) {\n\
  if(model[key]() !== undefined) return;\n\
  value = is.function(value) ? value.call(model) : clone(value);\n\
  model[key](value);\n\
}\n\
//@ sourceURL=segmentio-model-defaults/index.js"
));
require.register("device-model/index.js", Function("exports, require, module",
"var noop = function () {},\n\
    DeviceModelError = require('./error.js'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    status_url = require('utility-functions').getConfigSetting(\"devices_status\"),\n\
    model = require('model'),\n\
    defaults = require('model-defaults'),\n\
    devices = [],\n\
    DeviceModel = model('DeviceModel')\n\
        .use(defaults)\n\
        .route(status_url)\n\
        .attr('id');\n\
\n\
DeviceModel.primaryKey = \"id\";\n\
\n\
function factory(id) {\n\
    if (devices[id]) {\n\
        return devices[id]; // Short-circuit\n\
    }\n\
\n\
    var device = new DeviceModel();\n\
    device.id(id);\n\
    device.last_updated = null;\n\
    devices[id] = device;\n\
\n\
    return device;\n\
}\n\
\n\
DeviceModel.prototype.get = function (callback) {\n\
    callback = callback || noop;\n\
\n\
    var self = this;\n\
\n\
    function handle(err, response) {\n\
        var error,\n\
            device;\n\
\n\
        if (err || 'FAILURE' === response.body.result) {\n\
            error = new DeviceModelError('Error getting status for device ' + self.id() + ': ' + (err || JSON.stringify(response)));\n\
            callback(error);\n\
            return; // Short-circuit\n\
        }\n\
\n\
        device = response.body[0];\n\
\n\
        self.set(device);\n\
        self.last_updated = new Date();\n\
\n\
        callback(null, device);\n\
    }\n\
\n\
    request.get(self.url(self.id()))\n\
        .use(no_cache)\n\
        .end(handle);\n\
};\n\
\n\
DeviceModel.url = function (path) {\n\
    var url = this._base;\n\
    if (undefined === path) return url;\n\
\n\
    if (!isNaN(path)) {\n\
        return url + '?device_ids[]=' + path;\n\
    }\n\
\n\
    return url + '/' + path;\n\
};\n\
\n\
\n\
// Export a facade\n\
module.exports = {\n\
    factory: factory\n\
};\n\
//@ sourceURL=device-model/index.js"
));
require.register("device-model/error.js", Function("exports, require, module",
"function DeviceModelError(message) {\n\
    this.name = 'DeviceModelError';\n\
    this.message = message;\n\
    this.stack = (new Error()).stack;\n\
}\n\
DeviceModelError.prototype = new Error();\n\
\n\
module.exports = DeviceModelError;\n\
//@ sourceURL=device-model/error.js"
));
require.register("component-domify/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Expose `parse`.\n\
 */\n\
\n\
module.exports = parse;\n\
\n\
/**\n\
 * Wrap map from jquery.\n\
 */\n\
\n\
var map = {\n\
  legend: [1, '<fieldset>', '</fieldset>'],\n\
  tr: [2, '<table><tbody>', '</tbody></table>'],\n\
  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n\
  _default: [0, '', '']\n\
};\n\
\n\
map.td =\n\
map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\
\n\
map.option =\n\
map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\
\n\
map.thead =\n\
map.tbody =\n\
map.colgroup =\n\
map.caption =\n\
map.tfoot = [1, '<table>', '</table>'];\n\
\n\
map.text =\n\
map.circle =\n\
map.ellipse =\n\
map.line =\n\
map.path =\n\
map.polygon =\n\
map.polyline =\n\
map.rect = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\
\n\
/**\n\
 * Parse `html` and return the children.\n\
 *\n\
 * @param {String} html\n\
 * @return {Array}\n\
 * @api private\n\
 */\n\
\n\
function parse(html) {\n\
  if ('string' != typeof html) throw new TypeError('String expected');\n\
\n\
  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\
\n\
  // tag name\n\
  var m = /<([\\w:]+)/.exec(html);\n\
  if (!m) return document.createTextNode(html);\n\
  var tag = m[1];\n\
\n\
  // body support\n\
  if (tag == 'body') {\n\
    var el = document.createElement('html');\n\
    el.innerHTML = html;\n\
    return el.removeChild(el.lastChild);\n\
  }\n\
\n\
  // wrap map\n\
  var wrap = map[tag] || map._default;\n\
  var depth = wrap[0];\n\
  var prefix = wrap[1];\n\
  var suffix = wrap[2];\n\
  var el = document.createElement('div');\n\
  el.innerHTML = prefix + html + suffix;\n\
  while (depth--) el = el.lastChild;\n\
\n\
  // one element\n\
  if (el.firstChild == el.lastChild) {\n\
    return el.removeChild(el.firstChild);\n\
  }\n\
\n\
  // several elements\n\
  var fragment = document.createDocumentFragment();\n\
  while (el.firstChild) {\n\
    fragment.appendChild(el.removeChild(el.firstChild));\n\
  }\n\
\n\
  return fragment;\n\
}\n\
//@ sourceURL=component-domify/index.js"
));
require.register("capture-filter-chooser/index.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    template = require('./template.js'),\n\
    event = require('event'),\n\
    emitter = require('emitter'),\n\
    classes = require('classes');\n\
var mobile = {};\n\
    mobile.isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|windows phone/i.test(navigator.userAgent);\n\
\n\
function CaptureFilterChooser(string) {\n\
    this.$el = domify(template);\n\
    this.current_filter = string || '';\n\
    this.presets = {\n\
        \"TCP only\": \"tcp\",\n\
        \"IP only\": \"ip\",\n\
        \"No DNS\": \"tcp port not 53 and udp port not 53\",\n\
        \"IPv4 address only\": \"ip host 1.2.3.4\",\n\
        \"IPv6 address only\": \"ip6 host 2001::2\",\n\
        \"Host (MAC) address only\": \"xx:xx:xx:xx:xx:xx\",\n\
        \"TCP port\": \"tcp port 80\",\n\
        \"Only web traffic\": \"tcp port 80 or tcp port 443\",\n\
        \"Multiple hosts\": \"ip host a or ip6 host b\",\n\
        \"Source port\": \"tcp src port 1000\",\n\
        \"Traffic between hosts\": \"(ip src a and ip dst b) or (ip src b and ip dst a)\"\n\
    };\n\
}\n\
\n\
emitter(CaptureFilterChooser.prototype);\n\
\n\
CaptureFilterChooser.prototype.set = function (string) {\n\
    this.current_filter = string;\n\
};\n\
CaptureFilterChooser.prototype.get = function () {\n\
    return this.current_filter;\n\
};\n\
\n\
CaptureFilterChooser.prototype.render = function () {\n\
    var $presets = this.$el.querySelector('.presets'),\n\
        presets = this.presets,\n\
        label,\n\
        current_filter = this.current_filter,\n\
        filter_string,\n\
        $choice;\n\
\n\
    if(mobile.isMobile){\n\
        $($presets).removeAttr(\"multiple\");\n\
        $($presets).css(\"height\",\"2em\");\n\
    }\n\
\n\
    $presets.innerHTML = '';\n\
\n\
    for (label in presets) {\n\
        if (presets.hasOwnProperty(label)) {\n\
            filter_string = presets[label];\n\
            $choice = domify('<option></option>');\n\
            $choice.innerHTML = label;\n\
            $choice.value = filter_string;\n\
            $choice.selected = current_filter.trim() === filter_string;\n\
            $presets.add($choice);\n\
        }\n\
    }\n\
\n\
    this.bind();\n\
\n\
    return this.$el;\n\
};\n\
\n\
CaptureFilterChooser.prototype.show = function () {\n\
    classes(this.$el).remove('hidden');\n\
};\n\
\n\
CaptureFilterChooser.prototype.hide = function () {\n\
    classes(this.$el).add('hidden');\n\
};\n\
\n\
CaptureFilterChooser.prototype.bind = function () {\n\
    var select = this.select.bind(this),\n\
        $cancel = this.$el.querySelector('.cancel'),\n\
        hide = this.hide.bind(this),\n\
        $done = this.$el.querySelector('.done');\n\
\n\
    event.bind($done, 'click', select);\n\
    event.bind($cancel, 'click', hide);\n\
};\n\
\n\
CaptureFilterChooser.prototype.select = function () {\n\
    var $presets = this.$el.querySelector('select.presets'),\n\
        i = $presets.options.selectedIndex,\n\
        $selected;\n\
\n\
    if (i !== -1) {\n\
        $selected = $presets.options.item(i);\n\
        this.filter_string = $selected.value;\n\
        this.emit('select', this.filter_string);\n\
    }\n\
};\n\
\n\
CaptureFilterChooser.prototype.remove = function () {\n\
    this.$el.parentNode.removeChild(this.$el);\n\
};\n\
\n\
module.exports = CaptureFilterChooser;//@ sourceURL=capture-filter-chooser/index.js"
));
require.register("capture-filter-chooser/template.js", Function("exports, require, module",
"module.exports = '<div class=\"capture-filter-chooser\">\\n\
    <div>\\n\
        <div>\\n\
            <h1>Choose a capture filter</h1>\\n\
            <button class=\"done button dark\">Done</button>\\n\
            <button class=\"cancel button dark\">Cancel</button>\\n\
        </div>\\n\
        <select multiple class=\"presets\"></select>\\n\
    </div>\\n\
</div>';//@ sourceURL=capture-filter-chooser/template.js"
));
require.register("johntron-trigger-event/index.js", Function("exports, require, module",
"module.exports = trigger;\n\
\n\
/** \n\
  Event type mappings.\n\
  This is not an exhaustive list, feel free to fork and contribute more.\n\
  Namely keyboard events are not currently supported.\n\
*/\n\
var eventTypes = {\n\
  load:        'HTMLEvents', \n\
  unload:      'HTMLEvents', \n\
  abort:       'HTMLEvents', \n\
  error:       'HTMLEvents', \n\
  select:      'HTMLEvents', \n\
  change:      'HTMLEvents', \n\
  submit:      'HTMLEvents', \n\
  reset:       'HTMLEvents', \n\
  focus:       'HTMLEvents', \n\
  blur:        'HTMLEvents', \n\
  resize:      'HTMLEvents', \n\
  scroll:      'HTMLEvents', \n\
  input:       'HTMLEvents',\n\
\n\
  keyup:\t   'KeyboardEvent',\n\
  keydown:\t   'KeyboardEvent',\n\
  \n\
  click:       'MouseEvents',\n\
  dblclick:    'MouseEvents', \n\
  mousedown:   'MouseEvents', \n\
  mouseup:     'MouseEvents', \n\
  mouseover:   'MouseEvents', \n\
  mousemove:   'MouseEvents', \n\
  mouseout:    'MouseEvents',\n\
  contextmenu: 'MouseEvents'\n\
};\n\
\n\
// Default event properties:\n\
var defaults = {\n\
  clientX: 0,\n\
  clientY: 0,\n\
  button: 0,\n\
  ctrlKey: false,\n\
  altKey: false,\n\
  shiftKey: false,\n\
  metaKey: false,\n\
  bubbles: true,\n\
  cancelable: true,\n\
  view: null,\n\
  key: '',\n\
  location: 0,\n\
  modifiers: '',\n\
  repeat: 0,\n\
  locale: ''\n\
};\n\
\n\
/**\n\
 * Trigger a DOM event.\n\
 * \n\
 *    trigger(document.body, \"click\", {clientX: 10, clientY: 35});\n\
 *\n\
 * Where sensible, sane defaults will be filled in.  See the list of event\n\
 * types for supported events.\n\
 *\n\
 * Loosely based on:\n\
 * https://github.com/kangax/protolicious/blob/master/event.simulate.js\n\
 */\n\
function trigger(el, name, options){\n\
  var event, type;\n\
  \n\
  options = options || {};\n\
  for (var attr in defaults) {\n\
\t  if (!options.hasOwnProperty(attr)) {\n\
\t\t  options[attr] = defaults[attr];\n\
\t  }\n\
  }\n\
  \n\
  if (document.createEvent) {\n\
    // Standard Event\n\
    type = eventTypes[name] || 'CustomEvent';\n\
    event = document.createEvent(type);\n\
    initializers[type](el, name, event, options);\n\
    el.dispatchEvent(event);\n\
  } else {\n\
    // IE Event\n\
    event = document.createEventObject();\n\
    for (var key in options){\n\
      event[key] = options[key];\n\
    }\n\
    el.fireEvent('on' + name, event);\n\
  }\n\
}\n\
\n\
var initializers = {\n\
  HTMLEvents: function(el, name, event, o){\n\
    return event.initEvent(name, o.bubbles, o.cancelable);\n\
  },\n\
  KeyboardEvent: function(el, name, event, o){\n\
\t// This is still incomplete, but useful for unit testing\n\
    if (event.initKeyboardEvent) {\n\
\t\treturn event.initKeyboardEvent(\n\
\t\t\tname,\n\
\t\t\to.bubbles,\n\
\t\t\to.cancelable,\n\
\t\t\to.view,\n\
\t\t\t'' + o.key,\n\
\t\t\to.location,\n\
\t\t\to.modifiers,\n\
\t\t\to.repeat,\n\
\t\t\to.locale\n\
\t\t);\n\
\t} else {\n\
\t\treturn event.initKeyEvent(\n\
\t\t\tname,\n\
\t\t\to.bubbles,\n\
\t\t\to.cancelable,\n\
\t\t\to.view,\n\
\t\t\to.ctrlKey,\n\
\t\t\to.altKey,\n\
\t\t\to.shiftKey,\n\
\t\t\to.metaKey,\n\
\t\t\to.key,\n\
\t\t\to.key\n\
\t\t);\n\
\t}\n\
  },\n\
  MouseEvents: function(el, name, event, o){\n\
    var screenX = ('screenX' in o) ? o.screenX : o.clientX;\n\
    var screenY = ('screenY' in o) ? o.screenY : o.clientY;\n\
    var clicks;\n\
    var button;\n\
    \n\
    if ('detail' in o) {\n\
      clicks = o.detail;\n\
    } else if (name === 'dblclick') {\n\
      clicks = 2;\n\
    } else {\n\
      clicks = 1;\n\
    }\n\
    \n\
    // Default context menu to be a right click\n\
    if (name === 'contextmenu') {\n\
      button = button = o.button || 2;\n\
    }\n\
    \n\
    return event.initMouseEvent(name, o.bubbles, o.cancelable, document.defaultView, \n\
          clicks, screenX, screenY, o.clientX, o.clientY,\n\
          o.ctrlKey, o.altKey, o.shiftKey, o.metaKey, button, el);\n\
  },\n\
  CustomEvent: function(el, name, event, o){\n\
    return event.initCustomEvent(name, o.bubbles, o.cancelable, o.detail);\n\
  }\n\
};\n\
//@ sourceURL=johntron-trigger-event/index.js"
));
require.register("matthewmueller-debounce/index.js", Function("exports, require, module",
"/**\n\
 * Debounces a function by the given threshold.\n\
 *\n\
 * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n\
 * @param {Function} function to wrap\n\
 * @param {Number} timeout in ms (`100`)\n\
 * @param {Boolean} whether to execute at the beginning (`true`)\n\
 * @api public\n\
 */\n\
\n\
module.exports = function debounce(func, threshold, execAsap){\n\
  var timeout;\n\
  if (false !== execAsap) execAsap = true;\n\
\n\
  return function debounced(){\n\
    var obj = this, args = arguments;\n\
\n\
    function delayed () {\n\
      if (!execAsap) {\n\
        func.apply(obj, args);\n\
      }\n\
      timeout = null;\n\
    }\n\
\n\
    if (timeout) {\n\
      clearTimeout(timeout);\n\
    } else if (execAsap) {\n\
      func.apply(obj, args);\n\
    }\n\
\n\
    timeout = setTimeout(delayed, threshold || 100);\n\
  };\n\
};\n\
//@ sourceURL=matthewmueller-debounce/index.js"
));
require.register("component-trim/index.js", Function("exports, require, module",
"\n\
exports = module.exports = trim;\n\
\n\
function trim(str){\n\
  if (str.trim) return str.trim();\n\
  return str.replace(/^\\s*|\\s*$/g, '');\n\
}\n\
\n\
exports.left = function(str){\n\
  if (str.trimLeft) return str.trimLeft();\n\
  return str.replace(/^\\s*/, '');\n\
};\n\
\n\
exports.right = function(str){\n\
  if (str.trimRight) return str.trimRight();\n\
  return str.replace(/\\s*$/, '');\n\
};\n\
//@ sourceURL=component-trim/index.js"
));
require.register("component-value/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Module dependencies.\n\
 */\n\
\n\
var typeOf = require('type');\n\
\n\
/**\n\
 * Set or get `el`'s' value.\n\
 *\n\
 * @param {Element} el\n\
 * @param {Mixed} val\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
module.exports = function(el, val){\n\
  if (2 == arguments.length) return set(el, val);\n\
  return get(el);\n\
};\n\
\n\
/**\n\
 * Get `el`'s value.\n\
 */\n\
\n\
function get(el) {\n\
  switch (type(el)) {\n\
    case 'checkbox':\n\
    case 'radio':\n\
      if (el.checked) {\n\
        var attr = el.getAttribute('value');\n\
        return null == attr ? true : attr;\n\
      } else {\n\
        return false;\n\
      }\n\
    case 'radiogroup':\n\
      for (var i = 0, radio; radio = el[i]; i++) {\n\
        if (radio.checked) return radio.value;\n\
      }\n\
      break;\n\
    case 'select':\n\
      for (var i = 0, option; option = el.options[i]; i++) {\n\
        if (option.selected) return option.value;\n\
      }\n\
      break;\n\
    default:\n\
      return el.value;\n\
  }\n\
}\n\
\n\
/**\n\
 * Set `el`'s value.\n\
 */\n\
\n\
function set(el, val) {\n\
  switch (type(el)) {\n\
    case 'checkbox':\n\
    case 'radio':\n\
      if (val) {\n\
        el.checked = true;\n\
      } else {\n\
        el.checked = false;\n\
      }\n\
      break;\n\
    case 'radiogroup':\n\
      for (var i = 0, radio; radio = el[i]; i++) {\n\
        radio.checked = radio.value === val;\n\
      }\n\
      break;\n\
    case 'select':\n\
      for (var i = 0, option; option = el.options[i]; i++) {\n\
        option.selected = option.value === val;\n\
      }\n\
      break;\n\
    default:\n\
      el.value = val;\n\
  }\n\
}\n\
\n\
/**\n\
 * Element type.\n\
 */\n\
\n\
function type(el) {\n\
  var group = 'array' == typeOf(el) || 'object' == typeOf(el);\n\
  if (group) el = el[0];\n\
  var name = el.nodeName.toLowerCase();\n\
  var type = el.getAttribute('type');\n\
\n\
  if (group && type && 'radio' == type.toLowerCase()) return 'radiogroup';\n\
  if ('input' == name && type && 'checkbox' == type.toLowerCase()) return 'checkbox';\n\
  if ('input' == name && type && 'radio' == type.toLowerCase()) return 'radio';\n\
  if ('select' == name) return 'select';\n\
  return name;\n\
}\n\
//@ sourceURL=component-value/index.js"
));
require.register("component-bind/index.js", Function("exports, require, module",
"/**\n\
 * Slice reference.\n\
 */\n\
\n\
var slice = [].slice;\n\
\n\
/**\n\
 * Bind `obj` to `fn`.\n\
 *\n\
 * @param {Object} obj\n\
 * @param {Function|String} fn or string\n\
 * @return {Function}\n\
 * @api public\n\
 */\n\
\n\
module.exports = function(obj, fn){\n\
  if ('string' == typeof fn) fn = obj[fn];\n\
  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\
  var args = slice.call(arguments, 2);\n\
  return function(){\n\
    return fn.apply(obj, args.concat(slice.call(arguments)));\n\
  }\n\
};\n\
//@ sourceURL=component-bind/index.js"
));
require.register("segmentio-bind-all/index.js", Function("exports, require, module",
"\n\
try {\n\
  var bind = require('bind');\n\
  var type = require('type');\n\
} catch (e) {\n\
  var bind = require('bind-component');\n\
  var type = require('type-component');\n\
}\n\
\n\
module.exports = function (obj) {\n\
  for (var key in obj) {\n\
    var val = obj[key];\n\
    if (type(val) === 'function') obj[key] = bind(obj, obj[key]);\n\
  }\n\
  return obj;\n\
};//@ sourceURL=segmentio-bind-all/index.js"
));
require.register("ianstormtaylor-bind/index.js", Function("exports, require, module",
"\n\
try {\n\
  var bind = require('bind');\n\
} catch (e) {\n\
  var bind = require('bind-component');\n\
}\n\
\n\
var bindAll = require('bind-all');\n\
\n\
\n\
/**\n\
 * Expose `bind`.\n\
 */\n\
\n\
module.exports = exports = bind;\n\
\n\
\n\
/**\n\
 * Expose `bindAll`.\n\
 */\n\
\n\
exports.all = bindAll;\n\
\n\
\n\
/**\n\
 * Expose `bindMethods`.\n\
 */\n\
\n\
exports.methods = bindMethods;\n\
\n\
\n\
/**\n\
 * Bind `methods` on `obj` to always be called with the `obj` as context.\n\
 *\n\
 * @param {Object} obj\n\
 * @param {String} methods...\n\
 */\n\
\n\
function bindMethods (obj, methods) {\n\
  methods = [].slice.call(arguments, 1);\n\
  for (var i = 0, method; method = methods[i]; i++) {\n\
    obj[method] = bind(obj, obj[method]);\n\
  }\n\
  return obj;\n\
}//@ sourceURL=ianstormtaylor-bind/index.js"
));
require.register("segmentio-is-email/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Expose `isEmail`.\n\
 */\n\
\n\
module.exports = isEmail;\n\
\n\
\n\
/**\n\
 * Email address matcher.\n\
 */\n\
\n\
var matcher = /.+\\@.+\\..+/;\n\
\n\
\n\
/**\n\
 * Loosely validate an email address.\n\
 *\n\
 * @param {String} string\n\
 * @return {Boolean}\n\
 */\n\
\n\
function isEmail (string) {\n\
  return matcher.test(string);\n\
}//@ sourceURL=segmentio-is-email/index.js"
));
require.register("segmentio-is-hex-color/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Expose `isHexColor`.\n\
 */\n\
\n\
module.exports = isHexColor;\n\
\n\
\n\
/**\n\
 * Hex color matcher.\n\
 */\n\
\n\
var matcher = /^#[a-f0-9]{3}([a-f0-9]{3})?$/i;\n\
\n\
\n\
/**\n\
 * Check whether a `string` is a hex color.\n\
 *\n\
 * @param {String} string\n\
 * @return {Boolean}\n\
 */\n\
\n\
function isHexColor (string) {\n\
  return matcher.test(string);\n\
}//@ sourceURL=segmentio-is-hex-color/index.js"
));
require.register("segmentio-is-hsl-color/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Expose `isHslColor`.\n\
 */\n\
\n\
module.exports = isHslColor;\n\
\n\
\n\
/**\n\
 * HSL(A) color matcher.\n\
 */\n\
\n\
var matcher = /^hsla?\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%\\s*,\\s*\\d{1,3}%\\s*(,\\s*[\\d\\.]+)?\\s*\\)$/;\n\
\n\
\n\
/**\n\
 * Loosely check whether a `string` is an HSL(A) color string.\n\
 *\n\
 * @param {String} string\n\
 * @return {Boolean}\n\
 */\n\
\n\
function isHslColor (string) {\n\
  return matcher.test(string);\n\
}//@ sourceURL=segmentio-is-hsl-color/index.js"
));
require.register("segmentio-is-rgb-color/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Expose `isRgbColor`.\n\
 */\n\
\n\
module.exports = isRgbColor;\n\
\n\
\n\
/**\n\
 * RGB(A) color matcher.\n\
 */\n\
\n\
var matcher = /^rgba?\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*,\\s*\\d{1,3}\\s*(,\\s*[\\d\\.]+)?\\s*\\)$/;\n\
\n\
\n\
/**\n\
 * Loosely check whether a `string` is an RGB(A) color string.\n\
 *\n\
 * @param {String} string\n\
 * @return {Boolean}\n\
 */\n\
\n\
function isRgbColor (string) {\n\
  return matcher.test(string);\n\
}//@ sourceURL=segmentio-is-rgb-color/index.js"
));
require.register("segmentio-is-url/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Expose `isUrl`.\n\
 */\n\
\n\
module.exports = isUrl;\n\
\n\
\n\
/**\n\
 * Matcher.\n\
 */\n\
\n\
var matcher = /^(ftp|https?):\\/\\/([^\\s\\.]+\\.[^\\s]{2,}|localhost)$/;\n\
\n\
\n\
/**\n\
 * Loosely validate a URL.\n\
 *\n\
 * @param {String} string\n\
 * @return {Boolean}\n\
 */\n\
\n\
function isUrl (string) {\n\
  return matcher.test(string);\n\
}//@ sourceURL=segmentio-is-url/index.js"
));
require.register("timoxley-keycode/index.js", Function("exports, require, module",
"// Source: http://jsfiddle.net/vWx8V/\n\
// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\
\n\
var has = ({}).hasOwnProperty\n\
\n\
/**\n\
 * Conenience method returns corresponding value for given keyName or keyCode.\n\
 *\n\
 * @param {Mixed} keyCode {Number} or keyName {String}\n\
 * @return {Mixed}\n\
 * @api public\n\
 */\n\
\n\
exports = module.exports = function(searchInput) {\n\
  // Keyboard Events\n\
  if (searchInput && 'object' === typeof searchInput) {\n\
    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n\
    if (hasKeyCode) searchInput = hasKeyCode\n\
  }\n\
\n\
  // Numbers\n\
  if ('number' === typeof searchInput) return names[searchInput]\n\
\n\
  // Everything else (cast to string)\n\
  var search = String(searchInput)\n\
\n\
  // check codes\n\
  var foundNamedKey = codes[search.toLowerCase()]\n\
  if (foundNamedKey) return foundNamedKey\n\
\n\
  // check aliases\n\
  var foundNamedKey = aliases[search.toLowerCase()]\n\
  if (foundNamedKey) return foundNamedKey\n\
\n\
  // weird character?\n\
  if (search.length === 1) return search.charCodeAt(0)\n\
\n\
  return undefined\n\
}\n\
\n\
/**\n\
 * Get by name\n\
 *\n\
 *   exports.code['enter'] // => 13\n\
 */\n\
\n\
var codes = exports.code = exports.codes = {\n\
  'backspace': 8,\n\
  'tab': 9,\n\
  'enter': 13,\n\
  'shift': 16,\n\
  'ctrl': 17,\n\
  'alt': 18,\n\
  'pause/break': 19,\n\
  'caps lock': 20,\n\
  'esc': 27,\n\
  'space': 32,\n\
  'page up': 33,\n\
  'page down': 34,\n\
  'end': 35,\n\
  'home': 36,\n\
  'left': 37,\n\
  'up': 38,\n\
  'right': 39,\n\
  'down': 40,\n\
  'insert': 45,\n\
  'delete': 46,\n\
  'windows': 91,\n\
  'right click': 93,\n\
  'numpad *': 106,\n\
  'numpad +': 107,\n\
  'numpad -': 109,\n\
  'numpad .': 110,\n\
  'numpad /': 111,\n\
  'num lock': 144,\n\
  'scroll lock': 145,\n\
  'my computer': 182,\n\
  'my calculator': 183,\n\
  ';': 186,\n\
  '=': 187,\n\
  ',': 188,\n\
  '-': 189,\n\
  '.': 190,\n\
  '/': 191,\n\
  '`': 192,\n\
  '[': 219,\n\
  '\\\\': 220,\n\
  ']': 221,\n\
  \"'\": 222\n\
}\n\
\n\
// Helper aliases\n\
\n\
var aliases = exports.aliases = {\n\
  'ctl': 17,\n\
  'pause': 19,\n\
  'break': 19,\n\
  'caps': 20,\n\
  'escape': 27,\n\
  'pgup': 33,\n\
  'pgdn': 33,\n\
  'ins': 45,\n\
  'del': 46,\n\
  'spc': 32\n\
}\n\
\n\
\n\
/*!\n\
 * Programatically add the following\n\
 */\n\
\n\
// lower case chars\n\
for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\
\n\
// numbers\n\
for (var i = 48; i < 58; i++) codes[i - 48] = i\n\
\n\
// function keys\n\
for (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\
\n\
// numpad keys\n\
for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\
\n\
/**\n\
 * Get by code\n\
 *\n\
 *   exports.name[13] // => 'Enter'\n\
 */\n\
\n\
var names = exports.names = exports.title = {} // title for backward compat\n\
\n\
// Create reverse mapping\n\
for (i in codes) names[codes[i]] = i\n\
\n\
// Add aliases\n\
for (var alias in aliases) {\n\
  codes[alias] = aliases[alias]\n\
}\n\
//@ sourceURL=timoxley-keycode/index.js"
));
require.register("segmentio-extend/index.js", Function("exports, require, module",
"\n\
module.exports = function extend (object) {\n\
    // Takes an unlimited number of extenders.\n\
    var args = Array.prototype.slice.call(arguments, 1);\n\
\n\
    // For each extender, copy their properties on our object.\n\
    for (var i = 0, source; source = args[i]; i++) {\n\
        if (!source) continue;\n\
        for (var property in source) {\n\
            object[property] = source[property];\n\
        }\n\
    }\n\
\n\
    return object;\n\
};//@ sourceURL=segmentio-extend/index.js"
));
require.register("ianstormtaylor-create-event/index.js", Function("exports, require, module",
"\n\
var extend = require('extend')\n\
  , keycode = require('keycode');\n\
\n\
\n\
/**\n\
 * Expose `createEvent`.\n\
 */\n\
\n\
module.exports = !!document.createEvent\n\
  ? createEvent\n\
  : createIeEvent;\n\
\n\
\n\
/**\n\
 * Default options.\n\
 */\n\
\n\
var defaults = {\n\
  alt           : false,\n\
  bubbles       : true,\n\
  button        : 0,\n\
  cancelable    : true,\n\
  clientX       : 0,\n\
  clientY       : 0,\n\
  ctrl          : false,\n\
  detail        : 1,\n\
  key           : 0,\n\
  meta          : false,\n\
  relatedTarget : null,\n\
  screenX       : 0,\n\
  screenY       : 0,\n\
  shift         : false,\n\
  view          : window\n\
};\n\
\n\
\n\
/**\n\
 * Create a non-IE event object.\n\
 *\n\
 * @param {String} type\n\
 * @param {Object} options\n\
 */\n\
\n\
function createEvent (type, options) {\n\
  switch (type) {\n\
    case 'dblclick':\n\
    case 'click':\n\
      return createMouseEvent(type, options);\n\
    case 'keydown':\n\
    case 'keyup':\n\
      return createKeyboardEvent(type, options);\n\
  }\n\
}\n\
\n\
\n\
/**\n\
 * Create a non-IE mouse event.\n\
 *\n\
 * @param {String} type\n\
 * @param {Object} options\n\
 */\n\
\n\
function createMouseEvent (type, options) {\n\
  options = clean(type, options);\n\
  var e = document.createEvent('MouseEvent');\n\
  e.initMouseEvent(\n\
    type,\n\
    options.bubbles,      // bubbles?\n\
    options.cancelable,   // cancelable?\n\
    options.view,         // view\n\
    options.detail,       // detail\n\
    options.screenX,      // screenX\n\
    options.screenY,      // screenY\n\
    options.clientX ,     // clientX\n\
    options.clientY,      // clientY\n\
    options.ctrl,         // ctrlKey\n\
    options.alt,          // altKey\n\
    options.shift,        // shiftKey\n\
    options.meta,         // metaKey\n\
    options.button,       // button\n\
    options.relatedTarget // relatedTarget\n\
  );\n\
  return e;\n\
}\n\
\n\
\n\
/**\n\
 * Create a non-IE keyboard event.\n\
 *\n\
 * @param {String} type\n\
 * @param {Object} options\n\
 */\n\
\n\
function createKeyboardEvent (type, options) {\n\
  options = clean(type, options);\n\
  var e = document.createEvent('KeyboardEvent');\n\
  (e.initKeyEvent || e.initKeyboardEvent).call(\n\
    e,\n\
    type,\n\
    options.bubbles,    // bubbles?\n\
    options.cancelable, // cancelable?\n\
    options.view,       // view\n\
    options.ctrl,       // ctrlKey\n\
    options.alt,        // altKey\n\
    options.shift,      // shiftKey\n\
    options.meta,       // metaKey\n\
    options.key,        // keyCode\n\
    options.key         // charCode\n\
  );\n\
\n\
  // super hack: http://stackoverflow.com/questions/10455626/keydown-simulation-in-chrome-fires-normally-but-not-the-correct-key/10520017#10520017\n\
  if (e.keyCode !== options.key) {\n\
    Object.defineProperty(e, 'keyCode', {\n\
      get: function () { return options.key; }\n\
    });\n\
    Object.defineProperty(e, 'charCode', {\n\
      get: function () { return options.key; }\n\
    });\n\
    Object.defineProperty(e, 'which', {\n\
      get: function () { return options.key; }\n\
    });\n\
  }\n\
\n\
  return e;\n\
}\n\
\n\
\n\
/**\n\
 * Create an IE event. Surprisingly nicer API, eh?\n\
 *\n\
 * @param {String} type\n\
 * @param {Object} options\n\
 */\n\
\n\
function createIeEvent (type, options) {\n\
  options = clean(type, options);\n\
  var e = document.createEventObject();\n\
  e.altKey = options.alt;\n\
  e.bubbles = options.bubbles;\n\
  e.button = options.button;\n\
  e.cancelable = options.cancelable;\n\
  e.clientX = options.clientX;\n\
  e.clientY = options.clientY;\n\
  e.ctrlKey = options.ctrl;\n\
  e.detail = options.detail;\n\
  e.metaKey = options.meta;\n\
  e.screenX = options.screenX;\n\
  e.screenY = options.screenY;\n\
  e.shiftKey = options.shift;\n\
  e.keyCode = options.key;\n\
  e.charCode = options.key;\n\
  e.view = options.view;\n\
  return e;\n\
}\n\
\n\
\n\
/**\n\
 * Back an `options` object by defaults, and convert some convenience features.\n\
 *\n\
 * @param {String} type\n\
 * @param {Object} options\n\
 * @return {Object} [description]\n\
 */\n\
\n\
function clean (type, options) {\n\
  options = extend({}, defaults, options);\n\
  if ('dblclick' === type) options.detail = 2;\n\
  if ('string' === typeof options.key) options.key = keycode(options.key);\n\
  return options;\n\
}//@ sourceURL=ianstormtaylor-create-event/index.js"
));
require.register("ianstormtaylor-trigger-event/index.js", Function("exports, require, module",
"\n\
var create = require('create-event');\n\
\n\
\n\
/**\n\
 * Expose `trigger`.\n\
 */\n\
\n\
module.exports = trigger;\n\
\n\
\n\
/**\n\
 * Trigger an event of `type` on an `el` with `options`.\n\
 *\n\
 * @param {Element} el\n\
 * @param {String} type\n\
 * @param {Object} options\n\
 */\n\
\n\
function trigger (el, type, options) {\n\
\n\
  // default el is `document`\n\
  if ('string' === typeof el) {\n\
    options = type;\n\
    type = el;\n\
    el = document;\n\
  }\n\
\n\
  var e = create(type, options);\n\
  el.dispatchEvent\n\
    ? el.dispatchEvent(e)\n\
    : el.fireEvent('on' + type, e);\n\
}//@ sourceURL=ianstormtaylor-trigger-event/index.js"
));
require.register("segmentio-submit-form/index.js", Function("exports, require, module",
"\n\
var trigger = require('trigger-event');\n\
\n\
\n\
/**\n\
 * Expose `submitForm`.\n\
 */\n\
\n\
module.exports = submitForm;\n\
\n\
\n\
/**\n\
 * Submit a `form` programmatically, triggering submit handlers.\n\
 *\n\
 * @param {Element} form\n\
 */\n\
\n\
function submitForm (form) {\n\
  var button = document.createElement('button');\n\
  button.style.display = 'none';\n\
  form.appendChild(button);\n\
  trigger(button, 'click');\n\
  form.removeChild(button);\n\
}//@ sourceURL=segmentio-submit-form/index.js"
));
require.register("timoxley-next-tick/index.js", Function("exports, require, module",
"\"use strict\"\n\
\n\
if (typeof setImmediate == 'function') {\n\
  module.exports = function(f){ setImmediate(f) }\n\
}\n\
// legacy node.js\n\
else if (typeof process != 'undefined' && typeof process.nextTick == 'function') {\n\
  module.exports = process.nextTick\n\
}\n\
// fallback for other environments / postMessage behaves badly on IE8\n\
else if (typeof window == 'undefined' || window.ActiveXObject || !window.postMessage) {\n\
  module.exports = function(f){ setTimeout(f) };\n\
} else {\n\
  var q = [];\n\
\n\
  window.addEventListener('message', function(){\n\
    var i = 0;\n\
    while (i < q.length) {\n\
      try { q[i++](); }\n\
      catch (e) {\n\
        q = q.slice(i);\n\
        window.postMessage('tic!', '*');\n\
        throw e;\n\
      }\n\
    }\n\
    q.length = 0;\n\
  }, true);\n\
\n\
  module.exports = function(fn){\n\
    if (!q.length) window.postMessage('tic!', '*');\n\
    q.push(fn);\n\
  }\n\
}\n\
//@ sourceURL=timoxley-next-tick/index.js"
));
require.register("segmentio-ware/lib/index.js", Function("exports, require, module",
"\n\
/**\n\
 * Expose `Ware`.\n\
 */\n\
\n\
module.exports = Ware;\n\
\n\
\n\
/**\n\
 * Initialize a new `Ware` manager.\n\
 */\n\
\n\
function Ware () {\n\
  if (!(this instanceof Ware)) return new Ware();\n\
  this.fns = [];\n\
}\n\
\n\
\n\
/**\n\
 * Use a middleware `fn`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Ware}\n\
 */\n\
\n\
Ware.prototype.use = function (fn) {\n\
  this.fns.push(fn);\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Run through the middleware with the given `args` and optional `callback`.\n\
 *\n\
 * @param {Mixed} args...\n\
 * @param {Function} callback (optional)\n\
 * @return {Ware}\n\
 */\n\
\n\
Ware.prototype.run = function () {\n\
  var fns = this.fns;\n\
  var i = 0;\n\
  var last = arguments[arguments.length - 1];\n\
  var callback = 'function' == typeof last ? last : null;\n\
  var args = callback\n\
    ? [].slice.call(arguments, 0, arguments.length - 1)\n\
    : [].slice.call(arguments);\n\
\n\
  function next (err) {\n\
    var fn = fns[i++];\n\
    if (!fn) return callback && callback.apply(null, [err].concat(args));\n\
    if (fn.length < args.length + 2 && err) return next(err);\n\
\n\
    var arr = [].slice.call(args);\n\
    if (err) arr.unshift(err);\n\
    arr.push(next);\n\
    fn.apply(null, arr);\n\
  }\n\
\n\
  next();\n\
  return this;\n\
};//@ sourceURL=segmentio-ware/lib/index.js"
));
require.register("segmentio-validator/index.js", Function("exports, require, module",
"\n\
var ware = require('ware');\n\
var each;\n\
\n\
/**\n\
 * Try to require from component and node\n\
 */\n\
\n\
try {\n\
  each = require('each');\n\
} catch (err) {\n\
  each = require('each-component');\n\
}\n\
\n\
/**\n\
 * Trace helper.\n\
 *\n\
 * TODO: move to npm\n\
 */\n\
\n\
function tracer(trace) {\n\
  var ids = 0;\n\
  return function(name, obj){\n\
    var id = ++ids;\n\
    obj = obj || {};\n\
    obj.id = id;\n\
\n\
    trace(name + ':start', obj);\n\
    return function(obj){\n\
      trace(name + ':end');\n\
    }\n\
  }\n\
}\n\
\n\
/**\n\
 * Expose `Validator`.\n\
 */\n\
\n\
module.exports = Validator;\n\
\n\
/**\n\
 * Initialize a new `Validator`.\n\
 */\n\
\n\
function Validator (opts) {\n\
  if (!(this instanceof Validator)) return new Validator(opts);\n\
  opts = opts || {};\n\
  this.trace = tracer(opts.trace || function(){});\n\
  this.rules = [];\n\
  this._optional = false;\n\
}\n\
\n\
/**\n\
 * Add a new rule `fn`, with optional `context`.\n\
 *\n\
 * @param {Function} fn\n\
 * @param {Mixed} context (optional)\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.rule = function (fn, context) {\n\
  this.rules.push({\n\
    fn: fn,\n\
    context: context\n\
  });\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Kick off the validation against all our rules.\n\
 *\n\
 * @param {Function} callback(err, valid, [context])\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.validate = function (value, callback) {\n\
  var rules = this.rules;\n\
  var optional = this._optional;\n\
  var middleware = ware();\n\
  var trace = this.trace;\n\
\n\
  each(rules, function (rule) {\n\
    middleware.use(function (value, done) {\n\
\n\
      // handle optional setting\n\
      if (!value && optional) return done();\n\
\n\
      // dont handle errors so that things like fs.exists work\n\
      var finish = function (err, valid) {\n\
        if (err) return done(err);\n\
        if (!valid) return done(new ValidationError(rule));\n\
        done();\n\
      };\n\
\n\
      // async\n\
      if (rule.fn.length > 1) {\n\
        var end = trace('validator:' + rule.fn.name);\n\
        return rule.fn(value, function(){\n\
          end();\n\
          finish.apply(null, arguments);\n\
        });\n\
      }\n\
\n\
      // sync\n\
      var end = trace('validator:' + rule.fn.name);\n\
      var val = rule.fn(value);\n\
      end();\n\
      finish(null, val);\n\
    });\n\
  });\n\
\n\
  middleware.run(value, function (err) {\n\
    if (!err) return callback(null, true);\n\
    if (err && err instanceof ValidationError) {\n\
      return callback(null, false, err.rule.context);\n\
    }\n\
    return callback(err);\n\
  });\n\
\n\
  return this;\n\
};\n\
\n\
/**\n\
 * Make the validator pass on empty values.\n\
 *\n\
 * @param {Boolean} optional\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.optional = function (optional) {\n\
  this._optional = false === optional ? false : true;\n\
  return this;\n\
};\n\
\n\
/**\n\
 * A simple error constructor to store the rule.\n\
 */\n\
\n\
function ValidationError (rule) {\n\
  this.rule = rule;\n\
}//@ sourceURL=segmentio-validator/index.js"
));
require.register("yields-prevent/index.js", Function("exports, require, module",
"\n\
/**\n\
 * prevent default on the given `e`.\n\
 * \n\
 * examples:\n\
 * \n\
 *      anchor.onclick = prevent;\n\
 *      anchor.onclick = function(e){\n\
 *        if (something) return prevent(e);\n\
 *      };\n\
 * \n\
 * @param {Event} e\n\
 */\n\
\n\
module.exports = function(e){\n\
  e = e || window.event\n\
  return e.preventDefault\n\
    ? e.preventDefault()\n\
    : e.returnValue = false;\n\
};\n\
//@ sourceURL=yields-prevent/index.js"
));
require.register("yields-stop/index.js", Function("exports, require, module",
"\n\
/**\n\
 * stop propagation on the given `e`.\n\
 * \n\
 * examples:\n\
 * \n\
 *      anchor.onclick = require('stop');\n\
 *      anchor.onclick = function(e){\n\
 *        if (!some) return require('stop')(e);\n\
 *      };\n\
 * \n\
 * \n\
 * @param {Event} e\n\
 */\n\
\n\
module.exports = function(e){\n\
  e = e || window.event;\n\
  return e.stopPropagation\n\
    ? e.stopPropagation()\n\
    : e.cancelBubble = true;\n\
};\n\
//@ sourceURL=yields-stop/index.js"
));
require.register("segmentio-validate-form/lib/adapter.js", Function("exports, require, module",
"\n\
var classes = require('classes');\n\
var domify = require('domify');\n\
var next = require('next-sibling');\n\
var type = require('type');\n\
var value = require('value');\n\
\n\
\n\
/**\n\
 * Default element accessor.\n\
 *\n\
 * @param {Element|Object} view\n\
 */\n\
\n\
exports.el = function (view) {\n\
  if (view.el) return view.el; // handle views\n\
  return view;\n\
};\n\
\n\
\n\
/**\n\
 * Default value method.\n\
 *\n\
 * @param {Element|Object} view\n\
 */\n\
\n\
exports.value = function (view) {\n\
  var el = this.el(view);\n\
  if ('function' == typeof view.value) return view.value();\n\
  if ('element' != type(el)) return;\n\
  return value(el);\n\
};\n\
\n\
\n\
/**\n\
 * Default valid method.\n\
 *\n\
 * @param {Element|Object} view\n\
 */\n\
\n\
exports.valid = function (view) {\n\
  this.clear(view);\n\
  var el = this.el(view);\n\
  if ('function' == typeof view.valid) return view.valid();\n\
  if ('element' != type(el)) return;\n\
\n\
  classes(el).add('valid');\n\
};\n\
\n\
\n\
/**\n\
 * Default invalid method.\n\
 *\n\
 * @param {Element|Object} view\n\
 * @param {String} msg\n\
 */\n\
\n\
exports.invalid = function (view, msg) {\n\
  this.clear(view);\n\
  var el = this.el(view);\n\
  if ('function' == typeof view.invalid) return view.invalid(msg);\n\
  if ('element' != type(el)) return;\n\
\n\
  classes(el).add('invalid');\n\
  if (msg && el.parentNode) {\n\
    var message = domify('<label class=\"validator-message\">');\n\
    message.textContent = msg;\n\
    el.parentNode.insertBefore(message, el.nextSibling);\n\
  }\n\
};\n\
\n\
\n\
/**\n\
 * Default clear validation method.\n\
 *\n\
 * @param {Element|Object} view\n\
 */\n\
\n\
exports.clear = function (view) {\n\
  var el = this.el(view);\n\
  if ('function' == typeof view.valid) return view.valid();\n\
  if ('element' != type(el)) return;\n\
\n\
  classes(el).remove('valid').remove('invalid');\n\
  var message;\n\
  while (message = next(el, '.validator-message')) {\n\
    if (el.parentNode) el.parentNode.removeChild(message);\n\
  }\n\
};//@ sourceURL=segmentio-validate-form/lib/adapter.js"
));
require.register("segmentio-validate-form/lib/field.js", Function("exports, require, module",
"\n\
var adapter = require('./adapter');\n\
var bind = require('event').bind;\n\
var each = require('each');\n\
var type = require('type');\n\
var Validator = require('validator');\n\
var validators = require('./validators');\n\
\n\
\n\
/**\n\
 * Expose `Field`.\n\
 */\n\
\n\
module.exports = Field;\n\
\n\
\n\
/**\n\
 * Initialize a new `Field`.\n\
 *\n\
 * @param {Element} el\n\
 * @param {Object} adapter\n\
 * @param {Object} validators\n\
 */\n\
\n\
function Field (el, adapter, validators) {\n\
  this.el = el;\n\
  this.adapter = adapter;\n\
  this.validators = validators;\n\
  this._validator = new Validator().optional();\n\
  this._valid = true;\n\
}\n\
\n\
\n\
/**\n\
 * Add a validation `fn` displaying `message` when invalid.\n\
 *\n\
 * @param {Function|RegExp|String} fn\n\
 * @param {Mixed} settings (optional)\n\
 * @param {String} message (optional)\n\
 * @return {Field}\n\
 */\n\
\n\
Field.prototype.is = function (fn) {\n\
  var settings = arguments.length < 3 ? [] : [].slice.call(arguments, 1, arguments.length - 1);\n\
  var message = arguments.length == 1 ? '' : arguments[arguments.length - 1];\n\
\n\
  // required\n\
  if ('required' == fn) this._validator.optional(false);\n\
\n\
  // regexp\n\
  if ('regexp' == type(fn)) fn = this.validators.regexp(fn);\n\
\n\
  // shorthand\n\
  if ('string' == type(fn)) fn = this.validators[fn];\n\
\n\
  // handle fns that take settings\n\
  if (settings.length) fn = fn.apply(null, settings);\n\
\n\
  this._validator.rule(fn, message);\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Validate our element against all of its rules, and `callback(valid)`.\n\
 *\n\
 * @param {Function} callback (optional)\n\
 * @return {Field}\n\
 */\n\
\n\
Field.prototype.validate = function (callback) {\n\
  var self = this;\n\
  var value = this.adapter.value(this.el);\n\
\n\
  this._validator.validate(value, function (err, valid, msg) {\n\
    valid\n\
      ? self.adapter.valid(self.el)\n\
      : self.adapter.invalid(self.el, msg);\n\
    callback && callback(err, valid, msg);\n\
  });\n\
\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Set an `event` trigger for validation.\n\
 *\n\
 * @param {String} event\n\
 * @return {Field}\n\
 */\n\
\n\
Field.prototype.on = function (event) {\n\
  var self = this;\n\
  bind(this.el, event, function (e) {\n\
    // don't validate an empty input on blur, that's annoying\n\
    if ('blur' === event && !self.adapter.value(self.el)) return;\n\
    self.validate();\n\
  });\n\
  return this;\n\
};//@ sourceURL=segmentio-validate-form/lib/field.js"
));
require.register("segmentio-validate-form/lib/index.js", Function("exports, require, module",
"\n\
var adapter = require('./adapter');\n\
var bind = require('bind');\n\
var event = require('event');\n\
var clone = require('clone');\n\
var Field = require('./field');\n\
var submit = require('submit-form');\n\
var Vldtr = require('validator');\n\
var validators = require('./validators');\n\
\n\
\n\
/**\n\
 * Expose `Validator`.\n\
 */\n\
\n\
module.exports = exports = Validator;\n\
\n\
\n\
/**\n\
 * Initialize a new `Validator`.\n\
 *\n\
 * @param {Element} form\n\
 */\n\
\n\
function Validator (form) {\n\
  if (!(this instanceof Validator)) return new Validator(form);\n\
  this.form = form;\n\
  this._validator = new Vldtr();\n\
  this.adapter = clone(adapter);\n\
  this.validators = clone(validators);\n\
  this.submit = bind(this, this.submit);\n\
  this.bind();\n\
}\n\
\n\
\n\
/**\n\
 * Use a `plugin`.\n\
 *\n\
 * @param {Function} plugin\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.use = function (plugin) {\n\
  plugin(this);\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Set an aditional trigger `event` for individual field validation.\n\
 *\n\
 * @param {String} event\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.on = function (event) {\n\
  this._event = event;\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Add a field `el` to be validated.\n\
 *\n\
 * @param {Element|String} el\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.field = function (el) {\n\
  if ('string' === typeof el) el = this.form.querySelector('[name=\"' + el + '\"]');\n\
  var field = new Field(el, this.adapter, this.validators);\n\
  if (this._event) field.on(this._event);\n\
\n\
  this._validator.rule(function (val, done) {\n\
    field.validate(done);\n\
  });\n\
\n\
  // let us chain `is` like we were the field\n\
  this.is = function () {\n\
    field.is.apply(field, arguments);\n\
    return this;\n\
  };\n\
\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Validate each field and `callback(valid)`.\n\
 *\n\
 * @param {Function} callback\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.validate = function (callback) {\n\
  this._validator.validate(null, function (err, valid, msg) {\n\
    callback && callback(err, valid, msg);\n\
  });\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Define a view-specific validator `fn`.\n\
 *\n\
 * @param {String|Object} name\n\
 * @param {Function} fn\n\
 */\n\
\n\
Validator.prototype.validator = function (name, fn) {\n\
  if ('object' == typeof name) {\n\
    for (var key in name) this.validator(key, name[key]);\n\
    return;\n\
  }\n\
\n\
  this.validators[name] = fn;\n\
};\n\
\n\
\n\
/**\n\
 * Define a view-specific el adapter `fn`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.el = function (fn) {\n\
  this.adapter.el = fn;\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Define a view-specific value adapter `fn`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.value = function (fn) {\n\
  this.adapter.value = fn;\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Define a view-specific valid adapter `fn`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.valid = function (fn) {\n\
  this.adapter.valid = fn;\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Define a view-specific invalid adapter `fn`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.invalid = function (fn) {\n\
  this.adapter.invalid = fn;\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Define a view-specific clear adapter `fn`.\n\
 *\n\
 * @param {Function} fn\n\
 * @return {Validator}\n\
 */\n\
\n\
Validator.prototype.clear = function (fn) {\n\
  this.adapter.clear = fn;\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Bind the form's submit handler.\n\
 *\n\
 * @return {Validator}\n\
 * @api private\n\
 */\n\
\n\
Validator.prototype.bind = function () {\n\
  // capture to preempt other handlers\n\
  event.bind(this.form, 'submit', this.submit, true);\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Unind the form's submit handler.\n\
 *\n\
 * @return {Validator}\n\
 * @api private\n\
 */\n\
\n\
Validator.prototype.unbind = function () {\n\
  // capture to preempt other handlers\n\
  event.unbind(this.form, 'submit', this.submit, true);\n\
  return this;\n\
};\n\
\n\
\n\
/**\n\
 * Form submit handler.\n\
 *\n\
 * @param {Event} e\n\
 * @api private\n\
 */\n\
\n\
Validator.prototype.submit = function (e) {\n\
  e.stopImmediatePropagation();\n\
  e.preventDefault();\n\
  var self = this;\n\
  this.validate(function (err, valid) {\n\
    if (!err && valid) {\n\
      self.unbind();\n\
      submit(self.form);\n\
    }\n\
  });\n\
};//@ sourceURL=segmentio-validate-form/lib/index.js"
));
require.register("segmentio-validate-form/lib/validators.js", Function("exports, require, module",
"\n\
var email = require('is-email');\n\
var hex = require('is-hex-color');\n\
var hsl = require('is-hsl-color');\n\
var rgb = require('is-rgb-color');\n\
var trim = require('trim');\n\
var url = require('is-url');\n\
\n\
\n\
/**\n\
 * Required.\n\
 */\n\
\n\
exports.required = trim;\n\
\n\
\n\
/**\n\
 * Email addresses.\n\
 */\n\
\n\
exports.email = email;\n\
\n\
\n\
/**\n\
 * URLs.\n\
 */\n\
\n\
exports.url = url;\n\
\n\
\n\
/**\n\
 * HEX color.\n\
 */\n\
\n\
exports.hex = hex;\n\
\n\
\n\
/**\n\
 * HSL color.\n\
 */\n\
\n\
exports.hsla = exports.hsl = hsl;\n\
\n\
\n\
/**\n\
 * RGB color.\n\
 */\n\
\n\
exports.rgba = exports.rgb = rgb;\n\
\n\
\n\
/**\n\
 * Any color string.\n\
 */\n\
\n\
exports.color = function (val) {\n\
  return hex(val) || hsl(val) || rgb(val);\n\
};\n\
\n\
\n\
/**\n\
 * Number.\n\
 *\n\
 * Note: this won't work for straight up element validation since they\n\
 * always return strings.\n\
 */\n\
\n\
exports.number = function (val) {\n\
  return 'number' == typeof val;\n\
};\n\
\n\
\n\
/**\n\
 * Regexp.\n\
 *\n\
 * @param {RegExp|String} regexp\n\
 */\n\
\n\
exports.regexp = function (regexp) {\n\
  if ('string' === typeof regexp) regexp = new RegExp(regexp);\n\
  return function (val) {\n\
    return regexp.test(val);\n\
  };\n\
};\n\
\n\
\n\
/**\n\
 * Minimum length.\n\
 *\n\
 * @param {Number} length\n\
 */\n\
\n\
exports.min =\n\
exports.minimum = function (length) {\n\
  return function (val) {\n\
    var l = val.length ? val.length : val;\n\
    return l >= length;\n\
  };\n\
};\n\
\n\
\n\
/**\n\
 * Maximum length.\n\
 * @param {Number} length\n\
 */\n\
\n\
exports.max =\n\
exports.maximum = function (length) {\n\
  return function (val) {\n\
    var l = val.length ? val.length : val;\n\
    return l <= length;\n\
  };\n\
};//@ sourceURL=segmentio-validate-form/lib/validators.js"
));
require.register("johntron-is-ip-address/index.js", Function("exports, require, module",
"var ipv6_matcher = /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/,\n\
    ipv4_matcher = /^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}$/;\n\
\n\
module.exports = function (validator) {\n\
    validator.validators.ip = module.exports.validate;\n\
};\n\
\n\
module.exports.validate = function (string) {\n\
    var matcher;\n\
\n\
    if (string.match(/:/) !== null) {\n\
        matcher = ipv6_matcher;\n\
    } else {\n\
        matcher = ipv4_matcher;\n\
    }\n\
\n\
    return matcher.test(string);\n\
};//@ sourceURL=johntron-is-ip-address/index.js"
));
require.register("johntron-is-host/index.js", Function("exports, require, module",
"var is_ip_address = require('is-ip-address').validate,\n\
    hostname_matcher = /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/;\n\
\n\
module.exports = function (validator) {\n\
    validator.validators.host = module.exports.validate;\n\
};\n\
\n\
module.exports.validate = function(string) {\n\
  var preIpV4Pattern = /\\d{1,3}(\\.\\d{1,3}){3}/;\n\
\n\
  if (string.match(/:/) !== null || string.match(/[a-zA-Z]/) === null || preIpV4Pattern.test(string)) {\n\
      // IP address\n\
      return is_ip_address(string);\n\
  }\n\
\n\
  return hostname_matcher.test(string);\n\
}\n\
//@ sourceURL=johntron-is-host/index.js"
));

require.register("interface-selector/index.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    template = require('./templates/template.js'),\n\
    interface_template = require('./templates/interface.js'),\n\
    Interface = require('interface-model'),\n\
    emitter = require('emitter'),\n\
    classes = require('classes'),\n\
    event = require('event');\n\
\n\
/**\n\
 * @param interfaces ObservableArray or Array of Interfaces\n\
 * @param render_interface delegate function called when an interface needs rendering\n\
 * @constructor\n\
 */\n\
function InterfaceSelector(interfaces, render_interface) {\n\
    if (interfaces.subscribe) {\n\
        // interfaces is observable\n\
        // interfaces.subscribe(this.update_interfaces.bind(this)); // Causes ENT-3611\n\
        interfaces = interfaces();\n\
    }\n\
    this.set_models(interfaces);\n\
    this.render_interface = typeof render_interface === 'function' ? render_interface : function () {};\n\
    this.$el = domify(template);\n\
    this.$interfaces = [];\n\
    this.click_handlers = [];\n\
    this.change_handlers = [];\n\
    this.strings = {\n\
        \"No interfaces\": \"No interfaces\"\n\
    };\n\
}\n\
\n\
emitter(InterfaceSelector.prototype);\n\
\n\
InterfaceSelector.sort = function (interfaces) {\n\
    var ret = [],\n\
        offset;\n\
\n\
    interfaces.map(function (iface) {\n\
        offset = iface.physical_port() - 1;\n\
        ret[offset] = iface;\n\
    });\n\
\n\
    return ret;\n\
};\n\
\n\
InterfaceSelector.prototype.set_models = function (models) {\n\
    // Convert \"view-models\" to Models\n\
    models = models.map(function (iface) {\n\
        if (iface.toFlatObject) {\n\
            iface = Interface.from_device_view_model(iface);\n\
        }\n\
        return iface;\n\
    });\n\
\n\
    this.models = InterfaceSelector.sort(models) || [];\n\
\n\
};\n\
\n\
InterfaceSelector.prototype.render = function () {\n\
    var $interface;\n\
\n\
    this.$el.innerHTML = '';\n\
\n\
    if (!this.models.length) {\n\
        this.$el.innerHTML = this.strings[\"No interfaces\"];\n\
    }\n\
\n\
    this.models.map(function (model, i) {\n\
        $interface = domify(interface_template);\n\
        this.render_interface(model, $interface, i);\n\
        this.$el.appendChild($interface);\n\
        this.$interfaces[i] = $interface;\n\
    }, this);\n\
\n\
    this.bind();\n\
\n\
    return this.$el;\n\
};\n\
\n\
InterfaceSelector.prototype.bind = function () {\n\
    var $interfaces = this.$interfaces,\n\
        $interface,\n\
        models = this.models,\n\
        model,\n\
        handler,\n\
        redraw = this.render_interface;\n\
\n\
    // DOM -> Model\n\
    $interfaces.forEach(function ($interface, index) {\n\
        model = models[index];\n\
\n\
        handler = this.select.bind(this, model, false);\n\
        this.click_handlers[index] = handler;\n\
\n\
        if (model.available()) {\n\
            event.bind($interface, 'click', handler);\n\
        }\n\
    }, this);\n\
\n\
    // Model -> DOM\n\
    this.models.forEach(function (model, index) {\n\
        $interface = $interfaces[index];\n\
\n\
        handler = redraw.bind(this, model, $interface, index);\n\
        this.change_handlers[index] = handler;\n\
\n\
        model.on('change', handler);\n\
    }, this);\n\
};\n\
\n\
InterfaceSelector.prototype.unbind = function () {\n\
    var $interfaces = this.$interfaces,\n\
        $interface,\n\
        models = this.models,\n\
        model,\n\
        handler,\n\
        redraw = this.render_interface;\n\
\n\
    // DOM -> Model\n\
    $interfaces.forEach(function ($interface, index) {\n\
        model = models[index];\n\
\n\
        handler = this.click_handlers[index];\n\
        event.unbind($interface, 'click', handler);\n\
\n\
        delete this.click_handlers[index];\n\
    }, this);\n\
\n\
    // Model -> DOM\n\
    this.models.forEach(function (model, index) {\n\
        $interface = $interfaces[index];\n\
\n\
        handler = this.change_handlers[index];\n\
        model.off('change', handler);\n\
\n\
        delete this.change_handlers[index];\n\
    }, this);\n\
};\n\
\n\
InterfaceSelector.prototype.select = function (selected, silent) {\n\
    var $interfaces = this.$interfaces,\n\
        classed,\n\
        index = -1;\n\
\n\
    if (!selected || undefined === selected.physical_port()) {\n\
        return;\n\
    }\n\
\n\
    this.models.forEach(function (model, i) {\n\
        if (selected.physical_port() === model.physical_port()) {\n\
            index = i;\n\
        }\n\
    });\n\
\n\
    $interfaces.forEach(function ($interface, i) {\n\
        classed = classes($interface);\n\
\n\
        if (i === index) {\n\
            classed.add('selected');\n\
        } else {\n\
            classed.remove('selected');\n\
        }\n\
    });\n\
\n\
    if (!silent) {\n\
        this.emit('select', selected, $interfaces[index], index);\n\
    }\n\
};\n\
\n\
InterfaceSelector.prototype.update_interfaces = function (interfaces) {\n\
    this.set_models(interfaces);\n\
    this.render();\n\
};\n\
\n\
module.exports = InterfaceSelector;\n\
//@ sourceURL=interface-selector/index.js"
));
require.register("interface-selector/templates/interface.js", Function("exports, require, module",
"module.exports = '<div class=\"interface\"></div>\\n\
';//@ sourceURL=interface-selector/templates/interface.js"
));
require.register("interface-selector/templates/template.js", Function("exports, require, module",
"module.exports = '<div class=\"interface-selector port-container\"></div>\\n\
';//@ sourceURL=interface-selector/templates/template.js"
));
require.register("interface-model/index.js", Function("exports, require, module",
"var model = require('model'),\n\
    defaults = require('model-defaults');\n\
\n\
var Interface = model('Interface')\n\
    .use(defaults)\n\
    .attr('physical_port')\n\
    .attr('available', {\"default\": true}) // True if port can be re-allocated\n\
    .attr('allocated_to')\n\
    .attr('enabled', {\"default\": false});\n\
\n\
Interface.primaryKey = \"physical_port\";\n\
\n\
Interface.from_device_view_model = function (view_model) {\n\
    var physical_port = view_model.toFlatObject();\n\
    return new this({physical_port: physical_port});\n\
};\n\
\n\
module.exports = Interface;//@ sourceURL=interface-model/index.js"
));
require.register("loading-state/index.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    $template = domify(require('./template.js'));\n\
\n\
function LoadingState($el) {\n\
    this.$template = $template.cloneNode(true);\n\
    this.set_el($el);\n\
}\n\
\n\
LoadingState.prototype.show = function (message) {\n\
    var $message = this.$template.querySelector('h3'),\n\
        prev = $.blockUI.defaults.css; // We need to reset the block UI's CSS\n\
\n\
    $message.textContent = message;\n\
\n\
    $.blockUI.defaults.css = {};\n\
    $(this.$el).block({\n\
        message: this.$template,\n\
        width: '100%'\n\
    });\n\
    $.blockUI.defaults.css = prev;\n\
\n\
    return this.$el;\n\
};\n\
\n\
LoadingState.prototype.hide = function () {\n\
    $(this.$el).unblock();\n\
};\n\
\n\
LoadingState.prototype.set_el = function ($el) {\n\
    this.$el = $el;\n\
};\n\
\n\
\n\
module.exports = LoadingState;//@ sourceURL=loading-state/index.js"
));
require.register("loading-state/template.js", Function("exports, require, module",
"module.exports = '<div id=\"lightbox-working\">\\n\
    <div class=\"working\"><img src=\"/images/spinner.gif\" class=\"loading\"/>\\n\
        <div class=\"content\"><h3></h3></div>\\n\
    </div>\\n\
</div>';//@ sourceURL=loading-state/template.js"
));
require.register("netflow-settings/views/netflow-settings.js", Function("exports, require, module",
"/*global translate: true */\n\
\n\
var domify = require('domify'),\n\
    template = require('../templates/netflow-settings.js'),\n\
    event = require('event'),\n\
    GlobalSettings = require('./global-settings.js'),\n\
    Interfaces = require('./interfaces.js'),\n\
    Model = require('../models/netflow-settings.js'),\n\
    InterfaceModel = require('interface-model'),\n\
    classes = require('classes'),\n\
    util = require('utility-functions'),\n\
    lightbox = util.lightbox,\n\
    task_status_url = util.getConfigSetting('get_task_status'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    noop = function() {},\n\
    spirentEnterpriseVm = window.spirentEnterpriseVm,\n\
    results_status_observable = window.spirentEnterpriseVm.vmTest.vmResults.status,\n\
    LoadingState = require('loading-state');\n\
\n\
// Extend interface model\n\
InterfaceModel.attr('collectors', {default: []});\n\
\n\
function NetflowSettings(model) {\n\
    this.setModel(model);\n\
    this.$el = domify(template);\n\
    this.globalSettingsPane = new GlobalSettings(model);\n\
    this.interfacesPane = undefined;\n\
    this.ports_observable = spirentEnterpriseVm.availableDevices()[0].ports;\n\
    this.loading_state = new LoadingState(this.$el);\n\
    //this.init_render = true;\n\
    this.graber = undefined;\n\
\n\
    this.strings = {\n\
        \"License invalid\": \"Your license is invalid. If you just updated, you may need a new license. Please upload a valid license or contact Spirent support at <a href='http://support.spirentforbusiness.com' target='_blank'>support.spirentforbusiness.com</a>.\",\n\
        \"Updating\": \"Updating\",\n\
        \"Loading\": \"Loading\",\n\
        \"Exporting has not yet started\": \"Exporting has not yet started\",\n\
        \"Please allow approximately three minutes for exporting to begin.\": \"Please allow approximately three minutes for exporting to begin.\",\n\
        \"Please wait for test to finish\": \"Please wait for test to finish\",\n\
        \"Netflow save confirmation\": window.translate(\"Saving will interrupt any tests that are currently running.\")\n\
    };\n\
}\n\
\n\
NetflowSettings.factory = function (callback) {\n\
    callback = callback || function() {};\n\
\n\
    var view = new NetflowSettings(),\n\
        handler = function (err, model) {\n\
            if (err) {\n\
                return callback(err);\n\
            }\n\
\n\
            view.setModel(model);\n\
            return callback(null, view);\n\
        };\n\
\n\
    view.renderLoading();\n\
\n\
    view.graber = function(){\n\
        Model.get(undefined,handler);\n\
    }\n\
\n\
    view.graber();\n\
\n\
    return view;\n\
};\n\
\n\
NetflowSettings.prototype.setModel = function (model) {\n\
    if (!model) {\n\
        return; // Short-circuit\n\
    }\n\
\n\
    var interfaces = [];\n\
\n\
\n\
    // Convert interfaces object to models\n\
    model.interfaces().forEach(function (iface) {\n\
        interfaces.push(new InterfaceModel(iface));\n\
    });\n\
\n\
//    if(!this.init_render){\n\
//        this.interfacesPane.update_interfaces(interfaces);\n\
//        return;\n\
//    }\n\
\n\
    this.globalSettingsPane.setModel(model);\n\
    this.model = model;\n\
\n\
    this.interfacesPane = new Interfaces(interfaces, this.model.is_enabled());\n\
\n\
};\n\
\n\
NetflowSettings.prototype.render = function () {\n\
    var updating = this.model.status() === 'updating',\n\
        license_invalid = this.model.license_status() === 'invalid',\n\
        $global = this.$el.querySelector('.global'),\n\
        chassis_id = window.spirentEnterpriseVm.vmGlobalSettings.chassisId(),\n\
        $flownba = this.$el.querySelector('#flownba');\n\
\n\
    $flownba.href += '&id=' + encodeURIComponent(chassis_id);\n\
\n\
    if (updating) {\n\
        this.renderUpdating();\n\
        return this.$el;\n\
    }\n\
\n\
    if (license_invalid) {\n\
        this.renderInvalidLicense();\n\
        return this.$el;\n\
    }\n\
\n\
//    if(!this.init_render){\n\
//        this.transitionTo(results_status_observable());\n\
//        return;\n\
//    }\n\
\n\
//    this.init_render = false;\n\
\n\
    // Enabling Netflow re-allocates ports\n\
    // And port re-allocation interrupts tests\n\
    // So block UI when tests are running to avoid interrupting\n\
    this.transitionTo(results_status_observable());\n\
    results_status_observable.subscribe(this.transitionTo.bind(this));\n\
\n\
    $global.querySelector('.mode .enable').checked = this.model.is_enabled();\n\
    $global.querySelector('.mode .disable').checked = !this.model.is_enabled();\n\
\n\
    this.globalSettingsPane.render();\n\
    this.interfacesPane.render();\n\
\n\
    $global.appendChild(this.globalSettingsPane.$el);\n\
    this.$el.appendChild(this.interfacesPane.$el);\n\
\n\
    this.bind();\n\
    return this.$el;\n\
};\n\
\n\
NetflowSettings.prototype.renderUpdating = function () {\n\
    var updating = this.strings.Updating,\n\
        prev_html = this.$el.innerHTML,\n\
        not_updating = function (data) {\n\
            return data.status() !== 'updating';\n\
        }.bind(this),\n\
        updated = function (data) {\n\
            if (!this.$el.parentNode || !this.$el.parentNode.contains(this.$el)) {\n\
                // view was removed\n\
                return;\n\
            }\n\
\n\
            /*global $:true */\n\
            if ($ && $.fn && typeof $.fn.unblock === 'function') {\n\
                this.loading_state.hide();\n\
            } else {\n\
                this.$el.innerHTML = prev_html;\n\
            }\n\
            this.model = data;\n\
            this.interfacesPane.toggle('enabled' === this.model.status());\n\
            this.render();\n\
        }.bind(this);\n\
\n\
    /*global $:true */\n\
    if ($ && $.fn && typeof $.fn.block === 'function') {\n\
        this.loading_state.show(updating);\n\
    } else {\n\
        this.$el.innerHTML = updating;\n\
    }\n\
    /*global $:false */\n\
\n\
    this.pollUntil(not_updating, updated);\n\
};\n\
\n\
NetflowSettings.prototype.renderLoading = function () {\n\
    var message = this.strings.Loading;\n\
    this.loading_state.show(message);\n\
};\n\
\n\
NetflowSettings.prototype.blockForTesting = function () {\n\
    var message = this.strings[\"Please wait for test to finish\"];\n\
    this.loading_state.show(message);\n\
};\n\
\n\
NetflowSettings.prototype.blockWithMessage = function (message) {\n\
    this.loading_state.show(message);\n\
};\n\
\n\
NetflowSettings.prototype.unblock = function () {\n\
    this.loading_state.hide();\n\
};\n\
\n\
NetflowSettings.prototype.transitionTo = function (state) {\n\
    if ('running' === state) {\n\
        this.blockForTesting();\n\
    } else {\n\
        this.unblock();\n\
    }\n\
};\n\
\n\
NetflowSettings.prototype.pollUntil = function (condition, done) {\n\
    Model.get(undefined, function (err, model) {\n\
        if (condition(model)) {\n\
            done(model);\n\
        } else {\n\
            setTimeout(this.pollUntil.bind(this, condition, done), 500);\n\
        }\n\
    }.bind(this));\n\
};\n\
\n\
NetflowSettings.prototype.renderInvalidLicense = function () {\n\
    var message = this.strings[\"License invalid\"],\n\
        $message;\n\
\n\
\n\
    /*global $:true */\n\
    if ($ && $.fn && typeof $.fn.block === 'function') {\n\
        this.transitionTo('license_invalid');\n\
        var prev_defaults = $.blockUI.defaults.css;\n\
        $.blockUI.defaults.css = {};\n\
        $(this.$el).block({message: '<div class=\"lightbox-chrome\">' + message + '</div>'});\n\
        $.blockUI.defaults.css = prev_defaults;\n\
    } else {\n\
        $message = document.createTextNode(message);\n\
        this.$el.appendChild($message);\n\
    }\n\
    /*global $:false */\n\
};\n\
\n\
NetflowSettings.prototype.bind = function () {\n\
    var $enable = this.$el.querySelector('.mode .enable'),\n\
        $disable = this.$el.querySelector('.mode .disable'),\n\
        $save = this.$el.querySelector('.save');\n\
\n\
    event.bind($enable, 'change', this.toggle.bind(this, true));\n\
    event.bind($disable, 'change', this.toggle.bind(this, false));\n\
    event.bind($save, 'click', this.validate.bind(this));\n\
\n\
    this.model.on('saving', this.updateAllocations.bind(this));\n\
};\n\
\n\
NetflowSettings.prototype.validate = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    var save = this.confirm_save.bind(this);\n\
\n\
    this.globalSettingsPane.validate(save, noop);\n\
};\n\
\n\
NetflowSettings.prototype.confirm_save = function () {\n\
    lightbox.confirmation_dialog(this,this.strings[\"Netflow save confirmation\"],this.save)\n\
}\n\
\n\
NetflowSettings.prototype.save = function () {\n\
    var poll = this.pollTask.bind(this),\n\
        start_task_poller = function (nothing, response) {\n\
            poll(response.body.task_id);\n\
        },\n\
        interfaces = [],\n\
        offset,\n\
        model;\n\
\n\
    /*ignore jslint start*/\n\
    if (typeof LightboxWorkingViewModel !== 'undefined' && typeof translate === 'function') {\n\
    /*ignore jslint end*/\n\
        model = new LightboxWorkingViewModel(translate(\"Saving\"), translate('Saving...'));\n\
        lightbox.working(model);\n\
    }\n\
\n\
    this.interfacesPane.models.forEach(function (iface) {\n\
        offset = iface.physical_port() - 1;\n\
        interfaces[offset] = iface.toJSON();\n\
    });\n\
    this.model.interfaces(interfaces);\n\
\n\
    this.model.save(start_task_poller);\n\
};\n\
\n\
NetflowSettings.prototype.hide = function () {\n\
    classes(this.$el).add('hidden');\n\
};\n\
\n\
NetflowSettings.prototype.show = function () {\n\
    //this.syncPortsFrom();\n\
    this.renderLoading();\n\
    this.reload();\n\
\n\
    classes(this.$el).remove('hidden');\n\
};\n\
\n\
NetflowSettings.prototype.reload = function () {\n\
    //try to fetch a valid licence\n\
    this.graber();\n\
};\n\
\n\
NetflowSettings.prototype.toggle = function (enabled) {\n\
    enabled = enabled || false;\n\
    this.model.toggle(enabled);\n\
    this.globalSettingsPane.toggle(enabled);\n\
    this.interfacesPane.toggle(enabled);\n\
};\n\
\n\
NetflowSettings.prototype.pollTask = function (task_id) {\n\
    var self = this,\n\
        url = task_status_url + '?task_id=' + task_id,\n\
        poll = this.pollTask.bind(this, task_id),\n\
        is_exporting = this.model.is_exporting(),\n\
        strings = this.strings,\n\
        show_warning = function () {\n\
            lightbox.openAlert(strings['Exporting has not yet started'], strings['Please allow approximately three minutes for exporting to begin.']);\n\
            lightbox.off('close', show_warning);\n\
        },\n\
        workingVm;\n\
\n\
    request.get(url)\n\
        .use(no_cache)\n\
        .end(function (res) {\n\
            if ('running' === res.body.status) {\n\
                // Keep polling\n\
                setTimeout(poll, 500);\n\
                return;\n\
            }\n\
\n\
            workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'));\n\
            if (res.error) {\n\
                // Show failure\n\
                workingVm.status('error');\n\
                lightbox.working(workingVm);\n\
                return;\n\
            }\n\
\n\
            /*\n\
            ports_observable().forEach(function (old_port) {\n\
                interfaces.forEach(function (new_port) {\n\
                    if (new_port.physical_port === old_port.id()) {\n\
                        old_port.allocated_to(new_port.enabled ? new_port.allocated_to : 'stc');\n\
                        old_port.available(!new_port.enabled);\n\
                    }\n\
                });\n\
            });\n\
            */\n\
            self.syncPortsTo();\n\
\n\
            workingVm.status('success');\n\
            lightbox.working(workingVm);\n\
            if (is_exporting) {\n\
                // Warn of the ~3 min delay\n\
                lightbox.on('close', show_warning);\n\
            }\n\
        });\n\
};\n\
\n\
//sync to global port observable\n\
NetflowSettings.prototype.syncPortsTo = function(){\n\
    var interfaces = this.model.interfaces(),\n\
        ports_observable = this.ports_observable,\n\
        netflow_enable = this.model.status();\n\
\n\
    ports_observable().forEach(function (port_glob) {\n\
        if(port_glob.allocated_to() === 'flowmon')\n\
        {\n\
            port_glob.allocated_to('');\n\
        }\n\
        else if (port_glob.allocated_to() === ''){\n\
            port_glob.allocated_to(undefined);\n\
        }\n\
        interfaces.forEach(function (port_local) {\n\
            if (netflow_enable === 'enabled' && port_local.physical_port === port_glob.id() && port_local.allocated_to === 'flowmon' && port_local.enabled) {\n\
                port_glob.allocated_to('flowmon');\n\
            }\n\
        });\n\
    });\n\
}\n\
\n\
//sync from global port observable, not currently used\n\
NetflowSettings.prototype.syncPortsFrom = function(){\n\
    var interfaces = this.interfacesPane.models,\n\
        ports_observable = this.ports_observable;\n\
\n\
    ports_observable().forEach(function (port_glob) {\n\
        interfaces.forEach(function (port_local) {\n\
            if (port_local.physical_port() === port_glob.id() && port_glob.allocated_to() !== 'flowmon' && port_glob.allocated_to() !== undefined) {\n\
                port_local.allocated_to (port_glob.allocated_to() === '' ? 'flowmon' : port_glob.allocated_to());\n\
                port_local.enabled(false);\n\
            }\n\
        });\n\
    });\n\
}\n\
\n\
NetflowSettings.prototype.updateAllocations = function () {\n\
    var interfaces = this.model.interfaces();\n\
\n\
    interfaces.forEach(function (iface, i) {\n\
        if (iface.enabled) {\n\
            iface.allocated_to = 'flowmon';\n\
        }\n\
        interfaces[i] = iface;\n\
    });\n\
};\n\
\n\
module.exports = NetflowSettings;//@ sourceURL=netflow-settings/views/netflow-settings.js"
));
require.register("netflow-settings/models/netflow-settings.js", Function("exports, require, module",
"var model = require('model'),\n\
    defaults = require('model-defaults');\n\
\n\
var NetflowSettings = model('NetflowSettings')\n\
//    .route('http://johntron.apiary.io/flowmon')\n\
    .route('/spirent/flowmon')\n\
    .use(defaults)\n\
    .attr('status')\n\
    .attr('license_status')\n\
    .attr('protocol', {\"default\": []})\n\
    .attr('active_timeout', {\"default\": 1800})\n\
    .attr('inactive_timeout', {\"default\": 15})\n\
    .attr('interfaces', {\"default\": []});\n\
\n\
NetflowSettings.prototype.toggle = function (state) {\n\
    state = state ? 'enabled' : 'disabled';\n\
    this.status(state);\n\
};\n\
\n\
NetflowSettings.prototype.is_enabled = function () {\n\
    return 'enabled' === this.status();\n\
};\n\
\n\
NetflowSettings.prototype.is_exporting = function () {\n\
    var interfaces_enabled = false;\n\
\n\
    this.interfaces().map(function (iface) {\n\
        if ('flowmon' === iface.allocated_to && iface.enabled) {\n\
            interfaces_enabled = true;\n\
        }\n\
    });\n\
    return this.is_enabled() && interfaces_enabled;\n\
};\n\
\n\
module.exports = NetflowSettings;//@ sourceURL=netflow-settings/models/netflow-settings.js"
));
require.register("netflow-settings/templates/netflow-settings.js", Function("exports, require, module",
"module.exports = '<form class=\"netflow-settings main\">\\n\
    <div>\\n\
        <h3>NetFlow</h3>\\n\
        <button class=\"save-button save\">Save</button>\\n\
    </div>\\n\
    <div class=\"single-pane no-padding global\">\\n\
        <h4>Global settings</h4>\\n\
        <ul>\\n\
            <li class=\"mode\">\\n\
                <label for=\"netflow-on\">Enable</label>\\n\
                <input type=\"radio\" class=\"enable\" id=\"netflow-on\" name=\"mode\">\\n\
                <label for=\"netflow-off\">Disable</label>\\n\
                <input type=\"radio\" class=\"disable\" id=\"netflow-off\" name=\"mode\">\\n\
            </li>\\n\
        </ul>\\n\
    </div>\\n\
    <div class=\"single-pane no-padding tip\">\\n\
        <h4>Need a collector?</h4>\\n\
        <div>\\n\
            <p>\\n\
                FlowNBA Cloud is a Netflow collector service. Send your Netflow\\n\
                data to FlowNBA, then configure the collector\\'s monitoring and\\n\
                anomaly detection with your browser.\\n\
            </p>\\n\
            <p>\\n\
                Check out <a id=\"flownba\" href=\"https://www.flownba.com/?utm_source=axon\" target=\"_blank\">FlowNBA.com</a>\\n\
                for more information.\\n\
            </p>\\n\
        </div>\\n\
    </div>\\n\
</form>';//@ sourceURL=netflow-settings/templates/netflow-settings.js"
));
require.register("netflow-settings/views/global-settings.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    template = require('../templates/global-settings.js'),\n\
    emitter = require('emitter'),\n\
    event = require('event'),\n\
    classes = require('classes'),\n\
    validate = require('validate-form'),\n\
    noop = function () {};\n\
\n\
function GlobalSettings(model) {\n\
    this.model = model;\n\
    this.$el = domify(template);\n\
    this.strings = {\n\
        \"netflow-v5\": \"Netflow v5\",\n\
        \"netflow-v9\": \"Netflow v9\",\n\
        \"ipfix\": \"IPFIX\",\n\
        \"Please enter a timeout in seconds\": \"Please enter a timeout in seconds\"\n\
    };\n\
}\n\
\n\
emitter(GlobalSettings.prototype);\n\
\n\
GlobalSettings.prototype.setModel = function (model) {\n\
    this.model = model;\n\
};\n\
\n\
GlobalSettings.prototype.render = function () {\n\
    var protocols = this.model.protocol() || [],\n\
        $active_timeout = this.$el.querySelector('#active_timeout'),\n\
        $inactive_timeout = this.$el.querySelector('#inactive_timeout');\n\
\n\
    this.insertProtocols(protocols);\n\
\n\
    $active_timeout.value = this.model.active_timeout();\n\
    $inactive_timeout.value = this.model.inactive_timeout();\n\
\n\
    this.bind();\n\
\n\
    this.toggle(this.model.is_enabled());\n\
\n\
    return this.$el;\n\
};\n\
\n\
GlobalSettings.prototype.insertProtocols = function (protocols) {\n\
    var $protocol = this.$el.querySelector('.protocol'),\n\
        $option,\n\
        strings = this.strings;\n\
\n\
    protocols.forEach(function (protocol) {\n\
        $option = document.createElement('option');\n\
        $option.value = protocol.name;\n\
        $option.innerHTML = strings[protocol.name];\n\
        $option.selected = protocol.selected;\n\
        if (protocol.selected) {\n\
            // Hack to make the fancy dropdown work\n\
            $protocol.parentNode.setAttribute('data-value', strings[protocol.name]);\n\
        }\n\
        $protocol.appendChild($option);\n\
\n\
    });\n\
};\n\
\n\
GlobalSettings.prototype.bind = function () {\n\
    var $protocol = this.$el.querySelector('.protocol'),\n\
        $active_timeout = this.$el.querySelector('#active_timeout'),\n\
        $inactive_timeout = this.$el.querySelector('#inactive_timeout');\n\
\n\
    event.bind($protocol, 'change', this.protocolChanged.bind(this));\n\
    event.bind($active_timeout, 'change', this.activeTimeoutChanged.bind(this));\n\
    event.bind($inactive_timeout, 'change', this.inactiveTimeoutChanged.bind(this));\n\
    this.bindValidator();\n\
};\n\
\n\
GlobalSettings.prototype.bindValidator = function () {\n\
    this.validator = validate(this.$el)\n\
        .on('blur')\n\
        .field('active_timeout')\n\
            .is('required', this.strings[\"Please enter a timeout in seconds\"])\n\
            .is(/^\\d+$/, this.strings[\"Please enter a timeout in seconds\"])\n\
        .field('inactive_timeout')\n\
            .is('required', this.strings[\"Please enter a timeout in seconds\"])\n\
            .is(/^\\d+$/, this.strings[\"Please enter a timeout in seconds\"]);\n\
};\n\
\n\
GlobalSettings.prototype.validate = function (success, fail) {\n\
    success = success || noop;\n\
    fail = fail || noop;\n\
\n\
    this.validator.validate(function (err, is_valid, msg) {\n\
        if (is_valid) {\n\
            success();\n\
        } else {\n\
            fail(err);\n\
        }\n\
    });\n\
};\n\
\n\
GlobalSettings.prototype.toggle = function (show) {\n\
    show = show === undefined ? classes(this.$el).has('hidden') : show;\n\
\n\
    if (show) {\n\
        classes(this.$el).remove('hidden');\n\
    } else {\n\
        classes(this.$el).add('hidden');\n\
    }\n\
};\n\
\n\
GlobalSettings.prototype.protocolChanged = function () {\n\
    var $protocol = this.$el.querySelector('.protocol'),\n\
        selected_index = $protocol.selectedIndex,\n\
        protocols = this.model.protocol(),\n\
        protocol = protocols[selected_index],\n\
        strings = this.strings;\n\
\n\
    $protocol.parentNode.setAttribute('data-value', strings[protocol.name]);\n\
\n\
    protocols.forEach(function (protocol) {\n\
        protocol.selected = false;\n\
    });\n\
\n\
    protocol.selected = true;\n\
\n\
    this.model.protocol(protocols);\n\
};\n\
\n\
GlobalSettings.prototype.activeTimeoutChanged = function () {\n\
    var timeout = +this.$el.querySelector('#active_timeout').value;\n\
\n\
    this.model.active_timeout(timeout);\n\
};\n\
\n\
GlobalSettings.prototype.inactiveTimeoutChanged = function () {\n\
    var timeout = +this.$el.querySelector('#inactive_timeout').value;\n\
\n\
    this.model.inactive_timeout(timeout);\n\
};\n\
\n\
module.exports = GlobalSettings;//@ sourceURL=netflow-settings/views/global-settings.js"
));
require.register("netflow-settings/templates/global-settings.js", Function("exports, require, module",
"module.exports = '<ul class=\"global-settings\">\\n\
    <li>\\n\
        <label>Use</label>\\n\
        <span class=\"light-select2\">\\n\
            <select class=\"protocol\"></select>\\n\
        </span>\\n\
    </li>\\n\
    <li>\\n\
        <label for=\"active_timeout\">Active timeout</label>\\n\
        <input type=\"text\" name=\"active_timeout\" id=\"active_timeout\" /> seconds\\n\
    </li>\\n\
    <li>\\n\
        <label for=\"inactive_timeout\">Inactive timeout</label>\\n\
        <input type=\"text\" name=\"inactive_timeout\" id=\"inactive_timeout\" /> seconds\\n\
    </li>\\n\
</ul>';//@ sourceURL=netflow-settings/templates/global-settings.js"
));
require.register("netflow-settings/views/interfaces.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    Selector = require('interface-selector'),\n\
    Settings = require('./interface-settings.js'),\n\
    template = domify(require('../templates/interfaces.js')),\n\
    classes = require('classes'),\n\
    event = require('event'),\n\
    emitter = require('emitter'),\n\
    lightbox = window.util.lightbox;\n\
\n\
function render_interface(model, $el) {\n\
    var classed = classes($el);\n\
\n\
    if (model.enabled()) {\n\
        classed.remove('streetwise');\n\
        classed.remove('player');\n\
        classed.add('flowmon');\n\
    } else if (model.changed().allocated_to === 'flowmon') {\n\
        // User stopped exporting on this port\n\
        classed.remove('flowmon');\n\
        classed.add('player');\n\
    } else {\n\
        classed.remove('flowmon');\n\
        classed.add(model.changed().allocated_to);\n\
    }\n\
\n\
\n\
    if (model.available()) {\n\
        classed.add('available');\n\
    } else {\n\
        classed.remove('available');\n\
    }\n\
\n\
    return $el;\n\
}\n\
\n\
function Interfaces(interfaces, visible) {\n\
    this.models = Selector.sort(interfaces || []);\n\
    this.visible = visible;\n\
    this.selector = new Selector(this.models, render_interface);\n\
    this.$el = template.cloneNode(true);\n\
    this.views = [];\n\
    this.strings = {\n\
        \"Select a port\": window.translate(\"Choose the ports from which you want to generate NetFlow records. Connect each selected port to a SPAN or TAP port to enable capture of network data to generate NetFlow records.\"),\n\
        \"flowmon port overwrite confirmation\": window.translate(\"Reallocating this port to Netflow will stop AxonPoint Server on this port.\")\n\
    };\n\
}\n\
\n\
emitter(Interfaces.prototype);\n\
\n\
Interfaces.prototype.render = function () {\n\
    var selector = this.selector,\n\
        $selector = this.$el.querySelector('.selector'),\n\
        $settings = this.$el.querySelector('.settings'),\n\
        add = this.add.bind(this);\n\
\n\
    selector.render();\n\
    if (!$selector.contains(selector.$el)) {\n\
        $selector.appendChild(selector.$el);\n\
    }\n\
\n\
    if (this.models.length) {\n\
        $settings.innerHTML = '<p>' + this.strings[\"Select a port\"] + '</p>';\n\
    }\n\
\n\
    this.models.forEach(function (iface, i) {\n\
        add(iface, i);\n\
    });\n\
\n\
    this.bind();\n\
\n\
    this.toggle(this.visible);\n\
\n\
    return this.$el;\n\
};\n\
\n\
Interfaces.prototype.bind = function () {\n\
    var views = this.views,\n\
        selector = this.selector,\n\
        select = this.select.bind(this),\n\
        emit = this.emit.bind(this, 'changed');\n\
\n\
    views.forEach(function (view) {\n\
        view.on('changed', emit);\n\
    }, this);\n\
\n\
    selector.on('select', select);\n\
};\n\
\n\
Interfaces.prototype.toggle = function (visible) {\n\
    if (visible) {\n\
        classes(this.$el).remove('hidden');\n\
    } else {\n\
        classes(this.$el).add('hidden');\n\
    }\n\
\n\
    this.visible = visible;\n\
};\n\
\n\
Interfaces.prototype.add = function (iface, index) {\n\
    var $settings = this.$el.querySelector('.settings'),\n\
        view = new Settings(iface);\n\
\n\
    if (isNaN(index)) {\n\
        index = this.models.length;\n\
    }\n\
\n\
    view.render();\n\
    view.hide();\n\
    $settings.appendChild(view.$el);\n\
\n\
    this.models[index] = iface;\n\
    this.views[index] = view;\n\
};\n\
\n\
Interfaces.prototype.select = function (model) {\n\
    var self = this,\n\
        $message = self.$el.querySelector('.settings > p'),\n\
        models = self.models,\n\
        views = self.views,\n\
        select_action = function () {\n\
            // Hide \"select a port\" message\n\
            if ($message) {\n\
                $message.parentNode.removeChild($message);\n\
            }\n\
\n\
            views.forEach(function (view, i) {\n\
                if (models[i].physical_port() === model.physical_port()) {\n\
                    view.show();\n\
                } else {\n\
                    // Hide other views\n\
                    view.hide();\n\
                }\n\
            }, this);\n\
        };\n\
\n\
    if(model.allocated_to() !== 'stc' && model.allocated_to() !== 'flowmon'){\n\
        lightbox.confirmation_dialog(self,self.strings[\"flowmon port overwrite confirmation\"],select_action);\n\
        return;\n\
    }\n\
\n\
    select_action.call(self);\n\
};\n\
\n\
Interfaces.prototype.reset_interfaces = function (interfaces) {\n\
    this.selector.unbind();\n\
    this.selector.set_models(interfaces);\n\
}\n\
\n\
module.exports = Interfaces;//@ sourceURL=netflow-settings/views/interfaces.js"
));
require.register("netflow-settings/templates/interfaces.js", Function("exports, require, module",
"module.exports = '<div class=\"interfaces transmit-receive-container single-pane box\">\\n\
    <ul>\\n\
        <li class=\"selector\"></li>\\n\
        <li class=\"settings endpoint-container\">Select an interface above</li>\\n\
    </ul>\\n\
</div>';//@ sourceURL=netflow-settings/templates/interfaces.js"
));
require.register("netflow-settings/views/interface-settings.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    template = require('../templates/interface/settings.js'),\n\
    CollectorModel = require('../models/collector.js'),\n\
    List = require('./collector-list.js'),\n\
    classes = require('classes'),\n\
    event = require('event'),\n\
    emitter = require('emitter');\n\
\n\
function InterfaceSettings(model) {\n\
    var collectors = model.collectors() || [];\n\
\n\
    this.model = model;\n\
    this.$el = domify(template);\n\
\n\
    // Convert objects to Models\n\
    collectors.forEach(function (collector, i) {\n\
        collectors[i] = new CollectorModel(collector);\n\
    });\n\
    this.collectors = new List(collectors);\n\
\n\
    this.strings = {\n\
        \"Export this interface's traffic\": \"Export this interface's traffic\"\n\
    };\n\
}\n\
\n\
emitter(InterfaceSettings.prototype);\n\
\n\
InterfaceSettings.prototype.render = function () {\n\
    var $checkbox = this.$el.querySelector('.export input'),\n\
        $collectors = this.$el.querySelector('.collectors'),\n\
        collectors = this.collectors,\n\
        enabled = this.model.enabled();\n\
\n\
    collectors.render();\n\
    $collectors.appendChild(collectors.$el);\n\
    $checkbox.checked = enabled;\n\
\n\
    this.enable(enabled);\n\
\n\
    this.bind();\n\
\n\
    return this.$el;\n\
};\n\
\n\
InterfaceSettings.prototype.show = function () {\n\
    classes(this.$el).remove('hidden');\n\
};\n\
\n\
InterfaceSettings.prototype.hide = function () {\n\
    classes(this.$el).add('hidden');\n\
};\n\
\n\
InterfaceSettings.prototype.is_visible = function () {\n\
    return !classes(this.$el).has('hidden');\n\
};\n\
\n\
InterfaceSettings.prototype.bind = function () {\n\
    var $checkbox = this.$el.querySelector('.export input'),\n\
        $add = this.$el.querySelector('.add-collector'),\n\
        enable = this.enable.bind(this),\n\
        changed = function (e) {\n\
            if (e && e.preventDefault) {\n\
                e.preventDefault();\n\
            }\n\
\n\
            var state = $checkbox.checked;\n\
            enable(state);\n\
        },\n\
        collectors = this.collectors,\n\
        add = function (e) {\n\
            if (e && e.preventDefault) {\n\
                e.preventDefault();\n\
            }\n\
\n\
            collectors.add();\n\
        };\n\
\n\
    event.bind($checkbox, 'change', changed.bind(this));\n\
    event.bind($add, 'click', add);\n\
};\n\
\n\
InterfaceSettings.prototype.setInterface = function (iface) {\n\
    this.model = iface;\n\
};\n\
\n\
InterfaceSettings.prototype.enable = function (enabled) {\n\
    var $collectors = this.$el.querySelector('.collectors'),\n\
        $add = this.$el.querySelector('.add-collector');\n\
\n\
    this.model.enabled(enabled);\n\
\n\
    if (enabled) {\n\
        classes($collectors).remove('hidden');\n\
        classes($add).remove('hidden');\n\
    } else {\n\
        classes($collectors).add('hidden');\n\
        classes($add).add('hidden');\n\
    }\n\
};\n\
\n\
module.exports = InterfaceSettings;//@ sourceURL=netflow-settings/views/interface-settings.js"
));
require.register("netflow-settings/templates/interface/settings.js", Function("exports, require, module",
"module.exports = '<ul class=\"form\">\\n\
    <li class=\"export\">\\n\
        <label><input type=\"checkbox\"> Export this interface\\'s traffic</label>\\n\
    </li>\\n\
    <li class=\"collectors\"></li>\\n\
    <li class=\"add-collector\">\\n\
        <button>Add collector</button>\\n\
    </li>\\n\
</ul>';//@ sourceURL=netflow-settings/templates/interface/settings.js"
));
require.register("netflow-settings/views/collector-list.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    template = require('../templates/collector-list.js'),\n\
    Model = require('../models/collector.js'),\n\
    Subview = require('./collector.js'),\n\
    event = require('event'),\n\
    emitter = require('emitter'),\n\
    classes = require('classes');\n\
\n\
function CollectorList(collectors) {\n\
    this.models = collectors || [];\n\
    this.$collectors = [];\n\
    this.views = [];\n\
    this.$el = domify(template);\n\
    this.strings = {\n\
        'No collectors': 'No collectors'\n\
    };\n\
}\n\
\n\
emitter(CollectorList.prototype);\n\
\n\
CollectorList.prototype.render = function () {\n\
    var add = this.add.bind(this),\n\
        $li;\n\
\n\
    if (this.models.length) {\n\
        this.models.forEach(add);\n\
    } else {\n\
        this.addEmptyMessage();\n\
    }\n\
\n\
    return this.$el;\n\
};\n\
\n\
CollectorList.prototype.add = function (model, index) {\n\
    var $parent = this.$el,\n\
        $li = document.createElement('li'),\n\
        view,\n\
        $view,\n\
        bind_item = this.bindItem.bind(this),\n\
        $empty_message = this.$el.querySelector('.empty-message');\n\
\n\
    if ($empty_message) {\n\
        this.$el.removeChild($empty_message);\n\
    }\n\
\n\
    if (isNaN(index)) {\n\
        index = this.models.length;\n\
    }\n\
\n\
    if (model instanceof Model) {\n\
        model.id(index); // \"save\" this model, so it's not discarded when editor is canceled\n\
    } else {\n\
        // Model was probably an Event, so create a new model\n\
        model = new Model({});\n\
    }\n\
\n\
    view = new Subview(model, model.isNew());\n\
    this.models[index] = model;\n\
    this.$collectors[index] = $li;\n\
    this.views[index] = view;\n\
\n\
    $view = view.render();\n\
    $li.appendChild($view);\n\
    $parent.appendChild($li);\n\
\n\
    bind_item(index, $li, view);\n\
};\n\
\n\
CollectorList.prototype.bindItem = function (index, $el, view, rebind) {\n\
    var emit = this.emit.bind(this),\n\
        remove = this.remove.bind(this),\n\
        models = this.models;\n\
\n\
    if (rebind) {\n\
        view.off('mode_changed');\n\
        view.off('saved');\n\
        view.off('removed');\n\
    }\n\
\n\
    view.on('mode_changed', function () {\n\
        // Redraw <li></li>\n\
        $el.innerHTML = '';\n\
        $el.appendChild(view.$el);\n\
    });\n\
\n\
    view.on('saved', function (model) {\n\
        model.id(index); // \"save\" this model, so it's not discared when editor is canceled\n\
        emit('changed', models);\n\
    });\n\
\n\
    view.on('removed', function () {\n\
        remove(index);\n\
        emit('changed', models);\n\
    });\n\
};\n\
\n\
\n\
CollectorList.prototype.remove = function (index) {\n\
    var $el = this.$collectors[index],\n\
        view;\n\
\n\
    this.$el.removeChild($el);\n\
    this.models.splice(index, 1);\n\
    this.$collectors.splice(index, 1);\n\
    this.views.splice(index, 1);\n\
\n\
    // Re-bind proceeding elements\n\
    for (index; index < this.views.length; index += 1) {\n\
        view = this.views[index];\n\
        $el = this.$collectors[index];\n\
        this.bindItem(index, $el, view, true);\n\
    }\n\
\n\
    if (!this.models.length) {\n\
        this.addEmptyMessage();\n\
    }\n\
};\n\
\n\
CollectorList.prototype.addEmptyMessage = function () {\n\
    var $li = document.createElement('li');\n\
\n\
    $li.innerHTML = this.strings['No collectors'];\n\
    classes($li).add('italic');\n\
    classes($li).add('empty-message');\n\
    this.$el.appendChild($li);\n\
};\n\
\n\
module.exports = CollectorList;//@ sourceURL=netflow-settings/views/collector-list.js"
));
require.register("netflow-settings/templates/collector-list.js", Function("exports, require, module",
"module.exports = '<ul class=\"collector-list\"></ul>';//@ sourceURL=netflow-settings/templates/collector-list.js"
));
require.register("netflow-settings/views/collector.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    view_template = require('../templates/collector.js'),\n\
    edit_template = require('../templates/collector-editor.js'),\n\
    event = require('event'),\n\
    emitter = require('emitter'),\n\
    validate = require('validate-form'),\n\
    is_host = require('is-host'),\n\
    noop = function () {};\n\
\n\
function Collector(model, editing) {\n\
    this.model = model;\n\
    this.editing = editing || false;\n\
    this.$view = domify(view_template);\n\
    this.$edit = domify(edit_template);\n\
    this.strings = {\n\
        \"Please enter a valid host address (IPv4, IPv6, or name)\": \"Please enter a valid host address (IPv4, IPv6, or name)\",\n\
        \"Please enter a valid port number\": \"Please enter a valid port number\",\n\
        \"Port must be less than 65535\": \"Port must be less than 65535\"\n\
    };\n\
}\n\
\n\
emitter(Collector.prototype);\n\
\n\
Collector.prototype.view = function () {\n\
    var $el = this.$view,\n\
        $address = $el.querySelector('.address'),\n\
        $port = $el.querySelector('.port'),\n\
        model = this.model;\n\
\n\
    $address.innerHTML = model.address();\n\
    $port.innerHTML = model.port();\n\
\n\
    this.$el = $el;\n\
\n\
    if (this.editing) {\n\
        this.emit('mode_changed', 'view');\n\
        this.editing = false;\n\
    }\n\
\n\
    return $el;\n\
};\n\
\n\
Collector.prototype.edit = function () {\n\
    var model = this.model,\n\
        $el = this.$edit,\n\
        $address = $el.querySelector('[name=address]'),\n\
        $port = $el.querySelector('[name=port]');\n\
\n\
    $address.value = model.address();\n\
    $port.value = model.port();\n\
\n\
    this.$el = $el;\n\
\n\
    if (!this.editing) {\n\
        this.emit('mode_changed', 'edit');\n\
        this.editing = true;\n\
    }\n\
\n\
    return $el;\n\
};\n\
\n\
Collector.prototype.save = function () {\n\
    var model = this.model,\n\
        $el = this.$edit,\n\
        address = $el.querySelector('[name=address]').value,\n\
        port = $el.querySelector('[name=port]').value;\n\
\n\
    model.address(address);\n\
    model.port(port);\n\
\n\
    this.emit('saved', model);\n\
    this.view();\n\
};\n\
\n\
Collector.prototype.remove = function () {\n\
    var old = this.model;\n\
\n\
    this.model.destroy();\n\
    this.emit('removed', old);\n\
};\n\
\n\
\n\
Collector.prototype.render = function () {\n\
    var $el;\n\
\n\
    this.bind();\n\
\n\
    if (this.editing) {\n\
        $el = this.edit();\n\
    } else {\n\
        $el = this.view();\n\
    }\n\
\n\
    return $el;\n\
};\n\
\n\
Collector.prototype.bind = function () {\n\
    // View-mode\n\
    var $view = this.$view,\n\
        $edit_trigger = $view.querySelector('.edit'),\n\
        $delete = $view.querySelector('.delete'),\n\
\n\
    // Edit-mode\n\
        $edit = this.$edit,\n\
        $cancel = $edit.querySelector('.cancel'),\n\
        $save = $edit.querySelector('.save'),\n\
        cancel = function () {\n\
            if (this.model.isNew()) {\n\
                this.remove();\n\
            } else {\n\
                this.view();\n\
            }\n\
        }.bind(this),\n\
        save = this.save.bind(this);\n\
\n\
    // View-mode\n\
    event.bind($edit_trigger, 'click', this.edit.bind(this));\n\
    event.bind($delete, 'click', this.remove.bind(this));\n\
\n\
    // Edit-mode\n\
    event.bind($cancel, 'click', cancel);\n\
    event.bind($save, 'click', this.validate.bind(this, save, noop));\n\
\n\
    this.bindValidator();\n\
};\n\
\n\
Collector.prototype.bindValidator = function () {\n\
    var less_than_65535 = function (val) {\n\
            return val < 65535;\n\
        };\n\
\n\
    this.validator = validate(this.$edit)\n\
        .on('blur')\n\
        .use(is_host)\n\
        .field('address')\n\
            .is('required', this.strings[\"Please enter a valid host address (IPv4, IPv6, or name)\"])\n\
            .is('host', this.strings[\"Please enter a valid host address (IPv4, IPv6, or name)\"])\n\
        .field('port')\n\
            .is('required', this.strings[\"Please enter a valid port number\"])\n\
            .is(/^\\d+$/, this.strings[\"Please enter a valid port number\"])\n\
            .is(less_than_65535, this.strings[\"Port must be less than 65535\"]);\n\
};\n\
\n\
Collector.prototype.validate = function (success, fail) {\n\
    success = success || noop;\n\
    fail = fail || noop;\n\
\n\
    this.validator.validate(function (err, is_valid, msg) {\n\
        if (is_valid) {\n\
            success();\n\
        } else {\n\
            fail(err);\n\
        }\n\
    });\n\
};\n\
\n\
module.exports = Collector;//@ sourceURL=netflow-settings/views/collector.js"
));
require.register("netflow-settings/models/collector.js", Function("exports, require, module",
"var model = require('model'),\n\
    defaults = require('model-defaults');\n\
\n\
\n\
var Collector = model('Collector')\n\
    .route('/netflow-settings/collectors')\n\
    .use(defaults)\n\
    .attr('id')\n\
    .attr('address', {\"default\": ''})\n\
    .attr('port', {\"default\": '2055'});\n\
\n\
Collector.primaryKey = 'id';\n\
\n\
Collector.prototype.destroy = function () {\n\
    this.model.emit('destroying', this);\n\
    this.emit('destroying');\n\
    this.destroyed = true;\n\
    this.model.emit('destroy', this);\n\
    this.emit('destroy');\n\
};\n\
\n\
module.exports = Collector;//@ sourceURL=netflow-settings/models/collector.js"
));
require.register("netflow-settings/templates/collector.js", Function("exports, require, module",
"module.exports = '<div class=\"collector\">\\n\
    <span class=\"address\"></span>:<span class=\"port\"></span>\\n\
    <div class=\"actions\">\\n\
        <button class=\"edit\">edit</button>\\n\
        <button class=\"delete\">delete</button>\\n\
    </div>\\n\
</div>';//@ sourceURL=netflow-settings/templates/collector.js"
));
require.register("netflow-settings/templates/collector-editor.js", Function("exports, require, module",
"module.exports = '<div class=\"collector-editor\">\\n\
    <ul>\\n\
        <li><label>Address</label> <input type=\"text\" name=\"address\" class=\"address\" /></li>\\n\
        <li><label>Port</label> <input type=\"text\" name=\"port\" class=\"port\" min=\"1\" /></li>\\n\
        <li><button class=\"cancel button-cancel cancel-button\">cancel</button> <button class=\"save\">Save</button></li>\\n\
    </ul>\\n\
</div>';//@ sourceURL=netflow-settings/templates/collector-editor.js"
));
require.register("samsonjs-strftime/strftime.js", Function("exports, require, module",
"//\n\
// strftime\n\
// github.com/samsonjs/strftime\n\
// @_sjs\n\
//\n\
// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n\
//\n\
// MIT License\n\
// http://sjs.mit-license.org\n\
//\n\
\n\
;(function() {\n\
\n\
  //// Where to export the API\n\
  var namespace;\n\
\n\
  // CommonJS / Node module\n\
  if (typeof module !== 'undefined') {\n\
    namespace = module.exports = strftime;\n\
  }\n\
\n\
  // Browsers and other environments\n\
  else {\n\
    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n\
    namespace = (function(){ return this || (1,eval)('this') }());\n\
  }\n\
\n\
  function words(s) { return (s || '').split(' '); }\n\
\n\
  var DefaultLocale =\n\
  { days: words('Sunday Monday Tuesday Wednesday Thursday Friday Saturday')\n\
  , shortDays: words('Sun Mon Tue Wed Thu Fri Sat')\n\
  , months: words('January February March April May June July August September October November December')\n\
  , shortMonths: words('Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec')\n\
  , AM: 'AM'\n\
  , PM: 'PM'\n\
  , am: 'am'\n\
  , pm: 'pm'\n\
  };\n\
\n\
  namespace.strftime = strftime;\n\
  function strftime(fmt, d, locale) {\n\
    return _strftime(fmt, d, locale);\n\
  }\n\
\n\
  // locale is optional\n\
  namespace.strftimeTZ = strftime.strftimeTZ = strftimeTZ;\n\
  function strftimeTZ(fmt, d, locale, timezone) {\n\
    if ((typeof locale == 'number' || typeof locale == 'string') && timezone == null) {\n\
      timezone = locale;\n\
      locale = undefined;\n\
    }\n\
    return _strftime(fmt, d, locale, { timezone: timezone });\n\
  }\n\
\n\
  namespace.strftimeUTC = strftime.strftimeUTC = strftimeUTC;\n\
  function strftimeUTC(fmt, d, locale) {\n\
    return _strftime(fmt, d, locale, { utc: true });\n\
  }\n\
\n\
  namespace.localizedStrftime = strftime.localizedStrftime = localizedStrftime;\n\
  function localizedStrftime(locale) {\n\
    return function(fmt, d, options) {\n\
      return strftime(fmt, d, locale, options);\n\
    };\n\
  }\n\
\n\
  // d, locale, and options are optional, but you can't leave\n\
  // holes in the argument list. If you pass options you have to pass\n\
  // in all the preceding args as well.\n\
  //\n\
  // options:\n\
  //   - locale   [object] an object with the same structure as DefaultLocale\n\
  //   - timezone [number] timezone offset in minutes from GMT\n\
  function _strftime(fmt, d, locale, options) {\n\
    options = options || {};\n\
\n\
    // d and locale are optional so check if d is really the locale\n\
    if (d && !quacksLikeDate(d)) {\n\
      locale = d;\n\
      d = undefined;\n\
    }\n\
    d = d || new Date();\n\
\n\
    locale = locale || DefaultLocale;\n\
    locale.formats = locale.formats || {};\n\
\n\
    // Hang on to this Unix timestamp because we might mess with it directly below.\n\
    var timestamp = d.getTime();\n\
\n\
    var tz = options.timezone;\n\
    var tzType = typeof tz;\n\
\n\
    if (options.utc || tzType == 'number' || tzType == 'string') {\n\
      d = dateToUTC(d);\n\
    }\n\
\n\
    if (tz) {\n\
      // ISO 8601 format timezone string, [-+]HHMM\n\
      //\n\
      // Convert to the number of minutes and it'll be applied to the date below.\n\
      if (tzType == 'string') {\n\
        var sign = tz[0] == '-' ? -1 : 1;\n\
        var hours = parseInt(tz.slice(1, 3), 10);\n\
        var mins = parseInt(tz.slice(3, 5), 10);\n\
        tz = sign * (60 * hours) + mins;\n\
      }\n\
\n\
      if (tzType) {\n\
        d = new Date(d.getTime() + (tz * 60000));\n\
      }\n\
    }\n\
\n\
    // Most of the specifiers supported by C's strftime, and some from Ruby.\n\
    // Some other syntax extensions from Ruby are supported: %-, %_, and %0\n\
    // to pad with nothing, space, or zero (respectively).\n\
    return fmt.replace(/%([-_0]?.)/g, function(_, c) {\n\
      var mod, padding;\n\
\n\
      if (c.length == 2) {\n\
        mod = c[0];\n\
        // omit padding\n\
        if (mod == '-') {\n\
          padding = '';\n\
        }\n\
        // pad with space\n\
        else if (mod == '_') {\n\
          padding = ' ';\n\
        }\n\
        // pad with zero\n\
        else if (mod == '0') {\n\
          padding = '0';\n\
        }\n\
        else {\n\
          // unrecognized, return the format\n\
          return _;\n\
        }\n\
        c = c[1];\n\
      }\n\
\n\
      switch (c) {\n\
\n\
        // Examples for new Date(0) in GMT\n\
\n\
        // 'Thursday'\n\
        case 'A': return locale.days[d.getDay()];\n\
\n\
        // 'Thu'\n\
        case 'a': return locale.shortDays[d.getDay()];\n\
\n\
        // 'January'\n\
        case 'B': return locale.months[d.getMonth()];\n\
\n\
        // 'Jan'\n\
        case 'b': return locale.shortMonths[d.getMonth()];\n\
\n\
        // '19'\n\
        case 'C': return pad(Math.floor(d.getFullYear() / 100), padding);\n\
\n\
        // '01/01/70'\n\
        case 'D': return _strftime(locale.formats.D || '%m/%d/%y', d, locale);\n\
\n\
        // '01'\n\
        case 'd': return pad(d.getDate(), padding);\n\
\n\
        // '01'\n\
        case 'e': return d.getDate();\n\
\n\
        // '1970-01-01'\n\
        case 'F': return _strftime(locale.formats.F || '%Y-%m-%d', d, locale);\n\
\n\
        // '00'\n\
        case 'H': return pad(d.getHours(), padding);\n\
\n\
        // 'Jan'\n\
        case 'h': return locale.shortMonths[d.getMonth()];\n\
\n\
        // '12'\n\
        case 'I': return pad(hours12(d), padding);\n\
\n\
        // '000'\n\
        case 'j':\n\
          var y = new Date(d.getFullYear(), 0, 1);\n\
          var day = Math.ceil((d.getTime() - y.getTime()) / (1000 * 60 * 60 * 24));\n\
          return pad(day, 3);\n\
\n\
        // ' 0'\n\
        case 'k': return pad(d.getHours(), padding == null ? ' ' : padding);\n\
\n\
        // '000'\n\
        case 'L': return pad(Math.floor(timestamp % 1000), 3);\n\
\n\
        // '12'\n\
        case 'l': return pad(hours12(d), padding == null ? ' ' : padding);\n\
\n\
        // '00'\n\
        case 'M': return pad(d.getMinutes(), padding);\n\
\n\
        // '01'\n\
        case 'm': return pad(d.getMonth() + 1, padding);\n\
\n\
        // '\\n\
'\n\
        case 'n': return '\\n\
';\n\
\n\
        // '1st'\n\
        case 'o': return String(d.getDate()) + ordinal(d.getDate());\n\
\n\
        // 'am'\n\
        case 'P': return d.getHours() < 12 ? locale.am : locale.pm;\n\
\n\
        // 'AM'\n\
        case 'p': return d.getHours() < 12 ? locale.AM : locale.PM;\n\
\n\
        // '00:00'\n\
        case 'R': return _strftime(locale.formats.R || '%H:%M', d, locale);\n\
\n\
        // '12:00:00 AM'\n\
        case 'r': return _strftime(locale.formats.r || '%I:%M:%S %p', d, locale);\n\
\n\
        // '00'\n\
        case 'S': return pad(d.getSeconds(), padding);\n\
\n\
        // '0'\n\
        case 's': return Math.floor(timestamp / 1000);\n\
\n\
        // '00:00:00'\n\
        case 'T': return _strftime(locale.formats.T || '%H:%M:%S', d, locale);\n\
\n\
        // '\\t'\n\
        case 't': return '\\t';\n\
\n\
        // '00'\n\
        case 'U': return pad(weekNumber(d, 'sunday'), padding);\n\
\n\
        // '4'\n\
        case 'u':\n\
          var day = d.getDay();\n\
          return day == 0 ? 7 : day; // 1 - 7, Monday is first day of the week\n\
\n\
        // '1-Jan-1970'\n\
        case 'v': return _strftime(locale.formats.v || '%e-%b-%Y', d, locale);\n\
\n\
        // '00'\n\
        case 'W': return pad(weekNumber(d, 'monday'), padding);\n\
\n\
        // '4'\n\
        case 'w': return d.getDay(); // 0 - 6, Sunday is first day of the week\n\
\n\
        // '1970'\n\
        case 'Y': return d.getFullYear();\n\
\n\
        // '70'\n\
        case 'y':\n\
          var y = String(d.getFullYear());\n\
          return y.slice(y.length - 2);\n\
\n\
        // 'GMT'\n\
        case 'Z':\n\
          if (options.utc) {\n\
            return \"GMT\";\n\
          }\n\
          else {\n\
            var tzString = d.toString().match(/\\((\\w+)\\)/);\n\
            return tzString && tzString[1] || '';\n\
          }\n\
\n\
        // '+0000'\n\
        case 'z':\n\
          if (options.utc) {\n\
            return \"+0000\";\n\
          }\n\
          else {\n\
            var off = typeof tz == 'number' ? tz : -d.getTimezoneOffset();\n\
            return (off < 0 ? '-' : '+') + pad(Math.abs(off / 60)) + pad(off % 60);\n\
          }\n\
\n\
        default: return c;\n\
      }\n\
    });\n\
  }\n\
\n\
  function dateToUTC(d) {\n\
    var msDelta = (d.getTimezoneOffset() || 0) * 60000;\n\
    return new Date(d.getTime() + msDelta);\n\
  }\n\
\n\
  var RequiredDateMethods = ['getTime', 'getTimezoneOffset', 'getDay', 'getDate', 'getMonth', 'getFullYear', 'getYear', 'getHours', 'getMinutes', 'getSeconds'];\n\
  function quacksLikeDate(x) {\n\
    var i = 0\n\
      , n = RequiredDateMethods.length\n\
      ;\n\
    for (i = 0; i < n; ++i) {\n\
      if (typeof x[RequiredDateMethods[i]] != 'function') {\n\
        return false;\n\
      }\n\
    }\n\
    return true;\n\
  }\n\
\n\
  // Default padding is '0' and default length is 2, both are optional.\n\
  function pad(n, padding, length) {\n\
    // pad(n, <length>)\n\
    if (typeof padding === 'number') {\n\
      length = padding;\n\
      padding = '0';\n\
    }\n\
\n\
    // Defaults handle pad(n) and pad(n, <padding>)\n\
    if (padding == null) {\n\
      padding = '0';\n\
    }\n\
    length = length || 2;\n\
\n\
    var s = String(n);\n\
    // padding may be an empty string, don't loop forever if it is\n\
    if (padding) {\n\
      while (s.length < length) s = padding + s;\n\
    }\n\
    return s;\n\
  }\n\
\n\
  function hours12(d) {\n\
    var hour = d.getHours();\n\
    if (hour == 0) hour = 12;\n\
    else if (hour > 12) hour -= 12;\n\
    return hour;\n\
  }\n\
\n\
  // Get the ordinal suffix for a number: st, nd, rd, or th\n\
  function ordinal(n) {\n\
    var i = n % 10\n\
      , ii = n % 100\n\
      ;\n\
    if ((ii >= 11 && ii <= 13) || i === 0 || i >= 4) {\n\
      return 'th';\n\
    }\n\
    switch (i) {\n\
      case 1: return 'st';\n\
      case 2: return 'nd';\n\
      case 3: return 'rd';\n\
    }\n\
  }\n\
\n\
  // firstWeekday: 'sunday' or 'monday', default is 'sunday'\n\
  //\n\
  // Pilfered & ported from Ruby's strftime implementation.\n\
  function weekNumber(d, firstWeekday) {\n\
    firstWeekday = firstWeekday || 'sunday';\n\
\n\
    // This works by shifting the weekday back by one day if we\n\
    // are treating Monday as the first day of the week.\n\
    var wday = d.getDay();\n\
    if (firstWeekday == 'monday') {\n\
      if (wday == 0) // Sunday\n\
        wday = 6;\n\
      else\n\
        wday--;\n\
    }\n\
    var firstDayOfYear = new Date(d.getFullYear(), 0, 1)\n\
      , yday = (d - firstDayOfYear) / 86400000\n\
      , weekNum = (yday + 7 - wday) / 7\n\
      ;\n\
    return Math.floor(weekNum);\n\
  }\n\
\n\
}());\n\
//@ sourceURL=samsonjs-strftime/strftime.js"
));
require.register("johntron-moment/moment.js", Function("exports, require, module",
"//! moment.js\n\
//! version : 2.8.1\n\
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\
//! license : MIT\n\
//! momentjs.com\n\
\n\
(function (undefined) {\n\
    /************************************\n\
        Constants\n\
    ************************************/\n\
\n\
    var moment,\n\
        VERSION = '2.8.1',\n\
        // the global-scope this is NOT the global object in Node.js\n\
        globalScope = typeof global !== 'undefined' ? global : this,\n\
        oldGlobalMoment,\n\
        round = Math.round,\n\
        i,\n\
\n\
        YEAR = 0,\n\
        MONTH = 1,\n\
        DATE = 2,\n\
        HOUR = 3,\n\
        MINUTE = 4,\n\
        SECOND = 5,\n\
        MILLISECOND = 6,\n\
\n\
        // internal storage for locale config files\n\
        locales = {},\n\
\n\
        // extra moment internal properties (plugins register props here)\n\
        momentProperties = [],\n\
\n\
        // check for nodeJS\n\
        hasModule = (typeof module !== 'undefined' && module.exports),\n\
\n\
        // ASP.NET json date format regex\n\
        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n\
        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\
\n\
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\
        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\
\n\
        // format tokens\n\
        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,\n\
        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LT|LL?L?L?|l{1,4})/g,\n\
\n\
        // parsing token regexes\n\
        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n\
        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n\
        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n\
        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n\
        parseTokenDigits = /\\d+/, // nonzero number of digits\n\
        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n\
        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n\
        parseTokenT = /T/i, // T (ISO separator)\n\
        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\
        parseTokenOrdinal = /\\d{1,2}/,\n\
\n\
        //strict parsing regexes\n\
        parseTokenOneDigit = /\\d/, // 0 - 9\n\
        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n\
        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n\
        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n\
        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n\
        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\
\n\
        // iso 8601 regex\n\
        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\
        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\
\n\
        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\
\n\
        isoDates = [\n\
            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n\
            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n\
            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n\
            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n\
            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n\
        ],\n\
\n\
        // iso time formats and regexes\n\
        isoTimes = [\n\
            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\
            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n\
            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n\
            ['HH', /(T| )\\d\\d/]\n\
        ],\n\
\n\
        // timezone chunker \"+10:00\" > [\"10\", \"00\"] or \"-1530\" > [\"-15\", \"30\"]\n\
        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\
\n\
        // getter and setter names\n\
        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n\
        unitMillisecondFactors = {\n\
            'Milliseconds' : 1,\n\
            'Seconds' : 1e3,\n\
            'Minutes' : 6e4,\n\
            'Hours' : 36e5,\n\
            'Days' : 864e5,\n\
            'Months' : 2592e6,\n\
            'Years' : 31536e6\n\
        },\n\
\n\
        unitAliases = {\n\
            ms : 'millisecond',\n\
            s : 'second',\n\
            m : 'minute',\n\
            h : 'hour',\n\
            d : 'day',\n\
            D : 'date',\n\
            w : 'week',\n\
            W : 'isoWeek',\n\
            M : 'month',\n\
            Q : 'quarter',\n\
            y : 'year',\n\
            DDD : 'dayOfYear',\n\
            e : 'weekday',\n\
            E : 'isoWeekday',\n\
            gg: 'weekYear',\n\
            GG: 'isoWeekYear'\n\
        },\n\
\n\
        camelFunctions = {\n\
            dayofyear : 'dayOfYear',\n\
            isoweekday : 'isoWeekday',\n\
            isoweek : 'isoWeek',\n\
            weekyear : 'weekYear',\n\
            isoweekyear : 'isoWeekYear'\n\
        },\n\
\n\
        // format function strings\n\
        formatFunctions = {},\n\
\n\
        // default relative time thresholds\n\
        relativeTimeThresholds = {\n\
            s: 45,  // seconds to minute\n\
            m: 45,  // minutes to hour\n\
            h: 22,  // hours to day\n\
            d: 26,  // days to month\n\
            M: 11   // months to year\n\
        },\n\
\n\
        // tokens to ordinalize and pad\n\
        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n\
        paddedTokens = 'M D H h m s w W'.split(' '),\n\
\n\
        formatTokenFunctions = {\n\
            M    : function () {\n\
                return this.month() + 1;\n\
            },\n\
            MMM  : function (format) {\n\
                return this.localeData().monthsShort(this, format);\n\
            },\n\
            MMMM : function (format) {\n\
                return this.localeData().months(this, format);\n\
            },\n\
            D    : function () {\n\
                return this.date();\n\
            },\n\
            DDD  : function () {\n\
                return this.dayOfYear();\n\
            },\n\
            d    : function () {\n\
                return this.day();\n\
            },\n\
            dd   : function (format) {\n\
                return this.localeData().weekdaysMin(this, format);\n\
            },\n\
            ddd  : function (format) {\n\
                return this.localeData().weekdaysShort(this, format);\n\
            },\n\
            dddd : function (format) {\n\
                return this.localeData().weekdays(this, format);\n\
            },\n\
            w    : function () {\n\
                return this.week();\n\
            },\n\
            W    : function () {\n\
                return this.isoWeek();\n\
            },\n\
            YY   : function () {\n\
                return leftZeroFill(this.year() % 100, 2);\n\
            },\n\
            YYYY : function () {\n\
                return leftZeroFill(this.year(), 4);\n\
            },\n\
            YYYYY : function () {\n\
                return leftZeroFill(this.year(), 5);\n\
            },\n\
            YYYYYY : function () {\n\
                var y = this.year(), sign = y >= 0 ? '+' : '-';\n\
                return sign + leftZeroFill(Math.abs(y), 6);\n\
            },\n\
            gg   : function () {\n\
                return leftZeroFill(this.weekYear() % 100, 2);\n\
            },\n\
            gggg : function () {\n\
                return leftZeroFill(this.weekYear(), 4);\n\
            },\n\
            ggggg : function () {\n\
                return leftZeroFill(this.weekYear(), 5);\n\
            },\n\
            GG   : function () {\n\
                return leftZeroFill(this.isoWeekYear() % 100, 2);\n\
            },\n\
            GGGG : function () {\n\
                return leftZeroFill(this.isoWeekYear(), 4);\n\
            },\n\
            GGGGG : function () {\n\
                return leftZeroFill(this.isoWeekYear(), 5);\n\
            },\n\
            e : function () {\n\
                return this.weekday();\n\
            },\n\
            E : function () {\n\
                return this.isoWeekday();\n\
            },\n\
            a    : function () {\n\
                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n\
            },\n\
            A    : function () {\n\
                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n\
            },\n\
            H    : function () {\n\
                return this.hours();\n\
            },\n\
            h    : function () {\n\
                return this.hours() % 12 || 12;\n\
            },\n\
            m    : function () {\n\
                return this.minutes();\n\
            },\n\
            s    : function () {\n\
                return this.seconds();\n\
            },\n\
            S    : function () {\n\
                return toInt(this.milliseconds() / 100);\n\
            },\n\
            SS   : function () {\n\
                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n\
            },\n\
            SSS  : function () {\n\
                return leftZeroFill(this.milliseconds(), 3);\n\
            },\n\
            SSSS : function () {\n\
                return leftZeroFill(this.milliseconds(), 3);\n\
            },\n\
            Z    : function () {\n\
                var a = -this.zone(),\n\
                    b = '+';\n\
                if (a < 0) {\n\
                    a = -a;\n\
                    b = '-';\n\
                }\n\
                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n\
            },\n\
            ZZ   : function () {\n\
                var a = -this.zone(),\n\
                    b = '+';\n\
                if (a < 0) {\n\
                    a = -a;\n\
                    b = '-';\n\
                }\n\
                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n\
            },\n\
            z : function () {\n\
                return this.zoneAbbr();\n\
            },\n\
            zz : function () {\n\
                return this.zoneName();\n\
            },\n\
            X    : function () {\n\
                return this.unix();\n\
            },\n\
            Q : function () {\n\
                return this.quarter();\n\
            }\n\
        },\n\
\n\
        deprecations = {},\n\
\n\
        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];\n\
\n\
    // Pick the first defined of two or three arguments. dfl comes from\n\
    // default.\n\
    function dfl(a, b, c) {\n\
        switch (arguments.length) {\n\
            case 2: return a != null ? a : b;\n\
            case 3: return a != null ? a : b != null ? b : c;\n\
            default: throw new Error('Implement me');\n\
        }\n\
    }\n\
\n\
    function defaultParsingFlags() {\n\
        // We need to deep clone this object, and es5 standard is not very\n\
        // helpful.\n\
        return {\n\
            empty : false,\n\
            unusedTokens : [],\n\
            unusedInput : [],\n\
            overflow : -2,\n\
            charsLeftOver : 0,\n\
            nullInput : false,\n\
            invalidMonth : null,\n\
            invalidFormat : false,\n\
            userInvalidated : false,\n\
            iso: false\n\
        };\n\
    }\n\
\n\
    function printMsg(msg) {\n\
        if (moment.suppressDeprecationWarnings === false &&\n\
                typeof console !== 'undefined' && console.warn) {\n\
            console.warn(\"Deprecation warning: \" + msg);\n\
        }\n\
    }\n\
\n\
    function deprecate(msg, fn) {\n\
        var firstTime = true;\n\
        return extend(function () {\n\
            if (firstTime) {\n\
                printMsg(msg);\n\
                firstTime = false;\n\
            }\n\
            return fn.apply(this, arguments);\n\
        }, fn);\n\
    }\n\
\n\
    function deprecateSimple(name, msg) {\n\
        if (!deprecations[name]) {\n\
            printMsg(msg);\n\
            deprecations[name] = true;\n\
        }\n\
    }\n\
\n\
    function padToken(func, count) {\n\
        return function (a) {\n\
            return leftZeroFill(func.call(this, a), count);\n\
        };\n\
    }\n\
    function ordinalizeToken(func, period) {\n\
        return function (a) {\n\
            return this.localeData().ordinal(func.call(this, a), period);\n\
        };\n\
    }\n\
\n\
    while (ordinalizeTokens.length) {\n\
        i = ordinalizeTokens.pop();\n\
        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n\
    }\n\
    while (paddedTokens.length) {\n\
        i = paddedTokens.pop();\n\
        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n\
    }\n\
    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\
\n\
\n\
    /************************************\n\
        Constructors\n\
    ************************************/\n\
\n\
    function Locale() {\n\
    }\n\
\n\
    // Moment prototype object\n\
    function Moment(config, skipOverflow) {\n\
        if (skipOverflow !== false) {\n\
            checkOverflow(config);\n\
        }\n\
        copyConfig(this, config);\n\
        this._d = new Date(+config._d);\n\
    }\n\
\n\
    // Duration Constructor\n\
    function Duration(duration) {\n\
        var normalizedInput = normalizeObjectUnits(duration),\n\
            years = normalizedInput.year || 0,\n\
            quarters = normalizedInput.quarter || 0,\n\
            months = normalizedInput.month || 0,\n\
            weeks = normalizedInput.week || 0,\n\
            days = normalizedInput.day || 0,\n\
            hours = normalizedInput.hour || 0,\n\
            minutes = normalizedInput.minute || 0,\n\
            seconds = normalizedInput.second || 0,\n\
            milliseconds = normalizedInput.millisecond || 0;\n\
\n\
        // representation for dateAddRemove\n\
        this._milliseconds = +milliseconds +\n\
            seconds * 1e3 + // 1000\n\
            minutes * 6e4 + // 1000 * 60\n\
            hours * 36e5; // 1000 * 60 * 60\n\
        // Because of dateAddRemove treats 24 hours as different from a\n\
        // day when working around DST, we need to store them separately\n\
        this._days = +days +\n\
            weeks * 7;\n\
        // It is impossible translate months into days without knowing\n\
        // which months you are are talking about, so we have to store\n\
        // it separately.\n\
        this._months = +months +\n\
            quarters * 3 +\n\
            years * 12;\n\
\n\
        this._data = {};\n\
\n\
        this._locale = moment.localeData();\n\
\n\
        this._bubble();\n\
    }\n\
\n\
    /************************************\n\
        Helpers\n\
    ************************************/\n\
\n\
\n\
    function extend(a, b) {\n\
        for (var i in b) {\n\
            if (b.hasOwnProperty(i)) {\n\
                a[i] = b[i];\n\
            }\n\
        }\n\
\n\
        if (b.hasOwnProperty('toString')) {\n\
            a.toString = b.toString;\n\
        }\n\
\n\
        if (b.hasOwnProperty('valueOf')) {\n\
            a.valueOf = b.valueOf;\n\
        }\n\
\n\
        return a;\n\
    }\n\
\n\
    function copyConfig(to, from) {\n\
        var i, prop, val;\n\
\n\
        if (typeof from._isAMomentObject !== 'undefined') {\n\
            to._isAMomentObject = from._isAMomentObject;\n\
        }\n\
        if (typeof from._i !== 'undefined') {\n\
            to._i = from._i;\n\
        }\n\
        if (typeof from._f !== 'undefined') {\n\
            to._f = from._f;\n\
        }\n\
        if (typeof from._l !== 'undefined') {\n\
            to._l = from._l;\n\
        }\n\
        if (typeof from._strict !== 'undefined') {\n\
            to._strict = from._strict;\n\
        }\n\
        if (typeof from._tzm !== 'undefined') {\n\
            to._tzm = from._tzm;\n\
        }\n\
        if (typeof from._isUTC !== 'undefined') {\n\
            to._isUTC = from._isUTC;\n\
        }\n\
        if (typeof from._offset !== 'undefined') {\n\
            to._offset = from._offset;\n\
        }\n\
        if (typeof from._pf !== 'undefined') {\n\
            to._pf = from._pf;\n\
        }\n\
        if (typeof from._locale !== 'undefined') {\n\
            to._locale = from._locale;\n\
        }\n\
\n\
        if (momentProperties.length > 0) {\n\
            for (i in momentProperties) {\n\
                prop = momentProperties[i];\n\
                val = from[prop];\n\
                if (typeof val !== 'undefined') {\n\
                    to[prop] = val;\n\
                }\n\
            }\n\
        }\n\
\n\
        return to;\n\
    }\n\
\n\
    function absRound(number) {\n\
        if (number < 0) {\n\
            return Math.ceil(number);\n\
        } else {\n\
            return Math.floor(number);\n\
        }\n\
    }\n\
\n\
    // left zero fill a number\n\
    // see http://jsperf.com/left-zero-filling for performance comparison\n\
    function leftZeroFill(number, targetLength, forceSign) {\n\
        var output = '' + Math.abs(number),\n\
            sign = number >= 0;\n\
\n\
        while (output.length < targetLength) {\n\
            output = '0' + output;\n\
        }\n\
        return (sign ? (forceSign ? '+' : '') : '-') + output;\n\
    }\n\
\n\
    function positiveMomentsDifference(base, other) {\n\
        var res = {milliseconds: 0, months: 0};\n\
\n\
        res.months = other.month() - base.month() +\n\
            (other.year() - base.year()) * 12;\n\
        if (base.clone().add(res.months, 'M').isAfter(other)) {\n\
            --res.months;\n\
        }\n\
\n\
        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\
\n\
        return res;\n\
    }\n\
\n\
    function momentsDifference(base, other) {\n\
        var res;\n\
        other = makeAs(other, base);\n\
        if (base.isBefore(other)) {\n\
            res = positiveMomentsDifference(base, other);\n\
        } else {\n\
            res = positiveMomentsDifference(other, base);\n\
            res.milliseconds = -res.milliseconds;\n\
            res.months = -res.months;\n\
        }\n\
\n\
        return res;\n\
    }\n\
\n\
    // TODO: remove 'name' arg after deprecation is removed\n\
    function createAdder(direction, name) {\n\
        return function (val, period) {\n\
            var dur, tmp;\n\
            //invert the arguments, but complain about it\n\
            if (period !== null && !isNaN(+period)) {\n\
                deprecateSimple(name, \"moment().\" + name  + \"(period, number) is deprecated. Please use moment().\" + name + \"(number, period).\");\n\
                tmp = val; val = period; period = tmp;\n\
            }\n\
\n\
            val = typeof val === 'string' ? +val : val;\n\
            dur = moment.duration(val, period);\n\
            addOrSubtractDurationFromMoment(this, dur, direction);\n\
            return this;\n\
        };\n\
    }\n\
\n\
    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n\
        var milliseconds = duration._milliseconds,\n\
            days = duration._days,\n\
            months = duration._months;\n\
        updateOffset = updateOffset == null ? true : updateOffset;\n\
\n\
        if (milliseconds) {\n\
            mom._d.setTime(+mom._d + milliseconds * isAdding);\n\
        }\n\
        if (days) {\n\
            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n\
        }\n\
        if (months) {\n\
            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n\
        }\n\
        if (updateOffset) {\n\
            moment.updateOffset(mom, days || months);\n\
        }\n\
    }\n\
\n\
    // check if is an array\n\
    function isArray(input) {\n\
        return Object.prototype.toString.call(input) === '[object Array]';\n\
    }\n\
\n\
    function isDate(input) {\n\
        return Object.prototype.toString.call(input) === '[object Date]' ||\n\
            input instanceof Date;\n\
    }\n\
\n\
    // compare two arrays, return the number of differences\n\
    function compareArrays(array1, array2, dontConvert) {\n\
        var len = Math.min(array1.length, array2.length),\n\
            lengthDiff = Math.abs(array1.length - array2.length),\n\
            diffs = 0,\n\
            i;\n\
        for (i = 0; i < len; i++) {\n\
            if ((dontConvert && array1[i] !== array2[i]) ||\n\
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\
                diffs++;\n\
            }\n\
        }\n\
        return diffs + lengthDiff;\n\
    }\n\
\n\
    function normalizeUnits(units) {\n\
        if (units) {\n\
            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n\
            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n\
        }\n\
        return units;\n\
    }\n\
\n\
    function normalizeObjectUnits(inputObject) {\n\
        var normalizedInput = {},\n\
            normalizedProp,\n\
            prop;\n\
\n\
        for (prop in inputObject) {\n\
            if (inputObject.hasOwnProperty(prop)) {\n\
                normalizedProp = normalizeUnits(prop);\n\
                if (normalizedProp) {\n\
                    normalizedInput[normalizedProp] = inputObject[prop];\n\
                }\n\
            }\n\
        }\n\
\n\
        return normalizedInput;\n\
    }\n\
\n\
    function makeList(field) {\n\
        var count, setter;\n\
\n\
        if (field.indexOf('week') === 0) {\n\
            count = 7;\n\
            setter = 'day';\n\
        }\n\
        else if (field.indexOf('month') === 0) {\n\
            count = 12;\n\
            setter = 'month';\n\
        }\n\
        else {\n\
            return;\n\
        }\n\
\n\
        moment[field] = function (format, index) {\n\
            var i, getter,\n\
                method = moment._locale[field],\n\
                results = [];\n\
\n\
            if (typeof format === 'number') {\n\
                index = format;\n\
                format = undefined;\n\
            }\n\
\n\
            getter = function (i) {\n\
                var m = moment().utc().set(setter, i);\n\
                return method.call(moment._locale, m, format || '');\n\
            };\n\
\n\
            if (index != null) {\n\
                return getter(index);\n\
            }\n\
            else {\n\
                for (i = 0; i < count; i++) {\n\
                    results.push(getter(i));\n\
                }\n\
                return results;\n\
            }\n\
        };\n\
    }\n\
\n\
    function toInt(argumentForCoercion) {\n\
        var coercedNumber = +argumentForCoercion,\n\
            value = 0;\n\
\n\
        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\
            if (coercedNumber >= 0) {\n\
                value = Math.floor(coercedNumber);\n\
            } else {\n\
                value = Math.ceil(coercedNumber);\n\
            }\n\
        }\n\
\n\
        return value;\n\
    }\n\
\n\
    function daysInMonth(year, month) {\n\
        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\
    }\n\
\n\
    function weeksInYear(year, dow, doy) {\n\
        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n\
    }\n\
\n\
    function daysInYear(year) {\n\
        return isLeapYear(year) ? 366 : 365;\n\
    }\n\
\n\
    function isLeapYear(year) {\n\
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\
    }\n\
\n\
    function checkOverflow(m) {\n\
        var overflow;\n\
        if (m._a && m._pf.overflow === -2) {\n\
            overflow =\n\
                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n\
                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n\
                m._a[HOUR] < 0 || m._a[HOUR] > 23 ? HOUR :\n\
                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n\
                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n\
                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n\
                -1;\n\
\n\
            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\
                overflow = DATE;\n\
            }\n\
\n\
            m._pf.overflow = overflow;\n\
        }\n\
    }\n\
\n\
    function isValid(m) {\n\
        if (m._isValid == null) {\n\
            m._isValid = !isNaN(m._d.getTime()) &&\n\
                m._pf.overflow < 0 &&\n\
                !m._pf.empty &&\n\
                !m._pf.invalidMonth &&\n\
                !m._pf.nullInput &&\n\
                !m._pf.invalidFormat &&\n\
                !m._pf.userInvalidated;\n\
\n\
            if (m._strict) {\n\
                m._isValid = m._isValid &&\n\
                    m._pf.charsLeftOver === 0 &&\n\
                    m._pf.unusedTokens.length === 0;\n\
            }\n\
        }\n\
        return m._isValid;\n\
    }\n\
\n\
    function normalizeLocale(key) {\n\
        return key ? key.toLowerCase().replace('_', '-') : key;\n\
    }\n\
\n\
    // pick the locale from the array\n\
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\
    function chooseLocale(names) {\n\
        var i = 0, j, next, locale, split;\n\
\n\
        while (i < names.length) {\n\
            split = normalizeLocale(names[i]).split('-');\n\
            j = split.length;\n\
            next = normalizeLocale(names[i + 1]);\n\
            next = next ? next.split('-') : null;\n\
            while (j > 0) {\n\
                locale = loadLocale(split.slice(0, j).join('-'));\n\
                if (locale) {\n\
                    return locale;\n\
                }\n\
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\
                    //the next array item is better than a shallower substring of this one\n\
                    break;\n\
                }\n\
                j--;\n\
            }\n\
            i++;\n\
        }\n\
        return null;\n\
    }\n\
\n\
    function loadLocale(name) {\n\
        var oldLocale = null;\n\
        if (!locales[name] && hasModule) {\n\
            try {\n\
                oldLocale = moment.locale();\n\
                require('./locale/' + name);\n\
                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n\
                moment.locale(oldLocale);\n\
            } catch (e) { }\n\
        }\n\
        return locales[name];\n\
    }\n\
\n\
    // Return a moment from input, that is local/utc/zone equivalent to model.\n\
    function makeAs(input, model) {\n\
        return model._isUTC ? moment(input).zone(model._offset || 0) :\n\
            moment(input).local();\n\
    }\n\
\n\
    /************************************\n\
        Locale\n\
    ************************************/\n\
\n\
\n\
    extend(Locale.prototype, {\n\
\n\
        set : function (config) {\n\
            var prop, i;\n\
            for (i in config) {\n\
                prop = config[i];\n\
                if (typeof prop === 'function') {\n\
                    this[i] = prop;\n\
                } else {\n\
                    this['_' + i] = prop;\n\
                }\n\
            }\n\
        },\n\
\n\
        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n\
        months : function (m) {\n\
            return this._months[m.month()];\n\
        },\n\
\n\
        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n\
        monthsShort : function (m) {\n\
            return this._monthsShort[m.month()];\n\
        },\n\
\n\
        monthsParse : function (monthName) {\n\
            var i, mom, regex;\n\
\n\
            if (!this._monthsParse) {\n\
                this._monthsParse = [];\n\
            }\n\
\n\
            for (i = 0; i < 12; i++) {\n\
                // make the regex if we don't have it already\n\
                if (!this._monthsParse[i]) {\n\
                    mom = moment.utc([2000, i]);\n\
                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\
                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\
                }\n\
                // test the regex\n\
                if (this._monthsParse[i].test(monthName)) {\n\
                    return i;\n\
                }\n\
            }\n\
        },\n\
\n\
        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n\
        weekdays : function (m) {\n\
            return this._weekdays[m.day()];\n\
        },\n\
\n\
        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n\
        weekdaysShort : function (m) {\n\
            return this._weekdaysShort[m.day()];\n\
        },\n\
\n\
        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n\
        weekdaysMin : function (m) {\n\
            return this._weekdaysMin[m.day()];\n\
        },\n\
\n\
        weekdaysParse : function (weekdayName) {\n\
            var i, mom, regex;\n\
\n\
            if (!this._weekdaysParse) {\n\
                this._weekdaysParse = [];\n\
            }\n\
\n\
            for (i = 0; i < 7; i++) {\n\
                // make the regex if we don't have it already\n\
                if (!this._weekdaysParse[i]) {\n\
                    mom = moment([2000, 1]).day(i);\n\
                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\
                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\
                }\n\
                // test the regex\n\
                if (this._weekdaysParse[i].test(weekdayName)) {\n\
                    return i;\n\
                }\n\
            }\n\
        },\n\
\n\
        _longDateFormat : {\n\
            LT : 'h:mm A',\n\
            L : 'MM/DD/YYYY',\n\
            LL : 'MMMM D, YYYY',\n\
            LLL : 'MMMM D, YYYY LT',\n\
            LLLL : 'dddd, MMMM D, YYYY LT'\n\
        },\n\
        longDateFormat : function (key) {\n\
            var output = this._longDateFormat[key];\n\
            if (!output && this._longDateFormat[key.toUpperCase()]) {\n\
                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n\
                    return val.slice(1);\n\
                });\n\
                this._longDateFormat[key] = output;\n\
            }\n\
            return output;\n\
        },\n\
\n\
        isPM : function (input) {\n\
            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\
            // Using charAt should be more compatible.\n\
            return ((input + '').toLowerCase().charAt(0) === 'p');\n\
        },\n\
\n\
        _meridiemParse : /[ap]\\.?m?\\.?/i,\n\
        meridiem : function (hours, minutes, isLower) {\n\
            if (hours > 11) {\n\
                return isLower ? 'pm' : 'PM';\n\
            } else {\n\
                return isLower ? 'am' : 'AM';\n\
            }\n\
        },\n\
\n\
        _calendar : {\n\
            sameDay : '[Today at] LT',\n\
            nextDay : '[Tomorrow at] LT',\n\
            nextWeek : 'dddd [at] LT',\n\
            lastDay : '[Yesterday at] LT',\n\
            lastWeek : '[Last] dddd [at] LT',\n\
            sameElse : 'L'\n\
        },\n\
        calendar : function (key, mom) {\n\
            var output = this._calendar[key];\n\
            return typeof output === 'function' ? output.apply(mom) : output;\n\
        },\n\
\n\
        _relativeTime : {\n\
            future : 'in %s',\n\
            past : '%s ago',\n\
            s : 'a few seconds',\n\
            m : 'a minute',\n\
            mm : '%d minutes',\n\
            h : 'an hour',\n\
            hh : '%d hours',\n\
            d : 'a day',\n\
            dd : '%d days',\n\
            M : 'a month',\n\
            MM : '%d months',\n\
            y : 'a year',\n\
            yy : '%d years'\n\
        },\n\
\n\
        relativeTime : function (number, withoutSuffix, string, isFuture) {\n\
            var output = this._relativeTime[string];\n\
            return (typeof output === 'function') ?\n\
                output(number, withoutSuffix, string, isFuture) :\n\
                output.replace(/%d/i, number);\n\
        },\n\
\n\
        pastFuture : function (diff, output) {\n\
            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\
            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n\
        },\n\
\n\
        ordinal : function (number) {\n\
            return this._ordinal.replace('%d', number);\n\
        },\n\
        _ordinal : '%d',\n\
\n\
        preparse : function (string) {\n\
            return string;\n\
        },\n\
\n\
        postformat : function (string) {\n\
            return string;\n\
        },\n\
\n\
        week : function (mom) {\n\
            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\
        },\n\
\n\
        _week : {\n\
            dow : 0, // Sunday is the first day of the week.\n\
            doy : 6  // The week that contains Jan 1st is the first week of the year.\n\
        },\n\
\n\
        _invalidDate: 'Invalid date',\n\
        invalidDate: function () {\n\
            return this._invalidDate;\n\
        }\n\
    });\n\
\n\
    /************************************\n\
        Formatting\n\
    ************************************/\n\
\n\
\n\
    function removeFormattingTokens(input) {\n\
        if (input.match(/\\[[\\s\\S]/)) {\n\
            return input.replace(/^\\[|\\]$/g, '');\n\
        }\n\
        return input.replace(/\\\\/g, '');\n\
    }\n\
\n\
    function makeFormatFunction(format) {\n\
        var array = format.match(formattingTokens), i, length;\n\
\n\
        for (i = 0, length = array.length; i < length; i++) {\n\
            if (formatTokenFunctions[array[i]]) {\n\
                array[i] = formatTokenFunctions[array[i]];\n\
            } else {\n\
                array[i] = removeFormattingTokens(array[i]);\n\
            }\n\
        }\n\
\n\
        return function (mom) {\n\
            var output = '';\n\
            for (i = 0; i < length; i++) {\n\
                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n\
            }\n\
            return output;\n\
        };\n\
    }\n\
\n\
    // format date using native date object\n\
    function formatMoment(m, format) {\n\
        if (!m.isValid()) {\n\
            return m.localeData().invalidDate();\n\
        }\n\
\n\
        format = expandFormat(format, m.localeData());\n\
\n\
        if (!formatFunctions[format]) {\n\
            formatFunctions[format] = makeFormatFunction(format);\n\
        }\n\
\n\
        return formatFunctions[format](m);\n\
    }\n\
\n\
    function expandFormat(format, locale) {\n\
        var i = 5;\n\
\n\
        function replaceLongDateFormatTokens(input) {\n\
            return locale.longDateFormat(input) || input;\n\
        }\n\
\n\
        localFormattingTokens.lastIndex = 0;\n\
        while (i >= 0 && localFormattingTokens.test(format)) {\n\
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\
            localFormattingTokens.lastIndex = 0;\n\
            i -= 1;\n\
        }\n\
\n\
        return format;\n\
    }\n\
\n\
\n\
    /************************************\n\
        Parsing\n\
    ************************************/\n\
\n\
\n\
    // get the regex to find the next token\n\
    function getParseRegexForToken(token, config) {\n\
        var a, strict = config._strict;\n\
        switch (token) {\n\
        case 'Q':\n\
            return parseTokenOneDigit;\n\
        case 'DDDD':\n\
            return parseTokenThreeDigits;\n\
        case 'YYYY':\n\
        case 'GGGG':\n\
        case 'gggg':\n\
            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n\
        case 'Y':\n\
        case 'G':\n\
        case 'g':\n\
            return parseTokenSignedNumber;\n\
        case 'YYYYYY':\n\
        case 'YYYYY':\n\
        case 'GGGGG':\n\
        case 'ggggg':\n\
            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n\
        case 'S':\n\
            if (strict) {\n\
                return parseTokenOneDigit;\n\
            }\n\
            /* falls through */\n\
        case 'SS':\n\
            if (strict) {\n\
                return parseTokenTwoDigits;\n\
            }\n\
            /* falls through */\n\
        case 'SSS':\n\
            if (strict) {\n\
                return parseTokenThreeDigits;\n\
            }\n\
            /* falls through */\n\
        case 'DDD':\n\
            return parseTokenOneToThreeDigits;\n\
        case 'MMM':\n\
        case 'MMMM':\n\
        case 'dd':\n\
        case 'ddd':\n\
        case 'dddd':\n\
            return parseTokenWord;\n\
        case 'a':\n\
        case 'A':\n\
            return config._locale._meridiemParse;\n\
        case 'X':\n\
            return parseTokenTimestampMs;\n\
        case 'Z':\n\
        case 'ZZ':\n\
            return parseTokenTimezone;\n\
        case 'T':\n\
            return parseTokenT;\n\
        case 'SSSS':\n\
            return parseTokenDigits;\n\
        case 'MM':\n\
        case 'DD':\n\
        case 'YY':\n\
        case 'GG':\n\
        case 'gg':\n\
        case 'HH':\n\
        case 'hh':\n\
        case 'mm':\n\
        case 'ss':\n\
        case 'ww':\n\
        case 'WW':\n\
            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n\
        case 'M':\n\
        case 'D':\n\
        case 'd':\n\
        case 'H':\n\
        case 'h':\n\
        case 'm':\n\
        case 's':\n\
        case 'w':\n\
        case 'W':\n\
        case 'e':\n\
        case 'E':\n\
            return parseTokenOneOrTwoDigits;\n\
        case 'Do':\n\
            return parseTokenOrdinal;\n\
        default :\n\
            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n\
            return a;\n\
        }\n\
    }\n\
\n\
    function timezoneMinutesFromString(string) {\n\
        string = string || '';\n\
        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n\
            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n\
            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n\
            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\
\n\
        return parts[0] === '+' ? -minutes : minutes;\n\
    }\n\
\n\
    // function to convert string input to date\n\
    function addTimeToArrayFromToken(token, input, config) {\n\
        var a, datePartArray = config._a;\n\
\n\
        switch (token) {\n\
        // QUARTER\n\
        case 'Q':\n\
            if (input != null) {\n\
                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n\
            }\n\
            break;\n\
        // MONTH\n\
        case 'M' : // fall through to MM\n\
        case 'MM' :\n\
            if (input != null) {\n\
                datePartArray[MONTH] = toInt(input) - 1;\n\
            }\n\
            break;\n\
        case 'MMM' : // fall through to MMMM\n\
        case 'MMMM' :\n\
            a = config._locale.monthsParse(input);\n\
            // if we didn't find a month name, mark the date as invalid.\n\
            if (a != null) {\n\
                datePartArray[MONTH] = a;\n\
            } else {\n\
                config._pf.invalidMonth = input;\n\
            }\n\
            break;\n\
        // DAY OF MONTH\n\
        case 'D' : // fall through to DD\n\
        case 'DD' :\n\
            if (input != null) {\n\
                datePartArray[DATE] = toInt(input);\n\
            }\n\
            break;\n\
        case 'Do' :\n\
            if (input != null) {\n\
                datePartArray[DATE] = toInt(parseInt(input, 10));\n\
            }\n\
            break;\n\
        // DAY OF YEAR\n\
        case 'DDD' : // fall through to DDDD\n\
        case 'DDDD' :\n\
            if (input != null) {\n\
                config._dayOfYear = toInt(input);\n\
            }\n\
\n\
            break;\n\
        // YEAR\n\
        case 'YY' :\n\
            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n\
            break;\n\
        case 'YYYY' :\n\
        case 'YYYYY' :\n\
        case 'YYYYYY' :\n\
            datePartArray[YEAR] = toInt(input);\n\
            break;\n\
        // AM / PM\n\
        case 'a' : // fall through to A\n\
        case 'A' :\n\
            config._isPm = config._locale.isPM(input);\n\
            break;\n\
        // 24 HOUR\n\
        case 'H' : // fall through to hh\n\
        case 'HH' : // fall through to hh\n\
        case 'h' : // fall through to hh\n\
        case 'hh' :\n\
            datePartArray[HOUR] = toInt(input);\n\
            break;\n\
        // MINUTE\n\
        case 'm' : // fall through to mm\n\
        case 'mm' :\n\
            datePartArray[MINUTE] = toInt(input);\n\
            break;\n\
        // SECOND\n\
        case 's' : // fall through to ss\n\
        case 'ss' :\n\
            datePartArray[SECOND] = toInt(input);\n\
            break;\n\
        // MILLISECOND\n\
        case 'S' :\n\
        case 'SS' :\n\
        case 'SSS' :\n\
        case 'SSSS' :\n\
            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n\
            break;\n\
        // UNIX TIMESTAMP WITH MS\n\
        case 'X':\n\
            config._d = new Date(parseFloat(input) * 1000);\n\
            break;\n\
        // TIMEZONE\n\
        case 'Z' : // fall through to ZZ\n\
        case 'ZZ' :\n\
            config._useUTC = true;\n\
            config._tzm = timezoneMinutesFromString(input);\n\
            break;\n\
        // WEEKDAY - human\n\
        case 'dd':\n\
        case 'ddd':\n\
        case 'dddd':\n\
            a = config._locale.weekdaysParse(input);\n\
            // if we didn't get a weekday name, mark the date as invalid\n\
            if (a != null) {\n\
                config._w = config._w || {};\n\
                config._w['d'] = a;\n\
            } else {\n\
                config._pf.invalidWeekday = input;\n\
            }\n\
            break;\n\
        // WEEK, WEEK DAY - numeric\n\
        case 'w':\n\
        case 'ww':\n\
        case 'W':\n\
        case 'WW':\n\
        case 'd':\n\
        case 'e':\n\
        case 'E':\n\
            token = token.substr(0, 1);\n\
            /* falls through */\n\
        case 'gggg':\n\
        case 'GGGG':\n\
        case 'GGGGG':\n\
            token = token.substr(0, 2);\n\
            if (input) {\n\
                config._w = config._w || {};\n\
                config._w[token] = toInt(input);\n\
            }\n\
            break;\n\
        case 'gg':\n\
        case 'GG':\n\
            config._w = config._w || {};\n\
            config._w[token] = moment.parseTwoDigitYear(input);\n\
        }\n\
    }\n\
\n\
    function dayOfYearFromWeekInfo(config) {\n\
        var w, weekYear, week, weekday, dow, doy, temp;\n\
\n\
        w = config._w;\n\
        if (w.GG != null || w.W != null || w.E != null) {\n\
            dow = 1;\n\
            doy = 4;\n\
\n\
            // TODO: We need to take the current isoWeekYear, but that depends on\n\
            // how we interpret now (local, utc, fixed offset). So create\n\
            // a now version of current config (take local/utc/offset flags, and\n\
            // create now).\n\
            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n\
            week = dfl(w.W, 1);\n\
            weekday = dfl(w.E, 1);\n\
        } else {\n\
            dow = config._locale._week.dow;\n\
            doy = config._locale._week.doy;\n\
\n\
            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n\
            week = dfl(w.w, 1);\n\
\n\
            if (w.d != null) {\n\
                // weekday -- low day numbers are considered next week\n\
                weekday = w.d;\n\
                if (weekday < dow) {\n\
                    ++week;\n\
                }\n\
            } else if (w.e != null) {\n\
                // local weekday -- counting starts from begining of week\n\
                weekday = w.e + dow;\n\
            } else {\n\
                // default to begining of week\n\
                weekday = dow;\n\
            }\n\
        }\n\
        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\
\n\
        config._a[YEAR] = temp.year;\n\
        config._dayOfYear = temp.dayOfYear;\n\
    }\n\
\n\
    // convert an array to a date.\n\
    // the array should mirror the parameters below\n\
    // note: all values past the year are optional and will default to the lowest possible value.\n\
    // [year, month, day , hour, minute, second, millisecond]\n\
    function dateFromConfig(config) {\n\
        var i, date, input = [], currentDate, yearToUse;\n\
\n\
        if (config._d) {\n\
            return;\n\
        }\n\
\n\
        currentDate = currentDateArray(config);\n\
\n\
        //compute day of the year from weeks and weekdays\n\
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\
            dayOfYearFromWeekInfo(config);\n\
        }\n\
\n\
        //if the day of the year is set, figure out what it is\n\
        if (config._dayOfYear) {\n\
            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\
\n\
            if (config._dayOfYear > daysInYear(yearToUse)) {\n\
                config._pf._overflowDayOfYear = true;\n\
            }\n\
\n\
            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n\
            config._a[MONTH] = date.getUTCMonth();\n\
            config._a[DATE] = date.getUTCDate();\n\
        }\n\
\n\
        // Default to current date.\n\
        // * if no year, month, day of month are given, default to today\n\
        // * if day of month is given, default month and year\n\
        // * if month is given, default only year\n\
        // * if year is given, don't default anything\n\
        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\
            config._a[i] = input[i] = currentDate[i];\n\
        }\n\
\n\
        // Zero out whatever was not defaulted, including time\n\
        for (; i < 7; i++) {\n\
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\
        }\n\
\n\
        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n\
        // Apply timezone offset from input. The actual zone can be changed\n\
        // with parseZone.\n\
        if (config._tzm != null) {\n\
            config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);\n\
        }\n\
    }\n\
\n\
    function dateFromObject(config) {\n\
        var normalizedInput;\n\
\n\
        if (config._d) {\n\
            return;\n\
        }\n\
\n\
        normalizedInput = normalizeObjectUnits(config._i);\n\
        config._a = [\n\
            normalizedInput.year,\n\
            normalizedInput.month,\n\
            normalizedInput.day,\n\
            normalizedInput.hour,\n\
            normalizedInput.minute,\n\
            normalizedInput.second,\n\
            normalizedInput.millisecond\n\
        ];\n\
\n\
        dateFromConfig(config);\n\
    }\n\
\n\
    function currentDateArray(config) {\n\
        var now = new Date();\n\
        if (config._useUTC) {\n\
            return [\n\
                now.getUTCFullYear(),\n\
                now.getUTCMonth(),\n\
                now.getUTCDate()\n\
            ];\n\
        } else {\n\
            return [now.getFullYear(), now.getMonth(), now.getDate()];\n\
        }\n\
    }\n\
\n\
    // date from string and format string\n\
    function makeDateFromStringAndFormat(config) {\n\
        if (config._f === moment.ISO_8601) {\n\
            parseISO(config);\n\
            return;\n\
        }\n\
\n\
        config._a = [];\n\
        config._pf.empty = true;\n\
\n\
        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\
        var string = '' + config._i,\n\
            i, parsedInput, tokens, token, skipped,\n\
            stringLength = string.length,\n\
            totalParsedInputLength = 0;\n\
\n\
        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\
\n\
        for (i = 0; i < tokens.length; i++) {\n\
            token = tokens[i];\n\
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\
            if (parsedInput) {\n\
                skipped = string.substr(0, string.indexOf(parsedInput));\n\
                if (skipped.length > 0) {\n\
                    config._pf.unusedInput.push(skipped);\n\
                }\n\
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\
                totalParsedInputLength += parsedInput.length;\n\
            }\n\
            // don't parse if it's not a known token\n\
            if (formatTokenFunctions[token]) {\n\
                if (parsedInput) {\n\
                    config._pf.empty = false;\n\
                }\n\
                else {\n\
                    config._pf.unusedTokens.push(token);\n\
                }\n\
                addTimeToArrayFromToken(token, parsedInput, config);\n\
            }\n\
            else if (config._strict && !parsedInput) {\n\
                config._pf.unusedTokens.push(token);\n\
            }\n\
        }\n\
\n\
        // add remaining unparsed input length to the string\n\
        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n\
        if (string.length > 0) {\n\
            config._pf.unusedInput.push(string);\n\
        }\n\
\n\
        // handle am pm\n\
        if (config._isPm && config._a[HOUR] < 12) {\n\
            config._a[HOUR] += 12;\n\
        }\n\
        // if is 12 am, change hours to 0\n\
        if (config._isPm === false && config._a[HOUR] === 12) {\n\
            config._a[HOUR] = 0;\n\
        }\n\
\n\
        dateFromConfig(config);\n\
        checkOverflow(config);\n\
    }\n\
\n\
    function unescapeFormat(s) {\n\
        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\
            return p1 || p2 || p3 || p4;\n\
        });\n\
    }\n\
\n\
    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\
    function regexpEscape(s) {\n\
        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\
    }\n\
\n\
    // date from string and array of format strings\n\
    function makeDateFromStringAndArray(config) {\n\
        var tempConfig,\n\
            bestMoment,\n\
\n\
            scoreToBeat,\n\
            i,\n\
            currentScore;\n\
\n\
        if (config._f.length === 0) {\n\
            config._pf.invalidFormat = true;\n\
            config._d = new Date(NaN);\n\
            return;\n\
        }\n\
\n\
        for (i = 0; i < config._f.length; i++) {\n\
            currentScore = 0;\n\
            tempConfig = copyConfig({}, config);\n\
            tempConfig._pf = defaultParsingFlags();\n\
            tempConfig._f = config._f[i];\n\
            makeDateFromStringAndFormat(tempConfig);\n\
\n\
            if (!isValid(tempConfig)) {\n\
                continue;\n\
            }\n\
\n\
            // if there is any input that was not parsed add a penalty for that format\n\
            currentScore += tempConfig._pf.charsLeftOver;\n\
\n\
            //or tokens\n\
            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\
\n\
            tempConfig._pf.score = currentScore;\n\
\n\
            if (scoreToBeat == null || currentScore < scoreToBeat) {\n\
                scoreToBeat = currentScore;\n\
                bestMoment = tempConfig;\n\
            }\n\
        }\n\
\n\
        extend(config, bestMoment || tempConfig);\n\
    }\n\
\n\
    // date from iso format\n\
    function parseISO(config) {\n\
        var i, l,\n\
            string = config._i,\n\
            match = isoRegex.exec(string);\n\
\n\
        if (match) {\n\
            config._pf.iso = true;\n\
            for (i = 0, l = isoDates.length; i < l; i++) {\n\
                if (isoDates[i][1].exec(string)) {\n\
                    // match[5] should be \"T\" or undefined\n\
                    config._f = isoDates[i][0] + (match[6] || ' ');\n\
                    break;\n\
                }\n\
            }\n\
            for (i = 0, l = isoTimes.length; i < l; i++) {\n\
                if (isoTimes[i][1].exec(string)) {\n\
                    config._f += isoTimes[i][0];\n\
                    break;\n\
                }\n\
            }\n\
            if (string.match(parseTokenTimezone)) {\n\
                config._f += 'Z';\n\
            }\n\
            makeDateFromStringAndFormat(config);\n\
        } else {\n\
            config._isValid = false;\n\
        }\n\
    }\n\
\n\
    // date from iso format or fallback\n\
    function makeDateFromString(config) {\n\
        parseISO(config);\n\
        if (config._isValid === false) {\n\
            delete config._isValid;\n\
            moment.createFromInputFallback(config);\n\
        }\n\
    }\n\
\n\
    function makeDateFromInput(config) {\n\
        var input = config._i, matched;\n\
        if (input === undefined) {\n\
            config._d = new Date();\n\
        } else if (isDate(input)) {\n\
            config._d = new Date(+input);\n\
        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n\
            config._d = new Date(+matched[1]);\n\
        } else if (typeof input === 'string') {\n\
            makeDateFromString(config);\n\
        } else if (isArray(input)) {\n\
            config._a = input.slice(0);\n\
            dateFromConfig(config);\n\
        } else if (typeof(input) === 'object') {\n\
            dateFromObject(config);\n\
        } else if (typeof(input) === 'number') {\n\
            // from milliseconds\n\
            config._d = new Date(input);\n\
        } else {\n\
            moment.createFromInputFallback(config);\n\
        }\n\
    }\n\
\n\
    function makeDate(y, m, d, h, M, s, ms) {\n\
        //can't just apply() to create a date:\n\
        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n\
        var date = new Date(y, m, d, h, M, s, ms);\n\
\n\
        //the date constructor doesn't accept years < 1970\n\
        if (y < 1970) {\n\
            date.setFullYear(y);\n\
        }\n\
        return date;\n\
    }\n\
\n\
    function makeUTCDate(y) {\n\
        var date = new Date(Date.UTC.apply(null, arguments));\n\
        if (y < 1970) {\n\
            date.setUTCFullYear(y);\n\
        }\n\
        return date;\n\
    }\n\
\n\
    function parseWeekday(input, locale) {\n\
        if (typeof input === 'string') {\n\
            if (!isNaN(input)) {\n\
                input = parseInt(input, 10);\n\
            }\n\
            else {\n\
                input = locale.weekdaysParse(input);\n\
                if (typeof input !== 'number') {\n\
                    return null;\n\
                }\n\
            }\n\
        }\n\
        return input;\n\
    }\n\
\n\
    /************************************\n\
        Relative Time\n\
    ************************************/\n\
\n\
\n\
    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\
    }\n\
\n\
    function relativeTime(posNegDuration, withoutSuffix, locale) {\n\
        var duration = moment.duration(posNegDuration).abs(),\n\
            seconds = round(duration.as('s')),\n\
            minutes = round(duration.as('m')),\n\
            hours = round(duration.as('h')),\n\
            days = round(duration.as('d')),\n\
            months = round(duration.as('M')),\n\
            years = round(duration.as('y')),\n\
\n\
            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n\
                minutes === 1 && ['m'] ||\n\
                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n\
                hours === 1 && ['h'] ||\n\
                hours < relativeTimeThresholds.h && ['hh', hours] ||\n\
                days === 1 && ['d'] ||\n\
                days < relativeTimeThresholds.d && ['dd', days] ||\n\
                months === 1 && ['M'] ||\n\
                months < relativeTimeThresholds.M && ['MM', months] ||\n\
                years === 1 && ['y'] || ['yy', years];\n\
\n\
        args[2] = withoutSuffix;\n\
        args[3] = +posNegDuration > 0;\n\
        args[4] = locale;\n\
        return substituteTimeAgo.apply({}, args);\n\
    }\n\
\n\
\n\
    /************************************\n\
        Week of Year\n\
    ************************************/\n\
\n\
\n\
    // firstDayOfWeek       0 = sun, 6 = sat\n\
    //                      the day of the week that starts the week\n\
    //                      (usually sunday or monday)\n\
    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n\
    //                      the first week is the week that contains the first\n\
    //                      of this day of the week\n\
    //                      (eg. ISO weeks use thursday (4))\n\
    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n\
        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n\
            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n\
            adjustedMoment;\n\
\n\
\n\
        if (daysToDayOfWeek > end) {\n\
            daysToDayOfWeek -= 7;\n\
        }\n\
\n\
        if (daysToDayOfWeek < end - 7) {\n\
            daysToDayOfWeek += 7;\n\
        }\n\
\n\
        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n\
        return {\n\
            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n\
            year: adjustedMoment.year()\n\
        };\n\
    }\n\
\n\
    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\
    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n\
        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\
\n\
        d = d === 0 ? 7 : d;\n\
        weekday = weekday != null ? weekday : firstDayOfWeek;\n\
        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n\
        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\
\n\
        return {\n\
            year: dayOfYear > 0 ? year : year - 1,\n\
            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n\
        };\n\
    }\n\
\n\
    /************************************\n\
        Top Level Functions\n\
    ************************************/\n\
\n\
    function makeMoment(config) {\n\
        var input = config._i,\n\
            format = config._f;\n\
\n\
        config._locale = config._locale || moment.localeData(config._l);\n\
\n\
        if (input === null || (format === undefined && input === '')) {\n\
            return moment.invalid({nullInput: true});\n\
        }\n\
\n\
        if (typeof input === 'string') {\n\
            config._i = input = config._locale.preparse(input);\n\
        }\n\
\n\
        if (moment.isMoment(input)) {\n\
            return new Moment(input, true);\n\
        } else if (format) {\n\
            if (isArray(format)) {\n\
                makeDateFromStringAndArray(config);\n\
            } else {\n\
                makeDateFromStringAndFormat(config);\n\
            }\n\
        } else {\n\
            makeDateFromInput(config);\n\
        }\n\
\n\
        return new Moment(config);\n\
    }\n\
\n\
    moment = function (input, format, locale, strict) {\n\
        var c;\n\
\n\
        if (typeof(locale) === \"boolean\") {\n\
            strict = locale;\n\
            locale = undefined;\n\
        }\n\
        // object construction must be done this way.\n\
        // https://github.com/moment/moment/issues/1423\n\
        c = {};\n\
        c._isAMomentObject = true;\n\
        c._i = input;\n\
        c._f = format;\n\
        c._l = locale;\n\
        c._strict = strict;\n\
        c._isUTC = false;\n\
        c._pf = defaultParsingFlags();\n\
\n\
        return makeMoment(c);\n\
    };\n\
\n\
    moment.suppressDeprecationWarnings = false;\n\
\n\
    moment.createFromInputFallback = deprecate(\n\
        'moment construction falls back to js Date. This is ' +\n\
        'discouraged and will be removed in upcoming major ' +\n\
        'release. Please refer to ' +\n\
        'https://github.com/moment/moment/issues/1407 for more info.',\n\
        function (config) {\n\
            config._d = new Date(config._i);\n\
        }\n\
    );\n\
\n\
    // Pick a moment m from moments so that m[fn](other) is true for all\n\
    // other. This relies on the function fn to be transitive.\n\
    //\n\
    // moments should either be an array of moment objects or an array, whose\n\
    // first element is an array of moment objects.\n\
    function pickBy(fn, moments) {\n\
        var res, i;\n\
        if (moments.length === 1 && isArray(moments[0])) {\n\
            moments = moments[0];\n\
        }\n\
        if (!moments.length) {\n\
            return moment();\n\
        }\n\
        res = moments[0];\n\
        for (i = 1; i < moments.length; ++i) {\n\
            if (moments[i][fn](res)) {\n\
                res = moments[i];\n\
            }\n\
        }\n\
        return res;\n\
    }\n\
\n\
    moment.min = function () {\n\
        var args = [].slice.call(arguments, 0);\n\
\n\
        return pickBy('isBefore', args);\n\
    };\n\
\n\
    moment.max = function () {\n\
        var args = [].slice.call(arguments, 0);\n\
\n\
        return pickBy('isAfter', args);\n\
    };\n\
\n\
    // creating with utc\n\
    moment.utc = function (input, format, locale, strict) {\n\
        var c;\n\
\n\
        if (typeof(locale) === \"boolean\") {\n\
            strict = locale;\n\
            locale = undefined;\n\
        }\n\
        // object construction must be done this way.\n\
        // https://github.com/moment/moment/issues/1423\n\
        c = {};\n\
        c._isAMomentObject = true;\n\
        c._useUTC = true;\n\
        c._isUTC = true;\n\
        c._l = locale;\n\
        c._i = input;\n\
        c._f = format;\n\
        c._strict = strict;\n\
        c._pf = defaultParsingFlags();\n\
\n\
        return makeMoment(c).utc();\n\
    };\n\
\n\
    // creating with unix timestamp (in seconds)\n\
    moment.unix = function (input) {\n\
        return moment(input * 1000);\n\
    };\n\
\n\
    // duration\n\
    moment.duration = function (input, key) {\n\
        var duration = input,\n\
            // matching against regexp is expensive, do it on demand\n\
            match = null,\n\
            sign,\n\
            ret,\n\
            parseIso,\n\
            diffRes;\n\
\n\
        if (moment.isDuration(input)) {\n\
            duration = {\n\
                ms: input._milliseconds,\n\
                d: input._days,\n\
                M: input._months\n\
            };\n\
        } else if (typeof input === 'number') {\n\
            duration = {};\n\
            if (key) {\n\
                duration[key] = input;\n\
            } else {\n\
                duration.milliseconds = input;\n\
            }\n\
        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n\
            sign = (match[1] === '-') ? -1 : 1;\n\
            duration = {\n\
                y: 0,\n\
                d: toInt(match[DATE]) * sign,\n\
                h: toInt(match[HOUR]) * sign,\n\
                m: toInt(match[MINUTE]) * sign,\n\
                s: toInt(match[SECOND]) * sign,\n\
                ms: toInt(match[MILLISECOND]) * sign\n\
            };\n\
        } else if (!!(match = isoDurationRegex.exec(input))) {\n\
            sign = (match[1] === '-') ? -1 : 1;\n\
            parseIso = function (inp) {\n\
                // We'd normally use ~~inp for this, but unfortunately it also\n\
                // converts floats to ints.\n\
                // inp may be undefined, so careful calling replace on it.\n\
                var res = inp && parseFloat(inp.replace(',', '.'));\n\
                // apply sign while we're at it\n\
                return (isNaN(res) ? 0 : res) * sign;\n\
            };\n\
            duration = {\n\
                y: parseIso(match[2]),\n\
                M: parseIso(match[3]),\n\
                d: parseIso(match[4]),\n\
                h: parseIso(match[5]),\n\
                m: parseIso(match[6]),\n\
                s: parseIso(match[7]),\n\
                w: parseIso(match[8])\n\
            };\n\
        } else if (typeof duration === 'object' &&\n\
                ('from' in duration || 'to' in duration)) {\n\
            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\
\n\
            duration = {};\n\
            duration.ms = diffRes.milliseconds;\n\
            duration.M = diffRes.months;\n\
        }\n\
\n\
        ret = new Duration(duration);\n\
\n\
        if (moment.isDuration(input) && input.hasOwnProperty('_locale')) {\n\
            ret._locale = input._locale;\n\
        }\n\
\n\
        return ret;\n\
    };\n\
\n\
    // version number\n\
    moment.version = VERSION;\n\
\n\
    // default format\n\
    moment.defaultFormat = isoFormat;\n\
\n\
    // constant that refers to the ISO standard\n\
    moment.ISO_8601 = function () {};\n\
\n\
    // Plugins that add properties should also add the key here (null value),\n\
    // so we can properly clone ourselves.\n\
    moment.momentProperties = momentProperties;\n\
\n\
    // This function will be called whenever a moment is mutated.\n\
    // It is intended to keep the offset in sync with the timezone.\n\
    moment.updateOffset = function () {};\n\
\n\
    // This function allows you to set a threshold for relative time strings\n\
    moment.relativeTimeThreshold = function (threshold, limit) {\n\
        if (relativeTimeThresholds[threshold] === undefined) {\n\
            return false;\n\
        }\n\
        if (limit === undefined) {\n\
            return relativeTimeThresholds[threshold];\n\
        }\n\
        relativeTimeThresholds[threshold] = limit;\n\
        return true;\n\
    };\n\
\n\
    moment.lang = deprecate(\n\
        \"moment.lang is deprecated. Use moment.locale instead.\",\n\
        function (key, value) {\n\
            return moment.locale(key, value);\n\
        }\n\
    );\n\
\n\
    // This function will load locale and then set the global locale.  If\n\
    // no arguments are passed in, it will simply return the current global\n\
    // locale key.\n\
    moment.locale = function (key, values) {\n\
        var data;\n\
        if (key) {\n\
            if (typeof(values) !== \"undefined\") {\n\
                data = moment.defineLocale(key, values);\n\
            }\n\
            else {\n\
                data = moment.localeData(key);\n\
            }\n\
\n\
            if (data) {\n\
                moment.duration._locale = moment._locale = data;\n\
            }\n\
        }\n\
\n\
        return moment._locale._abbr;\n\
    };\n\
\n\
    moment.defineLocale = function (name, values) {\n\
        if (values !== null) {\n\
            values.abbr = name;\n\
            if (!locales[name]) {\n\
                locales[name] = new Locale();\n\
            }\n\
            locales[name].set(values);\n\
\n\
            // backwards compat for now: also set the locale\n\
            moment.locale(name);\n\
\n\
            return locales[name];\n\
        } else {\n\
            // useful for testing\n\
            delete locales[name];\n\
            return null;\n\
        }\n\
    };\n\
\n\
    moment.langData = deprecate(\n\
        \"moment.langData is deprecated. Use moment.localeData instead.\",\n\
        function (key) {\n\
            return moment.localeData(key);\n\
        }\n\
    );\n\
\n\
    // returns locale data\n\
    moment.localeData = function (key) {\n\
        var locale;\n\
\n\
        if (key && key._locale && key._locale._abbr) {\n\
            key = key._locale._abbr;\n\
        }\n\
\n\
        if (!key) {\n\
            return moment._locale;\n\
        }\n\
\n\
        if (!isArray(key)) {\n\
            //short-circuit everything else\n\
            locale = loadLocale(key);\n\
            if (locale) {\n\
                return locale;\n\
            }\n\
            key = [key];\n\
        }\n\
\n\
        return chooseLocale(key);\n\
    };\n\
\n\
    // compare moment object\n\
    moment.isMoment = function (obj) {\n\
        return obj instanceof Moment ||\n\
            (obj != null &&  obj.hasOwnProperty('_isAMomentObject'));\n\
    };\n\
\n\
    // for typechecking Duration objects\n\
    moment.isDuration = function (obj) {\n\
        return obj instanceof Duration;\n\
    };\n\
\n\
    for (i = lists.length - 1; i >= 0; --i) {\n\
        makeList(lists[i]);\n\
    }\n\
\n\
    moment.normalizeUnits = function (units) {\n\
        return normalizeUnits(units);\n\
    };\n\
\n\
    moment.invalid = function (flags) {\n\
        var m = moment.utc(NaN);\n\
        if (flags != null) {\n\
            extend(m._pf, flags);\n\
        }\n\
        else {\n\
            m._pf.userInvalidated = true;\n\
        }\n\
\n\
        return m;\n\
    };\n\
\n\
    moment.parseZone = function () {\n\
        return moment.apply(null, arguments).parseZone();\n\
    };\n\
\n\
    moment.parseTwoDigitYear = function (input) {\n\
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\
    };\n\
\n\
    /************************************\n\
        Moment Prototype\n\
    ************************************/\n\
\n\
\n\
    extend(moment.fn = Moment.prototype, {\n\
\n\
        clone : function () {\n\
            return moment(this);\n\
        },\n\
\n\
        valueOf : function () {\n\
            return +this._d + ((this._offset || 0) * 60000);\n\
        },\n\
\n\
        unix : function () {\n\
            return Math.floor(+this / 1000);\n\
        },\n\
\n\
        toString : function () {\n\
            return this.clone().locale('en').format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\");\n\
        },\n\
\n\
        toDate : function () {\n\
            return this._offset ? new Date(+this) : this._d;\n\
        },\n\
\n\
        toISOString : function () {\n\
            var m = moment(this).utc();\n\
            if (0 < m.year() && m.year() <= 9999) {\n\
                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\
            } else {\n\
                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\
            }\n\
        },\n\
\n\
        toArray : function () {\n\
            var m = this;\n\
            return [\n\
                m.year(),\n\
                m.month(),\n\
                m.date(),\n\
                m.hours(),\n\
                m.minutes(),\n\
                m.seconds(),\n\
                m.milliseconds()\n\
            ];\n\
        },\n\
\n\
        isValid : function () {\n\
            return isValid(this);\n\
        },\n\
\n\
        isDSTShifted : function () {\n\
            if (this._a) {\n\
                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n\
            }\n\
\n\
            return false;\n\
        },\n\
\n\
        parsingFlags : function () {\n\
            return extend({}, this._pf);\n\
        },\n\
\n\
        invalidAt: function () {\n\
            return this._pf.overflow;\n\
        },\n\
\n\
        utc : function (keepLocalTime) {\n\
            return this.zone(0, keepLocalTime);\n\
        },\n\
\n\
        local : function (keepLocalTime) {\n\
            if (this._isUTC) {\n\
                this.zone(0, keepLocalTime);\n\
                this._isUTC = false;\n\
\n\
                if (keepLocalTime) {\n\
                    this.add(this._d.getTimezoneOffset(), 'm');\n\
                }\n\
            }\n\
            return this;\n\
        },\n\
\n\
        format : function (inputString) {\n\
            var output = formatMoment(this, inputString || moment.defaultFormat);\n\
            return this.localeData().postformat(output);\n\
        },\n\
\n\
        add : createAdder(1, 'add'),\n\
\n\
        subtract : createAdder(-1, 'subtract'),\n\
\n\
        diff : function (input, units, asFloat) {\n\
            var that = makeAs(input, this),\n\
                zoneDiff = (this.zone() - that.zone()) * 6e4,\n\
                diff, output;\n\
\n\
            units = normalizeUnits(units);\n\
\n\
            if (units === 'year' || units === 'month') {\n\
                // average number of days in the months in the given dates\n\
                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n\
                // difference in months\n\
                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());\n\
                // adjust by taking difference in days, average number of days\n\
                // and dst in the given months.\n\
                output += ((this - moment(this).startOf('month')) -\n\
                        (that - moment(that).startOf('month'))) / diff;\n\
                // same as above but with zones, to negate all dst\n\
                output -= ((this.zone() - moment(this).startOf('month').zone()) -\n\
                        (that.zone() - moment(that).startOf('month').zone())) * 6e4 / diff;\n\
                if (units === 'year') {\n\
                    output = output / 12;\n\
                }\n\
            } else {\n\
                diff = (this - that);\n\
                output = units === 'second' ? diff / 1e3 : // 1000\n\
                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n\
                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n\
                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\
                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\
                    diff;\n\
            }\n\
            return asFloat ? output : absRound(output);\n\
        },\n\
\n\
        from : function (time, withoutSuffix) {\n\
            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\
        },\n\
\n\
        fromNow : function (withoutSuffix) {\n\
            return this.from(moment(), withoutSuffix);\n\
        },\n\
\n\
        calendar : function (time) {\n\
            // We want to compare the start of today, vs this.\n\
            // Getting start-of-today depends on whether we're zone'd or not.\n\
            var now = time || moment(),\n\
                sod = makeAs(now, this).startOf('day'),\n\
                diff = this.diff(sod, 'days', true),\n\
                format = diff < -6 ? 'sameElse' :\n\
                    diff < -1 ? 'lastWeek' :\n\
                    diff < 0 ? 'lastDay' :\n\
                    diff < 1 ? 'sameDay' :\n\
                    diff < 2 ? 'nextDay' :\n\
                    diff < 7 ? 'nextWeek' : 'sameElse';\n\
            return this.format(this.localeData().calendar(format, this));\n\
        },\n\
\n\
        isLeapYear : function () {\n\
            return isLeapYear(this.year());\n\
        },\n\
\n\
        isDST : function () {\n\
            return (this.zone() < this.clone().month(0).zone() ||\n\
                this.zone() < this.clone().month(5).zone());\n\
        },\n\
\n\
        day : function (input) {\n\
            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\
            if (input != null) {\n\
                input = parseWeekday(input, this.localeData());\n\
                return this.add(input - day, 'd');\n\
            } else {\n\
                return day;\n\
            }\n\
        },\n\
\n\
        month : makeAccessor('Month', true),\n\
\n\
        startOf : function (units) {\n\
            units = normalizeUnits(units);\n\
            // the following switch intentionally omits break keywords\n\
            // to utilize falling through the cases.\n\
            switch (units) {\n\
            case 'year':\n\
                this.month(0);\n\
                /* falls through */\n\
            case 'quarter':\n\
            case 'month':\n\
                this.date(1);\n\
                /* falls through */\n\
            case 'week':\n\
            case 'isoWeek':\n\
            case 'day':\n\
                this.hours(0);\n\
                /* falls through */\n\
            case 'hour':\n\
                this.minutes(0);\n\
                /* falls through */\n\
            case 'minute':\n\
                this.seconds(0);\n\
                /* falls through */\n\
            case 'second':\n\
                this.milliseconds(0);\n\
                /* falls through */\n\
            }\n\
\n\
            // weeks are a special case\n\
            if (units === 'week') {\n\
                this.weekday(0);\n\
            } else if (units === 'isoWeek') {\n\
                this.isoWeekday(1);\n\
            }\n\
\n\
            // quarters are also special\n\
            if (units === 'quarter') {\n\
                this.month(Math.floor(this.month() / 3) * 3);\n\
            }\n\
\n\
            return this;\n\
        },\n\
\n\
        endOf: function (units) {\n\
            units = normalizeUnits(units);\n\
            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\
        },\n\
\n\
        isAfter: function (input, units) {\n\
            units = typeof units !== 'undefined' ? units : 'millisecond';\n\
            return +this.clone().startOf(units) > +moment(input).startOf(units);\n\
        },\n\
\n\
        isBefore: function (input, units) {\n\
            units = typeof units !== 'undefined' ? units : 'millisecond';\n\
            return +this.clone().startOf(units) < +moment(input).startOf(units);\n\
        },\n\
\n\
        isSame: function (input, units) {\n\
            units = units || 'ms';\n\
            return +this.clone().startOf(units) === +makeAs(input, this).startOf(units);\n\
        },\n\
\n\
        min: deprecate(\n\
                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n\
                 function (other) {\n\
                     other = moment.apply(null, arguments);\n\
                     return other < this ? this : other;\n\
                 }\n\
         ),\n\
\n\
        max: deprecate(\n\
                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n\
                function (other) {\n\
                    other = moment.apply(null, arguments);\n\
                    return other > this ? this : other;\n\
                }\n\
        ),\n\
\n\
        // keepLocalTime = true means only change the timezone, without\n\
        // affecting the local hour. So 5:31:26 +0300 --[zone(2, true)]-->\n\
        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist int zone\n\
        // +0200, so we adjust the time as needed, to be valid.\n\
        //\n\
        // Keeping the time actually adds/subtracts (one hour)\n\
        // from the actual represented time. That is why we call updateOffset\n\
        // a second time. In case it wants us to change the offset again\n\
        // _changeInProgress == true case, then we have to adjust, because\n\
        // there is no such time in the given timezone.\n\
        zone : function (input, keepLocalTime) {\n\
            var offset = this._offset || 0,\n\
                localAdjust;\n\
            if (input != null) {\n\
                if (typeof input === 'string') {\n\
                    input = timezoneMinutesFromString(input);\n\
                }\n\
                if (Math.abs(input) < 16) {\n\
                    input = input * 60;\n\
                }\n\
                if (!this._isUTC && keepLocalTime) {\n\
                    localAdjust = this._d.getTimezoneOffset();\n\
                }\n\
                this._offset = input;\n\
                this._isUTC = true;\n\
                if (localAdjust != null) {\n\
                    this.subtract(localAdjust, 'm');\n\
                }\n\
                if (offset !== input) {\n\
                    if (!keepLocalTime || this._changeInProgress) {\n\
                        addOrSubtractDurationFromMoment(this,\n\
                                moment.duration(offset - input, 'm'), 1, false);\n\
                    } else if (!this._changeInProgress) {\n\
                        this._changeInProgress = true;\n\
                        moment.updateOffset(this, true);\n\
                        this._changeInProgress = null;\n\
                    }\n\
                }\n\
            } else {\n\
                return this._isUTC ? offset : this._d.getTimezoneOffset();\n\
            }\n\
            return this;\n\
        },\n\
\n\
        zoneAbbr : function () {\n\
            return this._isUTC ? 'UTC' : '';\n\
        },\n\
\n\
        zoneName : function () {\n\
            return this._isUTC ? 'Coordinated Universal Time' : '';\n\
        },\n\
\n\
        parseZone : function () {\n\
            if (this._tzm) {\n\
                this.zone(this._tzm);\n\
            } else if (typeof this._i === 'string') {\n\
                this.zone(this._i);\n\
            }\n\
            return this;\n\
        },\n\
\n\
        hasAlignedHourOffset : function (input) {\n\
            if (!input) {\n\
                input = 0;\n\
            }\n\
            else {\n\
                input = moment(input).zone();\n\
            }\n\
\n\
            return (this.zone() - input) % 60 === 0;\n\
        },\n\
\n\
        daysInMonth : function () {\n\
            return daysInMonth(this.year(), this.month());\n\
        },\n\
\n\
        dayOfYear : function (input) {\n\
            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n\
            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\
        },\n\
\n\
        quarter : function (input) {\n\
            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\
        },\n\
\n\
        weekYear : function (input) {\n\
            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n\
            return input == null ? year : this.add((input - year), 'y');\n\
        },\n\
\n\
        isoWeekYear : function (input) {\n\
            var year = weekOfYear(this, 1, 4).year;\n\
            return input == null ? year : this.add((input - year), 'y');\n\
        },\n\
\n\
        week : function (input) {\n\
            var week = this.localeData().week(this);\n\
            return input == null ? week : this.add((input - week) * 7, 'd');\n\
        },\n\
\n\
        isoWeek : function (input) {\n\
            var week = weekOfYear(this, 1, 4).week;\n\
            return input == null ? week : this.add((input - week) * 7, 'd');\n\
        },\n\
\n\
        weekday : function (input) {\n\
            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\
            return input == null ? weekday : this.add(input - weekday, 'd');\n\
        },\n\
\n\
        isoWeekday : function (input) {\n\
            // behaves the same as moment#day except\n\
            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\
            // as a setter, sunday should belong to the previous week.\n\
            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n\
        },\n\
\n\
        isoWeeksInYear : function () {\n\
            return weeksInYear(this.year(), 1, 4);\n\
        },\n\
\n\
        weeksInYear : function () {\n\
            var weekInfo = this.localeData()._week;\n\
            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\
        },\n\
\n\
        get : function (units) {\n\
            units = normalizeUnits(units);\n\
            return this[units]();\n\
        },\n\
\n\
        set : function (units, value) {\n\
            units = normalizeUnits(units);\n\
            if (typeof this[units] === 'function') {\n\
                this[units](value);\n\
            }\n\
            return this;\n\
        },\n\
\n\
        // If passed a locale key, it will set the locale for this\n\
        // instance.  Otherwise, it will return the locale configuration\n\
        // variables for this instance.\n\
        locale : function (key) {\n\
            if (key === undefined) {\n\
                return this._locale._abbr;\n\
            } else {\n\
                this._locale = moment.localeData(key);\n\
                return this;\n\
            }\n\
        },\n\
\n\
        lang : deprecate(\n\
            \"moment().lang() is deprecated. Use moment().localeData() instead.\",\n\
            function (key) {\n\
                if (key === undefined) {\n\
                    return this.localeData();\n\
                } else {\n\
                    this._locale = moment.localeData(key);\n\
                    return this;\n\
                }\n\
            }\n\
        ),\n\
\n\
        localeData : function () {\n\
            return this._locale;\n\
        }\n\
    });\n\
\n\
    function rawMonthSetter(mom, value) {\n\
        var dayOfMonth;\n\
\n\
        // TODO: Move this out of here!\n\
        if (typeof value === 'string') {\n\
            value = mom.localeData().monthsParse(value);\n\
            // TODO: Another silent failure?\n\
            if (typeof value !== 'number') {\n\
                return mom;\n\
            }\n\
        }\n\
\n\
        dayOfMonth = Math.min(mom.date(),\n\
                daysInMonth(mom.year(), value));\n\
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\
        return mom;\n\
    }\n\
\n\
    function rawGetter(mom, unit) {\n\
        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n\
    }\n\
\n\
    function rawSetter(mom, unit, value) {\n\
        if (unit === 'Month') {\n\
            return rawMonthSetter(mom, value);\n\
        } else {\n\
            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\
        }\n\
    }\n\
\n\
    function makeAccessor(unit, keepTime) {\n\
        return function (value) {\n\
            if (value != null) {\n\
                rawSetter(this, unit, value);\n\
                moment.updateOffset(this, keepTime);\n\
                return this;\n\
            } else {\n\
                return rawGetter(this, unit);\n\
            }\n\
        };\n\
    }\n\
\n\
    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n\
    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n\
    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n\
    // Setting the hour should keep the time, because the user explicitly\n\
    // specified which hour he wants. So trying to maintain the same hour (in\n\
    // a new timezone) makes sense. Adding/subtracting hours does not follow\n\
    // this rule.\n\
    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n\
    // moment.fn.month is defined separately\n\
    moment.fn.date = makeAccessor('Date', true);\n\
    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n\
    moment.fn.year = makeAccessor('FullYear', true);\n\
    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\
\n\
    // add plural methods\n\
    moment.fn.days = moment.fn.day;\n\
    moment.fn.months = moment.fn.month;\n\
    moment.fn.weeks = moment.fn.week;\n\
    moment.fn.isoWeeks = moment.fn.isoWeek;\n\
    moment.fn.quarters = moment.fn.quarter;\n\
\n\
    // add aliased format methods\n\
    moment.fn.toJSON = moment.fn.toISOString;\n\
\n\
    /************************************\n\
        Duration Prototype\n\
    ************************************/\n\
\n\
\n\
    function daysToYears (days) {\n\
        // 400 years have 146097 days (taking into account leap year rules)\n\
        return days * 400 / 146097;\n\
    }\n\
\n\
    function yearsToDays (years) {\n\
        // years * 365 + absRound(years / 4) -\n\
        //     absRound(years / 100) + absRound(years / 400);\n\
        return years * 146097 / 400;\n\
    }\n\
\n\
    extend(moment.duration.fn = Duration.prototype, {\n\
\n\
        _bubble : function () {\n\
            var milliseconds = this._milliseconds,\n\
                days = this._days,\n\
                months = this._months,\n\
                data = this._data,\n\
                seconds, minutes, hours, years = 0;\n\
\n\
            // The following code bubbles up values, see the tests for\n\
            // examples of what that means.\n\
            data.milliseconds = milliseconds % 1000;\n\
\n\
            seconds = absRound(milliseconds / 1000);\n\
            data.seconds = seconds % 60;\n\
\n\
            minutes = absRound(seconds / 60);\n\
            data.minutes = minutes % 60;\n\
\n\
            hours = absRound(minutes / 60);\n\
            data.hours = hours % 24;\n\
\n\
            days += absRound(hours / 24);\n\
\n\
            // Accurately convert days to years, assume start from year 0.\n\
            years = absRound(daysToYears(days));\n\
            days -= absRound(yearsToDays(years));\n\
\n\
            // 30 days to a month\n\
            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n\
            months += absRound(days / 30);\n\
            days %= 30;\n\
\n\
            // 12 months -> 1 year\n\
            years += absRound(months / 12);\n\
            months %= 12;\n\
\n\
            data.days = days;\n\
            data.months = months;\n\
            data.years = years;\n\
        },\n\
\n\
        abs : function () {\n\
            this._milliseconds = Math.abs(this._milliseconds);\n\
            this._days = Math.abs(this._days);\n\
            this._months = Math.abs(this._months);\n\
\n\
            this._data.milliseconds = Math.abs(this._data.milliseconds);\n\
            this._data.seconds = Math.abs(this._data.seconds);\n\
            this._data.minutes = Math.abs(this._data.minutes);\n\
            this._data.hours = Math.abs(this._data.hours);\n\
            this._data.months = Math.abs(this._data.months);\n\
            this._data.years = Math.abs(this._data.years);\n\
\n\
            return this;\n\
        },\n\
\n\
        weeks : function () {\n\
            return absRound(this.days() / 7);\n\
        },\n\
\n\
        valueOf : function () {\n\
            return this._milliseconds +\n\
              this._days * 864e5 +\n\
              (this._months % 12) * 2592e6 +\n\
              toInt(this._months / 12) * 31536e6;\n\
        },\n\
\n\
        humanize : function (withSuffix) {\n\
            var output = relativeTime(this, !withSuffix, this.localeData());\n\
\n\
            if (withSuffix) {\n\
                output = this.localeData().pastFuture(+this, output);\n\
            }\n\
\n\
            return this.localeData().postformat(output);\n\
        },\n\
\n\
        add : function (input, val) {\n\
            // supports only 2.0-style add(1, 's') or add(moment)\n\
            var dur = moment.duration(input, val);\n\
\n\
            this._milliseconds += dur._milliseconds;\n\
            this._days += dur._days;\n\
            this._months += dur._months;\n\
\n\
            this._bubble();\n\
\n\
            return this;\n\
        },\n\
\n\
        subtract : function (input, val) {\n\
            var dur = moment.duration(input, val);\n\
\n\
            this._milliseconds -= dur._milliseconds;\n\
            this._days -= dur._days;\n\
            this._months -= dur._months;\n\
\n\
            this._bubble();\n\
\n\
            return this;\n\
        },\n\
\n\
        get : function (units) {\n\
            units = normalizeUnits(units);\n\
            return this[units.toLowerCase() + 's']();\n\
        },\n\
\n\
        as : function (units) {\n\
            var days, months;\n\
            units = normalizeUnits(units);\n\
\n\
            days = this._days + this._milliseconds / 864e5;\n\
            if (units === 'month' || units === 'year') {\n\
                months = this._months + daysToYears(days) * 12;\n\
                return units === 'month' ? months : months / 12;\n\
            } else {\n\
                days += yearsToDays(this._months / 12);\n\
                switch (units) {\n\
                    case 'week': return days / 7;\n\
                    case 'day': return days;\n\
                    case 'hour': return days * 24;\n\
                    case 'minute': return days * 24 * 60;\n\
                    case 'second': return days * 24 * 60 * 60;\n\
                    case 'millisecond': return days * 24 * 60 * 60 * 1000;\n\
                    default: throw new Error('Unknown unit ' + units);\n\
                }\n\
            }\n\
        },\n\
\n\
        lang : moment.fn.lang,\n\
        locale : moment.fn.locale,\n\
\n\
        toIsoString : deprecate(\n\
            \"toIsoString() is deprecated. Please use toISOString() instead \" +\n\
            \"(notice the capitals)\",\n\
            function () {\n\
                return this.toISOString();\n\
            }\n\
        ),\n\
\n\
        toISOString : function () {\n\
            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\
            var years = Math.abs(this.years()),\n\
                months = Math.abs(this.months()),\n\
                days = Math.abs(this.days()),\n\
                hours = Math.abs(this.hours()),\n\
                minutes = Math.abs(this.minutes()),\n\
                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\
\n\
            if (!this.asSeconds()) {\n\
                // this is the same as C#'s (Noda) and python (isodate)...\n\
                // but not other JS (goog.date)\n\
                return 'P0D';\n\
            }\n\
\n\
            return (this.asSeconds() < 0 ? '-' : '') +\n\
                'P' +\n\
                (years ? years + 'Y' : '') +\n\
                (months ? months + 'M' : '') +\n\
                (days ? days + 'D' : '') +\n\
                ((hours || minutes || seconds) ? 'T' : '') +\n\
                (hours ? hours + 'H' : '') +\n\
                (minutes ? minutes + 'M' : '') +\n\
                (seconds ? seconds + 'S' : '');\n\
        },\n\
\n\
        localeData : function () {\n\
            return this._locale;\n\
        }\n\
    });\n\
\n\
    function makeDurationGetter(name) {\n\
        moment.duration.fn[name] = function () {\n\
            return this._data[name];\n\
        };\n\
    }\n\
\n\
    for (i in unitMillisecondFactors) {\n\
        if (unitMillisecondFactors.hasOwnProperty(i)) {\n\
            makeDurationGetter(i.toLowerCase());\n\
        }\n\
    }\n\
\n\
    moment.duration.fn.asMilliseconds = function () {\n\
        return this.as('ms');\n\
    };\n\
    moment.duration.fn.asSeconds = function () {\n\
        return this.as('s');\n\
    };\n\
    moment.duration.fn.asMinutes = function () {\n\
        return this.as('m');\n\
    };\n\
    moment.duration.fn.asHours = function () {\n\
        return this.as('h');\n\
    };\n\
    moment.duration.fn.asDays = function () {\n\
        return this.as('d');\n\
    };\n\
    moment.duration.fn.asWeeks = function () {\n\
        return this.as('weeks');\n\
    };\n\
    moment.duration.fn.asMonths = function () {\n\
        return this.as('M');\n\
    };\n\
    moment.duration.fn.asYears = function () {\n\
        return this.as('y');\n\
    };\n\
\n\
    /************************************\n\
        Default Locale\n\
    ************************************/\n\
\n\
\n\
    // Set default locale, other locale will inherit from English.\n\
    moment.locale('en', {\n\
        ordinal : function (number) {\n\
            var b = number % 10,\n\
                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\
                (b === 1) ? 'st' :\n\
                (b === 2) ? 'nd' :\n\
                (b === 3) ? 'rd' : 'th';\n\
            return number + output;\n\
        }\n\
    });\n\
\n\
    /* EMBED_LOCALES */\n\
\n\
    /************************************\n\
        Exposing Moment\n\
    ************************************/\n\
\n\
    function makeGlobal(shouldDeprecate) {\n\
        /*global ender:false */\n\
        if (typeof ender !== 'undefined') {\n\
            return;\n\
        }\n\
        oldGlobalMoment = globalScope.moment;\n\
        if (shouldDeprecate) {\n\
            globalScope.moment = deprecate(\n\
                    'Accessing Moment through the global scope is ' +\n\
                    'deprecated, and will be removed in an upcoming ' +\n\
                    'release.',\n\
                    moment);\n\
        } else {\n\
            globalScope.moment = moment;\n\
        }\n\
    }\n\
\n\
    // CommonJS module is defined\n\
    if (hasModule) {\n\
        module.exports = moment;\n\
    } else if (typeof define === 'function' && define.amd) {\n\
        define('moment', function (require, exports, module) {\n\
            if (module.config && module.config() && module.config().noGlobal === true) {\n\
                // release the global variable\n\
                globalScope.moment = oldGlobalMoment;\n\
            }\n\
\n\
            return moment;\n\
        });\n\
        makeGlobal(true);\n\
    } else {\n\
        makeGlobal();\n\
    }\n\
}).call(this);\n\
//@ sourceURL=johntron-moment/moment.js"
));
require.register("johntron-moment/locale/af.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : afrikaans (af)\n\
// author : Werner Mollentze : https://github.com/wernerm\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('af', {\n\
        months : \"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember\".split(\"_\"),\n\
        monthsShort : \"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des\".split(\"_\"),\n\
        weekdays : \"Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag\".split(\"_\"),\n\
        weekdaysShort : \"Son_Maa_Din_Woe_Don_Vry_Sat\".split(\"_\"),\n\
        weekdaysMin : \"So_Ma_Di_Wo_Do_Vr_Sa\".split(\"_\"),\n\
        meridiem : function (hours, minutes, isLower) {\n\
            if (hours < 12) {\n\
                return isLower ? 'vm' : 'VM';\n\
            } else {\n\
                return isLower ? 'nm' : 'NM';\n\
            }\n\
        },\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Vandag om] LT',\n\
            nextDay : '[Môre om] LT',\n\
            nextWeek : 'dddd [om] LT',\n\
            lastDay : '[Gister om] LT',\n\
            lastWeek : '[Laas] dddd [om] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"oor %s\",\n\
            past : \"%s gelede\",\n\
            s : \"'n paar sekondes\",\n\
            m : \"'n minuut\",\n\
            mm : \"%d minute\",\n\
            h : \"'n uur\",\n\
            hh : \"%d ure\",\n\
            d : \"'n dag\",\n\
            dd : \"%d dae\",\n\
            M : \"'n maand\",\n\
            MM : \"%d maande\",\n\
            y : \"'n jaar\",\n\
            yy : \"%d jaar\"\n\
        },\n\
        ordinal : function (number) {\n\
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n\
        },\n\
        week : {\n\
            dow : 1, // Maandag is die eerste dag van die week.\n\
            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/af.js"
));
require.register("johntron-moment/locale/ar-ma.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Moroccan Arabic (ar-ma)\n\
// author : ElFadili Yassine : https://github.com/ElFadiliY\n\
// author : Abdel Said : https://github.com/abdelsaid\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('ar-ma', {\n\
        months : \"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر\".split(\"_\"),\n\
        monthsShort : \"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر\".split(\"_\"),\n\
        weekdays : \"الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),\n\
        weekdaysShort : \"احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت\".split(\"_\"),\n\
        weekdaysMin : \"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[اليوم على الساعة] LT\",\n\
            nextDay: '[غدا على الساعة] LT',\n\
            nextWeek: 'dddd [على الساعة] LT',\n\
            lastDay: '[أمس على الساعة] LT',\n\
            lastWeek: 'dddd [على الساعة] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"في %s\",\n\
            past : \"منذ %s\",\n\
            s : \"ثوان\",\n\
            m : \"دقيقة\",\n\
            mm : \"%d دقائق\",\n\
            h : \"ساعة\",\n\
            hh : \"%d ساعات\",\n\
            d : \"يوم\",\n\
            dd : \"%d أيام\",\n\
            M : \"شهر\",\n\
            MM : \"%d أشهر\",\n\
            y : \"سنة\",\n\
            yy : \"%d سنوات\"\n\
        },\n\
        week : {\n\
            dow : 6, // Saturday is the first day of the week.\n\
            doy : 12  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ar-ma.js"
));
require.register("johntron-moment/locale/ar-sa.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Arabic Saudi Arabia (ar-sa)\n\
// author : Suhail Alkowaileet : https://github.com/xsoh\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '١',\n\
        '2': '٢',\n\
        '3': '٣',\n\
        '4': '٤',\n\
        '5': '٥',\n\
        '6': '٦',\n\
        '7': '٧',\n\
        '8': '٨',\n\
        '9': '٩',\n\
        '0': '٠'\n\
    }, numberMap = {\n\
        '١': '1',\n\
        '٢': '2',\n\
        '٣': '3',\n\
        '٤': '4',\n\
        '٥': '5',\n\
        '٦': '6',\n\
        '٧': '7',\n\
        '٨': '8',\n\
        '٩': '9',\n\
        '٠': '0'\n\
    };\n\
\n\
    return moment.defineLocale('ar-sa', {\n\
        months : \"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),\n\
        monthsShort : \"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),\n\
        weekdays : \"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),\n\
        weekdaysShort : \"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),\n\
        weekdaysMin : \"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 12) {\n\
                return \"ص\";\n\
            } else {\n\
                return \"م\";\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay: \"[اليوم على الساعة] LT\",\n\
            nextDay: '[غدا على الساعة] LT',\n\
            nextWeek: 'dddd [على الساعة] LT',\n\
            lastDay: '[أمس على الساعة] LT',\n\
            lastWeek: 'dddd [على الساعة] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"في %s\",\n\
            past : \"منذ %s\",\n\
            s : \"ثوان\",\n\
            m : \"دقيقة\",\n\
            mm : \"%d دقائق\",\n\
            h : \"ساعة\",\n\
            hh : \"%d ساعات\",\n\
            d : \"يوم\",\n\
            dd : \"%d أيام\",\n\
            M : \"شهر\",\n\
            MM : \"%d أشهر\",\n\
            y : \"سنة\",\n\
            yy : \"%d سنوات\"\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[۰-۹]/g, function (match) {\n\
                return numberMap[match];\n\
            }).replace(/،/g, ',');\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            }).replace(/,/g, '،');\n\
        },\n\
        week : {\n\
            dow : 6, // Saturday is the first day of the week.\n\
            doy : 12  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ar-sa.js"
));
require.register("johntron-moment/locale/ar.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Arabic (ar)\n\
// author : Abdel Said : https://github.com/abdelsaid\n\
// changes in months, weekdays : Ahmed Elkhatib\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '١',\n\
        '2': '٢',\n\
        '3': '٣',\n\
        '4': '٤',\n\
        '5': '٥',\n\
        '6': '٦',\n\
        '7': '٧',\n\
        '8': '٨',\n\
        '9': '٩',\n\
        '0': '٠'\n\
    }, numberMap = {\n\
        '١': '1',\n\
        '٢': '2',\n\
        '٣': '3',\n\
        '٤': '4',\n\
        '٥': '5',\n\
        '٦': '6',\n\
        '٧': '7',\n\
        '٨': '8',\n\
        '٩': '9',\n\
        '٠': '0'\n\
    };\n\
\n\
    return moment.defineLocale('ar', {\n\
        months : \"يناير/ كانون الثاني_فبراير/ شباط_مارس/ آذار_أبريل/ نيسان_مايو/ أيار_يونيو/ حزيران_يوليو/ تموز_أغسطس/ آب_سبتمبر/ أيلول_أكتوبر/ تشرين الأول_نوفمبر/ تشرين الثاني_ديسمبر/ كانون الأول\".split(\"_\"),\n\
        monthsShort : \"يناير/ كانون الثاني_فبراير/ شباط_مارس/ آذار_أبريل/ نيسان_مايو/ أيار_يونيو/ حزيران_يوليو/ تموز_أغسطس/ آب_سبتمبر/ أيلول_أكتوبر/ تشرين الأول_نوفمبر/ تشرين الثاني_ديسمبر/ كانون الأول\".split(\"_\"),\n\
        weekdays : \"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),\n\
        weekdaysShort : \"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),\n\
        weekdaysMin : \"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 12) {\n\
                return \"ص\";\n\
            } else {\n\
                return \"م\";\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay: \"[اليوم على الساعة] LT\",\n\
            nextDay: '[غدا على الساعة] LT',\n\
            nextWeek: 'dddd [على الساعة] LT',\n\
            lastDay: '[أمس على الساعة] LT',\n\
            lastWeek: 'dddd [على الساعة] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"في %s\",\n\
            past : \"منذ %s\",\n\
            s : \"ثوان\",\n\
            m : \"دقيقة\",\n\
            mm : \"%d دقائق\",\n\
            h : \"ساعة\",\n\
            hh : \"%d ساعات\",\n\
            d : \"يوم\",\n\
            dd : \"%d أيام\",\n\
            M : \"شهر\",\n\
            MM : \"%d أشهر\",\n\
            y : \"سنة\",\n\
            yy : \"%d سنوات\"\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[۰-۹]/g, function (match) {\n\
                return numberMap[match];\n\
            }).replace(/،/g, ',');\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            }).replace(/,/g, '،');\n\
        },\n\
        week : {\n\
            dow : 6, // Saturday is the first day of the week.\n\
            doy : 12  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ar.js"
));
require.register("johntron-moment/locale/az.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : azerbaijani (az)\n\
// author : topchiyev : https://github.com/topchiyev\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var suffixes = {\n\
        1: \"-inci\",\n\
        5: \"-inci\",\n\
        8: \"-inci\",\n\
        70: \"-inci\",\n\
        80: \"-inci\",\n\
\n\
        2: \"-nci\",\n\
        7: \"-nci\",\n\
        20: \"-nci\",\n\
        50: \"-nci\",\n\
\n\
        3: \"-üncü\",\n\
        4: \"-üncü\",\n\
        100: \"-üncü\",\n\
\n\
        6: \"-ncı\",\n\
\n\
        9: \"-uncu\",\n\
        10: \"-uncu\",\n\
        30: \"-uncu\",\n\
\n\
        60: \"-ıncı\",\n\
        90: \"-ıncı\"\n\
    };\n\
    return moment.defineLocale('az', {\n\
        months : \"yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr\".split(\"_\"),\n\
        monthsShort : \"yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek\".split(\"_\"),\n\
        weekdays : \"Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə\".split(\"_\"),\n\
        weekdaysShort : \"Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən\".split(\"_\"),\n\
        weekdaysMin : \"Bz_BE_ÇA_Çə_CA_Cü_Şə\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[bugün saat] LT',\n\
            nextDay : '[sabah saat] LT',\n\
            nextWeek : '[gələn həftə] dddd [saat] LT',\n\
            lastDay : '[dünən] LT',\n\
            lastWeek : '[keçən həftə] dddd [saat] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s sonra\",\n\
            past : \"%s əvvəl\",\n\
            s : \"birneçə saniyyə\",\n\
            m : \"bir dəqiqə\",\n\
            mm : \"%d dəqiqə\",\n\
            h : \"bir saat\",\n\
            hh : \"%d saat\",\n\
            d : \"bir gün\",\n\
            dd : \"%d gün\",\n\
            M : \"bir ay\",\n\
            MM : \"%d ay\",\n\
            y : \"bir il\",\n\
            yy : \"%d il\"\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 4) {\n\
                return \"gecə\";\n\
            } else if (hour < 12) {\n\
                return \"səhər\";\n\
            } else if (hour < 17) {\n\
                return \"gündüz\";\n\
            } else {\n\
                return \"axşam\";\n\
            }\n\
        },\n\
        ordinal : function (number) {\n\
            if (number === 0) {  // special case for zero\n\
                return number + \"-ıncı\";\n\
            }\n\
            var a = number % 10,\n\
                b = number % 100 - a,\n\
                c = number >= 100 ? 100 : null;\n\
\n\
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/az.js"
));
require.register("johntron-moment/locale/be.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : belarusian (be)\n\
// author : Dmitry Demidov : https://github.com/demidov91\n\
// author: Praleska: http://praleska.pro/\n\
// Author : Menelion Elensúle : https://github.com/Oire\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function plural(word, num) {\n\
        var forms = word.split('_');\n\
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n\
    }\n\
\n\
    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\
        var format = {\n\
            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n\
            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n\
            'dd': 'дзень_дні_дзён',\n\
            'MM': 'месяц_месяцы_месяцаў',\n\
            'yy': 'год_гады_гадоў'\n\
        };\n\
        if (key === 'm') {\n\
            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n\
        }\n\
        else if (key === 'h') {\n\
            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n\
        }\n\
        else {\n\
            return number + ' ' + plural(format[key], +number);\n\
        }\n\
    }\n\
\n\
    function monthsCaseReplace(m, format) {\n\
        var months = {\n\
            'nominative': 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),\n\
            'accusative': 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_')\n\
        },\n\
\n\
        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return months[nounCase][m.month()];\n\
    }\n\
\n\
    function weekdaysCaseReplace(m, format) {\n\
        var weekdays = {\n\
            'nominative': 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n\
            'accusative': 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_')\n\
        },\n\
\n\
        nounCase = (/\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return weekdays[nounCase][m.day()];\n\
    }\n\
\n\
    return moment.defineLocale('be', {\n\
        months : monthsCaseReplace,\n\
        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n\
        weekdays : weekdaysCaseReplace,\n\
        weekdaysShort : \"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),\n\
        weekdaysMin : \"нд_пн_ат_ср_чц_пт_сб\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY г.\",\n\
            LLL : \"D MMMM YYYY г., LT\",\n\
            LLLL : \"dddd, D MMMM YYYY г., LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[Сёння ў] LT',\n\
            nextDay: '[Заўтра ў] LT',\n\
            lastDay: '[Учора ў] LT',\n\
            nextWeek: function () {\n\
                return '[У] dddd [ў] LT';\n\
            },\n\
            lastWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                case 3:\n\
                case 5:\n\
                case 6:\n\
                    return '[У мінулую] dddd [ў] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                    return '[У мінулы] dddd [ў] LT';\n\
                }\n\
            },\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"праз %s\",\n\
            past : \"%s таму\",\n\
            s : \"некалькі секунд\",\n\
            m : relativeTimeWithPlural,\n\
            mm : relativeTimeWithPlural,\n\
            h : relativeTimeWithPlural,\n\
            hh : relativeTimeWithPlural,\n\
            d : \"дзень\",\n\
            dd : relativeTimeWithPlural,\n\
            M : \"месяц\",\n\
            MM : relativeTimeWithPlural,\n\
            y : \"год\",\n\
            yy : relativeTimeWithPlural\n\
        },\n\
\n\
\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 4) {\n\
                return \"ночы\";\n\
            } else if (hour < 12) {\n\
                return \"раніцы\";\n\
            } else if (hour < 17) {\n\
                return \"дня\";\n\
            } else {\n\
                return \"вечара\";\n\
            }\n\
        },\n\
\n\
        ordinal: function (number, period) {\n\
            switch (period) {\n\
            case 'M':\n\
            case 'd':\n\
            case 'DDD':\n\
            case 'w':\n\
            case 'W':\n\
                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n\
            case 'D':\n\
                return number + '-га';\n\
            default:\n\
                return number;\n\
            }\n\
        },\n\
\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/be.js"
));
require.register("johntron-moment/locale/bg.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : bulgarian (bg)\n\
// author : Krasen Borisov : https://github.com/kraz\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('bg', {\n\
        months : \"януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември\".split(\"_\"),\n\
        monthsShort : \"янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек\".split(\"_\"),\n\
        weekdays : \"неделя_понеделник_вторник_сряда_четвъртък_петък_събота\".split(\"_\"),\n\
        weekdaysShort : \"нед_пон_вто_сря_чет_пет_съб\".split(\"_\"),\n\
        weekdaysMin : \"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"D.MM.YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Днес в] LT',\n\
            nextDay : '[Утре в] LT',\n\
            nextWeek : 'dddd [в] LT',\n\
            lastDay : '[Вчера в] LT',\n\
            lastWeek : function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                case 3:\n\
                case 6:\n\
                    return '[В изминалата] dddd [в] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[В изминалия] dddd [в] LT';\n\
                }\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"след %s\",\n\
            past : \"преди %s\",\n\
            s : \"няколко секунди\",\n\
            m : \"минута\",\n\
            mm : \"%d минути\",\n\
            h : \"час\",\n\
            hh : \"%d часа\",\n\
            d : \"ден\",\n\
            dd : \"%d дни\",\n\
            M : \"месец\",\n\
            MM : \"%d месеца\",\n\
            y : \"година\",\n\
            yy : \"%d години\"\n\
        },\n\
        ordinal : function (number) {\n\
            var lastDigit = number % 10,\n\
                last2Digits = number % 100;\n\
            if (number === 0) {\n\
                return number + '-ев';\n\
            } else if (last2Digits === 0) {\n\
                return number + '-ен';\n\
            } else if (last2Digits > 10 && last2Digits < 20) {\n\
                return number + '-ти';\n\
            } else if (lastDigit === 1) {\n\
                return number + '-ви';\n\
            } else if (lastDigit === 2) {\n\
                return number + '-ри';\n\
            } else if (lastDigit === 7 || lastDigit === 8) {\n\
                return number + '-ми';\n\
            } else {\n\
                return number + '-ти';\n\
            }\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/bg.js"
));
require.register("johntron-moment/locale/bn.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Bengali (bn)\n\
// author : Kaushik Gandhi : https://github.com/kaushikgandhi\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '১',\n\
        '2': '২',\n\
        '3': '৩',\n\
        '4': '৪',\n\
        '5': '৫',\n\
        '6': '৬',\n\
        '7': '৭',\n\
        '8': '৮',\n\
        '9': '৯',\n\
        '0': '০'\n\
    },\n\
    numberMap = {\n\
        '১': '1',\n\
        '২': '2',\n\
        '৩': '3',\n\
        '৪': '4',\n\
        '৫': '5',\n\
        '৬': '6',\n\
        '৭': '7',\n\
        '৮': '8',\n\
        '৯': '9',\n\
        '০': '0'\n\
    };\n\
\n\
    return moment.defineLocale('bn', {\n\
        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(\"_\"),\n\
        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split(\"_\"),\n\
        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার'.split(\"_\"),\n\
        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি'.split(\"_\"),\n\
        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"A h:mm সময়\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY, LT\",\n\
            LLLL : \"dddd, D MMMM YYYY, LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[আজ] LT',\n\
            nextDay : '[আগামীকাল] LT',\n\
            nextWeek : 'dddd, LT',\n\
            lastDay : '[গতকাল] LT',\n\
            lastWeek : '[গত] dddd, LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s পরে\",\n\
            past : \"%s আগে\",\n\
            s : \"কএক সেকেন্ড\",\n\
            m : \"এক মিনিট\",\n\
            mm : \"%d মিনিট\",\n\
            h : \"এক ঘন্টা\",\n\
            hh : \"%d ঘন্টা\",\n\
            d : \"এক দিন\",\n\
            dd : \"%d দিন\",\n\
            M : \"এক মাস\",\n\
            MM : \"%d মাস\",\n\
            y : \"এক বছর\",\n\
            yy : \"%d বছর\"\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n\
                return numberMap[match];\n\
            });\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            });\n\
        },\n\
        //Bengali is a vast language its spoken\n\
        //in different forms in various parts of the world.\n\
        //I have just generalized with most common one used\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 4) {\n\
                return \"রাত\";\n\
            } else if (hour < 10) {\n\
                return \"শকাল\";\n\
            } else if (hour < 17) {\n\
                return \"দুপুর\";\n\
            } else if (hour < 20) {\n\
                return \"বিকেল\";\n\
            } else {\n\
                return \"রাত\";\n\
            }\n\
        },\n\
        week : {\n\
            dow : 0, // Sunday is the first day of the week.\n\
            doy : 6  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/bn.js"
));
require.register("johntron-moment/locale/bo.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : tibetan (bo)\n\
// author : Thupten N. Chakrishar : https://github.com/vajradog\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '༡',\n\
        '2': '༢',\n\
        '3': '༣',\n\
        '4': '༤',\n\
        '5': '༥',\n\
        '6': '༦',\n\
        '7': '༧',\n\
        '8': '༨',\n\
        '9': '༩',\n\
        '0': '༠'\n\
    },\n\
    numberMap = {\n\
        '༡': '1',\n\
        '༢': '2',\n\
        '༣': '3',\n\
        '༤': '4',\n\
        '༥': '5',\n\
        '༦': '6',\n\
        '༧': '7',\n\
        '༨': '8',\n\
        '༩': '9',\n\
        '༠': '0'\n\
    };\n\
\n\
    return moment.defineLocale('bo', {\n\
        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(\"_\"),\n\
        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(\"_\"),\n\
        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(\"_\"),\n\
        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(\"_\"),\n\
        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"A h:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY, LT\",\n\
            LLLL : \"dddd, D MMMM YYYY, LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[དི་རིང] LT',\n\
            nextDay : '[སང་ཉིན] LT',\n\
            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n\
            lastDay : '[ཁ་སང] LT',\n\
            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s ལ་\",\n\
            past : \"%s སྔན་ལ\",\n\
            s : \"ལམ་སང\",\n\
            m : \"སྐར་མ་གཅིག\",\n\
            mm : \"%d སྐར་མ\",\n\
            h : \"ཆུ་ཚོད་གཅིག\",\n\
            hh : \"%d ཆུ་ཚོད\",\n\
            d : \"ཉིན་གཅིག\",\n\
            dd : \"%d ཉིན་\",\n\
            M : \"ཟླ་བ་གཅིག\",\n\
            MM : \"%d ཟླ་བ\",\n\
            y : \"ལོ་གཅིག\",\n\
            yy : \"%d ལོ\"\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n\
                return numberMap[match];\n\
            });\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            });\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 4) {\n\
                return \"མཚན་མོ\";\n\
            } else if (hour < 10) {\n\
                return \"ཞོགས་ཀས\";\n\
            } else if (hour < 17) {\n\
                return \"ཉིན་གུང\";\n\
            } else if (hour < 20) {\n\
                return \"དགོང་དག\";\n\
            } else {\n\
                return \"མཚན་མོ\";\n\
            }\n\
        },\n\
        week : {\n\
            dow : 0, // Sunday is the first day of the week.\n\
            doy : 6  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/bo.js"
));
require.register("johntron-moment/locale/br.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : breton (br)\n\
// author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function relativeTimeWithMutation(number, withoutSuffix, key) {\n\
        var format = {\n\
            'mm': \"munutenn\",\n\
            'MM': \"miz\",\n\
            'dd': \"devezh\"\n\
        };\n\
        return number + ' ' + mutation(format[key], number);\n\
    }\n\
\n\
    function specialMutationForYears(number) {\n\
        switch (lastNumber(number)) {\n\
        case 1:\n\
        case 3:\n\
        case 4:\n\
        case 5:\n\
        case 9:\n\
            return number + ' bloaz';\n\
        default:\n\
            return number + ' vloaz';\n\
        }\n\
    }\n\
\n\
    function lastNumber(number) {\n\
        if (number > 9) {\n\
            return lastNumber(number % 10);\n\
        }\n\
        return number;\n\
    }\n\
\n\
    function mutation(text, number) {\n\
        if (number === 2) {\n\
            return softMutation(text);\n\
        }\n\
        return text;\n\
    }\n\
\n\
    function softMutation(text) {\n\
        var mutationTable = {\n\
            'm': 'v',\n\
            'b': 'v',\n\
            'd': 'z'\n\
        };\n\
        if (mutationTable[text.charAt(0)] === undefined) {\n\
            return text;\n\
        }\n\
        return mutationTable[text.charAt(0)] + text.substring(1);\n\
    }\n\
\n\
    return moment.defineLocale('br', {\n\
        months : \"Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu\".split(\"_\"),\n\
        monthsShort : \"Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker\".split(\"_\"),\n\
        weekdays : \"Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn\".split(\"_\"),\n\
        weekdaysShort : \"Sul_Lun_Meu_Mer_Yao_Gwe_Sad\".split(\"_\"),\n\
        weekdaysMin : \"Su_Lu_Me_Mer_Ya_Gw_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"h[e]mm A\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D [a viz] MMMM YYYY\",\n\
            LLL : \"D [a viz] MMMM YYYY LT\",\n\
            LLLL : \"dddd, D [a viz] MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Hiziv da] LT',\n\
            nextDay : '[Warc\\'hoazh da] LT',\n\
            nextWeek : 'dddd [da] LT',\n\
            lastDay : '[Dec\\'h da] LT',\n\
            lastWeek : 'dddd [paset da] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"a-benn %s\",\n\
            past : \"%s 'zo\",\n\
            s : \"un nebeud segondennoù\",\n\
            m : \"ur vunutenn\",\n\
            mm : relativeTimeWithMutation,\n\
            h : \"un eur\",\n\
            hh : \"%d eur\",\n\
            d : \"un devezh\",\n\
            dd : relativeTimeWithMutation,\n\
            M : \"ur miz\",\n\
            MM : relativeTimeWithMutation,\n\
            y : \"ur bloaz\",\n\
            yy : specialMutationForYears\n\
        },\n\
        ordinal : function (number) {\n\
            var output = (number === 1) ? 'añ' : 'vet';\n\
            return number + output;\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/br.js"
));
require.register("johntron-moment/locale/bs.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : bosnian (bs)\n\
// author : Nedim Cholich : https://github.com/frontyard\n\
// based on (hr) translation by Bojan Marković\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function translate(number, withoutSuffix, key) {\n\
        var result = number + \" \";\n\
        switch (key) {\n\
        case 'm':\n\
            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n\
        case 'mm':\n\
            if (number === 1) {\n\
                result += 'minuta';\n\
            } else if (number === 2 || number === 3 || number === 4) {\n\
                result += 'minute';\n\
            } else {\n\
                result += 'minuta';\n\
            }\n\
            return result;\n\
        case 'h':\n\
            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n\
        case 'hh':\n\
            if (number === 1) {\n\
                result += 'sat';\n\
            } else if (number === 2 || number === 3 || number === 4) {\n\
                result += 'sata';\n\
            } else {\n\
                result += 'sati';\n\
            }\n\
            return result;\n\
        case 'dd':\n\
            if (number === 1) {\n\
                result += 'dan';\n\
            } else {\n\
                result += 'dana';\n\
            }\n\
            return result;\n\
        case 'MM':\n\
            if (number === 1) {\n\
                result += 'mjesec';\n\
            } else if (number === 2 || number === 3 || number === 4) {\n\
                result += 'mjeseca';\n\
            } else {\n\
                result += 'mjeseci';\n\
            }\n\
            return result;\n\
        case 'yy':\n\
            if (number === 1) {\n\
                result += 'godina';\n\
            } else if (number === 2 || number === 3 || number === 4) {\n\
                result += 'godine';\n\
            } else {\n\
                result += 'godina';\n\
            }\n\
            return result;\n\
        }\n\
    }\n\
\n\
    return moment.defineLocale('bs', {\n\
        months : \"januar_februar_mart_april_maj_juni_juli_avgust_septembar_oktobar_novembar_decembar\".split(\"_\"),\n\
        monthsShort : \"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.\".split(\"_\"),\n\
        weekdays : \"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),\n\
        weekdaysShort : \"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),\n\
        weekdaysMin : \"ne_po_ut_sr_če_pe_su\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"DD. MM. YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay  : '[danas u] LT',\n\
            nextDay  : '[sutra u] LT',\n\
\n\
            nextWeek : function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[u] [nedjelju] [u] LT';\n\
                case 3:\n\
                    return '[u] [srijedu] [u] LT';\n\
                case 6:\n\
                    return '[u] [subotu] [u] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[u] dddd [u] LT';\n\
                }\n\
            },\n\
            lastDay  : '[jučer u] LT',\n\
            lastWeek : function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                case 3:\n\
                    return '[prošlu] dddd [u] LT';\n\
                case 6:\n\
                    return '[prošle] [subote] [u] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[prošli] dddd [u] LT';\n\
                }\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"za %s\",\n\
            past   : \"prije %s\",\n\
            s      : \"par sekundi\",\n\
            m      : translate,\n\
            mm     : translate,\n\
            h      : translate,\n\
            hh     : translate,\n\
            d      : \"dan\",\n\
            dd     : translate,\n\
            M      : \"mjesec\",\n\
            MM     : translate,\n\
            y      : \"godinu\",\n\
            yy     : translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/bs.js"
));
require.register("johntron-moment/locale/ca.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : catalan (ca)\n\
// author : Juan G. Hurtado : https://github.com/juanghurtado\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('ca', {\n\
        months : \"gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre\".split(\"_\"),\n\
        monthsShort : \"gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.\".split(\"_\"),\n\
        weekdays : \"diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte\".split(\"_\"),\n\
        weekdaysShort : \"dg._dl._dt._dc._dj._dv._ds.\".split(\"_\"),\n\
        weekdaysMin : \"Dg_Dl_Dt_Dc_Dj_Dv_Ds\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : function () {\n\
                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n\
            },\n\
            nextDay : function () {\n\
                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n\
            },\n\
            nextWeek : function () {\n\
                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n\
            },\n\
            lastDay : function () {\n\
                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n\
            },\n\
            lastWeek : function () {\n\
                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"en %s\",\n\
            past : \"fa %s\",\n\
            s : \"uns segons\",\n\
            m : \"un minut\",\n\
            mm : \"%d minuts\",\n\
            h : \"una hora\",\n\
            hh : \"%d hores\",\n\
            d : \"un dia\",\n\
            dd : \"%d dies\",\n\
            M : \"un mes\",\n\
            MM : \"%d mesos\",\n\
            y : \"un any\",\n\
            yy : \"%d anys\"\n\
        },\n\
        ordinal : '%dº',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ca.js"
));
require.register("johntron-moment/locale/cs.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : czech (cs)\n\
// author : petrbela : https://github.com/petrbela\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var months = \"leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec\".split(\"_\"),\n\
        monthsShort = \"led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro\".split(\"_\");\n\
\n\
    function plural(n) {\n\
        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n\
    }\n\
\n\
    function translate(number, withoutSuffix, key, isFuture) {\n\
        var result = number + \" \";\n\
        switch (key) {\n\
        case 's':  // a few seconds / in a few seconds / a few seconds ago\n\
            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n\
        case 'm':  // a minute / in a minute / a minute ago\n\
            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n\
        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'minuty' : 'minut');\n\
            } else {\n\
                return result + 'minutami';\n\
            }\n\
            break;\n\
        case 'h':  // an hour / in an hour / an hour ago\n\
            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n\
        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'hodiny' : 'hodin');\n\
            } else {\n\
                return result + 'hodinami';\n\
            }\n\
            break;\n\
        case 'd':  // a day / in a day / a day ago\n\
            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n\
        case 'dd': // 9 days / in 9 days / 9 days ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'dny' : 'dní');\n\
            } else {\n\
                return result + 'dny';\n\
            }\n\
            break;\n\
        case 'M':  // a month / in a month / a month ago\n\
            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n\
        case 'MM': // 9 months / in 9 months / 9 months ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'měsíce' : 'měsíců');\n\
            } else {\n\
                return result + 'měsíci';\n\
            }\n\
            break;\n\
        case 'y':  // a year / in a year / a year ago\n\
            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n\
        case 'yy': // 9 years / in 9 years / 9 years ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'roky' : 'let');\n\
            } else {\n\
                return result + 'lety';\n\
            }\n\
            break;\n\
        }\n\
    }\n\
\n\
    return moment.defineLocale('cs', {\n\
        months : months,\n\
        monthsShort : monthsShort,\n\
        monthsParse : (function (months, monthsShort) {\n\
            var i, _monthsParse = [];\n\
            for (i = 0; i < 12; i++) {\n\
                // use custom parser to solve problem with July (červenec)\n\
                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n\
            }\n\
            return _monthsParse;\n\
        }(months, monthsShort)),\n\
        weekdays : \"neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota\".split(\"_\"),\n\
        weekdaysShort : \"ne_po_út_st_čt_pá_so\".split(\"_\"),\n\
        weekdaysMin : \"ne_po_út_st_čt_pá_so\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT: \"H.mm\",\n\
            L : \"DD. MM. YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[dnes v] LT\",\n\
            nextDay: '[zítra v] LT',\n\
            nextWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[v neděli v] LT';\n\
                case 1:\n\
                case 2:\n\
                    return '[v] dddd [v] LT';\n\
                case 3:\n\
                    return '[ve středu v] LT';\n\
                case 4:\n\
                    return '[ve čtvrtek v] LT';\n\
                case 5:\n\
                    return '[v pátek v] LT';\n\
                case 6:\n\
                    return '[v sobotu v] LT';\n\
                }\n\
            },\n\
            lastDay: '[včera v] LT',\n\
            lastWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[minulou neděli v] LT';\n\
                case 1:\n\
                case 2:\n\
                    return '[minulé] dddd [v] LT';\n\
                case 3:\n\
                    return '[minulou středu v] LT';\n\
                case 4:\n\
                case 5:\n\
                    return '[minulý] dddd [v] LT';\n\
                case 6:\n\
                    return '[minulou sobotu v] LT';\n\
                }\n\
            },\n\
            sameElse: \"L\"\n\
        },\n\
        relativeTime : {\n\
            future : \"za %s\",\n\
            past : \"před %s\",\n\
            s : translate,\n\
            m : translate,\n\
            mm : translate,\n\
            h : translate,\n\
            hh : translate,\n\
            d : translate,\n\
            dd : translate,\n\
            M : translate,\n\
            MM : translate,\n\
            y : translate,\n\
            yy : translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/cs.js"
));
require.register("johntron-moment/locale/cv.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : chuvash (cv)\n\
// author : Anatoly Mironov : https://github.com/mirontoli\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('cv', {\n\
        months : \"кăрлач_нарăс_пуш_ака_май_çĕртме_утă_çурла_авăн_юпа_чӳк_раштав\".split(\"_\"),\n\
        monthsShort : \"кăр_нар_пуш_ака_май_çĕр_утă_çур_ав_юпа_чӳк_раш\".split(\"_\"),\n\
        weekdays : \"вырсарникун_тунтикун_ытларикун_юнкун_кĕçнерникун_эрнекун_шăматкун\".split(\"_\"),\n\
        weekdaysShort : \"выр_тун_ытл_юн_кĕç_эрн_шăм\".split(\"_\"),\n\
        weekdaysMin : \"вр_тн_ыт_юн_кç_эр_шм\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD-MM-YYYY\",\n\
            LL : \"YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ]\",\n\
            LLL : \"YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT\",\n\
            LLLL : \"dddd, YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[Паян] LT [сехетре]',\n\
            nextDay: '[Ыран] LT [сехетре]',\n\
            lastDay: '[Ĕнер] LT [сехетре]',\n\
            nextWeek: '[Çитес] dddd LT [сехетре]',\n\
            lastWeek: '[Иртнĕ] dddd LT [сехетре]',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : function (output) {\n\
                var affix = /сехет$/i.exec(output) ? \"рен\" : /çул$/i.exec(output) ? \"тан\" : \"ран\";\n\
                return output + affix;\n\
            },\n\
            past : \"%s каялла\",\n\
            s : \"пĕр-ик çеккунт\",\n\
            m : \"пĕр минут\",\n\
            mm : \"%d минут\",\n\
            h : \"пĕр сехет\",\n\
            hh : \"%d сехет\",\n\
            d : \"пĕр кун\",\n\
            dd : \"%d кун\",\n\
            M : \"пĕр уйăх\",\n\
            MM : \"%d уйăх\",\n\
            y : \"пĕр çул\",\n\
            yy : \"%d çул\"\n\
        },\n\
        ordinal : '%d-мĕш',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/cv.js"
));
require.register("johntron-moment/locale/cy.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Welsh (cy)\n\
// author : Robert Allen\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale(\"cy\", {\n\
        months: \"Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr\".split(\"_\"),\n\
        monthsShort: \"Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag\".split(\"_\"),\n\
        weekdays: \"Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn\".split(\"_\"),\n\
        weekdaysShort: \"Sul_Llun_Maw_Mer_Iau_Gwe_Sad\".split(\"_\"),\n\
        weekdaysMin: \"Su_Ll_Ma_Me_Ia_Gw_Sa\".split(\"_\"),\n\
        // time formats are the same as en-gb\n\
        longDateFormat: {\n\
            LT: \"HH:mm\",\n\
            L: \"DD/MM/YYYY\",\n\
            LL: \"D MMMM YYYY\",\n\
            LLL: \"D MMMM YYYY LT\",\n\
            LLLL: \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar: {\n\
            sameDay: '[Heddiw am] LT',\n\
            nextDay: '[Yfory am] LT',\n\
            nextWeek: 'dddd [am] LT',\n\
            lastDay: '[Ddoe am] LT',\n\
            lastWeek: 'dddd [diwethaf am] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime: {\n\
            future: \"mewn %s\",\n\
            past: \"%s yn ôl\",\n\
            s: \"ychydig eiliadau\",\n\
            m: \"munud\",\n\
            mm: \"%d munud\",\n\
            h: \"awr\",\n\
            hh: \"%d awr\",\n\
            d: \"diwrnod\",\n\
            dd: \"%d diwrnod\",\n\
            M: \"mis\",\n\
            MM: \"%d mis\",\n\
            y: \"blwyddyn\",\n\
            yy: \"%d flynedd\"\n\
        },\n\
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n\
        ordinal: function (number) {\n\
            var b = number,\n\
                output = '',\n\
                lookup = [\n\
                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n\
                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n\
                ];\n\
\n\
            if (b > 20) {\n\
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n\
                    output = 'fed'; // not 30ain, 70ain or 90ain\n\
                } else {\n\
                    output = 'ain';\n\
                }\n\
            } else if (b > 0) {\n\
                output = lookup[b];\n\
            }\n\
\n\
            return number + output;\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/cy.js"
));
require.register("johntron-moment/locale/da.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : danish (da)\n\
// author : Ulrik Nielsen : https://github.com/mrbase\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('da', {\n\
        months : \"januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december\".split(\"_\"),\n\
        monthsShort : \"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),\n\
        weekdays : \"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag\".split(\"_\"),\n\
        weekdaysShort : \"søn_man_tir_ons_tor_fre_lør\".split(\"_\"),\n\
        weekdaysMin : \"sø_ma_ti_on_to_fr_lø\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd [d.] D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[I dag kl.] LT',\n\
            nextDay : '[I morgen kl.] LT',\n\
            nextWeek : 'dddd [kl.] LT',\n\
            lastDay : '[I går kl.] LT',\n\
            lastWeek : '[sidste] dddd [kl] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"om %s\",\n\
            past : \"%s siden\",\n\
            s : \"få sekunder\",\n\
            m : \"et minut\",\n\
            mm : \"%d minutter\",\n\
            h : \"en time\",\n\
            hh : \"%d timer\",\n\
            d : \"en dag\",\n\
            dd : \"%d dage\",\n\
            M : \"en måned\",\n\
            MM : \"%d måneder\",\n\
            y : \"et år\",\n\
            yy : \"%d år\"\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/da.js"
));
require.register("johntron-moment/locale/de-at.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : austrian german (de-at)\n\
// author : lluchs : https://github.com/lluchs\n\
// author: Menelion Elensúle: https://github.com/Oire\n\
// author : Martin Groller : https://github.com/MadMG\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n\
        var format = {\n\
            'm': ['eine Minute', 'einer Minute'],\n\
            'h': ['eine Stunde', 'einer Stunde'],\n\
            'd': ['ein Tag', 'einem Tag'],\n\
            'dd': [number + ' Tage', number + ' Tagen'],\n\
            'M': ['ein Monat', 'einem Monat'],\n\
            'MM': [number + ' Monate', number + ' Monaten'],\n\
            'y': ['ein Jahr', 'einem Jahr'],\n\
            'yy': [number + ' Jahre', number + ' Jahren']\n\
        };\n\
        return withoutSuffix ? format[key][0] : format[key][1];\n\
    }\n\
\n\
    return moment.defineLocale('de-at', {\n\
        months : \"Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),\n\
        monthsShort : \"Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),\n\
        weekdays : \"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),\n\
        weekdaysShort : \"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),\n\
        weekdaysMin : \"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT: \"HH:mm [Uhr]\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[Heute um] LT\",\n\
            sameElse: \"L\",\n\
            nextDay: '[Morgen um] LT',\n\
            nextWeek: 'dddd [um] LT',\n\
            lastDay: '[Gestern um] LT',\n\
            lastWeek: '[letzten] dddd [um] LT'\n\
        },\n\
        relativeTime : {\n\
            future : \"in %s\",\n\
            past : \"vor %s\",\n\
            s : \"ein paar Sekunden\",\n\
            m : processRelativeTime,\n\
            mm : \"%d Minuten\",\n\
            h : processRelativeTime,\n\
            hh : \"%d Stunden\",\n\
            d : processRelativeTime,\n\
            dd : processRelativeTime,\n\
            M : processRelativeTime,\n\
            MM : processRelativeTime,\n\
            y : processRelativeTime,\n\
            yy : processRelativeTime\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/de-at.js"
));
require.register("johntron-moment/locale/de.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : german (de)\n\
// author : lluchs : https://github.com/lluchs\n\
// author: Menelion Elensúle: https://github.com/Oire\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n\
        var format = {\n\
            'm': ['eine Minute', 'einer Minute'],\n\
            'h': ['eine Stunde', 'einer Stunde'],\n\
            'd': ['ein Tag', 'einem Tag'],\n\
            'dd': [number + ' Tage', number + ' Tagen'],\n\
            'M': ['ein Monat', 'einem Monat'],\n\
            'MM': [number + ' Monate', number + ' Monaten'],\n\
            'y': ['ein Jahr', 'einem Jahr'],\n\
            'yy': [number + ' Jahre', number + ' Jahren']\n\
        };\n\
        return withoutSuffix ? format[key][0] : format[key][1];\n\
    }\n\
\n\
    return moment.defineLocale('de', {\n\
        months : \"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),\n\
        monthsShort : \"Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),\n\
        weekdays : \"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag\".split(\"_\"),\n\
        weekdaysShort : \"So._Mo._Di._Mi._Do._Fr._Sa.\".split(\"_\"),\n\
        weekdaysMin : \"So_Mo_Di_Mi_Do_Fr_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT: \"HH:mm [Uhr]\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[Heute um] LT\",\n\
            sameElse: \"L\",\n\
            nextDay: '[Morgen um] LT',\n\
            nextWeek: 'dddd [um] LT',\n\
            lastDay: '[Gestern um] LT',\n\
            lastWeek: '[letzten] dddd [um] LT'\n\
        },\n\
        relativeTime : {\n\
            future : \"in %s\",\n\
            past : \"vor %s\",\n\
            s : \"ein paar Sekunden\",\n\
            m : processRelativeTime,\n\
            mm : \"%d Minuten\",\n\
            h : processRelativeTime,\n\
            hh : \"%d Stunden\",\n\
            d : processRelativeTime,\n\
            dd : processRelativeTime,\n\
            M : processRelativeTime,\n\
            MM : processRelativeTime,\n\
            y : processRelativeTime,\n\
            yy : processRelativeTime\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/de.js"
));
require.register("johntron-moment/locale/el.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : modern greek (el)\n\
// author : Aggelos Karalias : https://github.com/mehiel\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('el', {\n\
        monthsNominativeEl : \"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος\".split(\"_\"),\n\
        monthsGenitiveEl : \"Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου\".split(\"_\"),\n\
        months : function (momentToFormat, format) {\n\
            if (/D/.test(format.substring(0, format.indexOf(\"MMMM\")))) { // if there is a day number before 'MMMM'\n\
                return this._monthsGenitiveEl[momentToFormat.month()];\n\
            } else {\n\
                return this._monthsNominativeEl[momentToFormat.month()];\n\
            }\n\
        },\n\
        monthsShort : \"Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ\".split(\"_\"),\n\
        weekdays : \"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο\".split(\"_\"),\n\
        weekdaysShort : \"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ\".split(\"_\"),\n\
        weekdaysMin : \"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα\".split(\"_\"),\n\
        meridiem : function (hours, minutes, isLower) {\n\
            if (hours > 11) {\n\
                return isLower ? 'μμ' : 'ΜΜ';\n\
            } else {\n\
                return isLower ? 'πμ' : 'ΠΜ';\n\
            }\n\
        },\n\
        longDateFormat : {\n\
            LT : \"h:mm A\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendarEl : {\n\
            sameDay : '[Σήμερα {}] LT',\n\
            nextDay : '[Αύριο {}] LT',\n\
            nextWeek : 'dddd [{}] LT',\n\
            lastDay : '[Χθες {}] LT',\n\
            lastWeek : function () {\n\
                switch (this.day()) {\n\
                    case 6:\n\
                        return '[το προηγούμενο] dddd [{}] LT';\n\
                    default:\n\
                        return '[την προηγούμενη] dddd [{}] LT';\n\
                }\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        calendar : function (key, mom) {\n\
            var output = this._calendarEl[key],\n\
                hours = mom && mom.hours();\n\
\n\
            if (typeof output === 'function') {\n\
                output = output.apply(mom);\n\
            }\n\
\n\
            return output.replace(\"{}\", (hours % 12 === 1 ? \"στη\" : \"στις\"));\n\
        },\n\
        relativeTime : {\n\
            future : \"σε %s\",\n\
            past : \"%s πριν\",\n\
            s : \"δευτερόλεπτα\",\n\
            m : \"ένα λεπτό\",\n\
            mm : \"%d λεπτά\",\n\
            h : \"μία ώρα\",\n\
            hh : \"%d ώρες\",\n\
            d : \"μία μέρα\",\n\
            dd : \"%d μέρες\",\n\
            M : \"ένας μήνας\",\n\
            MM : \"%d μήνες\",\n\
            y : \"ένας χρόνος\",\n\
            yy : \"%d χρόνια\"\n\
        },\n\
        ordinal : function (number) {\n\
            return number + 'η';\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/el.js"
));
require.register("johntron-moment/locale/en-au.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : australian english (en-au)\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('en-au', {\n\
        months : \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),\n\
        monthsShort : \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),\n\
        weekdays : \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),\n\
        weekdaysShort : \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),\n\
        weekdaysMin : \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"h:mm A\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Today at] LT',\n\
            nextDay : '[Tomorrow at] LT',\n\
            nextWeek : 'dddd [at] LT',\n\
            lastDay : '[Yesterday at] LT',\n\
            lastWeek : '[Last] dddd [at] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"in %s\",\n\
            past : \"%s ago\",\n\
            s : \"a few seconds\",\n\
            m : \"a minute\",\n\
            mm : \"%d minutes\",\n\
            h : \"an hour\",\n\
            hh : \"%d hours\",\n\
            d : \"a day\",\n\
            dd : \"%d days\",\n\
            M : \"a month\",\n\
            MM : \"%d months\",\n\
            y : \"a year\",\n\
            yy : \"%d years\"\n\
        },\n\
        ordinal : function (number) {\n\
            var b = number % 10,\n\
                output = (~~(number % 100 / 10) === 1) ? 'th' :\n\
                (b === 1) ? 'st' :\n\
                (b === 2) ? 'nd' :\n\
                (b === 3) ? 'rd' : 'th';\n\
            return number + output;\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/en-au.js"
));
require.register("johntron-moment/locale/en-ca.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : canadian english (en-ca)\n\
// author : Jonathan Abourbih : https://github.com/jonbca\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('en-ca', {\n\
        months : \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),\n\
        monthsShort : \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),\n\
        weekdays : \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),\n\
        weekdaysShort : \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),\n\
        weekdaysMin : \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"h:mm A\",\n\
            L : \"YYYY-MM-DD\",\n\
            LL : \"D MMMM, YYYY\",\n\
            LLL : \"D MMMM, YYYY LT\",\n\
            LLLL : \"dddd, D MMMM, YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Today at] LT',\n\
            nextDay : '[Tomorrow at] LT',\n\
            nextWeek : 'dddd [at] LT',\n\
            lastDay : '[Yesterday at] LT',\n\
            lastWeek : '[Last] dddd [at] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"in %s\",\n\
            past : \"%s ago\",\n\
            s : \"a few seconds\",\n\
            m : \"a minute\",\n\
            mm : \"%d minutes\",\n\
            h : \"an hour\",\n\
            hh : \"%d hours\",\n\
            d : \"a day\",\n\
            dd : \"%d days\",\n\
            M : \"a month\",\n\
            MM : \"%d months\",\n\
            y : \"a year\",\n\
            yy : \"%d years\"\n\
        },\n\
        ordinal : function (number) {\n\
            var b = number % 10,\n\
                output = (~~(number % 100 / 10) === 1) ? 'th' :\n\
                (b === 1) ? 'st' :\n\
                (b === 2) ? 'nd' :\n\
                (b === 3) ? 'rd' : 'th';\n\
            return number + output;\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/en-ca.js"
));
require.register("johntron-moment/locale/en-gb.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : great britain english (en-gb)\n\
// author : Chris Gedrim : https://github.com/chrisgedrim\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('en-gb', {\n\
        months : \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),\n\
        monthsShort : \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),\n\
        weekdays : \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),\n\
        weekdaysShort : \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),\n\
        weekdaysMin : \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Today at] LT',\n\
            nextDay : '[Tomorrow at] LT',\n\
            nextWeek : 'dddd [at] LT',\n\
            lastDay : '[Yesterday at] LT',\n\
            lastWeek : '[Last] dddd [at] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"in %s\",\n\
            past : \"%s ago\",\n\
            s : \"a few seconds\",\n\
            m : \"a minute\",\n\
            mm : \"%d minutes\",\n\
            h : \"an hour\",\n\
            hh : \"%d hours\",\n\
            d : \"a day\",\n\
            dd : \"%d days\",\n\
            M : \"a month\",\n\
            MM : \"%d months\",\n\
            y : \"a year\",\n\
            yy : \"%d years\"\n\
        },\n\
        ordinal : function (number) {\n\
            var b = number % 10,\n\
                output = (~~(number % 100 / 10) === 1) ? 'th' :\n\
                (b === 1) ? 'st' :\n\
                (b === 2) ? 'nd' :\n\
                (b === 3) ? 'rd' : 'th';\n\
            return number + output;\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/en-gb.js"
));
require.register("johntron-moment/locale/eo.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : esperanto (eo)\n\
// author : Colin Dean : https://github.com/colindean\n\
// komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.\n\
//          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('eo', {\n\
        months : \"januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro\".split(\"_\"),\n\
        monthsShort : \"jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec\".split(\"_\"),\n\
        weekdays : \"Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato\".split(\"_\"),\n\
        weekdaysShort : \"Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab\".split(\"_\"),\n\
        weekdaysMin : \"Di_Lu_Ma_Me_Ĵa_Ve_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"YYYY-MM-DD\",\n\
            LL : \"D[-an de] MMMM, YYYY\",\n\
            LLL : \"D[-an de] MMMM, YYYY LT\",\n\
            LLLL : \"dddd, [la] D[-an de] MMMM, YYYY LT\"\n\
        },\n\
        meridiem : function (hours, minutes, isLower) {\n\
            if (hours > 11) {\n\
                return isLower ? 'p.t.m.' : 'P.T.M.';\n\
            } else {\n\
                return isLower ? 'a.t.m.' : 'A.T.M.';\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[Hodiaŭ je] LT',\n\
            nextDay : '[Morgaŭ je] LT',\n\
            nextWeek : 'dddd [je] LT',\n\
            lastDay : '[Hieraŭ je] LT',\n\
            lastWeek : '[pasinta] dddd [je] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"je %s\",\n\
            past : \"antaŭ %s\",\n\
            s : \"sekundoj\",\n\
            m : \"minuto\",\n\
            mm : \"%d minutoj\",\n\
            h : \"horo\",\n\
            hh : \"%d horoj\",\n\
            d : \"tago\",//ne 'diurno', ĉar estas uzita por proksimumo\n\
            dd : \"%d tagoj\",\n\
            M : \"monato\",\n\
            MM : \"%d monatoj\",\n\
            y : \"jaro\",\n\
            yy : \"%d jaroj\"\n\
        },\n\
        ordinal : \"%da\",\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/eo.js"
));
require.register("johntron-moment/locale/es.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : spanish (es)\n\
// author : Julio Napurí : https://github.com/julionc\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var monthsShortDot = \"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\"),\n\
        monthsShort = \"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\");\n\
\n\
    return moment.defineLocale('es', {\n\
        months : \"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),\n\
        monthsShort : function (m, format) {\n\
            if (/-MMM-/.test(format)) {\n\
                return monthsShort[m.month()];\n\
            } else {\n\
                return monthsShortDot[m.month()];\n\
            }\n\
        },\n\
        weekdays : \"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),\n\
        weekdaysShort : \"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),\n\
        weekdaysMin : \"Do_Lu_Ma_Mi_Ju_Vi_Sá\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D [de] MMMM [del] YYYY\",\n\
            LLL : \"D [de] MMMM [del] YYYY LT\",\n\
            LLLL : \"dddd, D [de] MMMM [del] YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : function () {\n\
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n\
            },\n\
            nextDay : function () {\n\
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n\
            },\n\
            nextWeek : function () {\n\
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n\
            },\n\
            lastDay : function () {\n\
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n\
            },\n\
            lastWeek : function () {\n\
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"en %s\",\n\
            past : \"hace %s\",\n\
            s : \"unos segundos\",\n\
            m : \"un minuto\",\n\
            mm : \"%d minutos\",\n\
            h : \"una hora\",\n\
            hh : \"%d horas\",\n\
            d : \"un día\",\n\
            dd : \"%d días\",\n\
            M : \"un mes\",\n\
            MM : \"%d meses\",\n\
            y : \"un año\",\n\
            yy : \"%d años\"\n\
        },\n\
        ordinal : '%dº',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/es.js"
));
require.register("johntron-moment/locale/et.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : estonian (et)\n\
// author : Henry Kehlmann : https://github.com/madhenry\n\
// improvements : Illimar Tambek : https://github.com/ragulka\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n\
        var format = {\n\
            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n\
            'm' : ['ühe minuti', 'üks minut'],\n\
            'mm': [number + ' minuti', number + ' minutit'],\n\
            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n\
            'hh': [number + ' tunni', number + ' tundi'],\n\
            'd' : ['ühe päeva', 'üks päev'],\n\
            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n\
            'MM': [number + ' kuu', number + ' kuud'],\n\
            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n\
            'yy': [number + ' aasta', number + ' aastat']\n\
        };\n\
        if (withoutSuffix) {\n\
            return format[key][2] ? format[key][2] : format[key][1];\n\
        }\n\
        return isFuture ? format[key][0] : format[key][1];\n\
    }\n\
\n\
    return moment.defineLocale('et', {\n\
        months        : \"jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember\".split(\"_\"),\n\
        monthsShort   : \"jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets\".split(\"_\"),\n\
        weekdays      : \"pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev\".split(\"_\"),\n\
        weekdaysShort : \"P_E_T_K_N_R_L\".split(\"_\"),\n\
        weekdaysMin   : \"P_E_T_K_N_R_L\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT   : \"H:mm\",\n\
            L    : \"DD.MM.YYYY\",\n\
            LL   : \"D. MMMM YYYY\",\n\
            LLL  : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay  : '[Täna,] LT',\n\
            nextDay  : '[Homme,] LT',\n\
            nextWeek : '[Järgmine] dddd LT',\n\
            lastDay  : '[Eile,] LT',\n\
            lastWeek : '[Eelmine] dddd LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s pärast\",\n\
            past   : \"%s tagasi\",\n\
            s      : processRelativeTime,\n\
            m      : processRelativeTime,\n\
            mm     : processRelativeTime,\n\
            h      : processRelativeTime,\n\
            hh     : processRelativeTime,\n\
            d      : processRelativeTime,\n\
            dd     : '%d päeva',\n\
            M      : processRelativeTime,\n\
            MM     : processRelativeTime,\n\
            y      : processRelativeTime,\n\
            yy     : processRelativeTime\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/et.js"
));
require.register("johntron-moment/locale/eu.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : euskara (eu)\n\
// author : Eneko Illarramendi : https://github.com/eillarra\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('eu', {\n\
        months : \"urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua\".split(\"_\"),\n\
        monthsShort : \"urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.\".split(\"_\"),\n\
        weekdays : \"igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata\".split(\"_\"),\n\
        weekdaysShort : \"ig._al._ar._az._og._ol._lr.\".split(\"_\"),\n\
        weekdaysMin : \"ig_al_ar_az_og_ol_lr\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"YYYY-MM-DD\",\n\
            LL : \"YYYY[ko] MMMM[ren] D[a]\",\n\
            LLL : \"YYYY[ko] MMMM[ren] D[a] LT\",\n\
            LLLL : \"dddd, YYYY[ko] MMMM[ren] D[a] LT\",\n\
            l : \"YYYY-M-D\",\n\
            ll : \"YYYY[ko] MMM D[a]\",\n\
            lll : \"YYYY[ko] MMM D[a] LT\",\n\
            llll : \"ddd, YYYY[ko] MMM D[a] LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[gaur] LT[etan]',\n\
            nextDay : '[bihar] LT[etan]',\n\
            nextWeek : 'dddd LT[etan]',\n\
            lastDay : '[atzo] LT[etan]',\n\
            lastWeek : '[aurreko] dddd LT[etan]',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s barru\",\n\
            past : \"duela %s\",\n\
            s : \"segundo batzuk\",\n\
            m : \"minutu bat\",\n\
            mm : \"%d minutu\",\n\
            h : \"ordu bat\",\n\
            hh : \"%d ordu\",\n\
            d : \"egun bat\",\n\
            dd : \"%d egun\",\n\
            M : \"hilabete bat\",\n\
            MM : \"%d hilabete\",\n\
            y : \"urte bat\",\n\
            yy : \"%d urte\"\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/eu.js"
));
require.register("johntron-moment/locale/fa.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Persian\n\
// author : Ebrahim Byagowi : https://github.com/ebraminio\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '۱',\n\
        '2': '۲',\n\
        '3': '۳',\n\
        '4': '۴',\n\
        '5': '۵',\n\
        '6': '۶',\n\
        '7': '۷',\n\
        '8': '۸',\n\
        '9': '۹',\n\
        '0': '۰'\n\
    }, numberMap = {\n\
        '۱': '1',\n\
        '۲': '2',\n\
        '۳': '3',\n\
        '۴': '4',\n\
        '۵': '5',\n\
        '۶': '6',\n\
        '۷': '7',\n\
        '۸': '8',\n\
        '۹': '9',\n\
        '۰': '0'\n\
    };\n\
\n\
    return moment.defineLocale('fa', {\n\
        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n\
        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n\
        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n\
        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n\
        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n\
        longDateFormat : {\n\
            LT : 'HH:mm',\n\
            L : 'DD/MM/YYYY',\n\
            LL : 'D MMMM YYYY',\n\
            LLL : 'D MMMM YYYY LT',\n\
            LLLL : 'dddd, D MMMM YYYY LT'\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 12) {\n\
                return \"قبل از ظهر\";\n\
            } else {\n\
                return \"بعد از ظهر\";\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[امروز ساعت] LT',\n\
            nextDay : '[فردا ساعت] LT',\n\
            nextWeek : 'dddd [ساعت] LT',\n\
            lastDay : '[دیروز ساعت] LT',\n\
            lastWeek : 'dddd [پیش] [ساعت] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : 'در %s',\n\
            past : '%s پیش',\n\
            s : 'چندین ثانیه',\n\
            m : 'یک دقیقه',\n\
            mm : '%d دقیقه',\n\
            h : 'یک ساعت',\n\
            hh : '%d ساعت',\n\
            d : 'یک روز',\n\
            dd : '%d روز',\n\
            M : 'یک ماه',\n\
            MM : '%d ماه',\n\
            y : 'یک سال',\n\
            yy : '%d سال'\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[۰-۹]/g, function (match) {\n\
                return numberMap[match];\n\
            }).replace(/،/g, ',');\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            }).replace(/,/g, '،');\n\
        },\n\
        ordinal : '%dم',\n\
        week : {\n\
            dow : 6, // Saturday is the first day of the week.\n\
            doy : 12 // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/fa.js"
));
require.register("johntron-moment/locale/fi.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : finnish (fi)\n\
// author : Tarmo Aidantausta : https://github.com/bleadof\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n\
        numbersFuture = [\n\
            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n\
            numbersPast[7], numbersPast[8], numbersPast[9]\n\
        ];\n\
\n\
    function translate(number, withoutSuffix, key, isFuture) {\n\
        var result = \"\";\n\
        switch (key) {\n\
        case 's':\n\
            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n\
        case 'm':\n\
            return isFuture ? 'minuutin' : 'minuutti';\n\
        case 'mm':\n\
            result = isFuture ? 'minuutin' : 'minuuttia';\n\
            break;\n\
        case 'h':\n\
            return isFuture ? 'tunnin' : 'tunti';\n\
        case 'hh':\n\
            result = isFuture ? 'tunnin' : 'tuntia';\n\
            break;\n\
        case 'd':\n\
            return isFuture ? 'päivän' : 'päivä';\n\
        case 'dd':\n\
            result = isFuture ? 'päivän' : 'päivää';\n\
            break;\n\
        case 'M':\n\
            return isFuture ? 'kuukauden' : 'kuukausi';\n\
        case 'MM':\n\
            result = isFuture ? 'kuukauden' : 'kuukautta';\n\
            break;\n\
        case 'y':\n\
            return isFuture ? 'vuoden' : 'vuosi';\n\
        case 'yy':\n\
            result = isFuture ? 'vuoden' : 'vuotta';\n\
            break;\n\
        }\n\
        result = verbalNumber(number, isFuture) + \" \" + result;\n\
        return result;\n\
    }\n\
\n\
    function verbalNumber(number, isFuture) {\n\
        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n\
    }\n\
\n\
    return moment.defineLocale('fi', {\n\
        months : \"tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu\".split(\"_\"),\n\
        monthsShort : \"tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu\".split(\"_\"),\n\
        weekdays : \"sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai\".split(\"_\"),\n\
        weekdaysShort : \"su_ma_ti_ke_to_pe_la\".split(\"_\"),\n\
        weekdaysMin : \"su_ma_ti_ke_to_pe_la\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH.mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"Do MMMM[ta] YYYY\",\n\
            LLL : \"Do MMMM[ta] YYYY, [klo] LT\",\n\
            LLLL : \"dddd, Do MMMM[ta] YYYY, [klo] LT\",\n\
            l : \"D.M.YYYY\",\n\
            ll : \"Do MMM YYYY\",\n\
            lll : \"Do MMM YYYY, [klo] LT\",\n\
            llll : \"ddd, Do MMM YYYY, [klo] LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[tänään] [klo] LT',\n\
            nextDay : '[huomenna] [klo] LT',\n\
            nextWeek : 'dddd [klo] LT',\n\
            lastDay : '[eilen] [klo] LT',\n\
            lastWeek : '[viime] dddd[na] [klo] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s päästä\",\n\
            past : \"%s sitten\",\n\
            s : translate,\n\
            m : translate,\n\
            mm : translate,\n\
            h : translate,\n\
            hh : translate,\n\
            d : translate,\n\
            dd : translate,\n\
            M : translate,\n\
            MM : translate,\n\
            y : translate,\n\
            yy : translate\n\
        },\n\
        ordinal : \"%d.\",\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/fi.js"
));
require.register("johntron-moment/locale/fo.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : faroese (fo)\n\
// author : Ragnar Johannesen : https://github.com/ragnar123\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('fo', {\n\
        months : \"januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),\n\
        monthsShort : \"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),\n\
        weekdays : \"sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur\".split(\"_\"),\n\
        weekdaysShort : \"sun_mán_týs_mik_hós_frí_ley\".split(\"_\"),\n\
        weekdaysMin : \"su_má_tý_mi_hó_fr_le\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D. MMMM, YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Í dag kl.] LT',\n\
            nextDay : '[Í morgin kl.] LT',\n\
            nextWeek : 'dddd [kl.] LT',\n\
            lastDay : '[Í gjár kl.] LT',\n\
            lastWeek : '[síðstu] dddd [kl] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"um %s\",\n\
            past : \"%s síðani\",\n\
            s : \"fá sekund\",\n\
            m : \"ein minutt\",\n\
            mm : \"%d minuttir\",\n\
            h : \"ein tími\",\n\
            hh : \"%d tímar\",\n\
            d : \"ein dagur\",\n\
            dd : \"%d dagar\",\n\
            M : \"ein mánaði\",\n\
            MM : \"%d mánaðir\",\n\
            y : \"eitt ár\",\n\
            yy : \"%d ár\"\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/fo.js"
));
require.register("johntron-moment/locale/fr-ca.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : canadian french (fr-ca)\n\
// author : Jonathan Abourbih : https://github.com/jonbca\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('fr-ca', {\n\
        months : \"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),\n\
        monthsShort : \"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),\n\
        weekdays : \"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),\n\
        weekdaysShort : \"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),\n\
        weekdaysMin : \"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"YYYY-MM-DD\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[Aujourd'hui à] LT\",\n\
            nextDay: '[Demain à] LT',\n\
            nextWeek: 'dddd [à] LT',\n\
            lastDay: '[Hier à] LT',\n\
            lastWeek: 'dddd [dernier à] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"dans %s\",\n\
            past : \"il y a %s\",\n\
            s : \"quelques secondes\",\n\
            m : \"une minute\",\n\
            mm : \"%d minutes\",\n\
            h : \"une heure\",\n\
            hh : \"%d heures\",\n\
            d : \"un jour\",\n\
            dd : \"%d jours\",\n\
            M : \"un mois\",\n\
            MM : \"%d mois\",\n\
            y : \"un an\",\n\
            yy : \"%d ans\"\n\
        },\n\
        ordinal : function (number) {\n\
            return number + (number === 1 ? 'er' : '');\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/fr-ca.js"
));
require.register("johntron-moment/locale/fr.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : french (fr)\n\
// author : John Fischer : https://github.com/jfroffice\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('fr', {\n\
        months : \"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\"_\"),\n\
        monthsShort : \"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\"_\"),\n\
        weekdays : \"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),\n\
        weekdaysShort : \"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),\n\
        weekdaysMin : \"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[Aujourd'hui à] LT\",\n\
            nextDay: '[Demain à] LT',\n\
            nextWeek: 'dddd [à] LT',\n\
            lastDay: '[Hier à] LT',\n\
            lastWeek: 'dddd [dernier à] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"dans %s\",\n\
            past : \"il y a %s\",\n\
            s : \"quelques secondes\",\n\
            m : \"une minute\",\n\
            mm : \"%d minutes\",\n\
            h : \"une heure\",\n\
            hh : \"%d heures\",\n\
            d : \"un jour\",\n\
            dd : \"%d jours\",\n\
            M : \"un mois\",\n\
            MM : \"%d mois\",\n\
            y : \"un an\",\n\
            yy : \"%d ans\"\n\
        },\n\
        ordinal : function (number) {\n\
            return number + (number === 1 ? 'er' : '');\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/fr.js"
));
require.register("johntron-moment/locale/gl.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : galician (gl)\n\
// author : Juan G. Hurtado : https://github.com/juanghurtado\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('gl', {\n\
        months : \"Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro\".split(\"_\"),\n\
        monthsShort : \"Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.\".split(\"_\"),\n\
        weekdays : \"Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado\".split(\"_\"),\n\
        weekdaysShort : \"Dom._Lun._Mar._Mér._Xov._Ven._Sáb.\".split(\"_\"),\n\
        weekdaysMin : \"Do_Lu_Ma_Mé_Xo_Ve_Sá\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : function () {\n\
                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n\
            },\n\
            nextDay : function () {\n\
                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n\
            },\n\
            nextWeek : function () {\n\
                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n\
            },\n\
            lastDay : function () {\n\
                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n\
            },\n\
            lastWeek : function () {\n\
                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : function (str) {\n\
                if (str === \"uns segundos\") {\n\
                    return \"nuns segundos\";\n\
                }\n\
                return \"en \" + str;\n\
            },\n\
            past : \"hai %s\",\n\
            s : \"uns segundos\",\n\
            m : \"un minuto\",\n\
            mm : \"%d minutos\",\n\
            h : \"unha hora\",\n\
            hh : \"%d horas\",\n\
            d : \"un día\",\n\
            dd : \"%d días\",\n\
            M : \"un mes\",\n\
            MM : \"%d meses\",\n\
            y : \"un ano\",\n\
            yy : \"%d anos\"\n\
        },\n\
        ordinal : '%dº',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/gl.js"
));
require.register("johntron-moment/locale/he.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Hebrew (he)\n\
// author : Tomer Cohen : https://github.com/tomer\n\
// author : Moshe Simantov : https://github.com/DevelopmentIL\n\
// author : Tal Ater : https://github.com/TalAter\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('he', {\n\
        months : \"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר\".split(\"_\"),\n\
        monthsShort : \"ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳\".split(\"_\"),\n\
        weekdays : \"ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת\".split(\"_\"),\n\
        weekdaysShort : \"א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳\".split(\"_\"),\n\
        weekdaysMin : \"א_ב_ג_ד_ה_ו_ש\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D [ב]MMMM YYYY\",\n\
            LLL : \"D [ב]MMMM YYYY LT\",\n\
            LLLL : \"dddd, D [ב]MMMM YYYY LT\",\n\
            l : \"D/M/YYYY\",\n\
            ll : \"D MMM YYYY\",\n\
            lll : \"D MMM YYYY LT\",\n\
            llll : \"ddd, D MMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[היום ב־]LT',\n\
            nextDay : '[מחר ב־]LT',\n\
            nextWeek : 'dddd [בשעה] LT',\n\
            lastDay : '[אתמול ב־]LT',\n\
            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"בעוד %s\",\n\
            past : \"לפני %s\",\n\
            s : \"מספר שניות\",\n\
            m : \"דקה\",\n\
            mm : \"%d דקות\",\n\
            h : \"שעה\",\n\
            hh : function (number) {\n\
                if (number === 2) {\n\
                    return \"שעתיים\";\n\
                }\n\
                return number + \" שעות\";\n\
            },\n\
            d : \"יום\",\n\
            dd : function (number) {\n\
                if (number === 2) {\n\
                    return \"יומיים\";\n\
                }\n\
                return number + \" ימים\";\n\
            },\n\
            M : \"חודש\",\n\
            MM : function (number) {\n\
                if (number === 2) {\n\
                    return \"חודשיים\";\n\
                }\n\
                return number + \" חודשים\";\n\
            },\n\
            y : \"שנה\",\n\
            yy : function (number) {\n\
                if (number === 2) {\n\
                    return \"שנתיים\";\n\
                }\n\
                return number + \" שנים\";\n\
            }\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/he.js"
));
require.register("johntron-moment/locale/hi.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : hindi (hi)\n\
// author : Mayank Singhal : https://github.com/mayanksinghal\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '१',\n\
        '2': '२',\n\
        '3': '३',\n\
        '4': '४',\n\
        '5': '५',\n\
        '6': '६',\n\
        '7': '७',\n\
        '8': '८',\n\
        '9': '९',\n\
        '0': '०'\n\
    },\n\
    numberMap = {\n\
        '१': '1',\n\
        '२': '2',\n\
        '३': '3',\n\
        '४': '4',\n\
        '५': '5',\n\
        '६': '6',\n\
        '७': '7',\n\
        '८': '8',\n\
        '९': '9',\n\
        '०': '0'\n\
    };\n\
\n\
    return moment.defineLocale('hi', {\n\
        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(\"_\"),\n\
        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(\"_\"),\n\
        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split(\"_\"),\n\
        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split(\"_\"),\n\
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"A h:mm बजे\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY, LT\",\n\
            LLLL : \"dddd, D MMMM YYYY, LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[आज] LT',\n\
            nextDay : '[कल] LT',\n\
            nextWeek : 'dddd, LT',\n\
            lastDay : '[कल] LT',\n\
            lastWeek : '[पिछले] dddd, LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s में\",\n\
            past : \"%s पहले\",\n\
            s : \"कुछ ही क्षण\",\n\
            m : \"एक मिनट\",\n\
            mm : \"%d मिनट\",\n\
            h : \"एक घंटा\",\n\
            hh : \"%d घंटे\",\n\
            d : \"एक दिन\",\n\
            dd : \"%d दिन\",\n\
            M : \"एक महीने\",\n\
            MM : \"%d महीने\",\n\
            y : \"एक वर्ष\",\n\
            yy : \"%d वर्ष\"\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n\
                return numberMap[match];\n\
            });\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            });\n\
        },\n\
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n\
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 4) {\n\
                return \"रात\";\n\
            } else if (hour < 10) {\n\
                return \"सुबह\";\n\
            } else if (hour < 17) {\n\
                return \"दोपहर\";\n\
            } else if (hour < 20) {\n\
                return \"शाम\";\n\
            } else {\n\
                return \"रात\";\n\
            }\n\
        },\n\
        week : {\n\
            dow : 0, // Sunday is the first day of the week.\n\
            doy : 6  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/hi.js"
));
require.register("johntron-moment/locale/hr.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : hrvatski (hr)\n\
// author : Bojan Marković : https://github.com/bmarkovic\n\
\n\
// based on (sl) translation by Robert Sedovšek\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function translate(number, withoutSuffix, key) {\n\
        var result = number + \" \";\n\
        switch (key) {\n\
        case 'm':\n\
            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n\
        case 'mm':\n\
            if (number === 1) {\n\
                result += 'minuta';\n\
            } else if (number === 2 || number === 3 || number === 4) {\n\
                result += 'minute';\n\
            } else {\n\
                result += 'minuta';\n\
            }\n\
            return result;\n\
        case 'h':\n\
            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n\
        case 'hh':\n\
            if (number === 1) {\n\
                result += 'sat';\n\
            } else if (number === 2 || number === 3 || number === 4) {\n\
                result += 'sata';\n\
            } else {\n\
                result += 'sati';\n\
            }\n\
            return result;\n\
        case 'dd':\n\
            if (number === 1) {\n\
                result += 'dan';\n\
            } else {\n\
                result += 'dana';\n\
            }\n\
            return result;\n\
        case 'MM':\n\
            if (number === 1) {\n\
                result += 'mjesec';\n\
            } else if (number === 2 || number === 3 || number === 4) {\n\
                result += 'mjeseca';\n\
            } else {\n\
                result += 'mjeseci';\n\
            }\n\
            return result;\n\
        case 'yy':\n\
            if (number === 1) {\n\
                result += 'godina';\n\
            } else if (number === 2 || number === 3 || number === 4) {\n\
                result += 'godine';\n\
            } else {\n\
                result += 'godina';\n\
            }\n\
            return result;\n\
        }\n\
    }\n\
\n\
    return moment.defineLocale('hr', {\n\
        months : \"sječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac\".split(\"_\"),\n\
        monthsShort : \"sje._vel._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.\".split(\"_\"),\n\
        weekdays : \"nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota\".split(\"_\"),\n\
        weekdaysShort : \"ned._pon._uto._sri._čet._pet._sub.\".split(\"_\"),\n\
        weekdaysMin : \"ne_po_ut_sr_če_pe_su\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"DD. MM. YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay  : '[danas u] LT',\n\
            nextDay  : '[sutra u] LT',\n\
\n\
            nextWeek : function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[u] [nedjelju] [u] LT';\n\
                case 3:\n\
                    return '[u] [srijedu] [u] LT';\n\
                case 6:\n\
                    return '[u] [subotu] [u] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[u] dddd [u] LT';\n\
                }\n\
            },\n\
            lastDay  : '[jučer u] LT',\n\
            lastWeek : function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                case 3:\n\
                    return '[prošlu] dddd [u] LT';\n\
                case 6:\n\
                    return '[prošle] [subote] [u] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[prošli] dddd [u] LT';\n\
                }\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"za %s\",\n\
            past   : \"prije %s\",\n\
            s      : \"par sekundi\",\n\
            m      : translate,\n\
            mm     : translate,\n\
            h      : translate,\n\
            hh     : translate,\n\
            d      : \"dan\",\n\
            dd     : translate,\n\
            M      : \"mjesec\",\n\
            MM     : translate,\n\
            y      : \"godinu\",\n\
            yy     : translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/hr.js"
));
require.register("johntron-moment/locale/hu.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : hungarian (hu)\n\
// author : Adam Brunner : https://github.com/adambrunner\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n\
\n\
    function translate(number, withoutSuffix, key, isFuture) {\n\
        var num = number,\n\
            suffix;\n\
\n\
        switch (key) {\n\
        case 's':\n\
            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n\
        case 'm':\n\
            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\
        case 'mm':\n\
            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\
        case 'h':\n\
            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\
        case 'hh':\n\
            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\
        case 'd':\n\
            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\
        case 'dd':\n\
            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\
        case 'M':\n\
            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\
        case 'MM':\n\
            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\
        case 'y':\n\
            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n\
        case 'yy':\n\
            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n\
        }\n\
\n\
        return '';\n\
    }\n\
\n\
    function week(isFuture) {\n\
        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n\
    }\n\
\n\
    return moment.defineLocale('hu', {\n\
        months : \"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december\".split(\"_\"),\n\
        monthsShort : \"jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec\".split(\"_\"),\n\
        weekdays : \"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat\".split(\"_\"),\n\
        weekdaysShort : \"vas_hét_kedd_sze_csüt_pén_szo\".split(\"_\"),\n\
        weekdaysMin : \"v_h_k_sze_cs_p_szo\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"YYYY.MM.DD.\",\n\
            LL : \"YYYY. MMMM D.\",\n\
            LLL : \"YYYY. MMMM D., LT\",\n\
            LLLL : \"YYYY. MMMM D., dddd LT\"\n\
        },\n\
        meridiem : function (hours, minutes, isLower) {\n\
            if (hours < 12) {\n\
                return isLower === true ? 'de' : 'DE';\n\
            } else {\n\
                return isLower === true ? 'du' : 'DU';\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[ma] LT[-kor]',\n\
            nextDay : '[holnap] LT[-kor]',\n\
            nextWeek : function () {\n\
                return week.call(this, true);\n\
            },\n\
            lastDay : '[tegnap] LT[-kor]',\n\
            lastWeek : function () {\n\
                return week.call(this, false);\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s múlva\",\n\
            past : \"%s\",\n\
            s : translate,\n\
            m : translate,\n\
            mm : translate,\n\
            h : translate,\n\
            hh : translate,\n\
            d : translate,\n\
            dd : translate,\n\
            M : translate,\n\
            MM : translate,\n\
            y : translate,\n\
            yy : translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/hu.js"
));
require.register("johntron-moment/locale/hy-am.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Armenian (hy-am)\n\
// author : Armendarabyan : https://github.com/armendarabyan\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function monthsCaseReplace(m, format) {\n\
        var months = {\n\
            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),\n\
            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')\n\
        },\n\
\n\
        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return months[nounCase][m.month()];\n\
    }\n\
\n\
    function monthsShortCaseReplace(m, format) {\n\
        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');\n\
\n\
        return monthsShort[m.month()];\n\
    }\n\
\n\
    function weekdaysCaseReplace(m, format) {\n\
        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');\n\
\n\
        return weekdays[m.day()];\n\
    }\n\
\n\
    return moment.defineLocale('hy-am', {\n\
        months : monthsCaseReplace,\n\
        monthsShort : monthsShortCaseReplace,\n\
        weekdays : weekdaysCaseReplace,\n\
        weekdaysShort : \"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),\n\
        weekdaysMin : \"կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY թ.\",\n\
            LLL : \"D MMMM YYYY թ., LT\",\n\
            LLLL : \"dddd, D MMMM YYYY թ., LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[այսօր] LT',\n\
            nextDay: '[վաղը] LT',\n\
            lastDay: '[երեկ] LT',\n\
            nextWeek: function () {\n\
                return 'dddd [օրը ժամը] LT';\n\
            },\n\
            lastWeek: function () {\n\
                return '[անցած] dddd [օրը ժամը] LT';\n\
            },\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s հետո\",\n\
            past : \"%s առաջ\",\n\
            s : \"մի քանի վայրկյան\",\n\
            m : \"րոպե\",\n\
            mm : \"%d րոպե\",\n\
            h : \"ժամ\",\n\
            hh : \"%d ժամ\",\n\
            d : \"օր\",\n\
            dd : \"%d օր\",\n\
            M : \"ամիս\",\n\
            MM : \"%d ամիս\",\n\
            y : \"տարի\",\n\
            yy : \"%d տարի\"\n\
        },\n\
\n\
        meridiem : function (hour) {\n\
            if (hour < 4) {\n\
                return \"գիշերվա\";\n\
            } else if (hour < 12) {\n\
                return \"առավոտվա\";\n\
            } else if (hour < 17) {\n\
                return \"ցերեկվա\";\n\
            } else {\n\
                return \"երեկոյան\";\n\
            }\n\
        },\n\
\n\
        ordinal: function (number, period) {\n\
            switch (period) {\n\
            case 'DDD':\n\
            case 'w':\n\
            case 'W':\n\
            case 'DDDo':\n\
                if (number === 1) {\n\
                    return number + '-ին';\n\
                }\n\
                return number + '-րդ';\n\
            default:\n\
                return number;\n\
            }\n\
        },\n\
\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/hy-am.js"
));
require.register("johntron-moment/locale/id.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Bahasa Indonesia (id)\n\
// author : Mohammad Satrio Utomo : https://github.com/tyok\n\
// reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('id', {\n\
        months : \"Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember\".split(\"_\"),\n\
        monthsShort : \"Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des\".split(\"_\"),\n\
        weekdays : \"Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu\".split(\"_\"),\n\
        weekdaysShort : \"Min_Sen_Sel_Rab_Kam_Jum_Sab\".split(\"_\"),\n\
        weekdaysMin : \"Mg_Sn_Sl_Rb_Km_Jm_Sb\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH.mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY [pukul] LT\",\n\
            LLLL : \"dddd, D MMMM YYYY [pukul] LT\"\n\
        },\n\
        meridiem : function (hours, minutes, isLower) {\n\
            if (hours < 11) {\n\
                return 'pagi';\n\
            } else if (hours < 15) {\n\
                return 'siang';\n\
            } else if (hours < 19) {\n\
                return 'sore';\n\
            } else {\n\
                return 'malam';\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[Hari ini pukul] LT',\n\
            nextDay : '[Besok pukul] LT',\n\
            nextWeek : 'dddd [pukul] LT',\n\
            lastDay : '[Kemarin pukul] LT',\n\
            lastWeek : 'dddd [lalu pukul] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"dalam %s\",\n\
            past : \"%s yang lalu\",\n\
            s : \"beberapa detik\",\n\
            m : \"semenit\",\n\
            mm : \"%d menit\",\n\
            h : \"sejam\",\n\
            hh : \"%d jam\",\n\
            d : \"sehari\",\n\
            dd : \"%d hari\",\n\
            M : \"sebulan\",\n\
            MM : \"%d bulan\",\n\
            y : \"setahun\",\n\
            yy : \"%d tahun\"\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/id.js"
));
require.register("johntron-moment/locale/is.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : icelandic (is)\n\
// author : Hinrik Örn Sigurðsson : https://github.com/hinrik\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function plural(n) {\n\
        if (n % 100 === 11) {\n\
            return true;\n\
        } else if (n % 10 === 1) {\n\
            return false;\n\
        }\n\
        return true;\n\
    }\n\
\n\
    function translate(number, withoutSuffix, key, isFuture) {\n\
        var result = number + \" \";\n\
        switch (key) {\n\
        case 's':\n\
            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n\
        case 'm':\n\
            return withoutSuffix ? 'mínúta' : 'mínútu';\n\
        case 'mm':\n\
            if (plural(number)) {\n\
                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n\
            } else if (withoutSuffix) {\n\
                return result + 'mínúta';\n\
            }\n\
            return result + 'mínútu';\n\
        case 'hh':\n\
            if (plural(number)) {\n\
                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n\
            }\n\
            return result + 'klukkustund';\n\
        case 'd':\n\
            if (withoutSuffix) {\n\
                return 'dagur';\n\
            }\n\
            return isFuture ? 'dag' : 'degi';\n\
        case 'dd':\n\
            if (plural(number)) {\n\
                if (withoutSuffix) {\n\
                    return result + 'dagar';\n\
                }\n\
                return result + (isFuture ? 'daga' : 'dögum');\n\
            } else if (withoutSuffix) {\n\
                return result + 'dagur';\n\
            }\n\
            return result + (isFuture ? 'dag' : 'degi');\n\
        case 'M':\n\
            if (withoutSuffix) {\n\
                return 'mánuður';\n\
            }\n\
            return isFuture ? 'mánuð' : 'mánuði';\n\
        case 'MM':\n\
            if (plural(number)) {\n\
                if (withoutSuffix) {\n\
                    return result + 'mánuðir';\n\
                }\n\
                return result + (isFuture ? 'mánuði' : 'mánuðum');\n\
            } else if (withoutSuffix) {\n\
                return result + 'mánuður';\n\
            }\n\
            return result + (isFuture ? 'mánuð' : 'mánuði');\n\
        case 'y':\n\
            return withoutSuffix || isFuture ? 'ár' : 'ári';\n\
        case 'yy':\n\
            if (plural(number)) {\n\
                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n\
            }\n\
            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n\
        }\n\
    }\n\
\n\
    return moment.defineLocale('is', {\n\
        months : \"janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember\".split(\"_\"),\n\
        monthsShort : \"jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des\".split(\"_\"),\n\
        weekdays : \"sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur\".split(\"_\"),\n\
        weekdaysShort : \"sun_mán_þri_mið_fim_fös_lau\".split(\"_\"),\n\
        weekdaysMin : \"Su_Má_Þr_Mi_Fi_Fö_La\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY [kl.] LT\",\n\
            LLLL : \"dddd, D. MMMM YYYY [kl.] LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[í dag kl.] LT',\n\
            nextDay : '[á morgun kl.] LT',\n\
            nextWeek : 'dddd [kl.] LT',\n\
            lastDay : '[í gær kl.] LT',\n\
            lastWeek : '[síðasta] dddd [kl.] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"eftir %s\",\n\
            past : \"fyrir %s síðan\",\n\
            s : translate,\n\
            m : translate,\n\
            mm : translate,\n\
            h : \"klukkustund\",\n\
            hh : translate,\n\
            d : translate,\n\
            dd : translate,\n\
            M : translate,\n\
            MM : translate,\n\
            y : translate,\n\
            yy : translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/is.js"
));
require.register("johntron-moment/locale/it.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : italian (it)\n\
// author : Lorenzo : https://github.com/aliem\n\
// author: Mattia Larentis: https://github.com/nostalgiaz\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('it', {\n\
        months : \"gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre\".split(\"_\"),\n\
        monthsShort : \"gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic\".split(\"_\"),\n\
        weekdays : \"Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato\".split(\"_\"),\n\
        weekdaysShort : \"Dom_Lun_Mar_Mer_Gio_Ven_Sab\".split(\"_\"),\n\
        weekdaysMin : \"D_L_Ma_Me_G_V_S\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[Oggi alle] LT',\n\
            nextDay: '[Domani alle] LT',\n\
            nextWeek: 'dddd [alle] LT',\n\
            lastDay: '[Ieri alle] LT',\n\
            lastWeek: '[lo scorso] dddd [alle] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : function (s) {\n\
                return ((/^[0-9].+$/).test(s) ? \"tra\" : \"in\") + \" \" + s;\n\
            },\n\
            past : \"%s fa\",\n\
            s : \"alcuni secondi\",\n\
            m : \"un minuto\",\n\
            mm : \"%d minuti\",\n\
            h : \"un'ora\",\n\
            hh : \"%d ore\",\n\
            d : \"un giorno\",\n\
            dd : \"%d giorni\",\n\
            M : \"un mese\",\n\
            MM : \"%d mesi\",\n\
            y : \"un anno\",\n\
            yy : \"%d anni\"\n\
        },\n\
        ordinal: '%dº',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/it.js"
));
require.register("johntron-moment/locale/ja.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : japanese (ja)\n\
// author : LI Long : https://github.com/baryon\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('ja', {\n\
        months : \"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),\n\
        monthsShort : \"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),\n\
        weekdays : \"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日\".split(\"_\"),\n\
        weekdaysShort : \"日_月_火_水_木_金_土\".split(\"_\"),\n\
        weekdaysMin : \"日_月_火_水_木_金_土\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"Ah時m分\",\n\
            L : \"YYYY/MM/DD\",\n\
            LL : \"YYYY年M月D日\",\n\
            LLL : \"YYYY年M月D日LT\",\n\
            LLLL : \"YYYY年M月D日LT dddd\"\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 12) {\n\
                return \"午前\";\n\
            } else {\n\
                return \"午後\";\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[今日] LT',\n\
            nextDay : '[明日] LT',\n\
            nextWeek : '[来週]dddd LT',\n\
            lastDay : '[昨日] LT',\n\
            lastWeek : '[前週]dddd LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s後\",\n\
            past : \"%s前\",\n\
            s : \"数秒\",\n\
            m : \"1分\",\n\
            mm : \"%d分\",\n\
            h : \"1時間\",\n\
            hh : \"%d時間\",\n\
            d : \"1日\",\n\
            dd : \"%d日\",\n\
            M : \"1ヶ月\",\n\
            MM : \"%dヶ月\",\n\
            y : \"1年\",\n\
            yy : \"%d年\"\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ja.js"
));
require.register("johntron-moment/locale/ka.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Georgian (ka)\n\
// author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function monthsCaseReplace(m, format) {\n\
        var months = {\n\
            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n\
            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n\
        },\n\
\n\
        nounCase = (/D[oD] *MMMM?/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return months[nounCase][m.month()];\n\
    }\n\
\n\
    function weekdaysCaseReplace(m, format) {\n\
        var weekdays = {\n\
            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n\
            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')\n\
        },\n\
\n\
        nounCase = (/(წინა|შემდეგ)/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return weekdays[nounCase][m.day()];\n\
    }\n\
\n\
    return moment.defineLocale('ka', {\n\
        months : monthsCaseReplace,\n\
        monthsShort : \"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ\".split(\"_\"),\n\
        weekdays : weekdaysCaseReplace,\n\
        weekdaysShort : \"კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ\".split(\"_\"),\n\
        weekdaysMin : \"კვ_ორ_სა_ოთ_ხუ_პა_შა\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"h:mm A\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[დღეს] LT[-ზე]',\n\
            nextDay : '[ხვალ] LT[-ზე]',\n\
            lastDay : '[გუშინ] LT[-ზე]',\n\
            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n\
            lastWeek : '[წინა] dddd LT-ზე',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : function (s) {\n\
                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n\
                    s.replace(/ი$/, \"ში\") :\n\
                    s + \"ში\";\n\
            },\n\
            past : function (s) {\n\
                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n\
                    return s.replace(/(ი|ე)$/, \"ის წინ\");\n\
                }\n\
                if ((/წელი/).test(s)) {\n\
                    return s.replace(/წელი$/, \"წლის წინ\");\n\
                }\n\
            },\n\
            s : \"რამდენიმე წამი\",\n\
            m : \"წუთი\",\n\
            mm : \"%d წუთი\",\n\
            h : \"საათი\",\n\
            hh : \"%d საათი\",\n\
            d : \"დღე\",\n\
            dd : \"%d დღე\",\n\
            M : \"თვე\",\n\
            MM : \"%d თვე\",\n\
            y : \"წელი\",\n\
            yy : \"%d წელი\"\n\
        },\n\
        ordinal : function (number) {\n\
            if (number === 0) {\n\
                return number;\n\
            }\n\
\n\
            if (number === 1) {\n\
                return number + \"-ლი\";\n\
            }\n\
\n\
            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n\
                return \"მე-\" + number;\n\
            }\n\
\n\
            return number + \"-ე\";\n\
        },\n\
        week : {\n\
            dow : 1,\n\
            doy : 7\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ka.js"
));
require.register("johntron-moment/locale/km.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : khmer (km)\n\
// author : Kruy Vanna : https://github.com/kruyvanna\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('km', {\n\
        months: \"មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ\".split(\"_\"),\n\
        monthsShort: \"មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ\".split(\"_\"),\n\
        weekdays: \"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),\n\
        weekdaysShort: \"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),\n\
        weekdaysMin: \"អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍\".split(\"_\"),\n\
        longDateFormat: {\n\
            LT: \"HH:mm\",\n\
            L: \"DD/MM/YYYY\",\n\
            LL: \"D MMMM YYYY\",\n\
            LLL: \"D MMMM YYYY LT\",\n\
            LLLL: \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar: {\n\
            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',\n\
            nextDay: '[ស្អែក ម៉ោង] LT',\n\
            nextWeek: 'dddd [ម៉ោង] LT',\n\
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n\
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime: {\n\
            future: \"%sទៀត\",\n\
            past: \"%sមុន\",\n\
            s: \"ប៉ុន្មានវិនាទី\",\n\
            m: \"មួយនាទី\",\n\
            mm: \"%d នាទី\",\n\
            h: \"មួយម៉ោង\",\n\
            hh: \"%d ម៉ោង\",\n\
            d: \"មួយថ្ងៃ\",\n\
            dd: \"%d ថ្ងៃ\",\n\
            M: \"មួយខែ\",\n\
            MM: \"%d ខែ\",\n\
            y: \"មួយឆ្នាំ\",\n\
            yy: \"%d ឆ្នាំ\"\n\
        },\n\
        week: {\n\
            dow: 1, // Monday is the first day of the week.\n\
            doy: 4 // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/km.js"
));
require.register("johntron-moment/locale/ko.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : korean (ko)\n\
//\n\
// authors\n\
//\n\
// - Kyungwook, Park : https://github.com/kyungw00k\n\
// - Jeeeyul Lee <jeeeyul@gmail.com>\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('ko', {\n\
        months : \"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),\n\
        monthsShort : \"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월\".split(\"_\"),\n\
        weekdays : \"일요일_월요일_화요일_수요일_목요일_금요일_토요일\".split(\"_\"),\n\
        weekdaysShort : \"일_월_화_수_목_금_토\".split(\"_\"),\n\
        weekdaysMin : \"일_월_화_수_목_금_토\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"A h시 mm분\",\n\
            L : \"YYYY.MM.DD\",\n\
            LL : \"YYYY년 MMMM D일\",\n\
            LLL : \"YYYY년 MMMM D일 LT\",\n\
            LLLL : \"YYYY년 MMMM D일 dddd LT\"\n\
        },\n\
        meridiem : function (hour, minute, isUpper) {\n\
            return hour < 12 ? '오전' : '오후';\n\
        },\n\
        calendar : {\n\
            sameDay : '오늘 LT',\n\
            nextDay : '내일 LT',\n\
            nextWeek : 'dddd LT',\n\
            lastDay : '어제 LT',\n\
            lastWeek : '지난주 dddd LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s 후\",\n\
            past : \"%s 전\",\n\
            s : \"몇초\",\n\
            ss : \"%d초\",\n\
            m : \"일분\",\n\
            mm : \"%d분\",\n\
            h : \"한시간\",\n\
            hh : \"%d시간\",\n\
            d : \"하루\",\n\
            dd : \"%d일\",\n\
            M : \"한달\",\n\
            MM : \"%d달\",\n\
            y : \"일년\",\n\
            yy : \"%d년\"\n\
        },\n\
        ordinal : '%d일',\n\
        meridiemParse : /(오전|오후)/,\n\
        isPM : function (token) {\n\
            return token === \"오후\";\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ko.js"
));
require.register("johntron-moment/locale/lb.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Luxembourgish (lb)\n\
// author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz\n\
\n\
// Note: Luxembourgish has a very particular phonological rule (\"Eifeler Regel\") that causes the\n\
// deletion of the final \"n\" in certain contexts. That's what the \"eifelerRegelAppliesToWeekday\"\n\
// and \"eifelerRegelAppliesToNumber\" methods are meant for\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n\
        var format = {\n\
            'm': ['eng Minutt', 'enger Minutt'],\n\
            'h': ['eng Stonn', 'enger Stonn'],\n\
            'd': ['een Dag', 'engem Dag'],\n\
            'M': ['ee Mount', 'engem Mount'],\n\
            'y': ['ee Joer', 'engem Joer']\n\
        };\n\
        return withoutSuffix ? format[key][0] : format[key][1];\n\
    }\n\
\n\
    function processFutureTime(string) {\n\
        var number = string.substr(0, string.indexOf(' '));\n\
        if (eifelerRegelAppliesToNumber(number)) {\n\
            return \"a \" + string;\n\
        }\n\
        return \"an \" + string;\n\
    }\n\
\n\
    function processPastTime(string) {\n\
        var number = string.substr(0, string.indexOf(' '));\n\
        if (eifelerRegelAppliesToNumber(number)) {\n\
            return \"viru \" + string;\n\
        }\n\
        return \"virun \" + string;\n\
    }\n\
\n\
    /**\n\
     * Returns true if the word before the given number loses the \"-n\" ending.\n\
     * e.g. \"an 10 Deeg\" but \"a 5 Deeg\"\n\
     *\n\
     * @param number {integer}\n\
     * @returns {boolean}\n\
     */\n\
    function eifelerRegelAppliesToNumber(number) {\n\
        number = parseInt(number, 10);\n\
        if (isNaN(number)) {\n\
            return false;\n\
        }\n\
        if (number < 0) {\n\
            // Negative Number --> always true\n\
            return true;\n\
        } else if (number < 10) {\n\
            // Only 1 digit\n\
            if (4 <= number && number <= 7) {\n\
                return true;\n\
            }\n\
            return false;\n\
        } else if (number < 100) {\n\
            // 2 digits\n\
            var lastDigit = number % 10, firstDigit = number / 10;\n\
            if (lastDigit === 0) {\n\
                return eifelerRegelAppliesToNumber(firstDigit);\n\
            }\n\
            return eifelerRegelAppliesToNumber(lastDigit);\n\
        } else if (number < 10000) {\n\
            // 3 or 4 digits --> recursively check first digit\n\
            while (number >= 10) {\n\
                number = number / 10;\n\
            }\n\
            return eifelerRegelAppliesToNumber(number);\n\
        } else {\n\
            // Anything larger than 4 digits: recursively check first n-3 digits\n\
            number = number / 1000;\n\
            return eifelerRegelAppliesToNumber(number);\n\
        }\n\
    }\n\
\n\
    return moment.defineLocale('lb', {\n\
        months: \"Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember\".split(\"_\"),\n\
        monthsShort: \"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.\".split(\"_\"),\n\
        weekdays: \"Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg\".split(\"_\"),\n\
        weekdaysShort: \"So._Mé._Dë._Më._Do._Fr._Sa.\".split(\"_\"),\n\
        weekdaysMin: \"So_Mé_Dë_Më_Do_Fr_Sa\".split(\"_\"),\n\
        longDateFormat: {\n\
            LT: \"H:mm [Auer]\",\n\
            L: \"DD.MM.YYYY\",\n\
            LL: \"D. MMMM YYYY\",\n\
            LLL: \"D. MMMM YYYY LT\",\n\
            LLLL: \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar: {\n\
            sameDay: \"[Haut um] LT\",\n\
            sameElse: \"L\",\n\
            nextDay: '[Muer um] LT',\n\
            nextWeek: 'dddd [um] LT',\n\
            lastDay: '[Gëschter um] LT',\n\
            lastWeek: function () {\n\
                // Different date string for \"Dënschdeg\" (Tuesday) and \"Donneschdeg\" (Thursday) due to phonological rule\n\
                switch (this.day()) {\n\
                    case 2:\n\
                    case 4:\n\
                        return '[Leschten] dddd [um] LT';\n\
                    default:\n\
                        return '[Leschte] dddd [um] LT';\n\
                }\n\
            }\n\
        },\n\
        relativeTime : {\n\
            future : processFutureTime,\n\
            past : processPastTime,\n\
            s : \"e puer Sekonnen\",\n\
            m : processRelativeTime,\n\
            mm : \"%d Minutten\",\n\
            h : processRelativeTime,\n\
            hh : \"%d Stonnen\",\n\
            d : processRelativeTime,\n\
            dd : \"%d Deeg\",\n\
            M : processRelativeTime,\n\
            MM : \"%d Méint\",\n\
            y : processRelativeTime,\n\
            yy : \"%d Joer\"\n\
        },\n\
        ordinal: '%d.',\n\
        week: {\n\
            dow: 1, // Monday is the first day of the week.\n\
            doy: 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/lb.js"
));
require.register("johntron-moment/locale/lt.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Lithuanian (lt)\n\
// author : Mindaugas Mozūras : https://github.com/mmozuras\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var units = {\n\
        \"m\" : \"minutė_minutės_minutę\",\n\
        \"mm\": \"minutės_minučių_minutes\",\n\
        \"h\" : \"valanda_valandos_valandą\",\n\
        \"hh\": \"valandos_valandų_valandas\",\n\
        \"d\" : \"diena_dienos_dieną\",\n\
        \"dd\": \"dienos_dienų_dienas\",\n\
        \"M\" : \"mėnuo_mėnesio_mėnesį\",\n\
        \"MM\": \"mėnesiai_mėnesių_mėnesius\",\n\
        \"y\" : \"metai_metų_metus\",\n\
        \"yy\": \"metai_metų_metus\"\n\
    },\n\
    weekDays = \"sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis\".split(\"_\");\n\
\n\
    function translateSeconds(number, withoutSuffix, key, isFuture) {\n\
        if (withoutSuffix) {\n\
            return \"kelios sekundės\";\n\
        } else {\n\
            return isFuture ? \"kelių sekundžių\" : \"kelias sekundes\";\n\
        }\n\
    }\n\
\n\
    function translateSingular(number, withoutSuffix, key, isFuture) {\n\
        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n\
    }\n\
\n\
    function special(number) {\n\
        return number % 10 === 0 || (number > 10 && number < 20);\n\
    }\n\
\n\
    function forms(key) {\n\
        return units[key].split(\"_\");\n\
    }\n\
\n\
    function translate(number, withoutSuffix, key, isFuture) {\n\
        var result = number + \" \";\n\
        if (number === 1) {\n\
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n\
        } else if (withoutSuffix) {\n\
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n\
        } else {\n\
            if (isFuture) {\n\
                return result + forms(key)[1];\n\
            } else {\n\
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n\
            }\n\
        }\n\
    }\n\
\n\
    function relativeWeekDay(moment, format) {\n\
        var nominative = format.indexOf('dddd HH:mm') === -1,\n\
            weekDay = weekDays[moment.day()];\n\
\n\
        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + \"į\";\n\
    }\n\
\n\
    return moment.defineLocale(\"lt\", {\n\
        months : \"sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio\".split(\"_\"),\n\
        monthsShort : \"sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd\".split(\"_\"),\n\
        weekdays : relativeWeekDay,\n\
        weekdaysShort : \"Sek_Pir_Ant_Tre_Ket_Pen_Šeš\".split(\"_\"),\n\
        weekdaysMin : \"S_P_A_T_K_Pn_Š\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"YYYY-MM-DD\",\n\
            LL : \"YYYY [m.] MMMM D [d.]\",\n\
            LLL : \"YYYY [m.] MMMM D [d.], LT [val.]\",\n\
            LLLL : \"YYYY [m.] MMMM D [d.], dddd, LT [val.]\",\n\
            l : \"YYYY-MM-DD\",\n\
            ll : \"YYYY [m.] MMMM D [d.]\",\n\
            lll : \"YYYY [m.] MMMM D [d.], LT [val.]\",\n\
            llll : \"YYYY [m.] MMMM D [d.], ddd, LT [val.]\"\n\
        },\n\
        calendar : {\n\
            sameDay : \"[Šiandien] LT\",\n\
            nextDay : \"[Rytoj] LT\",\n\
            nextWeek : \"dddd LT\",\n\
            lastDay : \"[Vakar] LT\",\n\
            lastWeek : \"[Praėjusį] dddd LT\",\n\
            sameElse : \"L\"\n\
        },\n\
        relativeTime : {\n\
            future : \"po %s\",\n\
            past : \"prieš %s\",\n\
            s : translateSeconds,\n\
            m : translateSingular,\n\
            mm : translate,\n\
            h : translateSingular,\n\
            hh : translate,\n\
            d : translateSingular,\n\
            dd : translate,\n\
            M : translateSingular,\n\
            MM : translate,\n\
            y : translateSingular,\n\
            yy : translate\n\
        },\n\
        ordinal : function (number) {\n\
            return number + '-oji';\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/lt.js"
));
require.register("johntron-moment/locale/lv.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : latvian (lv)\n\
// author : Kristaps Karlsons : https://github.com/skakri\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var units = {\n\
        'mm': 'minūti_minūtes_minūte_minūtes',\n\
        'hh': 'stundu_stundas_stunda_stundas',\n\
        'dd': 'dienu_dienas_diena_dienas',\n\
        'MM': 'mēnesi_mēnešus_mēnesis_mēneši',\n\
        'yy': 'gadu_gadus_gads_gadi'\n\
    };\n\
\n\
    function format(word, number, withoutSuffix) {\n\
        var forms = word.split('_');\n\
        if (withoutSuffix) {\n\
            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];\n\
        } else {\n\
            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];\n\
        }\n\
    }\n\
\n\
    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\
        return number + ' ' + format(units[key], number, withoutSuffix);\n\
    }\n\
\n\
    return moment.defineLocale('lv', {\n\
        months : \"janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris\".split(\"_\"),\n\
        monthsShort : \"jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec\".split(\"_\"),\n\
        weekdays : \"svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena\".split(\"_\"),\n\
        weekdaysShort : \"Sv_P_O_T_C_Pk_S\".split(\"_\"),\n\
        weekdaysMin : \"Sv_P_O_T_C_Pk_S\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"YYYY. [gada] D. MMMM\",\n\
            LLL : \"YYYY. [gada] D. MMMM, LT\",\n\
            LLLL : \"YYYY. [gada] D. MMMM, dddd, LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Šodien pulksten] LT',\n\
            nextDay : '[Rīt pulksten] LT',\n\
            nextWeek : 'dddd [pulksten] LT',\n\
            lastDay : '[Vakar pulksten] LT',\n\
            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s vēlāk\",\n\
            past : \"%s agrāk\",\n\
            s : \"dažas sekundes\",\n\
            m : \"minūti\",\n\
            mm : relativeTimeWithPlural,\n\
            h : \"stundu\",\n\
            hh : relativeTimeWithPlural,\n\
            d : \"dienu\",\n\
            dd : relativeTimeWithPlural,\n\
            M : \"mēnesi\",\n\
            MM : relativeTimeWithPlural,\n\
            y : \"gadu\",\n\
            yy : relativeTimeWithPlural\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/lv.js"
));
require.register("johntron-moment/locale/mk.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : macedonian (mk)\n\
// author : Borislav Mickov : https://github.com/B0k0\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('mk', {\n\
        months : \"јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември\".split(\"_\"),\n\
        monthsShort : \"јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек\".split(\"_\"),\n\
        weekdays : \"недела_понеделник_вторник_среда_четврток_петок_сабота\".split(\"_\"),\n\
        weekdaysShort : \"нед_пон_вто_сре_чет_пет_саб\".split(\"_\"),\n\
        weekdaysMin : \"нe_пo_вт_ср_че_пе_сa\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"D.MM.YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Денес во] LT',\n\
            nextDay : '[Утре во] LT',\n\
            nextWeek : 'dddd [во] LT',\n\
            lastDay : '[Вчера во] LT',\n\
            lastWeek : function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                case 3:\n\
                case 6:\n\
                    return '[Во изминатата] dddd [во] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[Во изминатиот] dddd [во] LT';\n\
                }\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"после %s\",\n\
            past : \"пред %s\",\n\
            s : \"неколку секунди\",\n\
            m : \"минута\",\n\
            mm : \"%d минути\",\n\
            h : \"час\",\n\
            hh : \"%d часа\",\n\
            d : \"ден\",\n\
            dd : \"%d дена\",\n\
            M : \"месец\",\n\
            MM : \"%d месеци\",\n\
            y : \"година\",\n\
            yy : \"%d години\"\n\
        },\n\
        ordinal : function (number) {\n\
            var lastDigit = number % 10,\n\
                last2Digits = number % 100;\n\
            if (number === 0) {\n\
                return number + '-ев';\n\
            } else if (last2Digits === 0) {\n\
                return number + '-ен';\n\
            } else if (last2Digits > 10 && last2Digits < 20) {\n\
                return number + '-ти';\n\
            } else if (lastDigit === 1) {\n\
                return number + '-ви';\n\
            } else if (lastDigit === 2) {\n\
                return number + '-ри';\n\
            } else if (lastDigit === 7 || lastDigit === 8) {\n\
                return number + '-ми';\n\
            } else {\n\
                return number + '-ти';\n\
            }\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/mk.js"
));
require.register("johntron-moment/locale/ml.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : malayalam (ml)\n\
// author : Floyd Pink : https://github.com/floydpink\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('ml', {\n\
        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(\"_\"),\n\
        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(\"_\"),\n\
        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(\"_\"),\n\
        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split(\"_\"),\n\
        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"A h:mm -നു\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY, LT\",\n\
            LLLL : \"dddd, D MMMM YYYY, LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[ഇന്ന്] LT',\n\
            nextDay : '[നാളെ] LT',\n\
            nextWeek : 'dddd, LT',\n\
            lastDay : '[ഇന്നലെ] LT',\n\
            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s കഴിഞ്ഞ്\",\n\
            past : \"%s മുൻപ്\",\n\
            s : \"അൽപ നിമിഷങ്ങൾ\",\n\
            m : \"ഒരു മിനിറ്റ്\",\n\
            mm : \"%d മിനിറ്റ്\",\n\
            h : \"ഒരു മണിക്കൂർ\",\n\
            hh : \"%d മണിക്കൂർ\",\n\
            d : \"ഒരു ദിവസം\",\n\
            dd : \"%d ദിവസം\",\n\
            M : \"ഒരു മാസം\",\n\
            MM : \"%d മാസം\",\n\
            y : \"ഒരു വർഷം\",\n\
            yy : \"%d വർഷം\"\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 4) {\n\
                return \"രാത്രി\";\n\
            } else if (hour < 12) {\n\
                return \"രാവിലെ\";\n\
            } else if (hour < 17) {\n\
                return \"ഉച്ച കഴിഞ്ഞ്\";\n\
            } else if (hour < 20) {\n\
                return \"വൈകുന്നേരം\";\n\
            } else {\n\
                return \"രാത്രി\";\n\
            }\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ml.js"
));
require.register("johntron-moment/locale/mr.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Marathi (mr)\n\
// author : Harshad Kale : https://github.com/kalehv\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '१',\n\
        '2': '२',\n\
        '3': '३',\n\
        '4': '४',\n\
        '5': '५',\n\
        '6': '६',\n\
        '7': '७',\n\
        '8': '८',\n\
        '9': '९',\n\
        '0': '०'\n\
    },\n\
    numberMap = {\n\
        '१': '1',\n\
        '२': '2',\n\
        '३': '3',\n\
        '४': '4',\n\
        '५': '5',\n\
        '६': '6',\n\
        '७': '7',\n\
        '८': '8',\n\
        '९': '9',\n\
        '०': '0'\n\
    };\n\
\n\
    return moment.defineLocale('mr', {\n\
        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(\"_\"),\n\
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(\"_\"),\n\
        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split(\"_\"),\n\
        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split(\"_\"),\n\
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"A h:mm वाजता\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY, LT\",\n\
            LLLL : \"dddd, D MMMM YYYY, LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[आज] LT',\n\
            nextDay : '[उद्या] LT',\n\
            nextWeek : 'dddd, LT',\n\
            lastDay : '[काल] LT',\n\
            lastWeek: '[मागील] dddd, LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s नंतर\",\n\
            past : \"%s पूर्वी\",\n\
            s : \"सेकंद\",\n\
            m: \"एक मिनिट\",\n\
            mm: \"%d मिनिटे\",\n\
            h : \"एक तास\",\n\
            hh : \"%d तास\",\n\
            d : \"एक दिवस\",\n\
            dd : \"%d दिवस\",\n\
            M : \"एक महिना\",\n\
            MM : \"%d महिने\",\n\
            y : \"एक वर्ष\",\n\
            yy : \"%d वर्षे\"\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n\
                return numberMap[match];\n\
            });\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            });\n\
        },\n\
        meridiem: function (hour, minute, isLower)\n\
        {\n\
            if (hour < 4) {\n\
                return \"रात्री\";\n\
            } else if (hour < 10) {\n\
                return \"सकाळी\";\n\
            } else if (hour < 17) {\n\
                return \"दुपारी\";\n\
            } else if (hour < 20) {\n\
                return \"सायंकाळी\";\n\
            } else {\n\
                return \"रात्री\";\n\
            }\n\
        },\n\
        week : {\n\
            dow : 0, // Sunday is the first day of the week.\n\
            doy : 6  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/mr.js"
));
require.register("johntron-moment/locale/ms-my.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Bahasa Malaysia (ms-MY)\n\
// author : Weldan Jamili : https://github.com/weldan\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('ms-my', {\n\
        months : \"Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember\".split(\"_\"),\n\
        monthsShort : \"Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis\".split(\"_\"),\n\
        weekdays : \"Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu\".split(\"_\"),\n\
        weekdaysShort : \"Ahd_Isn_Sel_Rab_Kha_Jum_Sab\".split(\"_\"),\n\
        weekdaysMin : \"Ah_Is_Sl_Rb_Km_Jm_Sb\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH.mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY [pukul] LT\",\n\
            LLLL : \"dddd, D MMMM YYYY [pukul] LT\"\n\
        },\n\
        meridiem : function (hours, minutes, isLower) {\n\
            if (hours < 11) {\n\
                return 'pagi';\n\
            } else if (hours < 15) {\n\
                return 'tengahari';\n\
            } else if (hours < 19) {\n\
                return 'petang';\n\
            } else {\n\
                return 'malam';\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[Hari ini pukul] LT',\n\
            nextDay : '[Esok pukul] LT',\n\
            nextWeek : 'dddd [pukul] LT',\n\
            lastDay : '[Kelmarin pukul] LT',\n\
            lastWeek : 'dddd [lepas pukul] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"dalam %s\",\n\
            past : \"%s yang lepas\",\n\
            s : \"beberapa saat\",\n\
            m : \"seminit\",\n\
            mm : \"%d minit\",\n\
            h : \"sejam\",\n\
            hh : \"%d jam\",\n\
            d : \"sehari\",\n\
            dd : \"%d hari\",\n\
            M : \"sebulan\",\n\
            MM : \"%d bulan\",\n\
            y : \"setahun\",\n\
            yy : \"%d tahun\"\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ms-my.js"
));
require.register("johntron-moment/locale/my.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Burmese (my)\n\
// author : Squar team, mysquar.com\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '၁',\n\
        '2': '၂',\n\
        '3': '၃',\n\
        '4': '၄',\n\
        '5': '၅',\n\
        '6': '၆',\n\
        '7': '၇',\n\
        '8': '၈',\n\
        '9': '၉',\n\
        '0': '၀'\n\
    }, numberMap = {\n\
        '၁': '1',\n\
        '၂': '2',\n\
        '၃': '3',\n\
        '၄': '4',\n\
        '၅': '5',\n\
        '၆': '6',\n\
        '၇': '7',\n\
        '၈': '8',\n\
        '၉': '9',\n\
        '၀': '0'\n\
    };\n\
    return moment.defineLocale('my', {\n\
        months: \"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ\".split(\"_\"),\n\
        monthsShort: \"ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ\".split(\"_\"),\n\
        weekdays: \"တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ\".split(\"_\"),\n\
        weekdaysShort: \"နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),\n\
        weekdaysMin: \"နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ\".split(\"_\"),\n\
        longDateFormat: {\n\
            LT: \"HH:mm\",\n\
            L: \"DD/MM/YYYY\",\n\
            LL: \"D MMMM YYYY\",\n\
            LLL: \"D MMMM YYYY LT\",\n\
            LLLL: \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar: {\n\
            sameDay: '[ယနေ.] LT [မှာ]',\n\
            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n\
            nextWeek: 'dddd LT [မှာ]',\n\
            lastDay: '[မနေ.က] LT [မှာ]',\n\
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime: {\n\
            future: \"လာမည့် %s မှာ\",\n\
            past: \"လွန်ခဲ့သော %s က\",\n\
            s: \"စက္ကန်.အနည်းငယ်\",\n\
            m: \"တစ်မိနစ်\",\n\
            mm: \"%d မိနစ်\",\n\
            h: \"တစ်နာရီ\",\n\
            hh: \"%d နာရီ\",\n\
            d: \"တစ်ရက်\",\n\
            dd: \"%d ရက်\",\n\
            M: \"တစ်လ\",\n\
            MM: \"%d လ\",\n\
            y: \"တစ်နှစ်\",\n\
            yy: \"%d နှစ်\"\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n\
                return numberMap[match];\n\
            });\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            });\n\
        },\n\
        week: {\n\
            dow: 1, // Monday is the first day of the week.\n\
            doy: 4 // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/my.js"
));
require.register("johntron-moment/locale/nb.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : norwegian bokmål (nb)\n\
// authors : Espen Hovlandsdal : https://github.com/rexxars\n\
//           Sigurd Gartmann : https://github.com/sigurdga\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('nb', {\n\
        months : \"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),\n\
        monthsShort : \"jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.\".split(\"_\"),\n\
        weekdays : \"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag\".split(\"_\"),\n\
        weekdaysShort : \"sø._ma._ti._on._to._fr._lø.\".split(\"_\"),\n\
        weekdaysMin : \"sø_ma_ti_on_to_fr_lø\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H.mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY [kl.] LT\",\n\
            LLLL : \"dddd D. MMMM YYYY [kl.] LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[i dag kl.] LT',\n\
            nextDay: '[i morgen kl.] LT',\n\
            nextWeek: 'dddd [kl.] LT',\n\
            lastDay: '[i går kl.] LT',\n\
            lastWeek: '[forrige] dddd [kl.] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"om %s\",\n\
            past : \"for %s siden\",\n\
            s : \"noen sekunder\",\n\
            m : \"ett minutt\",\n\
            mm : \"%d minutter\",\n\
            h : \"en time\",\n\
            hh : \"%d timer\",\n\
            d : \"en dag\",\n\
            dd : \"%d dager\",\n\
            M : \"en måned\",\n\
            MM : \"%d måneder\",\n\
            y : \"ett år\",\n\
            yy : \"%d år\"\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/nb.js"
));
require.register("johntron-moment/locale/ne.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : nepali/nepalese\n\
// author : suvash : https://github.com/suvash\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var symbolMap = {\n\
        '1': '१',\n\
        '2': '२',\n\
        '3': '३',\n\
        '4': '४',\n\
        '5': '५',\n\
        '6': '६',\n\
        '7': '७',\n\
        '8': '८',\n\
        '9': '९',\n\
        '0': '०'\n\
    },\n\
    numberMap = {\n\
        '१': '1',\n\
        '२': '2',\n\
        '३': '3',\n\
        '४': '4',\n\
        '५': '5',\n\
        '६': '6',\n\
        '७': '7',\n\
        '८': '8',\n\
        '९': '9',\n\
        '०': '0'\n\
    };\n\
\n\
    return moment.defineLocale('ne', {\n\
        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(\"_\"),\n\
        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(\"_\"),\n\
        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(\"_\"),\n\
        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split(\"_\"),\n\
        weekdaysMin : 'आइ._सो._मङ्_बु._बि._शु._श.'.split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"Aको h:mm बजे\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY, LT\",\n\
            LLLL : \"dddd, D MMMM YYYY, LT\"\n\
        },\n\
        preparse: function (string) {\n\
            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n\
                return numberMap[match];\n\
            });\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            });\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 3) {\n\
                return \"राती\";\n\
            } else if (hour < 10) {\n\
                return \"बिहान\";\n\
            } else if (hour < 15) {\n\
                return \"दिउँसो\";\n\
            } else if (hour < 18) {\n\
                return \"बेलुका\";\n\
            } else if (hour < 20) {\n\
                return \"साँझ\";\n\
            } else {\n\
                return \"राती\";\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[आज] LT',\n\
            nextDay : '[भोली] LT',\n\
            nextWeek : '[आउँदो] dddd[,] LT',\n\
            lastDay : '[हिजो] LT',\n\
            lastWeek : '[गएको] dddd[,] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%sमा\",\n\
            past : \"%s अगाडी\",\n\
            s : \"केही समय\",\n\
            m : \"एक मिनेट\",\n\
            mm : \"%d मिनेट\",\n\
            h : \"एक घण्टा\",\n\
            hh : \"%d घण्टा\",\n\
            d : \"एक दिन\",\n\
            dd : \"%d दिन\",\n\
            M : \"एक महिना\",\n\
            MM : \"%d महिना\",\n\
            y : \"एक बर्ष\",\n\
            yy : \"%d बर्ष\"\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ne.js"
));
require.register("johntron-moment/locale/nl.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : dutch (nl)\n\
// author : Joris Röling : https://github.com/jjupiter\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var monthsShortWithDots = \"jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.\".split(\"_\"),\n\
        monthsShortWithoutDots = \"jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec\".split(\"_\");\n\
\n\
    return moment.defineLocale('nl', {\n\
        months : \"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december\".split(\"_\"),\n\
        monthsShort : function (m, format) {\n\
            if (/-MMM-/.test(format)) {\n\
                return monthsShortWithoutDots[m.month()];\n\
            } else {\n\
                return monthsShortWithDots[m.month()];\n\
            }\n\
        },\n\
        weekdays : \"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag\".split(\"_\"),\n\
        weekdaysShort : \"zo._ma._di._wo._do._vr._za.\".split(\"_\"),\n\
        weekdaysMin : \"Zo_Ma_Di_Wo_Do_Vr_Za\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD-MM-YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[vandaag om] LT',\n\
            nextDay: '[morgen om] LT',\n\
            nextWeek: 'dddd [om] LT',\n\
            lastDay: '[gisteren om] LT',\n\
            lastWeek: '[afgelopen] dddd [om] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"over %s\",\n\
            past : \"%s geleden\",\n\
            s : \"een paar seconden\",\n\
            m : \"één minuut\",\n\
            mm : \"%d minuten\",\n\
            h : \"één uur\",\n\
            hh : \"%d uur\",\n\
            d : \"één dag\",\n\
            dd : \"%d dagen\",\n\
            M : \"één maand\",\n\
            MM : \"%d maanden\",\n\
            y : \"één jaar\",\n\
            yy : \"%d jaar\"\n\
        },\n\
        ordinal : function (number) {\n\
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/nl.js"
));
require.register("johntron-moment/locale/nn.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : norwegian nynorsk (nn)\n\
// author : https://github.com/mechuwind\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('nn', {\n\
        months : \"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),\n\
        monthsShort : \"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),\n\
        weekdays : \"sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag\".split(\"_\"),\n\
        weekdaysShort : \"sun_mån_tys_ons_tor_fre_lau\".split(\"_\"),\n\
        weekdaysMin : \"su_må_ty_on_to_fr_lø\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[I dag klokka] LT',\n\
            nextDay: '[I morgon klokka] LT',\n\
            nextWeek: 'dddd [klokka] LT',\n\
            lastDay: '[I går klokka] LT',\n\
            lastWeek: '[Føregåande] dddd [klokka] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"om %s\",\n\
            past : \"for %s sidan\",\n\
            s : \"nokre sekund\",\n\
            m : \"eit minutt\",\n\
            mm : \"%d minutt\",\n\
            h : \"ein time\",\n\
            hh : \"%d timar\",\n\
            d : \"ein dag\",\n\
            dd : \"%d dagar\",\n\
            M : \"ein månad\",\n\
            MM : \"%d månader\",\n\
            y : \"eit år\",\n\
            yy : \"%d år\"\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/nn.js"
));
require.register("johntron-moment/locale/pl.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : polish (pl)\n\
// author : Rafal Hirsz : https://github.com/evoL\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var monthsNominative = \"styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień\".split(\"_\"),\n\
        monthsSubjective = \"stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia\".split(\"_\");\n\
\n\
    function plural(n) {\n\
        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n\
    }\n\
\n\
    function translate(number, withoutSuffix, key) {\n\
        var result = number + \" \";\n\
        switch (key) {\n\
        case 'm':\n\
            return withoutSuffix ? 'minuta' : 'minutę';\n\
        case 'mm':\n\
            return result + (plural(number) ? 'minuty' : 'minut');\n\
        case 'h':\n\
            return withoutSuffix  ? 'godzina'  : 'godzinę';\n\
        case 'hh':\n\
            return result + (plural(number) ? 'godziny' : 'godzin');\n\
        case 'MM':\n\
            return result + (plural(number) ? 'miesiące' : 'miesięcy');\n\
        case 'yy':\n\
            return result + (plural(number) ? 'lata' : 'lat');\n\
        }\n\
    }\n\
\n\
    return moment.defineLocale('pl', {\n\
        months : function (momentToFormat, format) {\n\
            if (/D MMMM/.test(format)) {\n\
                return monthsSubjective[momentToFormat.month()];\n\
            } else {\n\
                return monthsNominative[momentToFormat.month()];\n\
            }\n\
        },\n\
        monthsShort : \"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru\".split(\"_\"),\n\
        weekdays : \"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota\".split(\"_\"),\n\
        weekdaysShort : \"nie_pon_wt_śr_czw_pt_sb\".split(\"_\"),\n\
        weekdaysMin : \"N_Pn_Wt_Śr_Cz_Pt_So\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[Dziś o] LT',\n\
            nextDay: '[Jutro o] LT',\n\
            nextWeek: '[W] dddd [o] LT',\n\
            lastDay: '[Wczoraj o] LT',\n\
            lastWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[W zeszłą niedzielę o] LT';\n\
                case 3:\n\
                    return '[W zeszłą środę o] LT';\n\
                case 6:\n\
                    return '[W zeszłą sobotę o] LT';\n\
                default:\n\
                    return '[W zeszły] dddd [o] LT';\n\
                }\n\
            },\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"za %s\",\n\
            past : \"%s temu\",\n\
            s : \"kilka sekund\",\n\
            m : translate,\n\
            mm : translate,\n\
            h : translate,\n\
            hh : translate,\n\
            d : \"1 dzień\",\n\
            dd : '%d dni',\n\
            M : \"miesiąc\",\n\
            MM : translate,\n\
            y : \"rok\",\n\
            yy : translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/pl.js"
));
require.register("johntron-moment/locale/pt-br.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : brazilian portuguese (pt-br)\n\
// author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('pt-br', {\n\
        months : \"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro\".split(\"_\"),\n\
        monthsShort : \"jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez\".split(\"_\"),\n\
        weekdays : \"domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado\".split(\"_\"),\n\
        weekdaysShort : \"dom_seg_ter_qua_qui_sex_sáb\".split(\"_\"),\n\
        weekdaysMin : \"dom_2ª_3ª_4ª_5ª_6ª_sáb\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D [de] MMMM [de] YYYY\",\n\
            LLL : \"D [de] MMMM [de] YYYY [às] LT\",\n\
            LLLL : \"dddd, D [de] MMMM [de] YYYY [às] LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[Hoje às] LT',\n\
            nextDay: '[Amanhã às] LT',\n\
            nextWeek: 'dddd [às] LT',\n\
            lastDay: '[Ontem às] LT',\n\
            lastWeek: function () {\n\
                return (this.day() === 0 || this.day() === 6) ?\n\
                    '[Último] dddd [às] LT' : // Saturday + Sunday\n\
                    '[Última] dddd [às] LT'; // Monday - Friday\n\
            },\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"em %s\",\n\
            past : \"%s atrás\",\n\
            s : \"segundos\",\n\
            m : \"um minuto\",\n\
            mm : \"%d minutos\",\n\
            h : \"uma hora\",\n\
            hh : \"%d horas\",\n\
            d : \"um dia\",\n\
            dd : \"%d dias\",\n\
            M : \"um mês\",\n\
            MM : \"%d meses\",\n\
            y : \"um ano\",\n\
            yy : \"%d anos\"\n\
        },\n\
        ordinal : '%dº'\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/pt-br.js"
));
require.register("johntron-moment/locale/pt.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : portuguese (pt)\n\
// author : Jefferson : https://github.com/jalex79\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('pt', {\n\
        months : \"janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro\".split(\"_\"),\n\
        monthsShort : \"jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez\".split(\"_\"),\n\
        weekdays : \"domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado\".split(\"_\"),\n\
        weekdaysShort : \"dom_seg_ter_qua_qui_sex_sáb\".split(\"_\"),\n\
        weekdaysMin : \"dom_2ª_3ª_4ª_5ª_6ª_sáb\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D [de] MMMM [de] YYYY\",\n\
            LLL : \"D [de] MMMM [de] YYYY LT\",\n\
            LLLL : \"dddd, D [de] MMMM [de] YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[Hoje às] LT',\n\
            nextDay: '[Amanhã às] LT',\n\
            nextWeek: 'dddd [às] LT',\n\
            lastDay: '[Ontem às] LT',\n\
            lastWeek: function () {\n\
                return (this.day() === 0 || this.day() === 6) ?\n\
                    '[Último] dddd [às] LT' : // Saturday + Sunday\n\
                    '[Última] dddd [às] LT'; // Monday - Friday\n\
            },\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"em %s\",\n\
            past : \"há %s\",\n\
            s : \"segundos\",\n\
            m : \"um minuto\",\n\
            mm : \"%d minutos\",\n\
            h : \"uma hora\",\n\
            hh : \"%d horas\",\n\
            d : \"um dia\",\n\
            dd : \"%d dias\",\n\
            M : \"um mês\",\n\
            MM : \"%d meses\",\n\
            y : \"um ano\",\n\
            yy : \"%d anos\"\n\
        },\n\
        ordinal : '%dº',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/pt.js"
));
require.register("johntron-moment/locale/ro.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : romanian (ro)\n\
// author : Vlad Gurdiga : https://github.com/gurdiga\n\
// author : Valentin Agachi : https://github.com/avaly\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\
        var format = {\n\
                'mm': 'minute',\n\
                'hh': 'ore',\n\
                'dd': 'zile',\n\
                'MM': 'luni',\n\
                'yy': 'ani'\n\
            },\n\
            separator = ' ';\n\
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n\
            separator = ' de ';\n\
        }\n\
\n\
        return number + separator + format[key];\n\
    }\n\
\n\
    return moment.defineLocale('ro', {\n\
        months : \"ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie\".split(\"_\"),\n\
        monthsShort : \"ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.\".split(\"_\"),\n\
        weekdays : \"duminică_luni_marți_miercuri_joi_vineri_sâmbătă\".split(\"_\"),\n\
        weekdaysShort : \"Dum_Lun_Mar_Mie_Joi_Vin_Sâm\".split(\"_\"),\n\
        weekdaysMin : \"Du_Lu_Ma_Mi_Jo_Vi_Sâ\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY H:mm\",\n\
            LLLL : \"dddd, D MMMM YYYY H:mm\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[azi la] LT\",\n\
            nextDay: '[mâine la] LT',\n\
            nextWeek: 'dddd [la] LT',\n\
            lastDay: '[ieri la] LT',\n\
            lastWeek: '[fosta] dddd [la] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"peste %s\",\n\
            past : \"%s în urmă\",\n\
            s : \"câteva secunde\",\n\
            m : \"un minut\",\n\
            mm : relativeTimeWithPlural,\n\
            h : \"o oră\",\n\
            hh : relativeTimeWithPlural,\n\
            d : \"o zi\",\n\
            dd : relativeTimeWithPlural,\n\
            M : \"o lună\",\n\
            MM : relativeTimeWithPlural,\n\
            y : \"un an\",\n\
            yy : relativeTimeWithPlural\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ro.js"
));
require.register("johntron-moment/locale/ru.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : russian (ru)\n\
// author : Viktorminator : https://github.com/Viktorminator\n\
// Author : Menelion Elensúle : https://github.com/Oire\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function plural(word, num) {\n\
        var forms = word.split('_');\n\
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n\
    }\n\
\n\
    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\
        var format = {\n\
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n\
            'hh': 'час_часа_часов',\n\
            'dd': 'день_дня_дней',\n\
            'MM': 'месяц_месяца_месяцев',\n\
            'yy': 'год_года_лет'\n\
        };\n\
        if (key === 'm') {\n\
            return withoutSuffix ? 'минута' : 'минуту';\n\
        }\n\
        else {\n\
            return number + ' ' + plural(format[key], +number);\n\
        }\n\
    }\n\
\n\
    function monthsCaseReplace(m, format) {\n\
        var months = {\n\
            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n\
            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n\
        },\n\
\n\
        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return months[nounCase][m.month()];\n\
    }\n\
\n\
    function monthsShortCaseReplace(m, format) {\n\
        var monthsShort = {\n\
            'nominative': 'янв_фев_мар_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n\
            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n\
        },\n\
\n\
        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return monthsShort[nounCase][m.month()];\n\
    }\n\
\n\
    function weekdaysCaseReplace(m, format) {\n\
        var weekdays = {\n\
            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n\
            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n\
        },\n\
\n\
        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую)? ?\\] ?dddd/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return weekdays[nounCase][m.day()];\n\
    }\n\
\n\
    return moment.defineLocale('ru', {\n\
        months : monthsCaseReplace,\n\
        monthsShort : monthsShortCaseReplace,\n\
        weekdays : weekdaysCaseReplace,\n\
        weekdaysShort : \"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),\n\
        weekdaysMin : \"вс_пн_вт_ср_чт_пт_сб\".split(\"_\"),\n\
        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY г.\",\n\
            LLL : \"D MMMM YYYY г., LT\",\n\
            LLLL : \"dddd, D MMMM YYYY г., LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[Сегодня в] LT',\n\
            nextDay: '[Завтра в] LT',\n\
            lastDay: '[Вчера в] LT',\n\
            nextWeek: function () {\n\
                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n\
            },\n\
            lastWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[В прошлое] dddd [в] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                    return '[В прошлый] dddd [в] LT';\n\
                case 3:\n\
                case 5:\n\
                case 6:\n\
                    return '[В прошлую] dddd [в] LT';\n\
                }\n\
            },\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"через %s\",\n\
            past : \"%s назад\",\n\
            s : \"несколько секунд\",\n\
            m : relativeTimeWithPlural,\n\
            mm : relativeTimeWithPlural,\n\
            h : \"час\",\n\
            hh : relativeTimeWithPlural,\n\
            d : \"день\",\n\
            dd : relativeTimeWithPlural,\n\
            M : \"месяц\",\n\
            MM : relativeTimeWithPlural,\n\
            y : \"год\",\n\
            yy : relativeTimeWithPlural\n\
        },\n\
\n\
        meridiemParse: /ночи|утра|дня|вечера/i,\n\
        isPM : function (input) {\n\
            return /^(дня|вечера)$/.test(input);\n\
        },\n\
\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 4) {\n\
                return \"ночи\";\n\
            } else if (hour < 12) {\n\
                return \"утра\";\n\
            } else if (hour < 17) {\n\
                return \"дня\";\n\
            } else {\n\
                return \"вечера\";\n\
            }\n\
        },\n\
\n\
        ordinal: function (number, period) {\n\
            switch (period) {\n\
            case 'M':\n\
            case 'd':\n\
            case 'DDD':\n\
                return number + '-й';\n\
            case 'D':\n\
                return number + '-го';\n\
            case 'w':\n\
            case 'W':\n\
                return number + '-я';\n\
            default:\n\
                return number;\n\
            }\n\
        },\n\
\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ru.js"
));
require.register("johntron-moment/locale/sk.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : slovak (sk)\n\
// author : Martin Minka : https://github.com/k2s\n\
// based on work of petrbela : https://github.com/petrbela\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var months = \"január_február_marec_apríl_máj_jún_júl_august_september_október_november_december\".split(\"_\"),\n\
        monthsShort = \"jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec\".split(\"_\");\n\
\n\
    function plural(n) {\n\
        return (n > 1) && (n < 5);\n\
    }\n\
\n\
    function translate(number, withoutSuffix, key, isFuture) {\n\
        var result = number + \" \";\n\
        switch (key) {\n\
        case 's':  // a few seconds / in a few seconds / a few seconds ago\n\
            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n\
        case 'm':  // a minute / in a minute / a minute ago\n\
            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n\
        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'minúty' : 'minút');\n\
            } else {\n\
                return result + 'minútami';\n\
            }\n\
            break;\n\
        case 'h':  // an hour / in an hour / an hour ago\n\
            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n\
        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'hodiny' : 'hodín');\n\
            } else {\n\
                return result + 'hodinami';\n\
            }\n\
            break;\n\
        case 'd':  // a day / in a day / a day ago\n\
            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n\
        case 'dd': // 9 days / in 9 days / 9 days ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'dni' : 'dní');\n\
            } else {\n\
                return result + 'dňami';\n\
            }\n\
            break;\n\
        case 'M':  // a month / in a month / a month ago\n\
            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n\
        case 'MM': // 9 months / in 9 months / 9 months ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'mesiace' : 'mesiacov');\n\
            } else {\n\
                return result + 'mesiacmi';\n\
            }\n\
            break;\n\
        case 'y':  // a year / in a year / a year ago\n\
            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n\
        case 'yy': // 9 years / in 9 years / 9 years ago\n\
            if (withoutSuffix || isFuture) {\n\
                return result + (plural(number) ? 'roky' : 'rokov');\n\
            } else {\n\
                return result + 'rokmi';\n\
            }\n\
            break;\n\
        }\n\
    }\n\
\n\
    return moment.defineLocale('sk', {\n\
        months : months,\n\
        monthsShort : monthsShort,\n\
        monthsParse : (function (months, monthsShort) {\n\
            var i, _monthsParse = [];\n\
            for (i = 0; i < 12; i++) {\n\
                // use custom parser to solve problem with July (červenec)\n\
                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n\
            }\n\
            return _monthsParse;\n\
        }(months, monthsShort)),\n\
        weekdays : \"nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota\".split(\"_\"),\n\
        weekdaysShort : \"ne_po_ut_st_št_pi_so\".split(\"_\"),\n\
        weekdaysMin : \"ne_po_ut_st_št_pi_so\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT: \"H:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[dnes o] LT\",\n\
            nextDay: '[zajtra o] LT',\n\
            nextWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[v nedeľu o] LT';\n\
                case 1:\n\
                case 2:\n\
                    return '[v] dddd [o] LT';\n\
                case 3:\n\
                    return '[v stredu o] LT';\n\
                case 4:\n\
                    return '[vo štvrtok o] LT';\n\
                case 5:\n\
                    return '[v piatok o] LT';\n\
                case 6:\n\
                    return '[v sobotu o] LT';\n\
                }\n\
            },\n\
            lastDay: '[včera o] LT',\n\
            lastWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[minulú nedeľu o] LT';\n\
                case 1:\n\
                case 2:\n\
                    return '[minulý] dddd [o] LT';\n\
                case 3:\n\
                    return '[minulú stredu o] LT';\n\
                case 4:\n\
                case 5:\n\
                    return '[minulý] dddd [o] LT';\n\
                case 6:\n\
                    return '[minulú sobotu o] LT';\n\
                }\n\
            },\n\
            sameElse: \"L\"\n\
        },\n\
        relativeTime : {\n\
            future : \"za %s\",\n\
            past : \"pred %s\",\n\
            s : translate,\n\
            m : translate,\n\
            mm : translate,\n\
            h : translate,\n\
            hh : translate,\n\
            d : translate,\n\
            dd : translate,\n\
            M : translate,\n\
            MM : translate,\n\
            y : translate,\n\
            yy : translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/sk.js"
));
require.register("johntron-moment/locale/sl.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : slovenian (sl)\n\
// author : Robert Sedovšek : https://github.com/sedovsek\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function translate(number, withoutSuffix, key) {\n\
        var result = number + \" \";\n\
        switch (key) {\n\
        case 'm':\n\
            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n\
        case 'mm':\n\
            if (number === 1) {\n\
                result += 'minuta';\n\
            } else if (number === 2) {\n\
                result += 'minuti';\n\
            } else if (number === 3 || number === 4) {\n\
                result += 'minute';\n\
            } else {\n\
                result += 'minut';\n\
            }\n\
            return result;\n\
        case 'h':\n\
            return withoutSuffix ? 'ena ura' : 'eno uro';\n\
        case 'hh':\n\
            if (number === 1) {\n\
                result += 'ura';\n\
            } else if (number === 2) {\n\
                result += 'uri';\n\
            } else if (number === 3 || number === 4) {\n\
                result += 'ure';\n\
            } else {\n\
                result += 'ur';\n\
            }\n\
            return result;\n\
        case 'dd':\n\
            if (number === 1) {\n\
                result += 'dan';\n\
            } else {\n\
                result += 'dni';\n\
            }\n\
            return result;\n\
        case 'MM':\n\
            if (number === 1) {\n\
                result += 'mesec';\n\
            } else if (number === 2) {\n\
                result += 'meseca';\n\
            } else if (number === 3 || number === 4) {\n\
                result += 'mesece';\n\
            } else {\n\
                result += 'mesecev';\n\
            }\n\
            return result;\n\
        case 'yy':\n\
            if (number === 1) {\n\
                result += 'leto';\n\
            } else if (number === 2) {\n\
                result += 'leti';\n\
            } else if (number === 3 || number === 4) {\n\
                result += 'leta';\n\
            } else {\n\
                result += 'let';\n\
            }\n\
            return result;\n\
        }\n\
    }\n\
\n\
    return moment.defineLocale('sl', {\n\
        months : \"januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december\".split(\"_\"),\n\
        monthsShort : \"jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.\".split(\"_\"),\n\
        weekdays : \"nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota\".split(\"_\"),\n\
        weekdaysShort : \"ned._pon._tor._sre._čet._pet._sob.\".split(\"_\"),\n\
        weekdaysMin : \"ne_po_to_sr_če_pe_so\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H:mm\",\n\
            L : \"DD. MM. YYYY\",\n\
            LL : \"D. MMMM YYYY\",\n\
            LLL : \"D. MMMM YYYY LT\",\n\
            LLLL : \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay  : '[danes ob] LT',\n\
            nextDay  : '[jutri ob] LT',\n\
\n\
            nextWeek : function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[v] [nedeljo] [ob] LT';\n\
                case 3:\n\
                    return '[v] [sredo] [ob] LT';\n\
                case 6:\n\
                    return '[v] [soboto] [ob] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[v] dddd [ob] LT';\n\
                }\n\
            },\n\
            lastDay  : '[včeraj ob] LT',\n\
            lastWeek : function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                case 3:\n\
                case 6:\n\
                    return '[prejšnja] dddd [ob] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[prejšnji] dddd [ob] LT';\n\
                }\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"čez %s\",\n\
            past   : \"%s nazaj\",\n\
            s      : \"nekaj sekund\",\n\
            m      : translate,\n\
            mm     : translate,\n\
            h      : translate,\n\
            hh     : translate,\n\
            d      : \"en dan\",\n\
            dd     : translate,\n\
            M      : \"en mesec\",\n\
            MM     : translate,\n\
            y      : \"eno leto\",\n\
            yy     : translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/sl.js"
));
require.register("johntron-moment/locale/sq.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Albanian (sq)\n\
// author : Flakërim Ismani : https://github.com/flakerimi\n\
// author: Menelion Elensúle: https://github.com/Oire (tests)\n\
// author : Oerd Cukalla : https://github.com/oerd (fixes)\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('sq', {\n\
        months : \"Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor\".split(\"_\"),\n\
        monthsShort : \"Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj\".split(\"_\"),\n\
        weekdays : \"E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë\".split(\"_\"),\n\
        weekdaysShort : \"Die_Hën_Mar_Mër_Enj_Pre_Sht\".split(\"_\"),\n\
        weekdaysMin : \"D_H_Ma_Më_E_P_Sh\".split(\"_\"),\n\
        meridiem : function (hours, minutes, isLower) {\n\
            return hours < 12 ? 'PD' : 'MD';\n\
        },\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Sot në] LT',\n\
            nextDay : '[Nesër në] LT',\n\
            nextWeek : 'dddd [në] LT',\n\
            lastDay : '[Dje në] LT',\n\
            lastWeek : 'dddd [e kaluar në] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"në %s\",\n\
            past : \"%s më parë\",\n\
            s : \"disa sekonda\",\n\
            m : \"një minutë\",\n\
            mm : \"%d minuta\",\n\
            h : \"një orë\",\n\
            hh : \"%d orë\",\n\
            d : \"një ditë\",\n\
            dd : \"%d ditë\",\n\
            M : \"një muaj\",\n\
            MM : \"%d muaj\",\n\
            y : \"një vit\",\n\
            yy : \"%d vite\"\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/sq.js"
));
require.register("johntron-moment/locale/sr-cyrl.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Serbian-cyrillic (sr-cyrl)\n\
// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var translator = {\n\
        words: { //Different grammatical cases\n\
            m: ['један минут', 'једне минуте'],\n\
            mm: ['минут', 'минуте', 'минута'],\n\
            h: ['један сат', 'једног сата'],\n\
            hh: ['сат', 'сата', 'сати'],\n\
            dd: ['дан', 'дана', 'дана'],\n\
            MM: ['месец', 'месеца', 'месеци'],\n\
            yy: ['година', 'године', 'година']\n\
        },\n\
        correctGrammaticalCase: function (number, wordKey) {\n\
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n\
        },\n\
        translate: function (number, withoutSuffix, key) {\n\
            var wordKey = translator.words[key];\n\
            if (key.length === 1) {\n\
                return withoutSuffix ? wordKey[0] : wordKey[1];\n\
            } else {\n\
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n\
            }\n\
        }\n\
    };\n\
\n\
    return moment.defineLocale('sr-cyrl', {\n\
        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],\n\
        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],\n\
        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],\n\
        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],\n\
        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],\n\
        longDateFormat: {\n\
            LT: \"H:mm\",\n\
            L: \"DD. MM. YYYY\",\n\
            LL: \"D. MMMM YYYY\",\n\
            LLL: \"D. MMMM YYYY LT\",\n\
            LLLL: \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar: {\n\
            sameDay: '[данас у] LT',\n\
            nextDay: '[сутра у] LT',\n\
\n\
            nextWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[у] [недељу] [у] LT';\n\
                case 3:\n\
                    return '[у] [среду] [у] LT';\n\
                case 6:\n\
                    return '[у] [суботу] [у] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[у] dddd [у] LT';\n\
                }\n\
            },\n\
            lastDay  : '[јуче у] LT',\n\
            lastWeek : function () {\n\
                var lastWeekDays = [\n\
                    '[прошле] [недеље] [у] LT',\n\
                    '[прошлог] [понедељка] [у] LT',\n\
                    '[прошлог] [уторка] [у] LT',\n\
                    '[прошле] [среде] [у] LT',\n\
                    '[прошлог] [четвртка] [у] LT',\n\
                    '[прошлог] [петка] [у] LT',\n\
                    '[прошле] [суботе] [у] LT'\n\
                ];\n\
                return lastWeekDays[this.day()];\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"за %s\",\n\
            past   : \"пре %s\",\n\
            s      : \"неколико секунди\",\n\
            m      : translator.translate,\n\
            mm     : translator.translate,\n\
            h      : translator.translate,\n\
            hh     : translator.translate,\n\
            d      : \"дан\",\n\
            dd     : translator.translate,\n\
            M      : \"месец\",\n\
            MM     : translator.translate,\n\
            y      : \"годину\",\n\
            yy     : translator.translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/sr-cyrl.js"
));
require.register("johntron-moment/locale/sr.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Serbian-latin (sr)\n\
// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var translator = {\n\
        words: { //Different grammatical cases\n\
            m: ['jedan minut', 'jedne minute'],\n\
            mm: ['minut', 'minute', 'minuta'],\n\
            h: ['jedan sat', 'jednog sata'],\n\
            hh: ['sat', 'sata', 'sati'],\n\
            dd: ['dan', 'dana', 'dana'],\n\
            MM: ['mesec', 'meseca', 'meseci'],\n\
            yy: ['godina', 'godine', 'godina']\n\
        },\n\
        correctGrammaticalCase: function (number, wordKey) {\n\
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n\
        },\n\
        translate: function (number, withoutSuffix, key) {\n\
            var wordKey = translator.words[key];\n\
            if (key.length === 1) {\n\
                return withoutSuffix ? wordKey[0] : wordKey[1];\n\
            } else {\n\
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n\
            }\n\
        }\n\
    };\n\
\n\
    return moment.defineLocale('sr', {\n\
        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],\n\
        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],\n\
        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],\n\
        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],\n\
        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],\n\
        longDateFormat: {\n\
            LT: \"H:mm\",\n\
            L: \"DD. MM. YYYY\",\n\
            LL: \"D. MMMM YYYY\",\n\
            LLL: \"D. MMMM YYYY LT\",\n\
            LLLL: \"dddd, D. MMMM YYYY LT\"\n\
        },\n\
        calendar: {\n\
            sameDay: '[danas u] LT',\n\
            nextDay: '[sutra u] LT',\n\
\n\
            nextWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                    return '[u] [nedelju] [u] LT';\n\
                case 3:\n\
                    return '[u] [sredu] [u] LT';\n\
                case 6:\n\
                    return '[u] [subotu] [u] LT';\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                case 5:\n\
                    return '[u] dddd [u] LT';\n\
                }\n\
            },\n\
            lastDay  : '[juče u] LT',\n\
            lastWeek : function () {\n\
                var lastWeekDays = [\n\
                    '[prošle] [nedelje] [u] LT',\n\
                    '[prošlog] [ponedeljka] [u] LT',\n\
                    '[prošlog] [utorka] [u] LT',\n\
                    '[prošle] [srede] [u] LT',\n\
                    '[prošlog] [četvrtka] [u] LT',\n\
                    '[prošlog] [petka] [u] LT',\n\
                    '[prošle] [subote] [u] LT'\n\
                ];\n\
                return lastWeekDays[this.day()];\n\
            },\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"za %s\",\n\
            past   : \"pre %s\",\n\
            s      : \"nekoliko sekundi\",\n\
            m      : translator.translate,\n\
            mm     : translator.translate,\n\
            h      : translator.translate,\n\
            hh     : translator.translate,\n\
            d      : \"dan\",\n\
            dd     : translator.translate,\n\
            M      : \"mesec\",\n\
            MM     : translator.translate,\n\
            y      : \"godinu\",\n\
            yy     : translator.translate\n\
        },\n\
        ordinal : '%d.',\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/sr.js"
));
require.register("johntron-moment/locale/sv.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : swedish (sv)\n\
// author : Jens Alm : https://github.com/ulmus\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('sv', {\n\
        months : \"januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december\".split(\"_\"),\n\
        monthsShort : \"jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),\n\
        weekdays : \"söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag\".split(\"_\"),\n\
        weekdaysShort : \"sön_mån_tis_ons_tor_fre_lör\".split(\"_\"),\n\
        weekdaysMin : \"sö_må_ti_on_to_fr_lö\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"YYYY-MM-DD\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: '[Idag] LT',\n\
            nextDay: '[Imorgon] LT',\n\
            lastDay: '[Igår] LT',\n\
            nextWeek: 'dddd LT',\n\
            lastWeek: '[Förra] dddd[en] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"om %s\",\n\
            past : \"för %s sedan\",\n\
            s : \"några sekunder\",\n\
            m : \"en minut\",\n\
            mm : \"%d minuter\",\n\
            h : \"en timme\",\n\
            hh : \"%d timmar\",\n\
            d : \"en dag\",\n\
            dd : \"%d dagar\",\n\
            M : \"en månad\",\n\
            MM : \"%d månader\",\n\
            y : \"ett år\",\n\
            yy : \"%d år\"\n\
        },\n\
        ordinal : function (number) {\n\
            var b = number % 10,\n\
                output = (~~(number % 100 / 10) === 1) ? 'e' :\n\
                (b === 1) ? 'a' :\n\
                (b === 2) ? 'a' :\n\
                (b === 3) ? 'e' : 'e';\n\
            return number + output;\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/sv.js"
));
require.register("johntron-moment/locale/ta.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : tamil (ta)\n\
// author : Arjunkumar Krishnamoorthy : https://github.com/tk120404\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    /*var symbolMap = {\n\
            '1': '௧',\n\
            '2': '௨',\n\
            '3': '௩',\n\
            '4': '௪',\n\
            '5': '௫',\n\
            '6': '௬',\n\
            '7': '௭',\n\
            '8': '௮',\n\
            '9': '௯',\n\
            '0': '௦'\n\
        },\n\
        numberMap = {\n\
            '௧': '1',\n\
            '௨': '2',\n\
            '௩': '3',\n\
            '௪': '4',\n\
            '௫': '5',\n\
            '௬': '6',\n\
            '௭': '7',\n\
            '௮': '8',\n\
            '௯': '9',\n\
            '௦': '0'\n\
        }; */\n\
\n\
    return moment.defineLocale('ta', {\n\
        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(\"_\"),\n\
        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(\"_\"),\n\
        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(\"_\"),\n\
        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(\"_\"),\n\
        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY, LT\",\n\
            LLLL : \"dddd, D MMMM YYYY, LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[இன்று] LT',\n\
            nextDay : '[நாளை] LT',\n\
            nextWeek : 'dddd, LT',\n\
            lastDay : '[நேற்று] LT',\n\
            lastWeek : '[கடந்த வாரம்] dddd, LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s இல்\",\n\
            past : \"%s முன்\",\n\
            s : \"ஒரு சில விநாடிகள்\",\n\
            m : \"ஒரு நிமிடம்\",\n\
            mm : \"%d நிமிடங்கள்\",\n\
            h : \"ஒரு மணி நேரம்\",\n\
            hh : \"%d மணி நேரம்\",\n\
            d : \"ஒரு நாள்\",\n\
            dd : \"%d நாட்கள்\",\n\
            M : \"ஒரு மாதம்\",\n\
            MM : \"%d மாதங்கள்\",\n\
            y : \"ஒரு வருடம்\",\n\
            yy : \"%d ஆண்டுகள்\"\n\
        },\n\
/*        preparse: function (string) {\n\
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n\
                return numberMap[match];\n\
            });\n\
        },\n\
        postformat: function (string) {\n\
            return string.replace(/\\d/g, function (match) {\n\
                return symbolMap[match];\n\
            });\n\
        },*/\n\
        ordinal : function (number) {\n\
            return number + 'வது';\n\
        },\n\
\n\
\n\
        // refer http://ta.wikipedia.org/s/1er1\n\
\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour >= 6 && hour <= 10) {\n\
                return \" காலை\";\n\
            } else if (hour >= 10 && hour <= 14) {\n\
                return \" நண்பகல்\";\n\
            } else if (hour >= 14 && hour <= 18) {\n\
                return \" எற்பாடு\";\n\
            } else if (hour >= 18 && hour <= 20) {\n\
                return \" மாலை\";\n\
            } else if (hour >= 20 && hour <= 24) {\n\
                return \" இரவு\";\n\
            } else if (hour >= 0 && hour <= 6) {\n\
                return \" வைகறை\";\n\
            }\n\
        },\n\
        week : {\n\
            dow : 0, // Sunday is the first day of the week.\n\
            doy : 6  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/ta.js"
));
require.register("johntron-moment/locale/th.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : thai (th)\n\
// author : Kridsada Thanabulpong : https://github.com/sirn\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('th', {\n\
        months : \"มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม\".split(\"_\"),\n\
        monthsShort : \"มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา\".split(\"_\"),\n\
        weekdays : \"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์\".split(\"_\"),\n\
        weekdaysShort : \"อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์\".split(\"_\"), // yes, three characters difference\n\
        weekdaysMin : \"อา._จ._อ._พ._พฤ._ศ._ส.\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"H นาฬิกา m นาที\",\n\
            L : \"YYYY/MM/DD\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY เวลา LT\",\n\
            LLLL : \"วันddddที่ D MMMM YYYY เวลา LT\"\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 12) {\n\
                return \"ก่อนเที่ยง\";\n\
            } else {\n\
                return \"หลังเที่ยง\";\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[วันนี้ เวลา] LT',\n\
            nextDay : '[พรุ่งนี้ เวลา] LT',\n\
            nextWeek : 'dddd[หน้า เวลา] LT',\n\
            lastDay : '[เมื่อวานนี้ เวลา] LT',\n\
            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"อีก %s\",\n\
            past : \"%sที่แล้ว\",\n\
            s : \"ไม่กี่วินาที\",\n\
            m : \"1 นาที\",\n\
            mm : \"%d นาที\",\n\
            h : \"1 ชั่วโมง\",\n\
            hh : \"%d ชั่วโมง\",\n\
            d : \"1 วัน\",\n\
            dd : \"%d วัน\",\n\
            M : \"1 เดือน\",\n\
            MM : \"%d เดือน\",\n\
            y : \"1 ปี\",\n\
            yy : \"%d ปี\"\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/th.js"
));
require.register("johntron-moment/locale/tl-ph.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Tagalog/Filipino (tl-ph)\n\
// author : Dan Hagman\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('tl-ph', {\n\
        months : \"Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre\".split(\"_\"),\n\
        monthsShort : \"Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis\".split(\"_\"),\n\
        weekdays : \"Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado\".split(\"_\"),\n\
        weekdaysShort : \"Lin_Lun_Mar_Miy_Huw_Biy_Sab\".split(\"_\"),\n\
        weekdaysMin : \"Li_Lu_Ma_Mi_Hu_Bi_Sab\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"MM/D/YYYY\",\n\
            LL : \"MMMM D, YYYY\",\n\
            LLL : \"MMMM D, YYYY LT\",\n\
            LLLL : \"dddd, MMMM DD, YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[Ngayon sa] LT\",\n\
            nextDay: '[Bukas sa] LT',\n\
            nextWeek: 'dddd [sa] LT',\n\
            lastDay: '[Kahapon sa] LT',\n\
            lastWeek: 'dddd [huling linggo] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"sa loob ng %s\",\n\
            past : \"%s ang nakalipas\",\n\
            s : \"ilang segundo\",\n\
            m : \"isang minuto\",\n\
            mm : \"%d minuto\",\n\
            h : \"isang oras\",\n\
            hh : \"%d oras\",\n\
            d : \"isang araw\",\n\
            dd : \"%d araw\",\n\
            M : \"isang buwan\",\n\
            MM : \"%d buwan\",\n\
            y : \"isang taon\",\n\
            yy : \"%d taon\"\n\
        },\n\
        ordinal : function (number) {\n\
            return number;\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/tl-ph.js"
));
require.register("johntron-moment/locale/tr.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : turkish (tr)\n\
// authors : Erhan Gundogan : https://github.com/erhangundogan,\n\
//           Burak Yiğit Kaya: https://github.com/BYK\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    var suffixes = {\n\
        1: \"'inci\",\n\
        5: \"'inci\",\n\
        8: \"'inci\",\n\
        70: \"'inci\",\n\
        80: \"'inci\",\n\
\n\
        2: \"'nci\",\n\
        7: \"'nci\",\n\
        20: \"'nci\",\n\
        50: \"'nci\",\n\
\n\
        3: \"'üncü\",\n\
        4: \"'üncü\",\n\
        100: \"'üncü\",\n\
\n\
        6: \"'ncı\",\n\
\n\
        9: \"'uncu\",\n\
        10: \"'uncu\",\n\
        30: \"'uncu\",\n\
\n\
        60: \"'ıncı\",\n\
        90: \"'ıncı\"\n\
    };\n\
\n\
    return moment.defineLocale('tr', {\n\
        months : \"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık\".split(\"_\"),\n\
        monthsShort : \"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara\".split(\"_\"),\n\
        weekdays : \"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi\".split(\"_\"),\n\
        weekdaysShort : \"Paz_Pts_Sal_Çar_Per_Cum_Cts\".split(\"_\"),\n\
        weekdaysMin : \"Pz_Pt_Sa_Ça_Pe_Cu_Ct\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd, D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[bugün saat] LT',\n\
            nextDay : '[yarın saat] LT',\n\
            nextWeek : '[haftaya] dddd [saat] LT',\n\
            lastDay : '[dün] LT',\n\
            lastWeek : '[geçen hafta] dddd [saat] LT',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s sonra\",\n\
            past : \"%s önce\",\n\
            s : \"birkaç saniye\",\n\
            m : \"bir dakika\",\n\
            mm : \"%d dakika\",\n\
            h : \"bir saat\",\n\
            hh : \"%d saat\",\n\
            d : \"bir gün\",\n\
            dd : \"%d gün\",\n\
            M : \"bir ay\",\n\
            MM : \"%d ay\",\n\
            y : \"bir yıl\",\n\
            yy : \"%d yıl\"\n\
        },\n\
        ordinal : function (number) {\n\
            if (number === 0) {  // special case for zero\n\
                return number + \"'ıncı\";\n\
            }\n\
            var a = number % 10,\n\
                b = number % 100 - a,\n\
                c = number >= 100 ? 100 : null;\n\
\n\
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/tr.js"
));
require.register("johntron-moment/locale/tzm-latn.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)\n\
// author : Abdel Said : https://github.com/abdelsaid\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('tzm-latn', {\n\
        months : \"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir\".split(\"_\"),\n\
        monthsShort : \"innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir\".split(\"_\"),\n\
        weekdays : \"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),\n\
        weekdaysShort : \"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),\n\
        weekdaysMin : \"asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[asdkh g] LT\",\n\
            nextDay: '[aska g] LT',\n\
            nextWeek: 'dddd [g] LT',\n\
            lastDay: '[assant g] LT',\n\
            lastWeek: 'dddd [g] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"dadkh s yan %s\",\n\
            past : \"yan %s\",\n\
            s : \"imik\",\n\
            m : \"minuḍ\",\n\
            mm : \"%d minuḍ\",\n\
            h : \"saɛa\",\n\
            hh : \"%d tassaɛin\",\n\
            d : \"ass\",\n\
            dd : \"%d ossan\",\n\
            M : \"ayowr\",\n\
            MM : \"%d iyyirn\",\n\
            y : \"asgas\",\n\
            yy : \"%d isgasn\"\n\
        },\n\
        week : {\n\
            dow : 6, // Saturday is the first day of the week.\n\
            doy : 12  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/tzm-latn.js"
));
require.register("johntron-moment/locale/tzm.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : Morocco Central Atlas Tamaziɣt (tzm)\n\
// author : Abdel Said : https://github.com/abdelsaid\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('tzm', {\n\
        months : \"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ\".split(\"_\"),\n\
        monthsShort : \"ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ\".split(\"_\"),\n\
        weekdays : \"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),\n\
        weekdaysShort : \"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),\n\
        weekdaysMin : \"ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"dddd D MMMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[ⴰⵙⴷⵅ ⴴ] LT\",\n\
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n\
            nextWeek: 'dddd [ⴴ] LT',\n\
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n\
            lastWeek: 'dddd [ⴴ] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s\",\n\
            past : \"ⵢⴰⵏ %s\",\n\
            s : \"ⵉⵎⵉⴽ\",\n\
            m : \"ⵎⵉⵏⵓⴺ\",\n\
            mm : \"%d ⵎⵉⵏⵓⴺ\",\n\
            h : \"ⵙⴰⵄⴰ\",\n\
            hh : \"%d ⵜⴰⵙⵙⴰⵄⵉⵏ\",\n\
            d : \"ⴰⵙⵙ\",\n\
            dd : \"%d oⵙⵙⴰⵏ\",\n\
            M : \"ⴰⵢoⵓⵔ\",\n\
            MM : \"%d ⵉⵢⵢⵉⵔⵏ\",\n\
            y : \"ⴰⵙⴳⴰⵙ\",\n\
            yy : \"%d ⵉⵙⴳⴰⵙⵏ\"\n\
        },\n\
        week : {\n\
            dow : 6, // Saturday is the first day of the week.\n\
            doy : 12  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/tzm.js"
));
require.register("johntron-moment/locale/uk.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : ukrainian (uk)\n\
// author : zemlanin : https://github.com/zemlanin\n\
// Author : Menelion Elensúle : https://github.com/Oire\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    function plural(word, num) {\n\
        var forms = word.split('_');\n\
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n\
    }\n\
\n\
    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\
        var format = {\n\
            'mm': 'хвилина_хвилини_хвилин',\n\
            'hh': 'година_години_годин',\n\
            'dd': 'день_дні_днів',\n\
            'MM': 'місяць_місяці_місяців',\n\
            'yy': 'рік_роки_років'\n\
        };\n\
        if (key === 'm') {\n\
            return withoutSuffix ? 'хвилина' : 'хвилину';\n\
        }\n\
        else if (key === 'h') {\n\
            return withoutSuffix ? 'година' : 'годину';\n\
        }\n\
        else {\n\
            return number + ' ' + plural(format[key], +number);\n\
        }\n\
    }\n\
\n\
    function monthsCaseReplace(m, format) {\n\
        var months = {\n\
            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),\n\
            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')\n\
        },\n\
\n\
        nounCase = (/D[oD]? *MMMM?/).test(format) ?\n\
            'accusative' :\n\
            'nominative';\n\
\n\
        return months[nounCase][m.month()];\n\
    }\n\
\n\
    function weekdaysCaseReplace(m, format) {\n\
        var weekdays = {\n\
            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n\
            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n\
            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n\
        },\n\
\n\
        nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n\
            'accusative' :\n\
            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n\
                'genitive' :\n\
                'nominative');\n\
\n\
        return weekdays[nounCase][m.day()];\n\
    }\n\
\n\
    function processHoursFunction(str) {\n\
        return function () {\n\
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n\
        };\n\
    }\n\
\n\
    return moment.defineLocale('uk', {\n\
        months : monthsCaseReplace,\n\
        monthsShort : \"січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд\".split(\"_\"),\n\
        weekdays : weekdaysCaseReplace,\n\
        weekdaysShort : \"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),\n\
        weekdaysMin : \"нд_пн_вт_ср_чт_пт_сб\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD.MM.YYYY\",\n\
            LL : \"D MMMM YYYY р.\",\n\
            LLL : \"D MMMM YYYY р., LT\",\n\
            LLLL : \"dddd, D MMMM YYYY р., LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: processHoursFunction('[Сьогодні '),\n\
            nextDay: processHoursFunction('[Завтра '),\n\
            lastDay: processHoursFunction('[Вчора '),\n\
            nextWeek: processHoursFunction('[У] dddd ['),\n\
            lastWeek: function () {\n\
                switch (this.day()) {\n\
                case 0:\n\
                case 3:\n\
                case 5:\n\
                case 6:\n\
                    return processHoursFunction('[Минулої] dddd [').call(this);\n\
                case 1:\n\
                case 2:\n\
                case 4:\n\
                    return processHoursFunction('[Минулого] dddd [').call(this);\n\
                }\n\
            },\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"за %s\",\n\
            past : \"%s тому\",\n\
            s : \"декілька секунд\",\n\
            m : relativeTimeWithPlural,\n\
            mm : relativeTimeWithPlural,\n\
            h : \"годину\",\n\
            hh : relativeTimeWithPlural,\n\
            d : \"день\",\n\
            dd : relativeTimeWithPlural,\n\
            M : \"місяць\",\n\
            MM : relativeTimeWithPlural,\n\
            y : \"рік\",\n\
            yy : relativeTimeWithPlural\n\
        },\n\
\n\
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n\
\n\
        meridiem : function (hour, minute, isLower) {\n\
            if (hour < 4) {\n\
                return \"ночі\";\n\
            } else if (hour < 12) {\n\
                return \"ранку\";\n\
            } else if (hour < 17) {\n\
                return \"дня\";\n\
            } else {\n\
                return \"вечора\";\n\
            }\n\
        },\n\
\n\
        ordinal: function (number, period) {\n\
            switch (period) {\n\
            case 'M':\n\
            case 'd':\n\
            case 'DDD':\n\
            case 'w':\n\
            case 'W':\n\
                return number + '-й';\n\
            case 'D':\n\
                return number + '-го';\n\
            default:\n\
                return number;\n\
            }\n\
        },\n\
\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 1st is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/uk.js"
));
require.register("johntron-moment/locale/uz.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : uzbek\n\
// author : Sardor Muminov : https://github.com/muminoff\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('uz', {\n\
        months : \"январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь\".split(\"_\"),\n\
        monthsShort : \"янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек\".split(\"_\"),\n\
        weekdays : \"Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба\".split(\"_\"),\n\
        weekdaysShort : \"Якш_Душ_Сеш_Чор_Пай_Жум_Шан\".split(\"_\"),\n\
        weekdaysMin : \"Як_Ду_Се_Чо_Па_Жу_Ша\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM YYYY\",\n\
            LLL : \"D MMMM YYYY LT\",\n\
            LLLL : \"D MMMM YYYY, dddd LT\"\n\
        },\n\
        calendar : {\n\
            sameDay : '[Бугун соат] LT [да]',\n\
            nextDay : '[Эртага] LT [да]',\n\
            nextWeek : 'dddd [куни соат] LT [да]',\n\
            lastDay : '[Кеча соат] LT [да]',\n\
            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n\
            sameElse : 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"Якин %s ичида\",\n\
            past : \"Бир неча %s олдин\",\n\
            s : \"фурсат\",\n\
            m : \"бир дакика\",\n\
            mm : \"%d дакика\",\n\
            h : \"бир соат\",\n\
            hh : \"%d соат\",\n\
            d : \"бир кун\",\n\
            dd : \"%d кун\",\n\
            M : \"бир ой\",\n\
            MM : \"%d ой\",\n\
            y : \"бир йил\",\n\
            yy : \"%d йил\"\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 7  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/uz.js"
));
require.register("johntron-moment/locale/vi.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : vietnamese (vi)\n\
// author : Bang Nguyen : https://github.com/bangnk\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('vi', {\n\
        months : \"tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12\".split(\"_\"),\n\
        monthsShort : \"Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12\".split(\"_\"),\n\
        weekdays : \"chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy\".split(\"_\"),\n\
        weekdaysShort : \"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),\n\
        weekdaysMin : \"CN_T2_T3_T4_T5_T6_T7\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"HH:mm\",\n\
            L : \"DD/MM/YYYY\",\n\
            LL : \"D MMMM [năm] YYYY\",\n\
            LLL : \"D MMMM [năm] YYYY LT\",\n\
            LLLL : \"dddd, D MMMM [năm] YYYY LT\",\n\
            l : \"DD/M/YYYY\",\n\
            ll : \"D MMM YYYY\",\n\
            lll : \"D MMM YYYY LT\",\n\
            llll : \"ddd, D MMM YYYY LT\"\n\
        },\n\
        calendar : {\n\
            sameDay: \"[Hôm nay lúc] LT\",\n\
            nextDay: '[Ngày mai lúc] LT',\n\
            nextWeek: 'dddd [tuần tới lúc] LT',\n\
            lastDay: '[Hôm qua lúc] LT',\n\
            lastWeek: 'dddd [tuần rồi lúc] LT',\n\
            sameElse: 'L'\n\
        },\n\
        relativeTime : {\n\
            future : \"%s tới\",\n\
            past : \"%s trước\",\n\
            s : \"vài giây\",\n\
            m : \"một phút\",\n\
            mm : \"%d phút\",\n\
            h : \"một giờ\",\n\
            hh : \"%d giờ\",\n\
            d : \"một ngày\",\n\
            dd : \"%d ngày\",\n\
            M : \"một tháng\",\n\
            MM : \"%d tháng\",\n\
            y : \"một năm\",\n\
            yy : \"%d năm\"\n\
        },\n\
        ordinal : function (number) {\n\
            return number;\n\
        },\n\
        week : {\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/vi.js"
));
require.register("johntron-moment/locale/zh-cn.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : chinese\n\
// author : suupic : https://github.com/suupic\n\
// author : Zeno Zeng : https://github.com/zenozeng\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('zh-cn', {\n\
        months : \"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),\n\
        monthsShort : \"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),\n\
        weekdays : \"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),\n\
        weekdaysShort : \"周日_周一_周二_周三_周四_周五_周六\".split(\"_\"),\n\
        weekdaysMin : \"日_一_二_三_四_五_六\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"Ah点mm\",\n\
            L : \"YYYY-MM-DD\",\n\
            LL : \"YYYY年MMMD日\",\n\
            LLL : \"YYYY年MMMD日LT\",\n\
            LLLL : \"YYYY年MMMD日ddddLT\",\n\
            l : \"YYYY-MM-DD\",\n\
            ll : \"YYYY年MMMD日\",\n\
            lll : \"YYYY年MMMD日LT\",\n\
            llll : \"YYYY年MMMD日ddddLT\"\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            var hm = hour * 100 + minute;\n\
            if (hm < 600) {\n\
                return \"凌晨\";\n\
            } else if (hm < 900) {\n\
                return \"早上\";\n\
            } else if (hm < 1130) {\n\
                return \"上午\";\n\
            } else if (hm < 1230) {\n\
                return \"中午\";\n\
            } else if (hm < 1800) {\n\
                return \"下午\";\n\
            } else {\n\
                return \"晚上\";\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : function () {\n\
                return this.minutes() === 0 ? \"[今天]Ah[点整]\" : \"[今天]LT\";\n\
            },\n\
            nextDay : function () {\n\
                return this.minutes() === 0 ? \"[明天]Ah[点整]\" : \"[明天]LT\";\n\
            },\n\
            lastDay : function () {\n\
                return this.minutes() === 0 ? \"[昨天]Ah[点整]\" : \"[昨天]LT\";\n\
            },\n\
            nextWeek : function () {\n\
                var startOfWeek, prefix;\n\
                startOfWeek = moment().startOf('week');\n\
                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';\n\
                return this.minutes() === 0 ? prefix + \"dddAh点整\" : prefix + \"dddAh点mm\";\n\
            },\n\
            lastWeek : function () {\n\
                var startOfWeek, prefix;\n\
                startOfWeek = moment().startOf('week');\n\
                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';\n\
                return this.minutes() === 0 ? prefix + \"dddAh点整\" : prefix + \"dddAh点mm\";\n\
            },\n\
            sameElse : 'LL'\n\
        },\n\
        ordinal : function (number, period) {\n\
            switch (period) {\n\
            case \"d\":\n\
            case \"D\":\n\
            case \"DDD\":\n\
                return number + \"日\";\n\
            case \"M\":\n\
                return number + \"月\";\n\
            case \"w\":\n\
            case \"W\":\n\
                return number + \"周\";\n\
            default:\n\
                return number;\n\
            }\n\
        },\n\
        relativeTime : {\n\
            future : \"%s内\",\n\
            past : \"%s前\",\n\
            s : \"几秒\",\n\
            m : \"1分钟\",\n\
            mm : \"%d分钟\",\n\
            h : \"1小时\",\n\
            hh : \"%d小时\",\n\
            d : \"1天\",\n\
            dd : \"%d天\",\n\
            M : \"1个月\",\n\
            MM : \"%d个月\",\n\
            y : \"1年\",\n\
            yy : \"%d年\"\n\
        },\n\
        week : {\n\
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n\
            dow : 1, // Monday is the first day of the week.\n\
            doy : 4  // The week that contains Jan 4th is the first week of the year.\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/zh-cn.js"
));
require.register("johntron-moment/locale/zh-tw.js", Function("exports, require, module",
"// moment.js locale configuration\n\
// locale : traditional chinese (zh-tw)\n\
// author : Ben : https://github.com/ben-lin\n\
\n\
(function (factory) {\n\
    if (typeof define === 'function' && define.amd) {\n\
        define(['moment'], factory); // AMD\n\
    } else if (typeof exports === 'object') {\n\
        module.exports = factory(require('../moment')); // Node\n\
    } else {\n\
        factory(window.moment); // Browser global\n\
    }\n\
}(function (moment) {\n\
    return moment.defineLocale('zh-tw', {\n\
        months : \"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月\".split(\"_\"),\n\
        monthsShort : \"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月\".split(\"_\"),\n\
        weekdays : \"星期日_星期一_星期二_星期三_星期四_星期五_星期六\".split(\"_\"),\n\
        weekdaysShort : \"週日_週一_週二_週三_週四_週五_週六\".split(\"_\"),\n\
        weekdaysMin : \"日_一_二_三_四_五_六\".split(\"_\"),\n\
        longDateFormat : {\n\
            LT : \"Ah點mm\",\n\
            L : \"YYYY年MMMD日\",\n\
            LL : \"YYYY年MMMD日\",\n\
            LLL : \"YYYY年MMMD日LT\",\n\
            LLLL : \"YYYY年MMMD日ddddLT\",\n\
            l : \"YYYY年MMMD日\",\n\
            ll : \"YYYY年MMMD日\",\n\
            lll : \"YYYY年MMMD日LT\",\n\
            llll : \"YYYY年MMMD日ddddLT\"\n\
        },\n\
        meridiem : function (hour, minute, isLower) {\n\
            var hm = hour * 100 + minute;\n\
            if (hm < 900) {\n\
                return \"早上\";\n\
            } else if (hm < 1130) {\n\
                return \"上午\";\n\
            } else if (hm < 1230) {\n\
                return \"中午\";\n\
            } else if (hm < 1800) {\n\
                return \"下午\";\n\
            } else {\n\
                return \"晚上\";\n\
            }\n\
        },\n\
        calendar : {\n\
            sameDay : '[今天]LT',\n\
            nextDay : '[明天]LT',\n\
            nextWeek : '[下]ddddLT',\n\
            lastDay : '[昨天]LT',\n\
            lastWeek : '[上]ddddLT',\n\
            sameElse : 'L'\n\
        },\n\
        ordinal : function (number, period) {\n\
            switch (period) {\n\
            case \"d\" :\n\
            case \"D\" :\n\
            case \"DDD\" :\n\
                return number + \"日\";\n\
            case \"M\" :\n\
                return number + \"月\";\n\
            case \"w\" :\n\
            case \"W\" :\n\
                return number + \"週\";\n\
            default :\n\
                return number;\n\
            }\n\
        },\n\
        relativeTime : {\n\
            future : \"%s內\",\n\
            past : \"%s前\",\n\
            s : \"幾秒\",\n\
            m : \"一分鐘\",\n\
            mm : \"%d分鐘\",\n\
            h : \"一小時\",\n\
            hh : \"%d小時\",\n\
            d : \"一天\",\n\
            dd : \"%d天\",\n\
            M : \"一個月\",\n\
            MM : \"%d個月\",\n\
            y : \"一年\",\n\
            yy : \"%d年\"\n\
        }\n\
    });\n\
}));\n\
//@ sourceURL=johntron-moment/locale/zh-tw.js"
));
require.register("johntron-moment-timezone/index.js", Function("exports, require, module",
"var moment = module.exports = require(\"./moment-timezone\");\n\
moment.tz.load(require('./data/packed/latest.json'));\n\
//@ sourceURL=johntron-moment-timezone/index.js"
));
require.register("johntron-moment-timezone/moment-timezone.js", Function("exports, require, module",
"//! moment-timezone.js\n\
//! version : 0.2.0\n\
//! author : Tim Wood\n\
//! license : MIT\n\
//! github.com/moment/moment-timezone\n\
\n\
(function (root, factory) {\n\
\t\"use strict\";\n\
\n\
\t/*global define*/\n\
\tif (typeof define === 'function' && define.amd) {\n\
\t\tdefine(['moment'], factory);                 // AMD\n\
\t} else if (typeof exports === 'object') {\n\
\t\tmodule.exports = factory(require('moment')); // Node\n\
\t} else {\n\
\t\tfactory(root.moment);                        // Browser\n\
\t}\n\
}(this, function (moment) {\n\
\t\"use strict\";\n\
\n\
\t// Do not load moment-timezone a second time.\n\
\tif (moment.tz !== undefined) { return moment; }\n\
\n\
\tvar VERSION = \"0.2.0\",\n\
\t\tzones = {},\n\
\t\tlinks = {};\n\
\n\
\t/************************************\n\
\t\tUnpacking\n\
\t************************************/\n\
\n\
\tfunction charCodeToInt(charCode) {\n\
\t\tif (charCode > 96) {\n\
\t\t\treturn charCode - 87;\n\
\t\t} else if (charCode > 64) {\n\
\t\t\treturn charCode - 29;\n\
\t\t}\n\
\t\treturn charCode - 48;\n\
\t}\n\
\n\
\tfunction unpackBase60(string) {\n\
\t\tvar i = 0,\n\
\t\t\tparts = string.split('.'),\n\
\t\t\twhole = parts[0],\n\
\t\t\tfractional = parts[1] || '',\n\
\t\t\tmultiplier = 1,\n\
\t\t\tnum,\n\
\t\t\tout = 0,\n\
\t\t\tsign = 1;\n\
\n\
\t\t// handle negative numbers\n\
\t\tif (string.charCodeAt(0) === 45) {\n\
\t\t\ti = 1;\n\
\t\t\tsign = -1;\n\
\t\t}\n\
\n\
\t\t// handle digits before the decimal\n\
\t\tfor (i; i < whole.length; i++) {\n\
\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\
\t\t\tout = 60 * out + num;\n\
\t\t}\n\
\n\
\t\t// handle digits after the decimal\n\
\t\tfor (i = 0; i < fractional.length; i++) {\n\
\t\t\tmultiplier = multiplier / 60;\n\
\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\
\t\t\tout += num * multiplier;\n\
\t\t}\n\
\n\
\t\treturn out * sign;\n\
\t}\n\
\n\
\tfunction arrayToInt (array) {\n\
\t\tfor (var i = 0; i < array.length; i++) {\n\
\t\t\tarray[i] = unpackBase60(array[i]);\n\
\t\t}\n\
\t}\n\
\n\
\tfunction intToUntil (array, length) {\n\
\t\tfor (var i = 0; i < length; i++) {\n\
\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\
\t\t}\n\
\n\
\t\tarray[length - 1] = Infinity;\n\
\t}\n\
\n\
\tfunction mapIndices (source, indices) {\n\
\t\tvar out = [], i;\n\
\n\
\t\tfor (i = 0; i < indices.length; i++) {\n\
\t\t\tout[i] = source[indices[i]];\n\
\t\t}\n\
\n\
\t\treturn out;\n\
\t}\n\
\n\
\tfunction unpack (string) {\n\
\t\tvar data = string.split('|'),\n\
\t\t\toffsets = data[2].split(' '),\n\
\t\t\tindices = data[3].split(''),\n\
\t\t\tuntils  = data[4].split(' ');\n\
\n\
\t\tarrayToInt(offsets);\n\
\t\tarrayToInt(indices);\n\
\t\tarrayToInt(untils);\n\
\n\
\t\tintToUntil(untils, indices.length);\n\
\n\
\t\treturn {\n\
\t\t\tname    : data[0],\n\
\t\t\tabbrs   : mapIndices(data[1].split(' '), indices),\n\
\t\t\toffsets : mapIndices(offsets, indices),\n\
\t\t\tuntils  : untils\n\
\t\t};\n\
\t}\n\
\n\
\t/************************************\n\
\t\tZone object\n\
\t************************************/\n\
\n\
\tfunction Zone (packedString) {\n\
\t\tif (packedString) {\n\
\t\t\tthis._set(unpack(packedString));\n\
\t\t}\n\
\t}\n\
\n\
\tZone.prototype = {\n\
\t\t_set : function (unpacked) {\n\
\t\t\tthis.name    = unpacked.name;\n\
\t\t\tthis.abbrs   = unpacked.abbrs;\n\
\t\t\tthis.untils  = unpacked.untils;\n\
\t\t\tthis.offsets = unpacked.offsets;\n\
\t\t},\n\
\n\
\t\t_index : function (timestamp) {\n\
\t\t\tvar target = +timestamp,\n\
\t\t\t\tuntils = this.untils,\n\
\t\t\t\ti;\n\
\n\
\t\t\tfor (i = 0; i < untils.length; i++) {\n\
\t\t\t\tif (target < untils[i]) {\n\
\t\t\t\t\treturn i;\n\
\t\t\t\t}\n\
\t\t\t}\n\
\t\t},\n\
\n\
\t\tparse : function (timestamp) {\n\
\t\t\tvar target  = +timestamp,\n\
\t\t\t\toffsets = this.offsets,\n\
\t\t\t\tuntils  = this.untils,\n\
\t\t\t\tmax     = untils.length - 1,\n\
\t\t\t\toffset, offsetNext, offsetPrev, i;\n\
\n\
\t\t\tfor (i = 0; i < max; i++) {\n\
\t\t\t\toffset     = offsets[i];\n\
\t\t\t\toffsetNext = offsets[i + 1];\n\
\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\
\n\
\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\
\t\t\t\t\toffset = offsetNext;\n\
\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\
\t\t\t\t\toffset = offsetPrev;\n\
\t\t\t\t}\n\
\n\
\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\
\t\t\t\t\treturn offsets[i];\n\
\t\t\t\t}\n\
\t\t\t}\n\
\n\
\t\t\treturn offsets[max];\n\
\t\t},\n\
\n\
\t\tabbr : function (mom) {\n\
\t\t\treturn this.abbrs[this._index(mom)];\n\
\t\t},\n\
\n\
\t\toffset : function (mom) {\n\
\t\t\treturn this.offsets[this._index(mom)];\n\
\t\t}\n\
\t};\n\
\n\
\t/************************************\n\
\t\tGlobal Methods\n\
\t************************************/\n\
\n\
\tfunction normalizeName (name) {\n\
\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\
\t}\n\
\n\
\tfunction addZone (packed) {\n\
\t\tvar i, zone, zoneName;\n\
\n\
\t\tif (typeof packed === \"string\") {\n\
\t\t\tpacked = [packed];\n\
\t\t}\n\
\n\
\t\tfor (i = 0; i < packed.length; i++) {\n\
\t\t\tzone = new Zone(packed[i]);\n\
\t\t\tzoneName = normalizeName(zone.name);\n\
\t\t\tzones[zoneName] = zone;\n\
\t\t\tupgradeLinksToZones(zoneName);\n\
\t\t}\n\
\t}\n\
\n\
\tfunction getZone (name) {\n\
\t\treturn zones[normalizeName(name)] || null;\n\
\t}\n\
\n\
\tfunction getNames () {\n\
\t\tvar i, out = [];\n\
\n\
\t\tfor (i in zones) {\n\
\t\t\tif (zones.hasOwnProperty(i) && zones[i]) {\n\
\t\t\t\tout.push(zones[i].name);\n\
\t\t\t}\n\
\t\t}\n\
\n\
\t\treturn out.sort();\n\
\t}\n\
\n\
\tfunction addLink (aliases) {\n\
\t\tvar i, alias;\n\
\n\
\t\tif (typeof aliases === \"string\") {\n\
\t\t\taliases = [aliases];\n\
\t\t}\n\
\n\
\t\tfor (i = 0; i < aliases.length; i++) {\n\
\t\t\talias = aliases[i].split('|');\n\
\t\t\tpushLink(alias[0], alias[1]);\n\
\t\t\tpushLink(alias[1], alias[0]);\n\
\t\t}\n\
\t}\n\
\n\
\tfunction upgradeLinksToZones (zoneName) {\n\
\t\tif (!links[zoneName]) {\n\
\t\t\treturn;\n\
\t\t}\n\
\n\
\t\tvar i,\n\
\t\t\tzone = zones[zoneName],\n\
\t\t\tlinkNames = links[zoneName];\n\
\n\
\t\tfor (i = 0; i < linkNames.length; i++) {\n\
\t\t\tcopyZoneWithName(zone, linkNames[i]);\n\
\t\t}\n\
\n\
\t\tlinks[zoneName] = null;\n\
\t}\n\
\n\
\tfunction copyZoneWithName (zone, name) {\n\
\t\tvar linkZone = zones[normalizeName(name)] = new Zone();\n\
\t\tlinkZone._set(zone);\n\
\t\tlinkZone.name = name;\n\
\t}\n\
\n\
\tfunction pushLink (zoneName, linkName) {\n\
\t\tzoneName = normalizeName(zoneName);\n\
\n\
\t\tif (zones[zoneName]) {\n\
\t\t\tcopyZoneWithName(zones[zoneName], linkName);\n\
\t\t} else {\n\
\t\t\tlinks[zoneName] = links[zoneName] || [];\n\
\t\t\tlinks[zoneName].push(linkName);\n\
\t\t}\n\
\t}\n\
\n\
\tfunction loadData (data) {\n\
\t\taddZone(data.zones);\n\
\t\taddLink(data.links);\n\
\t\ttz.dataVersion = data.version;\n\
\t}\n\
\n\
\tfunction zoneExists (name) {\n\
\t\tif (!zoneExists.didShowError) {\n\
\t\t\tzoneExists.didShowError = true;\n\
\t\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\
\t\t\t\tconsole.error(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\
\t\t\t}\n\
\t\t}\n\
\t\treturn !!getZone(name);\n\
\t}\n\
\n\
\tfunction needsOffset (m) {\n\
\t\treturn !!(m._a && (m._tzm === undefined));\n\
\t}\n\
\n\
\tfunction logError (message) {\n\
\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\
\t\t\tconsole.error(message);\n\
\t\t}\n\
\t}\n\
\n\
\t/************************************\n\
\t\tmoment.tz namespace\n\
\t************************************/\n\
\n\
\tfunction tz () {\n\
\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\
\t\t\tname = arguments[arguments.length - 1],\n\
\t\t\tzone = getZone(name),\n\
\t\t\tout  = moment.utc.apply(null, args);\n\
\n\
\t\tif (zone && needsOffset(out)) {\n\
\t\t\tout.add('minutes', zone.parse(out));\n\
\t\t}\n\
\n\
\t\tout.tz(name);\n\
\n\
\t\treturn out;\n\
\t}\n\
\n\
\ttz.version      = VERSION;\n\
\ttz.dataVersion  = '';\n\
\ttz._zones       = zones;\n\
\ttz._links       = links;\n\
\ttz.add          = addZone;\n\
\ttz.link         = addLink;\n\
\ttz.load         = loadData;\n\
\ttz.zone         = getZone;\n\
\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\
\ttz.names        = getNames;\n\
\ttz.Zone         = Zone;\n\
\ttz.unpack       = unpack;\n\
\ttz.unpackBase60 = unpackBase60;\n\
\ttz.needsOffset  = needsOffset;\n\
\ttz.moveInvalidForward   = true;\n\
\ttz.moveAmbiguousForward = false;\n\
\n\
\t/************************************\n\
\t\tInterface with Moment.js\n\
\t************************************/\n\
\n\
\tvar fn = moment.fn;\n\
\n\
\tmoment.tz = tz;\n\
\n\
\tmoment.updateOffset = function (mom, keepTime) {\n\
\t\tvar offset;\n\
\t\tif (mom._z) {\n\
\t\t\toffset = mom._z.offset(mom);\n\
\t\t\tif (Math.abs(offset) < 16) {\n\
\t\t\t\toffset = offset / 60;\n\
\t\t\t}\n\
\t\t\tmom.zone(offset, keepTime);\n\
\t\t}\n\
\t};\n\
\n\
\tfn.tz = function (name) {\n\
\t\tif (name) {\n\
\t\t\tthis._z = getZone(name);\n\
\t\t\tif (this._z) {\n\
\t\t\t\tmoment.updateOffset(this);\n\
\t\t\t} else {\n\
\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\
\t\t\t}\n\
\t\t\treturn this;\n\
\t\t}\n\
\t\tif (this._z) { return this._z.name; }\n\
\t};\n\
\n\
\tfunction abbrWrap (old) {\n\
\t\treturn function () {\n\
\t\t\tif (this._z) { return this._z.abbr(this); }\n\
\t\t\treturn old.call(this);\n\
\t\t};\n\
\t}\n\
\n\
\tfunction resetZoneWrap (old) {\n\
\t\treturn function () {\n\
\t\t\tthis._z = null;\n\
\t\t\treturn old.call(this);\n\
\t\t};\n\
\t}\n\
\n\
\tfn.zoneName = abbrWrap(fn.zoneName);\n\
\tfn.zoneAbbr = abbrWrap(fn.zoneAbbr);\n\
\tfn.utc      = resetZoneWrap(fn.utc);\n\
\n\
\t// Cloning a moment should include the _z property.\n\
\tmoment.momentProperties._z = null;\n\
\n\
\t// INJECT DATA\n\
\n\
\treturn moment;\n\
}));\n\
//@ sourceURL=johntron-moment-timezone/moment-timezone.js"
));
require.register("jashkenas-underscore/underscore.js", Function("exports, require, module",
"//     Underscore.js 1.6.0\n\
//     http://underscorejs.org\n\
//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\
//     Underscore may be freely distributed under the MIT license.\n\
\n\
(function() {\n\
\n\
  // Baseline setup\n\
  // --------------\n\
\n\
  // Establish the root object, `window` in the browser, or `exports` on the server.\n\
  var root = this;\n\
\n\
  // Save the previous value of the `_` variable.\n\
  var previousUnderscore = root._;\n\
\n\
  // Establish the object that gets returned to break out of a loop iteration.\n\
  var breaker = {};\n\
\n\
  // Save bytes in the minified (but not gzipped) version:\n\
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\
\n\
  // Create quick reference variables for speed access to core prototypes.\n\
  var\n\
    push             = ArrayProto.push,\n\
    slice            = ArrayProto.slice,\n\
    concat           = ArrayProto.concat,\n\
    toString         = ObjProto.toString,\n\
    hasOwnProperty   = ObjProto.hasOwnProperty;\n\
\n\
  // All **ECMAScript 5** native function implementations that we hope to use\n\
  // are declared here.\n\
  var\n\
    nativeForEach      = ArrayProto.forEach,\n\
    nativeMap          = ArrayProto.map,\n\
    nativeReduce       = ArrayProto.reduce,\n\
    nativeReduceRight  = ArrayProto.reduceRight,\n\
    nativeFilter       = ArrayProto.filter,\n\
    nativeEvery        = ArrayProto.every,\n\
    nativeSome         = ArrayProto.some,\n\
    nativeIndexOf      = ArrayProto.indexOf,\n\
    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n\
    nativeIsArray      = Array.isArray,\n\
    nativeKeys         = Object.keys,\n\
    nativeBind         = FuncProto.bind;\n\
\n\
  // Create a safe reference to the Underscore object for use below.\n\
  var _ = function(obj) {\n\
    if (obj instanceof _) return obj;\n\
    if (!(this instanceof _)) return new _(obj);\n\
    this._wrapped = obj;\n\
  };\n\
\n\
  // Export the Underscore object for **Node.js**, with\n\
  // backwards-compatibility for the old `require()` API. If we're in\n\
  // the browser, add `_` as a global object via a string identifier,\n\
  // for Closure Compiler \"advanced\" mode.\n\
  if (typeof exports !== 'undefined') {\n\
    if (typeof module !== 'undefined' && module.exports) {\n\
      exports = module.exports = _;\n\
    }\n\
    exports._ = _;\n\
  } else {\n\
    root._ = _;\n\
  }\n\
\n\
  // Current version.\n\
  _.VERSION = '1.6.0';\n\
\n\
  // Collection Functions\n\
  // --------------------\n\
\n\
  // The cornerstone, an `each` implementation, aka `forEach`.\n\
  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n\
  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n\
  var each = _.each = _.forEach = function(obj, iterator, context) {\n\
    if (obj == null) return obj;\n\
    if (nativeForEach && obj.forEach === nativeForEach) {\n\
      obj.forEach(iterator, context);\n\
    } else if (obj.length === +obj.length) {\n\
      for (var i = 0, length = obj.length; i < length; i++) {\n\
        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n\
      }\n\
    } else {\n\
      var keys = _.keys(obj);\n\
      for (var i = 0, length = keys.length; i < length; i++) {\n\
        if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;\n\
      }\n\
    }\n\
    return obj;\n\
  };\n\
\n\
  // Return the results of applying the iterator to each element.\n\
  // Delegates to **ECMAScript 5**'s native `map` if available.\n\
  _.map = _.collect = function(obj, iterator, context) {\n\
    var results = [];\n\
    if (obj == null) return results;\n\
    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\
    each(obj, function(value, index, list) {\n\
      results.push(iterator.call(context, value, index, list));\n\
    });\n\
    return results;\n\
  };\n\
\n\
  var reduceError = 'Reduce of empty array with no initial value';\n\
\n\
  // **Reduce** builds up a single result from a list of values, aka `inject`,\n\
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n\
  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n\
    var initial = arguments.length > 2;\n\
    if (obj == null) obj = [];\n\
    if (nativeReduce && obj.reduce === nativeReduce) {\n\
      if (context) iterator = _.bind(iterator, context);\n\
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n\
    }\n\
    each(obj, function(value, index, list) {\n\
      if (!initial) {\n\
        memo = value;\n\
        initial = true;\n\
      } else {\n\
        memo = iterator.call(context, memo, value, index, list);\n\
      }\n\
    });\n\
    if (!initial) throw new TypeError(reduceError);\n\
    return memo;\n\
  };\n\
\n\
  // The right-associative version of reduce, also known as `foldr`.\n\
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n\
  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n\
    var initial = arguments.length > 2;\n\
    if (obj == null) obj = [];\n\
    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n\
      if (context) iterator = _.bind(iterator, context);\n\
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n\
    }\n\
    var length = obj.length;\n\
    if (length !== +length) {\n\
      var keys = _.keys(obj);\n\
      length = keys.length;\n\
    }\n\
    each(obj, function(value, index, list) {\n\
      index = keys ? keys[--length] : --length;\n\
      if (!initial) {\n\
        memo = obj[index];\n\
        initial = true;\n\
      } else {\n\
        memo = iterator.call(context, memo, obj[index], index, list);\n\
      }\n\
    });\n\
    if (!initial) throw new TypeError(reduceError);\n\
    return memo;\n\
  };\n\
\n\
  // Return the first value which passes a truth test. Aliased as `detect`.\n\
  _.find = _.detect = function(obj, predicate, context) {\n\
    var result;\n\
    any(obj, function(value, index, list) {\n\
      if (predicate.call(context, value, index, list)) {\n\
        result = value;\n\
        return true;\n\
      }\n\
    });\n\
    return result;\n\
  };\n\
\n\
  // Return all the elements that pass a truth test.\n\
  // Delegates to **ECMAScript 5**'s native `filter` if available.\n\
  // Aliased as `select`.\n\
  _.filter = _.select = function(obj, predicate, context) {\n\
    var results = [];\n\
    if (obj == null) return results;\n\
    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(predicate, context);\n\
    each(obj, function(value, index, list) {\n\
      if (predicate.call(context, value, index, list)) results.push(value);\n\
    });\n\
    return results;\n\
  };\n\
\n\
  // Return all the elements for which a truth test fails.\n\
  _.reject = function(obj, predicate, context) {\n\
    return _.filter(obj, function(value, index, list) {\n\
      return !predicate.call(context, value, index, list);\n\
    }, context);\n\
  };\n\
\n\
  // Determine whether all of the elements match a truth test.\n\
  // Delegates to **ECMAScript 5**'s native `every` if available.\n\
  // Aliased as `all`.\n\
  _.every = _.all = function(obj, predicate, context) {\n\
    predicate || (predicate = _.identity);\n\
    var result = true;\n\
    if (obj == null) return result;\n\
    if (nativeEvery && obj.every === nativeEvery) return obj.every(predicate, context);\n\
    each(obj, function(value, index, list) {\n\
      if (!(result = result && predicate.call(context, value, index, list))) return breaker;\n\
    });\n\
    return !!result;\n\
  };\n\
\n\
  // Determine if at least one element in the object matches a truth test.\n\
  // Delegates to **ECMAScript 5**'s native `some` if available.\n\
  // Aliased as `any`.\n\
  var any = _.some = _.any = function(obj, predicate, context) {\n\
    predicate || (predicate = _.identity);\n\
    var result = false;\n\
    if (obj == null) return result;\n\
    if (nativeSome && obj.some === nativeSome) return obj.some(predicate, context);\n\
    each(obj, function(value, index, list) {\n\
      if (result || (result = predicate.call(context, value, index, list))) return breaker;\n\
    });\n\
    return !!result;\n\
  };\n\
\n\
  // Determine if the array or object contains a given value (using `===`).\n\
  // Aliased as `include`.\n\
  _.contains = _.include = function(obj, target) {\n\
    if (obj == null) return false;\n\
    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n\
    return any(obj, function(value) {\n\
      return value === target;\n\
    });\n\
  };\n\
\n\
  // Invoke a method (with arguments) on every item in a collection.\n\
  _.invoke = function(obj, method) {\n\
    var args = slice.call(arguments, 2);\n\
    var isFunc = _.isFunction(method);\n\
    return _.map(obj, function(value) {\n\
      return (isFunc ? method : value[method]).apply(value, args);\n\
    });\n\
  };\n\
\n\
  // Convenience version of a common use case of `map`: fetching a property.\n\
  _.pluck = function(obj, key) {\n\
    return _.map(obj, _.property(key));\n\
  };\n\
\n\
  // Convenience version of a common use case of `filter`: selecting only objects\n\
  // containing specific `key:value` pairs.\n\
  _.where = function(obj, attrs) {\n\
    return _.filter(obj, _.matches(attrs));\n\
  };\n\
\n\
  // Convenience version of a common use case of `find`: getting the first object\n\
  // containing specific `key:value` pairs.\n\
  _.findWhere = function(obj, attrs) {\n\
    return _.find(obj, _.matches(attrs));\n\
  };\n\
\n\
  // Return the maximum element or (element-based computation).\n\
  // Can't optimize arrays of integers longer than 65,535 elements.\n\
  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)\n\
  _.max = function(obj, iterator, context) {\n\
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n\
      return Math.max.apply(Math, obj);\n\
    }\n\
    var result = -Infinity, lastComputed = -Infinity;\n\
    each(obj, function(value, index, list) {\n\
      var computed = iterator ? iterator.call(context, value, index, list) : value;\n\
      if (computed > lastComputed) {\n\
        result = value;\n\
        lastComputed = computed;\n\
      }\n\
    });\n\
    return result;\n\
  };\n\
\n\
  // Return the minimum element (or element-based computation).\n\
  _.min = function(obj, iterator, context) {\n\
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n\
      return Math.min.apply(Math, obj);\n\
    }\n\
    var result = Infinity, lastComputed = Infinity;\n\
    each(obj, function(value, index, list) {\n\
      var computed = iterator ? iterator.call(context, value, index, list) : value;\n\
      if (computed < lastComputed) {\n\
        result = value;\n\
        lastComputed = computed;\n\
      }\n\
    });\n\
    return result;\n\
  };\n\
\n\
  // Shuffle an array, using the modern version of the\n\
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n\
  _.shuffle = function(obj) {\n\
    var rand;\n\
    var index = 0;\n\
    var shuffled = [];\n\
    each(obj, function(value) {\n\
      rand = _.random(index++);\n\
      shuffled[index - 1] = shuffled[rand];\n\
      shuffled[rand] = value;\n\
    });\n\
    return shuffled;\n\
  };\n\
\n\
  // Sample **n** random values from a collection.\n\
  // If **n** is not specified, returns a single random element.\n\
  // The internal `guard` argument allows it to work with `map`.\n\
  _.sample = function(obj, n, guard) {\n\
    if (n == null || guard) {\n\
      if (obj.length !== +obj.length) obj = _.values(obj);\n\
      return obj[_.random(obj.length - 1)];\n\
    }\n\
    return _.shuffle(obj).slice(0, Math.max(0, n));\n\
  };\n\
\n\
  // An internal function to generate lookup iterators.\n\
  var lookupIterator = function(value) {\n\
    if (value == null) return _.identity;\n\
    if (_.isFunction(value)) return value;\n\
    return _.property(value);\n\
  };\n\
\n\
  // Sort the object's values by a criterion produced by an iterator.\n\
  _.sortBy = function(obj, iterator, context) {\n\
    iterator = lookupIterator(iterator);\n\
    return _.pluck(_.map(obj, function(value, index, list) {\n\
      return {\n\
        value: value,\n\
        index: index,\n\
        criteria: iterator.call(context, value, index, list)\n\
      };\n\
    }).sort(function(left, right) {\n\
      var a = left.criteria;\n\
      var b = right.criteria;\n\
      if (a !== b) {\n\
        if (a > b || a === void 0) return 1;\n\
        if (a < b || b === void 0) return -1;\n\
      }\n\
      return left.index - right.index;\n\
    }), 'value');\n\
  };\n\
\n\
  // An internal function used for aggregate \"group by\" operations.\n\
  var group = function(behavior) {\n\
    return function(obj, iterator, context) {\n\
      var result = {};\n\
      iterator = lookupIterator(iterator);\n\
      each(obj, function(value, index) {\n\
        var key = iterator.call(context, value, index, obj);\n\
        behavior(result, key, value);\n\
      });\n\
      return result;\n\
    };\n\
  };\n\
\n\
  // Groups the object's values by a criterion. Pass either a string attribute\n\
  // to group by, or a function that returns the criterion.\n\
  _.groupBy = group(function(result, key, value) {\n\
    _.has(result, key) ? result[key].push(value) : result[key] = [value];\n\
  });\n\
\n\
  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n\
  // when you know that your index values will be unique.\n\
  _.indexBy = group(function(result, key, value) {\n\
    result[key] = value;\n\
  });\n\
\n\
  // Counts instances of an object that group by a certain criterion. Pass\n\
  // either a string attribute to count by, or a function that returns the\n\
  // criterion.\n\
  _.countBy = group(function(result, key) {\n\
    _.has(result, key) ? result[key]++ : result[key] = 1;\n\
  });\n\
\n\
  // Use a comparator function to figure out the smallest index at which\n\
  // an object should be inserted so as to maintain order. Uses binary search.\n\
  _.sortedIndex = function(array, obj, iterator, context) {\n\
    iterator = lookupIterator(iterator);\n\
    var value = iterator.call(context, obj);\n\
    var low = 0, high = array.length;\n\
    while (low < high) {\n\
      var mid = (low + high) >>> 1;\n\
      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n\
    }\n\
    return low;\n\
  };\n\
\n\
  // Safely create a real, live array from anything iterable.\n\
  _.toArray = function(obj) {\n\
    if (!obj) return [];\n\
    if (_.isArray(obj)) return slice.call(obj);\n\
    if (obj.length === +obj.length) return _.map(obj, _.identity);\n\
    return _.values(obj);\n\
  };\n\
\n\
  // Return the number of elements in an object.\n\
  _.size = function(obj) {\n\
    if (obj == null) return 0;\n\
    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n\
  };\n\
\n\
  // Array Functions\n\
  // ---------------\n\
\n\
  // Get the first element of an array. Passing **n** will return the first N\n\
  // values in the array. Aliased as `head` and `take`. The **guard** check\n\
  // allows it to work with `_.map`.\n\
  _.first = _.head = _.take = function(array, n, guard) {\n\
    if (array == null) return void 0;\n\
    if ((n == null) || guard) return array[0];\n\
    if (n < 0) return [];\n\
    return slice.call(array, 0, n);\n\
  };\n\
\n\
  // Returns everything but the last entry of the array. Especially useful on\n\
  // the arguments object. Passing **n** will return all the values in\n\
  // the array, excluding the last N. The **guard** check allows it to work with\n\
  // `_.map`.\n\
  _.initial = function(array, n, guard) {\n\
    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n\
  };\n\
\n\
  // Get the last element of an array. Passing **n** will return the last N\n\
  // values in the array. The **guard** check allows it to work with `_.map`.\n\
  _.last = function(array, n, guard) {\n\
    if (array == null) return void 0;\n\
    if ((n == null) || guard) return array[array.length - 1];\n\
    return slice.call(array, Math.max(array.length - n, 0));\n\
  };\n\
\n\
  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n\
  // Especially useful on the arguments object. Passing an **n** will return\n\
  // the rest N values in the array. The **guard**\n\
  // check allows it to work with `_.map`.\n\
  _.rest = _.tail = _.drop = function(array, n, guard) {\n\
    return slice.call(array, (n == null) || guard ? 1 : n);\n\
  };\n\
\n\
  // Trim out all falsy values from an array.\n\
  _.compact = function(array) {\n\
    return _.filter(array, _.identity);\n\
  };\n\
\n\
  // Internal implementation of a recursive `flatten` function.\n\
  var flatten = function(input, shallow, strict, output) {\n\
    if (shallow && _.every(input, _.isArray)) {\n\
      return concat.apply(output, input);\n\
    }\n\
    for (var i = 0, length = input.length; i < length; i++) {\n\
      var value = input[i];\n\
      if (!_.isArray(value) && !_.isArguments(value)) {\n\
        if (!strict) output.push(value);\n\
      } else if (shallow) {\n\
        push.apply(output, value);\n\
      } else {\n\
        flatten(value, shallow, strict, output);\n\
      }\n\
    }\n\
    return output;\n\
  };\n\
\n\
  // Flatten out an array, either recursively (by default), or just one level.\n\
  _.flatten = function(array, shallow) {\n\
    return flatten(array, shallow, false, []);\n\
  };\n\
\n\
  // Return a version of the array that does not contain the specified value(s).\n\
  _.without = function(array) {\n\
    return _.difference(array, slice.call(arguments, 1));\n\
  };\n\
\n\
  // Split an array into two arrays: one whose elements all satisfy the given\n\
  // predicate, and one whose elements all do not satisfy the predicate.\n\
  _.partition = function(obj, predicate, context) {\n\
    predicate = lookupIterator(predicate);\n\
    var pass = [], fail = [];\n\
    each(obj, function(elem) {\n\
      (predicate.call(context, elem) ? pass : fail).push(elem);\n\
    });\n\
    return [pass, fail];\n\
  };\n\
\n\
  // Produce a duplicate-free version of the array. If the array has already\n\
  // been sorted, you have the option of using a faster algorithm.\n\
  // Aliased as `unique`.\n\
  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n\
    if (array == null) return [];\n\
    if (_.isFunction(isSorted)) {\n\
      context = iterator;\n\
      iterator = isSorted;\n\
      isSorted = false;\n\
    }\n\
    var result = [];\n\
    var seen = [];\n\
    for (var i = 0, length = array.length; i < length; i++) {\n\
      var value = array[i];\n\
      if (iterator) value = iterator.call(context, value, i, array);\n\
      if (isSorted ? (!i || seen !== value) : !_.contains(seen, value)) {\n\
        if (isSorted) seen = value;\n\
        else seen.push(value);\n\
        result.push(array[i]);\n\
      }\n\
    }\n\
    return result;\n\
  };\n\
\n\
  // Produce an array that contains the union: each distinct element from all of\n\
  // the passed-in arrays.\n\
  _.union = function() {\n\
    return _.uniq(flatten(arguments, true, true, []));\n\
  };\n\
\n\
  // Produce an array that contains every item shared between all the\n\
  // passed-in arrays.\n\
  _.intersection = function(array) {\n\
    var rest = slice.call(arguments, 1);\n\
    return _.filter(_.uniq(array), function(item) {\n\
      return _.every(rest, function(other) {\n\
        return _.contains(other, item);\n\
      });\n\
    });\n\
  };\n\
\n\
  // Take the difference between one array and a number of other arrays.\n\
  // Only the elements present in just the first array will remain.\n\
  _.difference = function(array) {\n\
    var rest = flatten(slice.call(arguments, 1), true, true, []);\n\
    return _.filter(array, function(value){ return !_.contains(rest, value); });\n\
  };\n\
\n\
  // Zip together multiple lists into a single array -- elements that share\n\
  // an index go together.\n\
  _.zip = function() {\n\
    var length = _.max(_.pluck(arguments, 'length').concat(0));\n\
    var results = new Array(length);\n\
    for (var i = 0; i < length; i++) {\n\
      results[i] = _.pluck(arguments, '' + i);\n\
    }\n\
    return results;\n\
  };\n\
\n\
  // Converts lists into objects. Pass either a single array of `[key, value]`\n\
  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n\
  // the corresponding values.\n\
  _.object = function(list, values) {\n\
    if (list == null) return {};\n\
    var result = {};\n\
    for (var i = 0, length = list.length; i < length; i++) {\n\
      if (values) {\n\
        result[list[i]] = values[i];\n\
      } else {\n\
        result[list[i][0]] = list[i][1];\n\
      }\n\
    }\n\
    return result;\n\
  };\n\
\n\
  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n\
  // we need this function. Return the position of the first occurrence of an\n\
  // item in an array, or -1 if the item is not included in the array.\n\
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n\
  // If the array is large and already in sort order, pass `true`\n\
  // for **isSorted** to use binary search.\n\
  _.indexOf = function(array, item, isSorted) {\n\
    if (array == null) return -1;\n\
    var i = 0, length = array.length;\n\
    if (isSorted) {\n\
      if (typeof isSorted == 'number') {\n\
        i = (isSorted < 0 ? Math.max(0, length + isSorted) : isSorted);\n\
      } else {\n\
        i = _.sortedIndex(array, item);\n\
        return array[i] === item ? i : -1;\n\
      }\n\
    }\n\
    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n\
    for (; i < length; i++) if (array[i] === item) return i;\n\
    return -1;\n\
  };\n\
\n\
  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n\
  _.lastIndexOf = function(array, item, from) {\n\
    if (array == null) return -1;\n\
    var hasIndex = from != null;\n\
    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n\
      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n\
    }\n\
    var i = (hasIndex ? from : array.length);\n\
    while (i--) if (array[i] === item) return i;\n\
    return -1;\n\
  };\n\
\n\
  // Generate an integer Array containing an arithmetic progression. A port of\n\
  // the native Python `range()` function. See\n\
  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\
  _.range = function(start, stop, step) {\n\
    if (arguments.length <= 1) {\n\
      stop = start || 0;\n\
      start = 0;\n\
    }\n\
    step = arguments[2] || 1;\n\
\n\
    var length = Math.max(Math.ceil((stop - start) / step), 0);\n\
    var idx = 0;\n\
    var range = new Array(length);\n\
\n\
    while(idx < length) {\n\
      range[idx++] = start;\n\
      start += step;\n\
    }\n\
\n\
    return range;\n\
  };\n\
\n\
  // Function (ahem) Functions\n\
  // ------------------\n\
\n\
  // Reusable constructor function for prototype setting.\n\
  var ctor = function(){};\n\
\n\
  // Create a function bound to a given object (assigning `this`, and arguments,\n\
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n\
  // available.\n\
  _.bind = function(func, context) {\n\
    var args, bound;\n\
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n\
    if (!_.isFunction(func)) throw new TypeError;\n\
    args = slice.call(arguments, 2);\n\
    return bound = function() {\n\
      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n\
      ctor.prototype = func.prototype;\n\
      var self = new ctor;\n\
      ctor.prototype = null;\n\
      var result = func.apply(self, args.concat(slice.call(arguments)));\n\
      if (Object(result) === result) return result;\n\
      return self;\n\
    };\n\
  };\n\
\n\
  // Partially apply a function by creating a version that has had some of its\n\
  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n\
  // as a placeholder, allowing any combination of arguments to be pre-filled.\n\
  _.partial = function(func) {\n\
    var boundArgs = slice.call(arguments, 1);\n\
    return function() {\n\
      var position = 0;\n\
      var args = boundArgs.slice();\n\
      for (var i = 0, length = args.length; i < length; i++) {\n\
        if (args[i] === _) args[i] = arguments[position++];\n\
      }\n\
      while (position < arguments.length) args.push(arguments[position++]);\n\
      return func.apply(this, args);\n\
    };\n\
  };\n\
\n\
  // Bind a number of an object's methods to that object. Remaining arguments\n\
  // are the method names to be bound. Useful for ensuring that all callbacks\n\
  // defined on an object belong to it.\n\
  _.bindAll = function(obj) {\n\
    var funcs = slice.call(arguments, 1);\n\
    if (funcs.length === 0) throw new Error('bindAll must be passed function names');\n\
    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n\
    return obj;\n\
  };\n\
\n\
  // Memoize an expensive function by storing its results.\n\
  _.memoize = function(func, hasher) {\n\
    var memo = {};\n\
    hasher || (hasher = _.identity);\n\
    return function() {\n\
      var key = hasher.apply(this, arguments);\n\
      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n\
    };\n\
  };\n\
\n\
  // Delays a function for the given number of milliseconds, and then calls\n\
  // it with the arguments supplied.\n\
  _.delay = function(func, wait) {\n\
    var args = slice.call(arguments, 2);\n\
    return setTimeout(function(){ return func.apply(null, args); }, wait);\n\
  };\n\
\n\
  // Defers a function, scheduling it to run after the current call stack has\n\
  // cleared.\n\
  _.defer = function(func) {\n\
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n\
  };\n\
\n\
  // Returns a function, that, when invoked, will only be triggered at most once\n\
  // during a given window of time. Normally, the throttled function will run\n\
  // as much as it can, without ever going more than once per `wait` duration;\n\
  // but if you'd like to disable the execution on the leading edge, pass\n\
  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\
  _.throttle = function(func, wait, options) {\n\
    var context, args, result;\n\
    var timeout = null;\n\
    var previous = 0;\n\
    options || (options = {});\n\
    var later = function() {\n\
      previous = options.leading === false ? 0 : _.now();\n\
      timeout = null;\n\
      result = func.apply(context, args);\n\
      context = args = null;\n\
    };\n\
    return function() {\n\
      var now = _.now();\n\
      if (!previous && options.leading === false) previous = now;\n\
      var remaining = wait - (now - previous);\n\
      context = this;\n\
      args = arguments;\n\
      if (remaining <= 0) {\n\
        clearTimeout(timeout);\n\
        timeout = null;\n\
        previous = now;\n\
        result = func.apply(context, args);\n\
        context = args = null;\n\
      } else if (!timeout && options.trailing !== false) {\n\
        timeout = setTimeout(later, remaining);\n\
      }\n\
      return result;\n\
    };\n\
  };\n\
\n\
  // Returns a function, that, as long as it continues to be invoked, will not\n\
  // be triggered. The function will be called after it stops being called for\n\
  // N milliseconds. If `immediate` is passed, trigger the function on the\n\
  // leading edge, instead of the trailing.\n\
  _.debounce = function(func, wait, immediate) {\n\
    var timeout, args, context, timestamp, result;\n\
\n\
    var later = function() {\n\
      var last = _.now() - timestamp;\n\
      if (last < wait) {\n\
        timeout = setTimeout(later, wait - last);\n\
      } else {\n\
        timeout = null;\n\
        if (!immediate) {\n\
          result = func.apply(context, args);\n\
          context = args = null;\n\
        }\n\
      }\n\
    };\n\
\n\
    return function() {\n\
      context = this;\n\
      args = arguments;\n\
      timestamp = _.now();\n\
      var callNow = immediate && !timeout;\n\
      if (!timeout) {\n\
        timeout = setTimeout(later, wait);\n\
      }\n\
      if (callNow) {\n\
        result = func.apply(context, args);\n\
        context = args = null;\n\
      }\n\
\n\
      return result;\n\
    };\n\
  };\n\
\n\
  // Returns a function that will be executed at most one time, no matter how\n\
  // often you call it. Useful for lazy initialization.\n\
  _.once = function(func) {\n\
    var ran = false, memo;\n\
    return function() {\n\
      if (ran) return memo;\n\
      ran = true;\n\
      memo = func.apply(this, arguments);\n\
      func = null;\n\
      return memo;\n\
    };\n\
  };\n\
\n\
  // Returns the first function passed as an argument to the second,\n\
  // allowing you to adjust arguments, run code before and after, and\n\
  // conditionally execute the original function.\n\
  _.wrap = function(func, wrapper) {\n\
    return _.partial(wrapper, func);\n\
  };\n\
\n\
  // Returns a function that is the composition of a list of functions, each\n\
  // consuming the return value of the function that follows.\n\
  _.compose = function() {\n\
    var funcs = arguments;\n\
    return function() {\n\
      var args = arguments;\n\
      for (var i = funcs.length - 1; i >= 0; i--) {\n\
        args = [funcs[i].apply(this, args)];\n\
      }\n\
      return args[0];\n\
    };\n\
  };\n\
\n\
  // Returns a function that will only be executed after being called N times.\n\
  _.after = function(times, func) {\n\
    return function() {\n\
      if (--times < 1) {\n\
        return func.apply(this, arguments);\n\
      }\n\
    };\n\
  };\n\
\n\
  // Object Functions\n\
  // ----------------\n\
\n\
  // Retrieve the names of an object's properties.\n\
  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\
  _.keys = function(obj) {\n\
    if (!_.isObject(obj)) return [];\n\
    if (nativeKeys) return nativeKeys(obj);\n\
    var keys = [];\n\
    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n\
    return keys;\n\
  };\n\
\n\
  // Retrieve the values of an object's properties.\n\
  _.values = function(obj) {\n\
    var keys = _.keys(obj);\n\
    var length = keys.length;\n\
    var values = new Array(length);\n\
    for (var i = 0; i < length; i++) {\n\
      values[i] = obj[keys[i]];\n\
    }\n\
    return values;\n\
  };\n\
\n\
  // Convert an object into a list of `[key, value]` pairs.\n\
  _.pairs = function(obj) {\n\
    var keys = _.keys(obj);\n\
    var length = keys.length;\n\
    var pairs = new Array(length);\n\
    for (var i = 0; i < length; i++) {\n\
      pairs[i] = [keys[i], obj[keys[i]]];\n\
    }\n\
    return pairs;\n\
  };\n\
\n\
  // Invert the keys and values of an object. The values must be serializable.\n\
  _.invert = function(obj) {\n\
    var result = {};\n\
    var keys = _.keys(obj);\n\
    for (var i = 0, length = keys.length; i < length; i++) {\n\
      result[obj[keys[i]]] = keys[i];\n\
    }\n\
    return result;\n\
  };\n\
\n\
  // Return a sorted list of the function names available on the object.\n\
  // Aliased as `methods`\n\
  _.functions = _.methods = function(obj) {\n\
    var names = [];\n\
    for (var key in obj) {\n\
      if (_.isFunction(obj[key])) names.push(key);\n\
    }\n\
    return names.sort();\n\
  };\n\
\n\
  // Extend a given object with all the properties in passed-in object(s).\n\
  _.extend = function(obj) {\n\
    each(slice.call(arguments, 1), function(source) {\n\
      if (source) {\n\
        for (var prop in source) {\n\
          obj[prop] = source[prop];\n\
        }\n\
      }\n\
    });\n\
    return obj;\n\
  };\n\
\n\
  // Return a copy of the object only containing the whitelisted properties.\n\
  _.pick = function(obj) {\n\
    var copy = {};\n\
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n\
    each(keys, function(key) {\n\
      if (key in obj) copy[key] = obj[key];\n\
    });\n\
    return copy;\n\
  };\n\
\n\
   // Return a copy of the object without the blacklisted properties.\n\
  _.omit = function(obj) {\n\
    var copy = {};\n\
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n\
    for (var key in obj) {\n\
      if (!_.contains(keys, key)) copy[key] = obj[key];\n\
    }\n\
    return copy;\n\
  };\n\
\n\
  // Fill in a given object with default properties.\n\
  _.defaults = function(obj) {\n\
    each(slice.call(arguments, 1), function(source) {\n\
      if (source) {\n\
        for (var prop in source) {\n\
          if (obj[prop] === void 0) obj[prop] = source[prop];\n\
        }\n\
      }\n\
    });\n\
    return obj;\n\
  };\n\
\n\
  // Create a (shallow-cloned) duplicate of an object.\n\
  _.clone = function(obj) {\n\
    if (!_.isObject(obj)) return obj;\n\
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n\
  };\n\
\n\
  // Invokes interceptor with the obj, and then returns obj.\n\
  // The primary purpose of this method is to \"tap into\" a method chain, in\n\
  // order to perform operations on intermediate results within the chain.\n\
  _.tap = function(obj, interceptor) {\n\
    interceptor(obj);\n\
    return obj;\n\
  };\n\
\n\
  // Internal recursive comparison function for `isEqual`.\n\
  var eq = function(a, b, aStack, bStack) {\n\
    // Identical objects are equal. `0 === -0`, but they aren't identical.\n\
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n\
    if (a === b) return a !== 0 || 1 / a == 1 / b;\n\
    // A strict comparison is necessary because `null == undefined`.\n\
    if (a == null || b == null) return a === b;\n\
    // Unwrap any wrapped objects.\n\
    if (a instanceof _) a = a._wrapped;\n\
    if (b instanceof _) b = b._wrapped;\n\
    // Compare `[[Class]]` names.\n\
    var className = toString.call(a);\n\
    if (className != toString.call(b)) return false;\n\
    switch (className) {\n\
      // Strings, numbers, dates, and booleans are compared by value.\n\
      case '[object String]':\n\
        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n\
        // equivalent to `new String(\"5\")`.\n\
        return a == String(b);\n\
      case '[object Number]':\n\
        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n\
        // other numeric values.\n\
        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n\
      case '[object Date]':\n\
      case '[object Boolean]':\n\
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n\
        // millisecond representations. Note that invalid dates with millisecond representations\n\
        // of `NaN` are not equivalent.\n\
        return +a == +b;\n\
      // RegExps are compared by their source patterns and flags.\n\
      case '[object RegExp]':\n\
        return a.source == b.source &&\n\
               a.global == b.global &&\n\
               a.multiline == b.multiline &&\n\
               a.ignoreCase == b.ignoreCase;\n\
    }\n\
    if (typeof a != 'object' || typeof b != 'object') return false;\n\
    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n\
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\
    var length = aStack.length;\n\
    while (length--) {\n\
      // Linear search. Performance is inversely proportional to the number of\n\
      // unique nested structures.\n\
      if (aStack[length] == a) return bStack[length] == b;\n\
    }\n\
    // Objects with different constructors are not equivalent, but `Object`s\n\
    // from different frames are.\n\
    var aCtor = a.constructor, bCtor = b.constructor;\n\
    if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n\
                             _.isFunction(bCtor) && (bCtor instanceof bCtor))\n\
                        && ('constructor' in a && 'constructor' in b)) {\n\
      return false;\n\
    }\n\
    // Add the first object to the stack of traversed objects.\n\
    aStack.push(a);\n\
    bStack.push(b);\n\
    var size = 0, result = true;\n\
    // Recursively compare objects and arrays.\n\
    if (className == '[object Array]') {\n\
      // Compare array lengths to determine if a deep comparison is necessary.\n\
      size = a.length;\n\
      result = size == b.length;\n\
      if (result) {\n\
        // Deep compare the contents, ignoring non-numeric properties.\n\
        while (size--) {\n\
          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n\
        }\n\
      }\n\
    } else {\n\
      // Deep compare objects.\n\
      for (var key in a) {\n\
        if (_.has(a, key)) {\n\
          // Count the expected number of properties.\n\
          size++;\n\
          // Deep compare each member.\n\
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n\
        }\n\
      }\n\
      // Ensure that both objects contain the same number of properties.\n\
      if (result) {\n\
        for (key in b) {\n\
          if (_.has(b, key) && !(size--)) break;\n\
        }\n\
        result = !size;\n\
      }\n\
    }\n\
    // Remove the first object from the stack of traversed objects.\n\
    aStack.pop();\n\
    bStack.pop();\n\
    return result;\n\
  };\n\
\n\
  // Perform a deep comparison to check if two objects are equal.\n\
  _.isEqual = function(a, b) {\n\
    return eq(a, b, [], []);\n\
  };\n\
\n\
  // Is a given array, string, or object empty?\n\
  // An \"empty\" object has no enumerable own-properties.\n\
  _.isEmpty = function(obj) {\n\
    if (obj == null) return true;\n\
    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n\
    for (var key in obj) if (_.has(obj, key)) return false;\n\
    return true;\n\
  };\n\
\n\
  // Is a given value a DOM element?\n\
  _.isElement = function(obj) {\n\
    return !!(obj && obj.nodeType === 1);\n\
  };\n\
\n\
  // Is a given value an array?\n\
  // Delegates to ECMA5's native Array.isArray\n\
  _.isArray = nativeIsArray || function(obj) {\n\
    return toString.call(obj) == '[object Array]';\n\
  };\n\
\n\
  // Is a given variable an object?\n\
  _.isObject = function(obj) {\n\
    return obj === Object(obj);\n\
  };\n\
\n\
  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n\
  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n\
    _['is' + name] = function(obj) {\n\
      return toString.call(obj) == '[object ' + name + ']';\n\
    };\n\
  });\n\
\n\
  // Define a fallback version of the method in browsers (ahem, IE), where\n\
  // there isn't any inspectable \"Arguments\" type.\n\
  if (!_.isArguments(arguments)) {\n\
    _.isArguments = function(obj) {\n\
      return !!(obj && _.has(obj, 'callee'));\n\
    };\n\
  }\n\
\n\
  // Optimize `isFunction` if appropriate.\n\
  if (typeof (/./) !== 'function') {\n\
    _.isFunction = function(obj) {\n\
      return typeof obj === 'function';\n\
    };\n\
  }\n\
\n\
  // Is a given object a finite number?\n\
  _.isFinite = function(obj) {\n\
    return isFinite(obj) && !isNaN(parseFloat(obj));\n\
  };\n\
\n\
  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\
  _.isNaN = function(obj) {\n\
    return _.isNumber(obj) && obj != +obj;\n\
  };\n\
\n\
  // Is a given value a boolean?\n\
  _.isBoolean = function(obj) {\n\
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n\
  };\n\
\n\
  // Is a given value equal to null?\n\
  _.isNull = function(obj) {\n\
    return obj === null;\n\
  };\n\
\n\
  // Is a given variable undefined?\n\
  _.isUndefined = function(obj) {\n\
    return obj === void 0;\n\
  };\n\
\n\
  // Shortcut function for checking if an object has a given property directly\n\
  // on itself (in other words, not on a prototype).\n\
  _.has = function(obj, key) {\n\
    return hasOwnProperty.call(obj, key);\n\
  };\n\
\n\
  // Utility Functions\n\
  // -----------------\n\
\n\
  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n\
  // previous owner. Returns a reference to the Underscore object.\n\
  _.noConflict = function() {\n\
    root._ = previousUnderscore;\n\
    return this;\n\
  };\n\
\n\
  // Keep the identity function around for default iterators.\n\
  _.identity = function(value) {\n\
    return value;\n\
  };\n\
\n\
  _.constant = function(value) {\n\
    return function () {\n\
      return value;\n\
    };\n\
  };\n\
\n\
  _.property = function(key) {\n\
    return function(obj) {\n\
      return obj[key];\n\
    };\n\
  };\n\
\n\
  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n\
  _.matches = function(attrs) {\n\
    return function(obj) {\n\
      if (obj === attrs) return true;\n\
      for (var key in attrs) {\n\
        if (attrs[key] !== obj[key])\n\
          return false;\n\
      }\n\
      return true;\n\
    }\n\
  };\n\
\n\
  // Run a function **n** times.\n\
  _.times = function(n, iterator, context) {\n\
    var accum = Array(Math.max(0, n));\n\
    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n\
    return accum;\n\
  };\n\
\n\
  // Return a random integer between min and max (inclusive).\n\
  _.random = function(min, max) {\n\
    if (max == null) {\n\
      max = min;\n\
      min = 0;\n\
    }\n\
    return min + Math.floor(Math.random() * (max - min + 1));\n\
  };\n\
\n\
  // A (possibly faster) way to get the current timestamp as an integer.\n\
  _.now = Date.now || function() { return new Date().getTime(); };\n\
\n\
  // List of HTML entities for escaping.\n\
  var entityMap = {\n\
    escape: {\n\
      '&': '&amp;',\n\
      '<': '&lt;',\n\
      '>': '&gt;',\n\
      '\"': '&quot;',\n\
      \"'\": '&#x27;'\n\
    }\n\
  };\n\
  entityMap.unescape = _.invert(entityMap.escape);\n\
\n\
  // Regexes containing the keys and values listed immediately above.\n\
  var entityRegexes = {\n\
    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n\
    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n\
  };\n\
\n\
  // Functions for escaping and unescaping strings to/from HTML interpolation.\n\
  _.each(['escape', 'unescape'], function(method) {\n\
    _[method] = function(string) {\n\
      if (string == null) return '';\n\
      return ('' + string).replace(entityRegexes[method], function(match) {\n\
        return entityMap[method][match];\n\
      });\n\
    };\n\
  });\n\
\n\
  // If the value of the named `property` is a function then invoke it with the\n\
  // `object` as context; otherwise, return it.\n\
  _.result = function(object, property) {\n\
    if (object == null) return void 0;\n\
    var value = object[property];\n\
    return _.isFunction(value) ? value.call(object) : value;\n\
  };\n\
\n\
  // Add your own custom functions to the Underscore object.\n\
  _.mixin = function(obj) {\n\
    each(_.functions(obj), function(name) {\n\
      var func = _[name] = obj[name];\n\
      _.prototype[name] = function() {\n\
        var args = [this._wrapped];\n\
        push.apply(args, arguments);\n\
        return result.call(this, func.apply(_, args));\n\
      };\n\
    });\n\
  };\n\
\n\
  // Generate a unique integer id (unique within the entire client session).\n\
  // Useful for temporary DOM ids.\n\
  var idCounter = 0;\n\
  _.uniqueId = function(prefix) {\n\
    var id = ++idCounter + '';\n\
    return prefix ? prefix + id : id;\n\
  };\n\
\n\
  // By default, Underscore uses ERB-style template delimiters, change the\n\
  // following template settings to use alternative delimiters.\n\
  _.templateSettings = {\n\
    evaluate    : /<%([\\s\\S]+?)%>/g,\n\
    interpolate : /<%=([\\s\\S]+?)%>/g,\n\
    escape      : /<%-([\\s\\S]+?)%>/g\n\
  };\n\
\n\
  // When customizing `templateSettings`, if you don't want to define an\n\
  // interpolation, evaluation or escaping regex, we need one that is\n\
  // guaranteed not to match.\n\
  var noMatch = /(.)^/;\n\
\n\
  // Certain characters need to be escaped so that they can be put into a\n\
  // string literal.\n\
  var escapes = {\n\
    \"'\":      \"'\",\n\
    '\\\\':     '\\\\',\n\
    '\\r':     'r',\n\
    '\\n\
':     'n',\n\
    '\\t':     't',\n\
    '\\u2028': 'u2028',\n\
    '\\u2029': 'u2029'\n\
  };\n\
\n\
  var escaper = /\\\\|'|\\r|\\n\
|\\t|\\u2028|\\u2029/g;\n\
\n\
  // JavaScript micro-templating, similar to John Resig's implementation.\n\
  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n\
  // and correctly escapes quotes within interpolated code.\n\
  _.template = function(text, data, settings) {\n\
    var render;\n\
    settings = _.defaults({}, settings, _.templateSettings);\n\
\n\
    // Combine delimiters into one regular expression via alternation.\n\
    var matcher = new RegExp([\n\
      (settings.escape || noMatch).source,\n\
      (settings.interpolate || noMatch).source,\n\
      (settings.evaluate || noMatch).source\n\
    ].join('|') + '|$', 'g');\n\
\n\
    // Compile the template source, escaping string literals appropriately.\n\
    var index = 0;\n\
    var source = \"__p+='\";\n\
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\
      source += text.slice(index, offset)\n\
        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\
\n\
      if (escape) {\n\
        source += \"'+\\n\
((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n\
'\";\n\
      }\n\
      if (interpolate) {\n\
        source += \"'+\\n\
((__t=(\" + interpolate + \"))==null?'':__t)+\\n\
'\";\n\
      }\n\
      if (evaluate) {\n\
        source += \"';\\n\
\" + evaluate + \"\\n\
__p+='\";\n\
      }\n\
      index = offset + match.length;\n\
      return match;\n\
    });\n\
    source += \"';\\n\
\";\n\
\n\
    // If a variable is not specified, place data values in local scope.\n\
    if (!settings.variable) source = 'with(obj||{}){\\n\
' + source + '}\\n\
';\n\
\n\
    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n\
      \"print=function(){__p+=__j.call(arguments,'');};\\n\
\" +\n\
      source + \"return __p;\\n\
\";\n\
\n\
    try {\n\
      render = new Function(settings.variable || 'obj', '_', source);\n\
    } catch (e) {\n\
      e.source = source;\n\
      throw e;\n\
    }\n\
\n\
    if (data) return render(data, _);\n\
    var template = function(data) {\n\
      return render.call(this, data, _);\n\
    };\n\
\n\
    // Provide the compiled function source as a convenience for precompilation.\n\
    template.source = 'function(' + (settings.variable || 'obj') + '){\\n\
' + source + '}';\n\
\n\
    return template;\n\
  };\n\
\n\
  // Add a \"chain\" function, which will delegate to the wrapper.\n\
  _.chain = function(obj) {\n\
    return _(obj).chain();\n\
  };\n\
\n\
  // OOP\n\
  // ---------------\n\
  // If Underscore is called as a function, it returns a wrapped object that\n\
  // can be used OO-style. This wrapper holds altered versions of all the\n\
  // underscore functions. Wrapped objects may be chained.\n\
\n\
  // Helper function to continue chaining intermediate results.\n\
  var result = function(obj) {\n\
    return this._chain ? _(obj).chain() : obj;\n\
  };\n\
\n\
  // Add all of the Underscore functions to the wrapper object.\n\
  _.mixin(_);\n\
\n\
  // Add all mutator Array functions to the wrapper.\n\
  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n\
    var method = ArrayProto[name];\n\
    _.prototype[name] = function() {\n\
      var obj = this._wrapped;\n\
      method.apply(obj, arguments);\n\
      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n\
      return result.call(this, obj);\n\
    };\n\
  });\n\
\n\
  // Add all accessor Array functions to the wrapper.\n\
  each(['concat', 'join', 'slice'], function(name) {\n\
    var method = ArrayProto[name];\n\
    _.prototype[name] = function() {\n\
      return result.call(this, method.apply(this._wrapped, arguments));\n\
    };\n\
  });\n\
\n\
  _.extend(_.prototype, {\n\
\n\
    // Start chaining a wrapped Underscore object.\n\
    chain: function() {\n\
      this._chain = true;\n\
      return this;\n\
    },\n\
\n\
    // Extracts the result from a wrapped and chained object.\n\
    value: function() {\n\
      return this._wrapped;\n\
    }\n\
\n\
  });\n\
\n\
  // AMD registration happens at the end for compatibility with AMD loaders\n\
  // that may not enforce next-turn semantics on modules. Even though general\n\
  // practice for AMD registration is to be anonymous, underscore registers\n\
  // as a named module because, like jQuery, it is a base library that is\n\
  // popular enough to be bundled in a third party lib, but not be part of\n\
  // an AMD load request. Those cases could generate an error when an\n\
  // anonymous define() is called outside of a loader request.\n\
  if (typeof define === 'function' && define.amd) {\n\
    define('underscore', [], function() {\n\
      return _;\n\
    });\n\
  }\n\
}).call(this);\n\
//@ sourceURL=jashkenas-underscore/underscore.js"
));
require.register("network-settings-view/index.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    $template = domify(require('./template.js')),\n\
    events = require('event'),\n\
    classes = require('classes'),\n\
    validate_form = require('validate-form'),\n\
    is_ip = require('is-ip-address');\n\
\n\
function NetworkSettings(model) {\n\
    this.model = model;\n\
    this.$el = $template.cloneNode(true);\n\
    this.event_handlers = [];\n\
    this.strings = {\n\
        \"Field is required\": window.translate('Field is required'),\n\
        \"Field must be a number 1 to 4095\": window.translate('Field must be a number 1 to 4095'),\n\
        \"Field must be an IPv4 address\": window.translate(\"Field must be an IPv4 address\"),\n\
        \"Field must be a number 0 to 32\": window.translate(\"Field must be a number 0 to 32\")\n\
    };\n\
}\n\
\n\
NetworkSettings.prototype.set_model = function (model) {\n\
    this.model = model;\n\
};\n\
\n\
NetworkSettings.prototype.render = function () {};\n\
\n\
NetworkSettings.prototype.show = function () {\n\
    classes(this.$el).remove('hidden');\n\
};\n\
NetworkSettings.prototype.hide = function () {\n\
    classes(this.$el).add('hidden');\n\
};\n\
\n\
NetworkSettings.prototype.bind = function () {\n\
    var $el = this.$el,\n\
        model = this.model,\n\
        $vlan = $el.querySelector('.vlan input'),\n\
        $no_dhcp = $el.querySelector('.dhcp [value=false]'),\n\
        $dhcp = $el.querySelector('.dhcp [value=true]'),\n\
        $ip = $el.querySelector('.ip input'),\n\
        $netmask = $el.querySelector('.netmask input'),\n\
        $gateway = $el.querySelector('.gateway input');\n\
\n\
    if (model) {\n\
        this.event_handlers = [\n\
            [$vlan, 'change', function (e) { model.vlan(e.target.value); }],\n\
            [$no_dhcp, 'change', function (e) { var dhcp = !e.target.checked; model.dhcp(dhcp); }],\n\
            [$dhcp, 'change', function (e) { var dhcp = e.target.checked; model.dhcp(dhcp); }],\n\
            [$ip, 'change', function (e) { model.ip(e.target.value); }],\n\
            [$netmask, 'change', function (e) { model.netmask(e.target.value); }],\n\
            [$gateway, 'change', function (e) { model.gateway(e.target.value); }]\n\
        ];\n\
\n\
        // DOM -> Model\n\
        this.event_handlers.forEach(function (handler) {\n\
            events.bind(handler[0], handler[1], handler[2]);\n\
        });\n\
\n\
        // Model -> DOM\n\
        $vlan.value = model.vlan();\n\
        $no_dhcp.checked = !model.dhcp();\n\
        $dhcp.checked = model.dhcp();\n\
        $ip.value = model.ip();\n\
        $netmask.value = model.netmask();\n\
        $gateway.value = model.gateway();\n\
\n\
        // Validation\n\
        if (model.dhcp()) {\n\
            this.bind_dhcp_validator();\n\
        } else {\n\
            this.bind_no_dhcp_validator();\n\
        }\n\
    }\n\
\n\
    // DOM -> DOM\n\
    this.toggle_static_fields($no_dhcp.checked);\n\
    events.bind($no_dhcp, 'click', this.show_static_fields.bind(this));\n\
    events.bind($dhcp, 'click', this.hide_static_fields.bind(this));\n\
\n\
    // Change validator when change from no-DHCP to DHCP\n\
    events.bind($no_dhcp, 'click', this.bind_no_dhcp_validator.bind(this));\n\
    events.bind($dhcp, 'click', this.bind_dhcp_validator.bind(this));\n\
};\n\
\n\
function is_not_ipv6(val) {\n\
    return -1 === val.indexOf(':');\n\
}\n\
\n\
function is_0_to_32(val) {\n\
    return val >= 0 && val <= 32 && val.match(/\\d+/);\n\
}\n\
\n\
function is_1_to_4095(val) {\n\
    return val >= 1 && val <= 4095 && val.match(/\\d+/);\n\
}\n\
\n\
NetworkSettings.prototype.bind_no_dhcp_validator = function () {\n\
    this.validator = validate_form(this.$el)\n\
        .use(is_ip)\n\
        //.on('blur') - cannot bind onblur events, because switching from\n\
        //              static to DHCP will still fire the validation on the\n\
        //              static IP fields\n\
        .field('vlan')\n\
            .is(is_1_to_4095, this.strings[\"Field must be a number 1 to 4095\"])\n\
\n\
        .field('ip')\n\
            .is('required', this.strings[\"Field is required\"])\n\
            .is('ip', this.strings[\"Field must be an IPv4 address\"])\n\
            .is(is_not_ipv6, this.strings[\"Field must be an IPv4 address\"])\n\
\n\
        .field('netmask')\n\
            .is('required', this.strings[\"Field is required\"])\n\
            .is('ip', this.strings[\"Field must be an IPv4 address\"])\n\
            .is(is_not_ipv6, this.strings[\"Field must be an IPv4 address\"])\n\
\n\
        .field('gateway')\n\
            .is('required', this.strings[\"Field is required\"])\n\
            .is('ip', this.strings[\"Field must be an IPv4 address\"])\n\
            .is(is_not_ipv6, this.strings[\"Field must be an IPv4 address\"]);\n\
};\n\
\n\
NetworkSettings.prototype.bind_dhcp_validator = function () {\n\
    this.validator = validate_form(this.$el)\n\
        .field('vlan')\n\
        .is(is_1_to_4095, this.strings[\"Field must be a number 1 to 4095\"]);\n\
};\n\
\n\
NetworkSettings.prototype.unbind = function () {\n\
    this.event_handlers.forEach(function (handler) {\n\
        events.unbind(handler[0], handler[1], handler[2]);\n\
    });\n\
};\n\
\n\
NetworkSettings.prototype.show_static_fields = function (e) {\n\
    this.toggle_static_fields(true);\n\
};\n\
\n\
NetworkSettings.prototype.hide_static_fields = function (e) {\n\
    this.toggle_static_fields(false);\n\
};\n\
\n\
NetworkSettings.prototype.toggle_static_fields = function (enabled) {\n\
    var $static = this.$el.querySelectorAll('.static input');\n\
\n\
    [].forEach.call($static, function ($el) {\n\
        // Clear validation messages (for non-DHCP fields)\n\
        if (!enabled) {\n\
            window.util.clear_validation_messages($el);\n\
        }\n\
\n\
        $el.disabled = !enabled;\n\
    });\n\
};\n\
\n\
NetworkSettings.prototype.validate = function (done) {\n\
    done = done || function () {};\n\
\n\
    this.validator.validate(function (err, valid) {\n\
        if (err) {\n\
            window.logger.error('Could not load Pulse', err);\n\
            window.util.lightbox.openError(window.translate('Error'), window.translate('Unable to load Pulse'));\n\
        }\n\
\n\
        if (valid) {\n\
            return done();\n\
        }\n\
    });\n\
};\n\
\n\
module.exports = NetworkSettings;//@ sourceURL=network-settings-view/index.js"
));
require.register("network-settings-view/template.js", Function("exports, require, module",
"module.exports = '<form action=\"\">\\n\
    <ul class=\"network-settings\">\\n\
        <li class=\"vlan\">\\n\
            <label>VLAN ID</label>\\n\
            <input type=\"text\" name=\"vlan\" placeholder=\"1 to 4096\"/>\\n\
        </li>\\n\
        <li class=\"dhcp\">\\n\
            <label>\\n\
                No DHCP\\n\
                <input type=\"radio\" name=\"dhcp\" value=\"false\"/>\\n\
            </label>\\n\
\\n\
            <label>\\n\
                DHCP\\n\
                <input type=\"radio\" name=\"dhcp\" value=\"true\"/>\\n\
            </label>\\n\
        </li>\\n\
        <li class=\"ip static\">\\n\
            <label>IP</label>\\n\
            <input type=\"text\" name=\"ip\" placeholder=\"IPv4\"/>\\n\
        </li>\\n\
        <li class=\"netmask static\">\\n\
            <label>Netmask</label>\\n\
            <input type=\"text\" name=\"netmask\" placeholder=\"IPv4\"/>\\n\
        </li>\\n\
        <li class=\"gateway static\">\\n\
            <label>Gateway</label>\\n\
            <input type=\"text\" name=\"gateway\" placeholder=\"IPv4\"/>\\n\
        </li>\\n\
    </ul>\\n\
</form>';//@ sourceURL=network-settings-view/template.js"
));
require.register("agenda/index.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    $template = domify(require('./templates/index.js')),\n\
    $loading_more = domify(require('./templates/loading-more.js')),\n\
    classes = require('classes'),\n\
    Model = require('./models/agenda.js'),\n\
    AsyncPoller = require('async-poller'),\n\
    LoadingState = require('loading-state'),\n\
    events = require('event'),\n\
    lightbox = window.util.lightbox,\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    moment = require('moment'),\n\
    AgendaEvent = require('./views/agenda-event.js'),\n\
    AgendaDate = require('./views/agenda-date.js');\n\
\n\
function AgendaViewModel(){\n\
    this.$el = $template.cloneNode(true);\n\
    this.loading_state = new LoadingState(this.$el);\n\
    this.strings = {\n\
        \"Saving\": window.translate(\"Saving\")\n\
    };\n\
    this.date_list = new Array();\n\
    this.click_handler = undefined;\n\
    this.max_height = 420;\n\
\n\
    //flags for insert empty empty today\n\
    this.earlier_than_today = false;\n\
    this.later_than_today = false;\n\
\n\
    this.$loading_more_up = undefined;\n\
    this.$loading_more_down = undefined;\n\
}\n\
\n\
AgendaViewModel.factory = function(click_handler){\n\
    var agendavm = new AgendaViewModel(),\n\
        handler = function(model){\n\
\n\
            agendavm.render();\n\
            agendavm.bind();\n\
            util.lightbox.close();\n\
        };\n\
\n\
    util.lightbox.working(new LightboxWorkingViewModel(window.translate(\"Start\"), window.translate(\"Loading Calendar Items...\")));\n\
    agendavm.set_model(Model.get(handler));\n\
\n\
    if(click_handler){\n\
        agendavm.click_handler = click_handler;\n\
    }\n\
\n\
    return agendavm;\n\
}\n\
\n\
AgendaViewModel.prototype.set_model = function (model) {\n\
    this.model = model;\n\
}\n\
\n\
AgendaViewModel.prototype.render = function () {\n\
    var self = this,\n\
        focued_date = self.model.focused_datetime.format(\"YYYY-MM-DD\"),\n\
        today = moment().format(\"YYYY-MM-DD\"),\n\
        date_list = self.date_list;\n\
\n\
    if(!self.model){\n\
        //this.render_loading();\n\
        return;\n\
    };\n\
\n\
    if(focued_date === today){\n\
        self.earlier_than_today = true;\n\
        self.later_than_today = true;\n\
    }\n\
    else if(focued_date < today){\n\
        self.earlier_than_today = true;\n\
    }\n\
    else{\n\
        self.later_than_today = true;\n\
    }\n\
\n\
    if(self.model.current_events && self.model.current_events.length > 0){\n\
        self.model.current_events.forEach(function(agenda_event){\n\
            var date_view = self.get_date_view(agenda_event,'down');\n\
            date_view.append_event(AgendaEvent.factory(agenda_event,self.click_handler));\n\
        });\n\
    }\n\
\n\
    //if init agenda is empty\n\
    if(!(focued_date in date_list)){\n\
        self.add_empty_date_view(focued_date,'down','');\n\
    }\n\
\n\
    if(!self.model.cached_events_down || self.model.cached_events_down.length === 0){\n\
        self.later_than_today = true;\n\
        if(self.earlier_than_today\n\
            && self.later_than_today\n\
            && !(today in self.date_list)){\n\
            self.add_empty_date_view(today,'down','');\n\
        }\n\
    }\n\
\n\
    self.adjust_scroll();\n\
    self.$el.scrollTop = 1;\n\
}\n\
\n\
AgendaViewModel.prototype.add_empty_date_view = function (empty_date,direction,message) {\n\
    var self = this,\n\
        date_list = self.date_list;\n\
\n\
    var view = new AgendaDate.factory(empty_date, self);\n\
    date_list[empty_date] = view;\n\
\n\
    if(direction === 'up'){\n\
        var $date_el = view.render();\n\
        self.$el.insertBefore($date_el,self.$el.firstChild);\n\
        self.adjust_scroll($date_el.offsetHeight);\n\
    }\n\
    else{\n\
        self.$el.appendChild(view.render());\n\
    }\n\
}\n\
\n\
AgendaViewModel.prototype.adjust_scroll = function (new_el_offsetHeight) {\n\
    var self = this,\n\
        $el = self.$el;\n\
\n\
    if($el.scrollHeight < self.max_height){\n\
        $el.style.height = ($el.scrollHeight - 2) + 'px';\n\
    }\n\
    else{\n\
        $el.style.height = self.max_height + 'px';\n\
        if(new_el_offsetHeight){\n\
            $el.scrollTop = $el.scrollTop + new_el_offsetHeight;\n\
        }\n\
    }\n\
}\n\
\n\
AgendaViewModel.prototype.get_date_view = function (agenda_event,direction) {\n\
    var self = this,\n\
        return_view = undefined,\n\
        date_list = self.date_list,\n\
        agenda_date = moment(agenda_event.datetime()).format(\"YYYY-MM-DD\");\n\
\n\
    if(!(agenda_date in date_list)){\n\
        var focued_date = self.model.focused_datetime.format(\"YYYY-MM-DD\"),\n\
            today = moment().format(\"YYYY-MM-DD\");\n\
        if(!(focued_date in date_list)\n\
            && agenda_date > focued_date){\n\
            self.add_empty_date_view(focued_date,'down','');\n\
        }\n\
\n\
        if(agenda_date < today){\n\
            self.earlier_than_today = true;\n\
        }\n\
        else{\n\
            self.later_than_today = true;\n\
        }\n\
\n\
        if(self.earlier_than_today\n\
            && self.later_than_today\n\
            && !(today in date_list)\n\
            && agenda_date !== today){\n\
            self.add_empty_date_view(today,direction,'');\n\
        }\n\
\n\
        var date_view = new AgendaDate.factory(agenda_date, self);\n\
\n\
        date_list[agenda_date] = date_view;\n\
\n\
        if(direction === 'up'){\n\
            var $date_el = date_view.render();\n\
            self.$el.insertBefore($date_el,self.$el.firstChild);\n\
            self.adjust_scroll($date_el.offsetHeight);\n\
        }\n\
        else{\n\
            self.$el.appendChild(date_view.render());\n\
        }\n\
\n\
        return_view = date_view;\n\
    }\n\
    else{\n\
        return_view = date_list[agenda_date];\n\
    }\n\
\n\
    return return_view;\n\
}\n\
\n\
AgendaViewModel.prototype.bind = function () {\n\
    //scroll events\n\
    var self = this,\n\
        scroll_handler = function(){\n\
            if(this.scrollHeight - this.scrollTop === this.clientHeight){\n\
                self.append_events();\n\
                //alert(\"top\");\n\
            }\n\
            if(this.scrollTop === 0){\n\
                self.prepend_events();\n\
            }\n\
        };\n\
\n\
    self.$el.onscroll = scroll_handler;\n\
}\n\
\n\
AgendaViewModel.prototype.render_loading_more = function (direction) {\n\
    var self = this;\n\
\n\
    if(direction === 'up'){\n\
        if(!self.$loading_more_up){\n\
            self.$loading_more_up = $loading_more.cloneNode(true);\n\
            self.$el.insertBefore(self.$loading_more_up,self.$el.firstChild);\n\
            classes(self.$loading_more_up).add('up');\n\
        }\n\
    }\n\
    else{\n\
        if(!self.$loading_more_down){\n\
            self.$loading_more_down = $loading_more.cloneNode(true);\n\
            self.$el.appendChild(self.$loading_more_down);\n\
            classes(self.$loading_more_down).add('down');\n\
        }\n\
    }\n\
}\n\
\n\
AgendaViewModel.prototype.remove_loading_more = function (direction) {\n\
    var self = this;\n\
\n\
    if(direction === 'up'){\n\
        if(self.$loading_more_up){\n\
            var handler_down = function() {\n\
                self.$el.removeChild(self.$loading_more_up);\n\
                self.$loading_more_up = undefined;\n\
                self.prepend_events();\n\
            }\n\
\n\
            classes(self.$loading_more_up).add('disappear');\n\
            setTimeout(handler_down,500);\n\
        }\n\
    }\n\
    else{\n\
        if(self.$loading_more_down){\n\
            var handler_down = function() {\n\
                self.$el.removeChild(self.$loading_more_down);\n\
                self.$loading_more_down = undefined;\n\
                self.append_events();\n\
            }\n\
\n\
            classes(self.$loading_more_down).add('disappear');\n\
            setTimeout(handler_down,500);\n\
        }\n\
    }\n\
\n\
}\n\
\n\
AgendaViewModel.prototype.append_events = function () {\n\
    var self = this,\n\
        $el = self.$el;\n\
\n\
    if(self.$loading_more_down){\n\
        return;\n\
    }\n\
\n\
    if(self.model.cached_events_down && self.model.cached_events_down.length > 0){\n\
        self.model.cached_events_down.forEach(function(agenda_event){\n\
            var date_view = self.get_date_view(agenda_event,'down');\n\
            date_view.append_event(AgendaEvent.factory(agenda_event,self.click_handler));\n\
        });\n\
        self.model.current_events = self.model.current_events.concat(self.model.cached_events_down);\n\
        self.model.cached_events_down = undefined;\n\
    }\n\
    else if(!self.model.endbottom && $el.scrollHeight - $el.scrollTop === $el.clientHeight)\n\
    {\n\
        //$el.scrollTop = $el.scrollHeight - $el.clientHeight - 1;\n\
        self.render_loading_more('down');\n\
    }\n\
\n\
    if(!self.model.endbottom && !self.model.loading_down){\n\
        self.model.load_consecutive_events('down',self.remove_loading_more.bind(self));\n\
    }\n\
    else if(self.model.endbottom){\n\
        var today = moment().format(\"YYYY-MM-DD\");\n\
        self.later_than_today = true;\n\
\n\
        if(self.earlier_than_today\n\
            && self.later_than_today\n\
            && !(today in self.date_list)){\n\
            self.add_empty_date_view(today,'down','');\n\
        }\n\
    }\n\
}\n\
\n\
AgendaViewModel.prototype.prepend_events = function () {\n\
    var self = this,\n\
        $el = self.$el;\n\
\n\
    if(self.$loading_more_up){\n\
        return;\n\
    }\n\
\n\
    if(self.model.cached_events_up && self.model.cached_events_up.length > 0){\n\
        self.model.cached_events_up.reverse().forEach(function(agenda_event){\n\
            var $event_el,\n\
                date_view = self.get_date_view(agenda_event,'up');\n\
\n\
            $event_el = date_view.prepend_event(AgendaEvent.factory(agenda_event,self.click_handler));\n\
\n\
            self.adjust_scroll($event_el.offsetHeight);\n\
        });\n\
        self.model.current_events = self.model.cached_events_up.concat(self.model.current_events);\n\
        self.model.cached_events_up = undefined;\n\
    }\n\
    else if(!self.model.endtop && $el.scrollTop === 0)\n\
    {\n\
        //$el.scrollTop = 1;\n\
        self.render_loading_more('up');\n\
    }\n\
\n\
    if(!self.model.endtop && !self.model.loading_up){\n\
        self.model.load_consecutive_events('up',self.remove_loading_more.bind(self));\n\
    }\n\
    else if(self.model.endtop){\n\
        var today = moment().format(\"YYYY-MM-DD\");\n\
        self.earlier_than_today = true;\n\
\n\
        if(self.earlier_than_today\n\
            && self.later_than_today\n\
            && !(today in self.date_list)){\n\
            self.add_empty_date_view(today,'up','');\n\
        }\n\
    }\n\
}\n\
\n\
AgendaViewModel.prototype.reset = function (if_today) {\n\
    var self = this,\n\
        reload_handler = function () {\n\
            self.clean();\n\
            self.render();\n\
            util.lightbox.close();\n\
        };\n\
\n\
    util.lightbox.working(new LightboxWorkingViewModel(window.translate(\"Start\"), window.translate(\"Loading Calendar Items...\")));\n\
    if (if_today) {\n\
        self.model.set_focused_date(moment().startOf('day'));\n\
    }\n\
    self.model.reload(reload_handler);\n\
}\n\
\n\
AgendaViewModel.prototype.clean = function () {\n\
    var self = this;\n\
\n\
    this.date_list = new Array();\n\
\n\
    this.earlier_than_today = false;\n\
    this.later_than_today = false;\n\
\n\
    while (self.$el.firstChild) {\n\
      self.$el.removeChild(self.$el.firstChild);\n\
    }\n\
\n\
    self.$el.style.height = '';\n\
    self.$loading_more_down = undefined;\n\
    self.$loading_more_up = undefined;\n\
\n\
}\n\
\n\
AgendaViewModel.prototype.set_search_key = function (search_key) {\n\
    var self = this;\n\
    if(self.model){\n\
        self.model.search = search_key;\n\
    }\n\
}\n\
\n\
AgendaViewModel.prototype.get_date = function (format_str) {\n\
    format_str = format_str || 'LL';\n\
    return this.model.focused_datetime.format(format_str);\n\
}\n\
\n\
AgendaViewModel.prototype.render_loading = function () {\n\
    var message = 'Loading...';\n\
    this.loading_state.set_el(this.$el);\n\
\n\
    this.loading_state.show(message);\n\
\n\
    return this.$el;\n\
};\n\
\n\
\n\
module.exports = AgendaViewModel;//@ sourceURL=agenda/index.js"
));
require.register("agenda/views/agenda-event.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    $template = domify(require('../templates/agenda-event.js')),\n\
    classes = require('classes'),\n\
    moment = require('moment'),\n\
    events = require('event');\n\
\n\
function AgendaEventViewModel(){\n\
    this.$el = $template.cloneNode(true);\n\
    this.strings = {\n\
        \"Saving\": window.translate(\"Saving\"),\n\
        \"Type\": window.translate(\"Type\")\n\
    };\n\
    this.event_handlers = [];\n\
    this.click_handler = undefined;\n\
}\n\
\n\
AgendaEventViewModel.factory = function(model,click_handler){\n\
    var view = new AgendaEventViewModel();\n\
\n\
    view.model = model;\n\
    //view.model.set_view(view);\n\
    if(click_handler){\n\
        view.click_handler = click_handler;\n\
    }\n\
\n\
    return view;\n\
}\n\
\n\
AgendaEventViewModel.prototype.bind = function () {\n\
    var self = this,\n\
        $el = self.$el,\n\
        model = self.model,\n\
        $name = $el.querySelector('.description .name'),\n\
        $template_name = $el.querySelector('.test-template'),\n\
        $status = $el.querySelector('.status'),\n\
        $time = $el.querySelector('.time'),\n\
        $duration = $el.querySelector('.duration');\n\
\n\
    $name.textContent = model.name();\n\
    if (model.test_config()) {\n\
        $template_name.textContent = self.strings.Type + ': ' + model.test_config().template_name;\n\
        $duration.textContent = model.test_config().duration + (model.test_config().duration === 1?' minute':' minutes');\n\
    }\n\
    classes($status).add(model.status() || 'scheduled');\n\
    $time.textContent = moment(model.datetime()).format('LT');\n\
    $el.setAttribute('event_id', 'AG' + moment(model.datetime()).format(\"YYYYMMDDHHmmss\"));\n\
\n\
    if(self.click_handler){\n\
        events.bind($el, 'click', self.click_handler.bind(self));\n\
    }\n\
\n\
}\n\
\n\
AgendaEventViewModel.prototype.render = function () {\n\
    this.bind();\n\
    return this.$el;\n\
}\n\
\n\
AgendaEventViewModel.prototype.destroy = function () {\n\
\n\
}\n\
\n\
\n\
module.exports = AgendaEventViewModel;//@ sourceURL=agenda/views/agenda-event.js"
));
require.register("agenda/views/agenda-date.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    $template = domify(require('../templates/agenda-date.js')),\n\
    moment = require('moment'),\n\
    classes = require('classes');\n\
\n\
function AgendaDateModelView(){\n\
    var self = this;\n\
    self.$el = $template.cloneNode(true);\n\
    self.agenda_date = undefined;\n\
    self.events_count = 0;\n\
    self.parent = undefined;\n\
    self.strings = {\n\
        \"Today\": window.translate(\"Today\")\n\
    };\n\
}\n\
\n\
AgendaDateModelView.factory = function(agenda_date, agenda){\n\
    var view = new AgendaDateModelView();\n\
    view.agenda_date = moment(agenda_date);\n\
\n\
    if(agenda){\n\
        view.parent = agenda;\n\
    }\n\
\n\
    return view;\n\
}\n\
\n\
AgendaDateModelView.prototype.render = function(){\n\
    this.bind();\n\
    return this.$el;\n\
}\n\
\n\
AgendaDateModelView.prototype.bind = function(){\n\
    var self = this,\n\
        $el = this.$el,\n\
        $title = $el.querySelector('.title');\n\
\n\
\n\
    if(moment().format(\"YYYY-MM-DD\") === self.agenda_date.format(\"YYYY-MM-DD\")){\n\
        classes($el).add(\"today\");\n\
        $title.textContent = self.strings.Today;\n\
    } else {\n\
        $title.textContent = self.agenda_date.format('dddd, LL');\n\
    }\n\
\n\
    if(self.parent && self.parent.get_date(\"YYYY-MM-DD\") === self.agenda_date.format(\"YYYY-MM-DD\")){\n\
        classes($el).add(\"focused\");\n\
    }\n\
}\n\
\n\
AgendaDateModelView.prototype.append_event = function(agenda_event_view){\n\
    var self = this,\n\
        $events = self.$el.querySelector('.events'),\n\
        $agenda_event_el = agenda_event_view.render();\n\
\n\
    $events.appendChild($agenda_event_el);\n\
    self.events_count++;\n\
    return $agenda_event_el;\n\
}\n\
\n\
AgendaDateModelView.prototype.prepend_event = function(agenda_event_view){\n\
    var self = this,\n\
        $events = self.$el.querySelector('.events'),\n\
        $agenda_event_el = agenda_event_view.render();\n\
\n\
    $events.insertBefore($agenda_event_el,$events.firstChild);\n\
    self.events_count++;\n\
    return $agenda_event_el;\n\
}\n\
\n\
module.exports = AgendaDateModelView;//@ sourceURL=agenda/views/agenda-date.js"
));
require.register("agenda/models/agenda.js", Function("exports, require, module",
"var request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    AgendaEventModel = require('./agenda-event.js'),\n\
    moment = require('moment'),\n\
    tz = window.jstz.determine();\n\
\n\
function AgendaModel(){\n\
    var self = this;\n\
    self.qty = 15;\n\
    self.current_events = undefined;\n\
    self.cached_events_up = undefined;\n\
    self.cached_events_down = undefined;\n\
\n\
    self.focused_datetime = moment().startOf('day');\n\
    self.earliest_time = undefined;\n\
    self.latest_time = undefined;\n\
    self.endtop = false;\n\
    self.endbottom = false;\n\
    self.loading_up = false;\n\
    self.loading_bottom = false;\n\
    self.search = '';\n\
\n\
}\n\
\n\
AgendaModel.get = function(done){\n\
    var model = new AgendaModel();\n\
\n\
    model.load_event_by_datetime(done);\n\
    return model;\n\
}\n\
\n\
AgendaModel.prototype.reload = function(done){\n\
    var self = this;\n\
\n\
    self.current_events = undefined;\n\
    self.cached_events_up = undefined;\n\
    self.cached_events_down = undefined;\n\
\n\
    self.earliest_time = undefined;\n\
    self.latest_time = undefined;\n\
    self.endtop = false;\n\
    self.endbottom = false;\n\
    self.loading_up = false;\n\
    self.loading_bottom = false;\n\
\n\
    self.load_event_by_datetime(done);\n\
}\n\
\n\
AgendaModel.prototype.load_event_by_datetime = function(callback){\n\
    callback = callback || function(){};\n\
    var self = this;\n\
\n\
    request\n\
        .get('/spirent/agenda')\n\
        .use(no_cache)\n\
        .query('date_time=' + self.focused_datetime.format(\"YYYY-MM-DD HH:mm\"))\n\
        .query('qty=' + self.qty)\n\
        .query('timezone=' + tz.name())\n\
        .query('search=' + self.search)\n\
        .set('Accept', 'application/json')\n\
        .end(function(error, response){\n\
            var data;\n\
\n\
            if(error){\n\
                return callback(null,error);\n\
            };\n\
\n\
            if( response.body && response.body.result === 'FAILURE' ){\n\
                return callback(null,response.body.message);\n\
            };\n\
\n\
            data =  response.body;\n\
\n\
            self.inflate_with_data(data);\n\
\n\
            return callback(self);\n\
\n\
\n\
        });\n\
\n\
\n\
    return self;\n\
}\n\
\n\
AgendaModel.prototype.inflate_with_data = function(data) {\n\
    var self = this;\n\
\n\
    if(data.result && data.result.length > 0){\n\
        self.current_events = data.result.map(function(event){\n\
            return AgendaEventModel.factory(event);\n\
        });\n\
    }\n\
\n\
    if(data.up && data.up.length > 0){\n\
        self.cached_events_up = data.up.map(function(event){\n\
            return AgendaEventModel.factory(event);\n\
        });\n\
    }\n\
\n\
    if(data.down && data.down.length > 0){\n\
        self.cached_events_down = data.down.map(function(event){\n\
            return AgendaEventModel.factory(event);\n\
        });\n\
    }\n\
\n\
    if(data.endtop){\n\
       self.endtop = data.endtop;\n\
    }\n\
\n\
    if(data.endbottom){\n\
        self.endbottom = data.endbottom;\n\
    }\n\
\n\
    if(data.earliest_time){\n\
        self.earliest_time = moment(data.earliest_time);\n\
    }\n\
\n\
    if(data.latest_time){\n\
        self.latest_time = moment(data.latest_time);\n\
    }\n\
\n\
\n\
    //self.earliest_time\n\
\n\
}\n\
\n\
\n\
AgendaModel.prototype.load_consecutive_events = function(direction, callback) {\n\
    callback = callback || function(){};\n\
    var self = this,\n\
        date_time = undefined;\n\
\n\
    if(direction === 'up'){\n\
        self.loading_up = true;\n\
        date_time = self.earliest_time;\n\
    }\n\
    else if(direction === 'down'){\n\
        self.loading_down = true;\n\
        date_time = self.latest_time;\n\
    }\n\
\n\
    request\n\
        .get('/spirent/agenda/' + direction)\n\
        .use(no_cache)\n\
        .query('date_time=' + date_time.format(\"YYYY-MM-DD HH:mm\"))\n\
        .query('qty=' + self.qty)\n\
        .query('timezone=' + tz.name())\n\
        .query('search=' + self.search)\n\
        .set('Accept', 'application/json')\n\
        .end(function(error, response){\n\
            var data;\n\
\n\
            if(error){\n\
                return callback(null,error);\n\
            };\n\
\n\
            if( response.body && response.body.result === 'FAILURE' ){\n\
                return callback(null,response.body.message);\n\
            };\n\
\n\
            data =  response.body;\n\
\n\
            self.inflate_with_data(data);\n\
\n\
            //return callback(self);\n\
\n\
            if(direction === 'up'){\n\
                self.loading_up = false;\n\
            }\n\
            else if(direction === 'down'){\n\
                self.loading_down = false;\n\
            }\n\
            callback(direction);\n\
        });\n\
}\n\
\n\
AgendaModel.prototype.set_focused_date = function(datetime){\n\
    var self = this;\n\
    self.focused_datetime = datetime;\n\
}\n\
\n\
AgendaModel.prototype.shift_focused_date = function(days){\n\
    var self = this;\n\
    self.focused_datetime = self.focused_datetime.add('days', days);\n\
}\n\
\n\
module.exports = AgendaModel;//@ sourceURL=agenda/models/agenda.js"
));
require.register("agenda/models/agenda-event.js", Function("exports, require, module",
"var model = require('model'),\n\
    request = require('superagent');\n\
\n\
var AgendaEventModel = model('AgendaEventModel')\n\
                    .attr('datetime')\n\
                    .attr('name')\n\
                    .attr('type')\n\
                    .attr('duration')\n\
                    .attr('event_info')\n\
                    .attr('test_result_id')\n\
                    .attr('status')\n\
                    .attr('error_reason')\n\
                    .attr('remote_devices')\n\
                    .attr('test_config');\n\
\n\
AgendaEventModel.factory = function(model){\n\
    var model = new AgendaEventModel(model);\n\
\n\
    return model;\n\
}\n\
\n\
\n\
AgendaEventModel.prototype.set_view = function(view){\n\
    this.view = view;\n\
}\n\
\n\
AgendaEventModel.prototype.cancelTestEvent = function(done){\n\
    var id = this.event_info().id;\n\
    request\n\
        .post('/spirent/schedule/test-events/' + id + '/cancel')\n\
        .send('')\n\
        .set('Accept', 'application/json')\n\
        .end(function (err, res) {\n\
            if (err || res.body.result === 'FAILURE') {\n\
                window.logger.error(err || res.body);\n\
                window.util.lightbox.error(window.translate(\"Canceling scheduled test\"));\n\
                return;\n\
            }\n\
\n\
            return done(res);\n\
        });\n\
}\n\
\n\
module.exports = AgendaEventModel;//@ sourceURL=agenda/models/agenda-event.js"
));
require.register("agenda/templates/index.js", Function("exports, require, module",
"module.exports = '<div class=\"agenda\"></div>';//@ sourceURL=agenda/templates/index.js"
));
require.register("agenda/templates/agenda-event.js", Function("exports, require, module",
"module.exports = '<div class=\"agenda-event\">\\n\
    <div class=\"time\"></div>\\n\
    <div class=\"status\"></div>\\n\
    <div class=\"description\">\\n\
        <div class=\"name\"></div>\\n\
        <div class=\"test-template\"></div>\\n\
    </div>\\n\
    <div class=\"duration\"></div>\\n\
    <div class=\"clear\"></div>\\n\
</div>';//@ sourceURL=agenda/templates/agenda-event.js"
));
require.register("agenda/templates/agenda-date.js", Function("exports, require, module",
"module.exports = '<div class=\"agenda-day\">\\n\
    <h2 class=\"title\"></h2>\\n\
    <div class=\"events\"></div>\\n\
</div>';//@ sourceURL=agenda/templates/agenda-date.js"
));
require.register("agenda/templates/loading-more.js", Function("exports, require, module",
"module.exports = '<div class=\"loading-more\">Loading more ...</div>';//@ sourceURL=agenda/templates/loading-more.js"
));
require.register("bootstrap-timepicker/index.js", Function("exports, require, module",
"require(\"./js/bootstrap-timepicker.min.js\");//@ sourceURL=bootstrap-timepicker/index.js"
));
require.register("bootstrap-timepicker/js/bootstrap-timepicker.min.js", Function("exports, require, module",
"//TODO: move arrow styles and button click code into configurable items, with defaults matching the existing code\n\
\n\
/*!\n\
* Timepicker Component for Twitter Bootstrap\n\
*\n\
* Copyright 2013 Joris de Wit\n\
*\n\
* Contributors https://github.com/jdewit/bootstrap-timepicker/graphs/contributors\n\
*\n\
* For the full copyright and license information, please view the LICENSE\n\
* file that was distributed with this source code.\n\
*/\n\
(function($, window, document, undefined) {\n\
  'use strict';\n\
\n\
  // TIMEPICKER PUBLIC CLASS DEFINITION\n\
  var Timepicker = function(element, options) {\n\
    this.widget = '';\n\
    this.$element = $(element);\n\
    this.defaultTime = options.defaultTime;\n\
    this.disableFocus = options.disableFocus;\n\
    this.isOpen = options.isOpen;\n\
    this.minuteStep = options.minuteStep;\n\
    this.modalBackdrop = options.modalBackdrop;\n\
    this.secondStep = options.secondStep;\n\
    this.showInputs = options.showInputs;\n\
    this.showMeridian = options.showMeridian;\n\
    this.showSeconds = options.showSeconds;\n\
    this.template = options.template;\n\
    this.appendWidgetTo = options.appendWidgetTo;\n\
    this.upArrowStyle = options.upArrowStyle;\n\
    this.downArrowStyle = options.downArrowStyle;\n\
    this.containerClass = options.containerClass;\n\
\n\
    this._init();\n\
  };\n\
\n\
  Timepicker.prototype = {\n\
\n\
    constructor: Timepicker,\n\
\n\
    _init: function() {\n\
      var self = this;\n\
\n\
      if (this.$element.parent().hasClass('input-group')) {\n\
        if (this.$element.parent('.input-group').find('.input-group-addon').length) {\n\
          this.$element.parent('.input-group').find('.input-group-addon').on({\n\
            'click.timepicker': $.proxy(this.showWidget, this)\n\
          });\n\
        } else {\n\
          this.$element.closest(this.containerClass).find('.input-group-addon').on({\n\
            'click.timepicker': $.proxy(this.showWidget, this)\n\
          });\n\
        }\n\
\n\
        this.$element.on({\n\
          'focus.timepicker': $.proxy(this.highlightUnit, this),\n\
          'click.timepicker': $.proxy(this.highlightUnit, this),\n\
          'keydown.timepicker': $.proxy(this.elementKeydown, this),\n\
          'blur.timepicker': $.proxy(this.blurElement, this)\n\
        });\n\
      } else {\n\
        if (this.template) {\n\
          this.$element.on({\n\
            'focus.timepicker': $.proxy(this.showWidget, this),\n\
            'click.timepicker': $.proxy(this.showWidget, this),\n\
            'blur.timepicker': $.proxy(this.blurElement, this)\n\
          });\n\
        } else {\n\
          this.$element.on({\n\
            'focus.timepicker': $.proxy(this.highlightUnit, this),\n\
            'click.timepicker': $.proxy(this.highlightUnit, this),\n\
            'keydown.timepicker': $.proxy(this.elementKeydown, this),\n\
            'blur.timepicker': $.proxy(this.blurElement, this)\n\
          });\n\
        }\n\
      }\n\
\n\
      if (this.template !== false) {\n\
        this.$widget = $(this.getTemplate()).prependTo(this.$element.parents(this.appendWidgetTo)).on('click', $.proxy(this.widgetClick, this));\n\
      } else {\n\
        this.$widget = false;\n\
      }\n\
\n\
      if (this.showInputs && this.$widget !== false) {\n\
        this.$widget.find('input').each(function() {\n\
          $(this).on({\n\
            'click.timepicker': function() { $(this).select(); },\n\
            'keydown.timepicker': $.proxy(self.widgetKeydown, self)\n\
          });\n\
        });\n\
      }\n\
\n\
      this.setDefaultTime(this.defaultTime);\n\
    },\n\
\n\
    blurElement: function() {\n\
      this.highlightedUnit = undefined;\n\
      this.updateFromElementVal();\n\
    },\n\
\n\
    decrementHour: function() {\n\
      if (this.showMeridian) {\n\
        if (this.hour === 1) {\n\
          this.hour = 12;\n\
        } else if (this.hour === 12) {\n\
          this.hour--;\n\
\n\
          return this.toggleMeridian();\n\
        } else if (this.hour === 0) {\n\
          this.hour = 11;\n\
\n\
          return this.toggleMeridian();\n\
        } else {\n\
          this.hour--;\n\
        }\n\
      } else {\n\
        if (this.hour === 0) {\n\
          this.hour = 23;\n\
        } else {\n\
          this.hour--;\n\
        }\n\
      }\n\
      this.update();\n\
    },\n\
\n\
    decrementMinute: function(step) {\n\
      var newVal;\n\
\n\
      if (step) {\n\
        newVal = this.minute - step;\n\
      } else {\n\
        newVal = this.minute - this.minuteStep;\n\
      }\n\
\n\
      if (newVal < 0) {\n\
        this.decrementHour();\n\
        this.minute = newVal + 60;\n\
      } else {\n\
        this.minute = newVal;\n\
      }\n\
      this.update();\n\
    },\n\
\n\
    decrementSecond: function() {\n\
      var newVal = this.second - this.secondStep;\n\
\n\
      if (newVal < 0) {\n\
        this.decrementMinute(true);\n\
        this.second = newVal + 60;\n\
      } else {\n\
        this.second = newVal;\n\
      }\n\
      this.update();\n\
    },\n\
\n\
    elementKeydown: function(e) {\n\
      switch (e.keyCode) {\n\
      case 9: //tab\n\
        this.updateFromElementVal();\n\
\n\
        switch (this.highlightedUnit) {\n\
        case 'hour':\n\
          e.preventDefault();\n\
          this.highlightNextUnit();\n\
          break;\n\
        case 'minute':\n\
          if (this.showMeridian || this.showSeconds) {\n\
            e.preventDefault();\n\
            this.highlightNextUnit();\n\
          }\n\
          break;\n\
        case 'second':\n\
          if (this.showMeridian) {\n\
            e.preventDefault();\n\
            this.highlightNextUnit();\n\
          }\n\
          break;\n\
        }\n\
        break;\n\
      case 27: // escape\n\
        this.updateFromElementVal();\n\
        break;\n\
      case 37: // left arrow\n\
        e.preventDefault();\n\
        this.highlightPrevUnit();\n\
        this.updateFromElementVal();\n\
        break;\n\
      case 38: // up arrow\n\
        e.preventDefault();\n\
        switch (this.highlightedUnit) {\n\
        case 'hour':\n\
          this.incrementHour();\n\
          this.highlightHour();\n\
          break;\n\
        case 'minute':\n\
          this.incrementMinute();\n\
          this.highlightMinute();\n\
          break;\n\
        case 'second':\n\
          this.incrementSecond();\n\
          this.highlightSecond();\n\
          break;\n\
        case 'meridian':\n\
          this.toggleMeridian();\n\
          this.highlightMeridian();\n\
          break;\n\
        }\n\
        break;\n\
      case 39: // right arrow\n\
        e.preventDefault();\n\
        this.updateFromElementVal();\n\
        this.highlightNextUnit();\n\
        break;\n\
      case 40: // down arrow\n\
        e.preventDefault();\n\
        switch (this.highlightedUnit) {\n\
        case 'hour':\n\
          this.decrementHour();\n\
          this.highlightHour();\n\
          break;\n\
        case 'minute':\n\
          this.decrementMinute();\n\
          this.highlightMinute();\n\
          break;\n\
        case 'second':\n\
          this.decrementSecond();\n\
          this.highlightSecond();\n\
          break;\n\
        case 'meridian':\n\
          this.toggleMeridian();\n\
          this.highlightMeridian();\n\
          break;\n\
        }\n\
        break;\n\
      }\n\
    },\n\
\n\
    formatTime: function(hour, minute, second, meridian) {\n\
      hour = hour < 10 ? '0' + hour : hour;\n\
      minute = minute < 10 ? '0' + minute : minute;\n\
      second = second < 10 ? '0' + second : second;\n\
\n\
      return hour + ':' + minute + (this.showSeconds ? ':' + second : '') + (this.showMeridian ? ' ' + meridian : '');\n\
    },\n\
\n\
    getCursorPosition: function() {\n\
      var input = this.$element.get(0);\n\
\n\
      if ('selectionStart' in input) {// Standard-compliant browsers\n\
\n\
        return input.selectionStart;\n\
      } else if (document.selection) {// IE fix\n\
        input.focus();\n\
        var sel = document.selection.createRange(),\n\
          selLen = document.selection.createRange().text.length;\n\
\n\
        sel.moveStart('character', - input.value.length);\n\
\n\
        return sel.text.length - selLen;\n\
      }\n\
    },\n\
\n\
    getTemplate: function() {\n\
      var template,\n\
        hourTemplate,\n\
        minuteTemplate,\n\
        secondTemplate,\n\
        meridianTemplate,\n\
        templateContent;\n\
\n\
      if (this.showInputs) {\n\
        hourTemplate = '<input type=\"text\" name=\"hour\" class=\"bootstrap-timepicker-hour form-control\" maxlength=\"2\"/>';\n\
        minuteTemplate = '<input type=\"text\" name=\"minute\" class=\"bootstrap-timepicker-minute form-control\" maxlength=\"2\"/>';\n\
        secondTemplate = '<input type=\"text\" name=\"second\" class=\"bootstrap-timepicker-second form-control\" maxlength=\"2\"/>';\n\
        meridianTemplate = '<input type=\"text\" name=\"meridian\" class=\"bootstrap-timepicker-meridian form-control\" maxlength=\"2\"/>';\n\
      } else {\n\
        hourTemplate = '<span class=\"bootstrap-timepicker-hour\"></span>';\n\
        minuteTemplate = '<span class=\"bootstrap-timepicker-minute\"></span>';\n\
        secondTemplate = '<span class=\"bootstrap-timepicker-second\"></span>';\n\
        meridianTemplate = '<span class=\"bootstrap-timepicker-meridian\"></span>';\n\
      }\n\
\n\
      templateContent = '<table>'+\n\
         '<tr>'+\n\
           '<td><a href=\"#\" data-action=\"incrementHour\"><i class=\"' + this.upArrowStyle + '\"></i></a></td>'+\n\
           '<td class=\"separator\">&nbsp;</td>'+\n\
           '<td><a href=\"#\" data-action=\"incrementMinute\"><i class=\"' + this.upArrowStyle + '\"></i></a></td>'+\n\
           (this.showSeconds ?\n\
             '<td class=\"separator\">&nbsp;</td>'+\n\
             '<td><a href=\"#\" data-action=\"incrementSecond\"><i class=\"' + this.upArrowStyle + '\"></i></a></td>'\n\
           : '') +\n\
           (this.showMeridian ?\n\
             '<td class=\"separator\">&nbsp;</td>'+\n\
             '<td class=\"meridian-column\"><a href=\"#\" data-action=\"toggleMeridian\"><i class=\"' + this.upArrowStyle + '\"></i></a></td>'\n\
           : '') +\n\
         '</tr>'+\n\
         '<tr>'+\n\
           '<td>'+ hourTemplate +'</td> '+\n\
           '<td class=\"separator\">:</td>'+\n\
           '<td>'+ minuteTemplate +'</td> '+\n\
           (this.showSeconds ?\n\
            '<td class=\"separator\">:</td>'+\n\
            '<td>'+ secondTemplate +'</td>'\n\
           : '') +\n\
           (this.showMeridian ?\n\
            '<td class=\"separator\">&nbsp;</td>'+\n\
            '<td>'+ meridianTemplate +'</td>'\n\
           : '') +\n\
         '</tr>'+\n\
         '<tr>'+\n\
           '<td><a href=\"#\" data-action=\"decrementHour\"><i class=\"' + this.downArrowStyle + '\"></i></a></td>'+\n\
           '<td class=\"separator\"></td>'+\n\
           '<td><a href=\"#\" data-action=\"decrementMinute\"><i class=\"' + this.downArrowStyle + '\"></i></a></td>'+\n\
           (this.showSeconds ?\n\
            '<td class=\"separator\">&nbsp;</td>'+\n\
            '<td><a href=\"#\" data-action=\"decrementSecond\"><i class=\"' + this.downArrowStyle + '\"></i></a></td>'\n\
           : '') +\n\
           (this.showMeridian ?\n\
            '<td class=\"separator\">&nbsp;</td>'+\n\
            '<td><a href=\"#\" data-action=\"toggleMeridian\"><i class=\"' + this.downArrowStyle + '\"></i></a></td>'\n\
           : '') +\n\
         '</tr>'+\n\
       '</table>';\n\
\n\
      switch(this.template) {\n\
      case 'modal':\n\
        template = '<div class=\"bootstrap-timepicker-widget modal hide fade in\" data-backdrop=\"'+ (this.modalBackdrop ? 'true' : 'false') +'\">'+\n\
          '<div class=\"modal-header\">'+\n\
            '<a href=\"#\" class=\"close\" data-dismiss=\"modal\">×</a>'+\n\
            '<h3>Pick a Time</h3>'+\n\
          '</div>'+\n\
          '<div class=\"modal-content\">'+\n\
            templateContent +\n\
          '</div>'+\n\
          '<div class=\"modal-footer\">'+\n\
            '<a href=\"#\" class=\"btn btn-primary\" data-dismiss=\"modal\">OK</a>'+\n\
          '</div>'+\n\
        '</div>';\n\
        break;\n\
      case 'dropdown':\n\
        template = '<div class=\"bootstrap-timepicker-widget dropdown-menu\">'+ templateContent +'</div>';\n\
        break;\n\
      }\n\
\n\
      return template;\n\
    },\n\
\n\
    getTime: function() {\n\
      return this.formatTime(this.hour, this.minute, this.second, this.meridian);\n\
    },\n\
\n\
    hideWidget: function() {\n\
      if (this.isOpen === false) {\n\
        return;\n\
      }\n\
\n\
      if (this.showInputs) {\n\
        this.updateFromWidgetInputs();\n\
      }\n\
\n\
      this.$element.trigger({\n\
        'type': 'hide.timepicker',\n\
        'time': {\n\
          'value': this.getTime(),\n\
          'hours': this.hour,\n\
          'minutes': this.minute,\n\
          'seconds': this.second,\n\
          'meridian': this.meridian\n\
        }\n\
      });\n\
\n\
      if (this.template === 'modal' && this.$widget.modal) {\n\
        this.$widget.modal('hide');\n\
      } else {\n\
        this.$widget.removeClass('open');\n\
      }\n\
\n\
      $(document).off('mousedown.timepicker');\n\
\n\
      this.isOpen = false;\n\
    },\n\
\n\
    highlightUnit: function() {\n\
      this.position = this.getCursorPosition();\n\
      if (this.position >= 0 && this.position <= 2) {\n\
        this.highlightHour();\n\
      } else if (this.position >= 3 && this.position <= 5) {\n\
        this.highlightMinute();\n\
      } else if (this.position >= 6 && this.position <= 8) {\n\
        if (this.showSeconds) {\n\
          this.highlightSecond();\n\
        } else {\n\
          this.highlightMeridian();\n\
        }\n\
      } else if (this.position >= 9 && this.position <= 11) {\n\
        this.highlightMeridian();\n\
      }\n\
    },\n\
\n\
    highlightNextUnit: function() {\n\
      switch (this.highlightedUnit) {\n\
      case 'hour':\n\
        this.highlightMinute();\n\
        break;\n\
      case 'minute':\n\
        if (this.showSeconds) {\n\
          this.highlightSecond();\n\
        } else if (this.showMeridian){\n\
          this.highlightMeridian();\n\
        } else {\n\
          this.highlightHour();\n\
        }\n\
        break;\n\
      case 'second':\n\
        if (this.showMeridian) {\n\
          this.highlightMeridian();\n\
        } else {\n\
          this.highlightHour();\n\
        }\n\
        break;\n\
      case 'meridian':\n\
        this.highlightHour();\n\
        break;\n\
      }\n\
    },\n\
\n\
    highlightPrevUnit: function() {\n\
      switch (this.highlightedUnit) {\n\
      case 'hour':\n\
        this.highlightMeridian();\n\
        break;\n\
      case 'minute':\n\
        this.highlightHour();\n\
        break;\n\
      case 'second':\n\
        this.highlightMinute();\n\
        break;\n\
      case 'meridian':\n\
        if (this.showSeconds) {\n\
          this.highlightSecond();\n\
        } else {\n\
          this.highlightMinute();\n\
        }\n\
        break;\n\
      }\n\
    },\n\
\n\
    highlightHour: function() {\n\
      var $element = this.$element.get(0);\n\
\n\
      this.highlightedUnit = 'hour';\n\
\n\
      if ($element.setSelectionRange) {\n\
        setTimeout(function() {\n\
          $element.setSelectionRange(0,2);\n\
        }, 0);\n\
      }\n\
    },\n\
\n\
    highlightMinute: function() {\n\
      var $element = this.$element.get(0);\n\
      this.highlightedUnit = 'minute';\n\
\n\
      if ($element.setSelectionRange) {\n\
        setTimeout(function() {\n\
          $element.setSelectionRange(3,5);\n\
        }, 0);\n\
      }\n\
\n\
    },\n\
\n\
    highlightSecond: function() {\n\
      var $element = this.$element.get(0);\n\
\n\
      this.highlightedUnit = 'second';\n\
\n\
      if ($element.setSelectionRange) {\n\
        setTimeout(function() {\n\
          $element.setSelectionRange(6,8);\n\
        }, 0);\n\
      }\n\
    },\n\
\n\
    highlightMeridian: function() {\n\
      var $element = this.$element.get(0);\n\
      this.highlightedUnit = 'meridian';\n\
\n\
      if ($element.setSelectionRange) {\n\
        if (this.showSeconds) {\n\
          setTimeout(function() {\n\
            $element.setSelectionRange(9,11);\n\
          }, 0);\n\
        } else {\n\
          setTimeout(function() {\n\
            $element.setSelectionRange(6,8);\n\
          }, 0);\n\
        }\n\
      }\n\
    },\n\
\n\
    incrementHour: function() {\n\
      if (this.showMeridian) {\n\
        if (this.hour === 11) {\n\
          this.hour++;\n\
          return this.toggleMeridian();\n\
        } else if (this.hour === 12) {\n\
          this.hour = 0;\n\
        }\n\
      }\n\
      if (this.hour === 23) {\n\
        this.hour = 0;\n\
\n\
        return;\n\
      }\n\
      this.hour++;\n\
      this.update();\n\
    },\n\
\n\
    incrementMinute: function(step) {\n\
      var newVal;\n\
\n\
      if (step) {\n\
        newVal = this.minute + step;\n\
      } else {\n\
        newVal = this.minute + this.minuteStep - (this.minute % this.minuteStep);\n\
      }\n\
\n\
      if (newVal > 59) {\n\
        this.incrementHour();\n\
        this.minute = newVal - 60;\n\
      } else {\n\
        this.minute = newVal;\n\
      }\n\
      this.update();\n\
    },\n\
\n\
    incrementSecond: function() {\n\
      var newVal = this.second + this.secondStep - (this.second % this.secondStep);\n\
\n\
      if (newVal > 59) {\n\
        this.incrementMinute(true);\n\
        this.second = newVal - 60;\n\
      } else {\n\
        this.second = newVal;\n\
      }\n\
      this.update();\n\
    },\n\
\n\
    remove: function() {\n\
      $('document').off('.timepicker');\n\
      if (this.$widget) {\n\
        this.$widget.remove();\n\
      }\n\
      delete this.$element.data().timepicker;\n\
    },\n\
\n\
    setDefaultTime: function(defaultTime){\n\
      if (!this.$element.val()) {\n\
        if (defaultTime === 'current') {\n\
          var dTime = new Date(),\n\
            hours = dTime.getHours(),\n\
            minutes = Math.floor(dTime.getMinutes() / this.minuteStep) * this.minuteStep,\n\
            seconds = Math.floor(dTime.getSeconds() / this.secondStep) * this.secondStep,\n\
            meridian = 'AM';\n\
\n\
          if (this.showMeridian) {\n\
            if (hours === 0) {\n\
              hours = 12;\n\
            } else if (hours >= 12) {\n\
              if (hours > 12) {\n\
                hours = hours - 12;\n\
              }\n\
              meridian = 'PM';\n\
            } else {\n\
              meridian = 'AM';\n\
            }\n\
          }\n\
\n\
          this.hour = hours;\n\
          this.minute = minutes;\n\
          this.second = seconds;\n\
          this.meridian = meridian;\n\
\n\
          this.update();\n\
\n\
        } else if (defaultTime === false) {\n\
          this.hour = 0;\n\
          this.minute = 0;\n\
          this.second = 0;\n\
          this.meridian = 'AM';\n\
        } else {\n\
          this.setTime(defaultTime);\n\
        }\n\
      } else {\n\
        this.updateFromElementVal();\n\
      }\n\
    },\n\
\n\
    setTime: function(time) {\n\
      var arr,\n\
        timeArray;\n\
\n\
      if (this.showMeridian) {\n\
        arr = time.split(' ');\n\
        timeArray = arr[0].split(':');\n\
        this.meridian = arr[1];\n\
      } else {\n\
        timeArray = time.split(':');\n\
      }\n\
\n\
      this.hour = parseInt(timeArray[0], 10);\n\
      this.minute = parseInt(timeArray[1], 10);\n\
      this.second = parseInt(timeArray[2], 10);\n\
\n\
      if (isNaN(this.hour)) {\n\
        this.hour = 0;\n\
      }\n\
      if (isNaN(this.minute)) {\n\
        this.minute = 0;\n\
      }\n\
\n\
      if (this.showMeridian) {\n\
        if (this.hour > 12) {\n\
          this.hour = 12;\n\
        } else if (this.hour < 1) {\n\
          this.hour = 12;\n\
        }\n\
\n\
        if (this.meridian === 'am' || this.meridian === 'a') {\n\
          this.meridian = 'AM';\n\
        } else if (this.meridian === 'pm' || this.meridian === 'p') {\n\
          this.meridian = 'PM';\n\
        }\n\
\n\
        if (this.meridian !== 'AM' && this.meridian !== 'PM') {\n\
          this.meridian = 'AM';\n\
        }\n\
      } else {\n\
        if (this.hour >= 24) {\n\
          this.hour = 23;\n\
        } else if (this.hour < 0) {\n\
          this.hour = 0;\n\
        }\n\
      }\n\
\n\
      if (this.minute < 0) {\n\
        this.minute = 0;\n\
      } else if (this.minute >= 60) {\n\
        this.minute = 59;\n\
      }\n\
\n\
      if (this.showSeconds) {\n\
        if (isNaN(this.second)) {\n\
          this.second = 0;\n\
        } else if (this.second < 0) {\n\
          this.second = 0;\n\
        } else if (this.second >= 60) {\n\
          this.second = 59;\n\
        }\n\
      }\n\
\n\
      this.update();\n\
    },\n\
\n\
    showWidget: function() {\n\
      if (this.isOpen) {\n\
        return;\n\
      }\n\
\n\
      if (this.$element.is(':disabled')) {\n\
        return;\n\
      }\n\
\n\
      var self = this;\n\
      $(document).on('mousedown.timepicker', function (e) {\n\
        // Clicked outside the timepicker, hide it\n\
        if ($(e.target).closest('.bootstrap-timepicker-widget').length === 0) {\n\
          self.hideWidget();\n\
        }\n\
      });\n\
\n\
      this.$element.trigger({\n\
        'type': 'show.timepicker',\n\
        'time': {\n\
          'value': this.getTime(),\n\
          'hours': this.hour,\n\
          'minutes': this.minute,\n\
          'seconds': this.second,\n\
          'meridian': this.meridian\n\
        }\n\
      });\n\
\n\
      if (this.disableFocus) {\n\
        this.$element.blur();\n\
      }\n\
\n\
      this.updateFromElementVal();\n\
\n\
      if (this.template === 'modal' && this.$widget.modal) {\n\
        this.$widget.modal('show').on('hidden', $.proxy(this.hideWidget, this));\n\
      } else {\n\
        if (this.isOpen === false) {\n\
          this.$widget.addClass('open');\n\
        }\n\
      }\n\
\n\
      this.isOpen = true;\n\
    },\n\
\n\
    toggleMeridian: function() {\n\
      this.meridian = this.meridian === 'AM' ? 'PM' : 'AM';\n\
      this.update();\n\
    },\n\
\n\
    update: function() {\n\
      this.$element.trigger({\n\
        'type': 'changeTime.timepicker',\n\
        'time': {\n\
          'value': this.getTime(),\n\
          'hours': this.hour,\n\
          'minutes': this.minute,\n\
          'seconds': this.second,\n\
          'meridian': this.meridian\n\
        }\n\
      });\n\
\n\
      this.updateElement();\n\
      this.updateWidget();\n\
    },\n\
\n\
    updateElement: function() {\n\
      this.$element.val(this.getTime()).change();\n\
    },\n\
\n\
    updateFromElementVal: function() {\n\
      var val = this.$element.val();\n\
\n\
      if (val) {\n\
        this.setTime(val);\n\
      }\n\
    },\n\
\n\
    updateWidget: function() {\n\
      if (this.$widget === false) {\n\
        return;\n\
      }\n\
\n\
      var hour = this.hour < 10 ? '0' + this.hour : this.hour,\n\
          minute = this.minute < 10 ? '0' + this.minute : this.minute,\n\
          second = this.second < 10 ? '0' + this.second : this.second;\n\
\n\
      if (this.showInputs) {\n\
        this.$widget.find('input.bootstrap-timepicker-hour').val(hour);\n\
        this.$widget.find('input.bootstrap-timepicker-minute').val(minute);\n\
\n\
        if (this.showSeconds) {\n\
          this.$widget.find('input.bootstrap-timepicker-second').val(second);\n\
        }\n\
        if (this.showMeridian) {\n\
          this.$widget.find('input.bootstrap-timepicker-meridian').val(this.meridian);\n\
        }\n\
      } else {\n\
        this.$widget.find('span.bootstrap-timepicker-hour').text(hour);\n\
        this.$widget.find('span.bootstrap-timepicker-minute').text(minute);\n\
\n\
        if (this.showSeconds) {\n\
          this.$widget.find('span.bootstrap-timepicker-second').text(second);\n\
        }\n\
        if (this.showMeridian) {\n\
          this.$widget.find('span.bootstrap-timepicker-meridian').text(this.meridian);\n\
        }\n\
      }\n\
    },\n\
\n\
    updateFromWidgetInputs: function() {\n\
      if (this.$widget === false) {\n\
        return;\n\
      }\n\
      var time = $('input.bootstrap-timepicker-hour', this.$widget).val() + ':' +\n\
        $('input.bootstrap-timepicker-minute', this.$widget).val() +\n\
        (this.showSeconds ? ':' + $('input.bootstrap-timepicker-second', this.$widget).val() : '') +\n\
        (this.showMeridian ? ' ' + $('input.bootstrap-timepicker-meridian', this.$widget).val() : '');\n\
\n\
      this.setTime(time);\n\
    },\n\
\n\
    widgetClick: function(e) {\n\
      e.stopPropagation();\n\
      e.preventDefault();\n\
\n\
      var action = $(e.target).closest('a').data('action');\n\
      if (action) {\n\
        this[action]();\n\
      }\n\
    },\n\
\n\
    widgetKeydown: function(e) {\n\
      var $input = $(e.target).closest('input'),\n\
          name = $input.attr('name');\n\
\n\
      switch (e.keyCode) {\n\
      case 9: //tab\n\
        if (this.showMeridian) {\n\
          if (name === 'meridian') {\n\
            return this.hideWidget();\n\
          }\n\
        } else {\n\
          if (this.showSeconds) {\n\
            if (name === 'second') {\n\
              return this.hideWidget();\n\
            }\n\
          } else {\n\
            if (name === 'minute') {\n\
              return this.hideWidget();\n\
            }\n\
          }\n\
        }\n\
\n\
        this.updateFromWidgetInputs();\n\
        break;\n\
      case 27: // escape\n\
        this.hideWidget();\n\
        break;\n\
      case 38: // up arrow\n\
        e.preventDefault();\n\
        switch (name) {\n\
        case 'hour':\n\
          this.incrementHour();\n\
          break;\n\
        case 'minute':\n\
          this.incrementMinute();\n\
          break;\n\
        case 'second':\n\
          this.incrementSecond();\n\
          break;\n\
        case 'meridian':\n\
          this.toggleMeridian();\n\
          break;\n\
        }\n\
        break;\n\
      case 40: // down arrow\n\
        e.preventDefault();\n\
        switch (name) {\n\
        case 'hour':\n\
          this.decrementHour();\n\
          break;\n\
        case 'minute':\n\
          this.decrementMinute();\n\
          break;\n\
        case 'second':\n\
          this.decrementSecond();\n\
          break;\n\
        case 'meridian':\n\
          this.toggleMeridian();\n\
          break;\n\
        }\n\
        break;\n\
      }\n\
    }\n\
  };\n\
\n\
\n\
  //TIMEPICKER PLUGIN DEFINITION\n\
  $.fn.timepicker = function(option) {\n\
    var args = Array.apply(null, arguments);\n\
    args.shift();\n\
    return this.each(function() {\n\
      var $this = $(this),\n\
        data = $this.data('timepicker'),\n\
        options = typeof option === 'object' && option;\n\
\n\
      if (!data) {\n\
        $this.data('timepicker', (data = new Timepicker(this, $.extend({}, $.fn.timepicker.defaults, options, $(this).data()))));\n\
      }\n\
\n\
      if (typeof option === 'string') {\n\
        data[option].apply(data, args);\n\
      }\n\
    });\n\
  };\n\
\n\
  $.fn.timepicker.defaults = {\n\
    defaultTime: 'current',\n\
    disableFocus: false,\n\
    isOpen: false,\n\
    minuteStep: 15,\n\
    modalBackdrop: false,\n\
    secondStep: 15,\n\
    showSeconds: false,\n\
    showInputs: true,\n\
    showMeridian: true,\n\
    template: 'dropdown',\n\
    appendWidgetTo: '.bootstrap-timepicker',\n\
    upArrowStyle: 'glyphicon glyphicon-chevron-up',\n\
    downArrowStyle: 'glyphicon glyphicon-chevron-down',\n\
    containerClass: 'bootstrap-timepicker'\n\
  };\n\
\n\
  $.fn.timepicker.Constructor = Timepicker;\n\
\n\
})(jQuery, window, document);//@ sourceURL=bootstrap-timepicker/js/bootstrap-timepicker.min.js"
));
require.register("async-poller/index.js", Function("exports, require, module",
"function AsyncPoller(fn, delay) {\n\
    this.fn = fn;\n\
    this.delay = delay || 10000;\n\
    this.timeout = undefined;\n\
}\n\
\n\
AsyncPoller.prototype.poll = function () {\n\
    // Call function immediately, then poll\n\
    this.fn(this.callback.bind(this));\n\
};\n\
\n\
AsyncPoller.prototype.stop = function () {\n\
    if (this.timeout) {\n\
        clearTimeout(this.timeout);\n\
    }\n\
};\n\
\n\
AsyncPoller.prototype.callback = function () {\n\
    // Always overwrite any previous polling\n\
    this.stop();\n\
\n\
    this.timeout = setTimeout(this.poll.bind(this), this.delay); // Recursion\n\
};\n\
\n\
module.exports = AsyncPoller;\n\
//@ sourceURL=async-poller/index.js"
));
require.register("scheduler/tz.js", Function("exports, require, module",
"var jstz = window.jstz.determine()\n\
\n\
module.exports = jstz\n\
//@ sourceURL=scheduler/tz.js"
));
require.register("scheduler/dhtmlxscheduler.js", Function("exports, require, module",
"/*\n\
This software is allowed to use under GPL or you need to obtain Commercial or Enterise License\n\
to use it in non-GPL project. Please contact sales@dhtmlx.com for details\n\
*/\n\
if (!window.dhtmlx) {\n\
    dhtmlx = function (obj) {\n\
        for (var a in obj) dhtmlx[a] = obj[a];\n\
        return dhtmlx; //simple singleton\n\
    };\n\
}\n\
dhtmlx.extend_api = function (name, map, ext) {\n\
    var t = window[name];\n\
    if (!t) return; //component not defined\n\
    window[name] = function (obj) {\n\
        if (obj && typeof obj == \"object\" && !obj.tagName) {\n\
            var that = t.apply(this, (map._init ? map._init(obj) : arguments));\n\
            //global settings\n\
            for (var a in dhtmlx)\n\
                if (map[a]) this[map[a]](dhtmlx[a]);\n\
                //local settings\n\
            for (var a in obj) {\n\
                if (map[a]) this[map[a]](obj[a]);\n\
                else if (a.indexOf(\"on\") == 0) {\n\
                    this.attachEvent(a, obj[a]);\n\
                }\n\
            }\n\
        } else\n\
            var that = t.apply(this, arguments);\n\
        if (map._patch) map._patch(this);\n\
        return that || this;\n\
    };\n\
    window[name].prototype = t.prototype;\n\
    if (ext)\n\
        dhtmlXHeir(window[name].prototype, ext);\n\
};\n\
\n\
dhtmlxAjax = {\n\
    get: function (url, callback) {\n\
        var t = new dtmlXMLLoaderObject(true);\n\
        t.async = (arguments.length < 3);\n\
        t.waitCall = callback;\n\
        t.loadXML(url)\n\
        return t;\n\
    },\n\
    post: function (url, post, callback) {\n\
        var t = new dtmlXMLLoaderObject(true);\n\
        t.async = (arguments.length < 4);\n\
        t.waitCall = callback;\n\
        t.loadXML(url, true, post)\n\
        return t;\n\
    },\n\
    getSync: function (url) {\n\
        return this.get(url, null, true)\n\
    },\n\
    postSync: function (url, post) {\n\
        return this.post(url, post, null, true);\n\
    }\n\
}\n\
\n\
/**\n\
 *     @desc: xmlLoader object\n\
 *     @type: private\n\
 *     @param: funcObject - xml parser function\n\
 *     @param: object - jsControl object\n\
 *     @param: async - sync/async mode (async by default)\n\
 *     @param: rSeed - enable/disable random seed ( prevent IE caching)\n\
 *     @topic: 0\n\
 */\n\
function dtmlXMLLoaderObject(funcObject, dhtmlObject, async, rSeed) {\n\
    this.xmlDoc = \"\";\n\
\n\
    if (typeof (async) != \"undefined\")\n\
        this.async = async;\n\
    else\n\
        this.async = true;\n\
\n\
    this.onloadAction = funcObject || null;\n\
    this.mainObject = dhtmlObject || null;\n\
    this.waitCall = null;\n\
    this.rSeed = rSeed || false;\n\
    return this;\n\
};\n\
\n\
dtmlXMLLoaderObject.count = 0;\n\
\n\
/**\n\
 *     @desc: xml loading handler\n\
 *     @type: private\n\
 *     @param: dtmlObject - xmlLoader object\n\
 *     @topic: 0\n\
 */\n\
dtmlXMLLoaderObject.prototype.waitLoadFunction = function (dhtmlObject) {\n\
    var once = true;\n\
    this.check = function () {\n\
        if ((dhtmlObject) && (dhtmlObject.onloadAction != null)) {\n\
            if ((!dhtmlObject.xmlDoc.readyState) || (dhtmlObject.xmlDoc.readyState == 4)) {\n\
                if (!once)\n\
                    return;\n\
\n\
                once = false; //IE 5 fix\n\
                dtmlXMLLoaderObject.count++;\n\
                if (typeof dhtmlObject.onloadAction == \"function\")\n\
                    dhtmlObject.onloadAction(dhtmlObject.mainObject, null, null, null, dhtmlObject);\n\
\n\
                if (dhtmlObject.waitCall) {\n\
                    dhtmlObject.waitCall.call(this, dhtmlObject);\n\
                    dhtmlObject.waitCall = null;\n\
                }\n\
            }\n\
        }\n\
    };\n\
    return this.check;\n\
};\n\
\n\
/**\n\
 *     @desc: return XML top node\n\
 *     @param: tagName - top XML node tag name (not used in IE, required for Safari and Mozilla)\n\
 *     @type: private\n\
 *     @returns: top XML node\n\
 *     @topic: 0\n\
 */\n\
dtmlXMLLoaderObject.prototype.getXMLTopNode = function (tagName, oldObj) {\n\
    if (this.xmlDoc.responseXML) {\n\
        var temp = this.xmlDoc.responseXML.getElementsByTagName(tagName);\n\
        if (temp.length == 0 && tagName.indexOf(\":\") != -1)\n\
            var temp = this.xmlDoc.responseXML.getElementsByTagName((tagName.split(\":\"))[1]);\n\
        var z = temp[0];\n\
    } else\n\
        var z = this.xmlDoc.documentElement;\n\
\n\
    if (z) {\n\
        this._retry = false;\n\
        return z;\n\
    }\n\
\n\
    if (!this._retry) {\n\
        this._retry = true;\n\
        var oldObj = this.xmlDoc;\n\
        this.loadXMLString(this.xmlDoc.responseText.replace(/^[\\s]+/, \"\"), true);\n\
        return this.getXMLTopNode(tagName, oldObj);\n\
    }\n\
\n\
    dhtmlxError.throwError(\"LoadXML\", \"Incorrect XML\", [\n\
        (oldObj || this.xmlDoc),\n\
        this.mainObject\n\
    ]);\n\
\n\
    return document.createElement(\"DIV\");\n\
};\n\
\n\
/**\n\
 *     @desc: load XML from string\n\
 *     @type: private\n\
 *     @param: xmlString - xml string\n\
 *     @topic: 0\n\
 */\n\
dtmlXMLLoaderObject.prototype.loadXMLString = function (xmlString, silent) {\n\
\n\
    if (!_isIE) {\n\
        var parser = new DOMParser();\n\
        this.xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\n\
    } else {\n\
        this.xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n\
        this.xmlDoc.async = this.async;\n\
        this.xmlDoc.onreadystatechange = function () {};\n\
        this.xmlDoc[\"loadXM\" + \"L\"](xmlString);\n\
    }\n\
\n\
    if (silent)\n\
        return;\n\
\n\
    if (this.onloadAction)\n\
        this.onloadAction(this.mainObject, null, null, null, this);\n\
\n\
    if (this.waitCall) {\n\
        this.waitCall();\n\
        this.waitCall = null;\n\
    }\n\
}\n\
/**\n\
 *     @desc: load XML\n\
 *     @type: private\n\
 *     @param: filePath - xml file path\n\
 *     @param: postMode - send POST request\n\
 *     @param: postVars - list of vars for post request\n\
 *     @topic: 0\n\
 */\n\
dtmlXMLLoaderObject.prototype.loadXML = function (filePath, postMode, postVars, rpc) {\n\
    if (this.rSeed)\n\
        filePath += ((filePath.indexOf(\"?\") != -1) ? \"&\" : \"?\") + \"a_dhx_rSeed=\" + (new Date()).valueOf();\n\
    this.filePath = filePath;\n\
\n\
    if ((!_isIE) && (window.XMLHttpRequest))\n\
        this.xmlDoc = new XMLHttpRequest();\n\
    else {\n\
        this.xmlDoc = new ActiveXObject(\"Microsoft.XMLHTTP\");\n\
    }\n\
\n\
    if (this.async)\n\
        this.xmlDoc.onreadystatechange = new this.waitLoadFunction(this);\n\
    this.xmlDoc.open(postMode ? \"POST\" : \"GET\", filePath, this.async);\n\
\n\
    if (rpc) {\n\
        this.xmlDoc.setRequestHeader(\"User-Agent\", \"dhtmlxRPC v0.1 (\" + navigator.userAgent + \")\");\n\
        this.xmlDoc.setRequestHeader(\"Content-type\", \"text/xml\");\n\
    } else if (postMode)\n\
        this.xmlDoc.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\
\n\
    this.xmlDoc.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\
    this.xmlDoc.send(null || postVars);\n\
\n\
    if (!this.async)\n\
        (new this.waitLoadFunction(this))();\n\
};\n\
/**\n\
 *     @desc: destructor, cleans used memory\n\
 *     @type: private\n\
 *     @topic: 0\n\
 */\n\
dtmlXMLLoaderObject.prototype.destructor = function () {\n\
    this._filterXPath = null;\n\
    this._getAllNamedChilds = null;\n\
    this._retry = null;\n\
    this.async = null;\n\
    this.rSeed = null;\n\
    this.filePath = null;\n\
    this.onloadAction = null;\n\
    this.mainObject = null;\n\
    this.xmlDoc = null;\n\
    this.doXPath = null;\n\
    this.doXPathOpera = null;\n\
    this.doXSLTransToObject = null;\n\
    this.doXSLTransToString = null;\n\
    this.loadXML = null;\n\
    this.loadXMLString = null;\n\
    // this.waitLoadFunction = null;\n\
    this.doSerialization = null;\n\
    this.xmlNodeToJSON = null;\n\
    this.getXMLTopNode = null;\n\
    this.setXSLParamValue = null;\n\
    return null;\n\
}\n\
\n\
dtmlXMLLoaderObject.prototype.xmlNodeToJSON = function (node) {\n\
    var t = {};\n\
    for (var i = 0; i < node.attributes.length; i++)\n\
        t[node.attributes[i].name] = node.attributes[i].value;\n\
    t[\"_tagvalue\"] = node.firstChild ? node.firstChild.nodeValue : \"\";\n\
    for (var i = 0; i < node.childNodes.length; i++) {\n\
        var name = node.childNodes[i].tagName;\n\
        if (name) {\n\
            if (!t[name]) t[name] = [];\n\
            t[name].push(this.xmlNodeToJSON(node.childNodes[i]));\n\
        }\n\
    }\n\
    return t;\n\
}\n\
\n\
/**\n\
 *     @desc: Call wrapper\n\
 *     @type: private\n\
 *     @param: funcObject - action handler\n\
 *     @param: dhtmlObject - user data\n\
 *     @returns: function handler\n\
 *     @topic: 0\n\
 */\n\
function callerFunction(funcObject, dhtmlObject) {\n\
    this.handler = function (e) {\n\
        if (!e)\n\
            e = window.event;\n\
        funcObject(e, dhtmlObject);\n\
        return true;\n\
    };\n\
    return this.handler;\n\
};\n\
\n\
/**\n\
 *     @desc: Calculate absolute position of html object\n\
 *     @type: private\n\
 *     @param: htmlObject - html object\n\
 *     @topic: 0\n\
 */\n\
function getAbsoluteLeft(htmlObject) {\n\
    return getOffset(htmlObject).left;\n\
}\n\
/**\n\
 *     @desc: Calculate absolute position of html object\n\
 *     @type: private\n\
 *     @param: htmlObject - html object\n\
 *     @topic: 0\n\
 */\n\
function getAbsoluteTop(htmlObject) {\n\
    return getOffset(htmlObject).top;\n\
}\n\
\n\
function getOffsetSum(elem) {\n\
    var top = 0,\n\
        left = 0;\n\
    while (elem) {\n\
        top = top + parseInt(elem.offsetTop);\n\
        left = left + parseInt(elem.offsetLeft);\n\
        elem = elem.offsetParent;\n\
    }\n\
    return {\n\
        top: top,\n\
        left: left\n\
    };\n\
}\n\
\n\
function getOffsetRect(elem) {\n\
    var box = elem.getBoundingClientRect();\n\
    var body = document.body;\n\
    var docElem = document.documentElement;\n\
    var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n\
    var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\
    var clientTop = docElem.clientTop || body.clientTop || 0;\n\
    var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\
    var top = box.top + scrollTop - clientTop;\n\
    var left = box.left + scrollLeft - clientLeft;\n\
    return {\n\
        top: Math.round(top),\n\
        left: Math.round(left)\n\
    };\n\
}\n\
\n\
function getOffset(elem) {\n\
    if (elem.getBoundingClientRect) {\n\
        return getOffsetRect(elem);\n\
    } else {\n\
        return getOffsetSum(elem);\n\
    }\n\
}\n\
\n\
/**\n\
 *     @desc: Convert string to it boolean representation\n\
 *     @type: private\n\
 *     @param: inputString - string for covertion\n\
 *     @topic: 0\n\
 */\n\
function convertStringToBoolean(inputString) {\n\
    if (typeof (inputString) == \"string\")\n\
        inputString = inputString.toLowerCase();\n\
\n\
    switch (inputString) {\n\
    case \"1\":\n\
    case \"true\":\n\
    case \"yes\":\n\
    case \"y\":\n\
    case 1:\n\
    case true:\n\
        return true;\n\
        break;\n\
\n\
    default:\n\
        return false;\n\
    }\n\
}\n\
\n\
/**\n\
 *     @desc: find out what symbol to use as url param delimiters in further params\n\
 *     @type: private\n\
 *     @param: str - current url string\n\
 *     @topic: 0\n\
 */\n\
function getUrlSymbol(str) {\n\
    if (str.indexOf(\"?\") != -1)\n\
        return \"&\"\n\
    else\n\
        return \"?\"\n\
}\n\
\n\
function dhtmlDragAndDropObject() {\n\
    if (window.dhtmlDragAndDrop)\n\
        return window.dhtmlDragAndDrop;\n\
\n\
    this.lastLanding = 0;\n\
    this.dragNode = 0;\n\
    this.dragStartNode = 0;\n\
    this.dragStartObject = 0;\n\
    this.tempDOMU = null;\n\
    this.tempDOMM = null;\n\
    this.waitDrag = 0;\n\
    window.dhtmlDragAndDrop = this;\n\
\n\
    return this;\n\
};\n\
\n\
dhtmlDragAndDropObject.prototype.removeDraggableItem = function (htmlNode) {\n\
    htmlNode.onmousedown = null;\n\
    htmlNode.dragStarter = null;\n\
    htmlNode.dragLanding = null;\n\
}\n\
dhtmlDragAndDropObject.prototype.addDraggableItem = function (htmlNode, dhtmlObject) {\n\
    htmlNode.onmousedown = this.preCreateDragCopy;\n\
    htmlNode.dragStarter = dhtmlObject;\n\
    this.addDragLanding(htmlNode, dhtmlObject);\n\
}\n\
dhtmlDragAndDropObject.prototype.addDragLanding = function (htmlNode, dhtmlObject) {\n\
    htmlNode.dragLanding = dhtmlObject;\n\
}\n\
dhtmlDragAndDropObject.prototype.preCreateDragCopy = function (e) {\n\
    if ((e || window.event) && (e || event).button == 2)\n\
        return;\n\
\n\
    if (window.dhtmlDragAndDrop.waitDrag) {\n\
        window.dhtmlDragAndDrop.waitDrag = 0;\n\
        document.body.onmouseup = window.dhtmlDragAndDrop.tempDOMU;\n\
        document.body.onmousemove = window.dhtmlDragAndDrop.tempDOMM;\n\
        return false;\n\
    }\n\
\n\
    if (window.dhtmlDragAndDrop.dragNode)\n\
        window.dhtmlDragAndDrop.stopDrag(e);\n\
\n\
    window.dhtmlDragAndDrop.waitDrag = 1;\n\
    window.dhtmlDragAndDrop.tempDOMU = document.body.onmouseup;\n\
    window.dhtmlDragAndDrop.tempDOMM = document.body.onmousemove;\n\
    window.dhtmlDragAndDrop.dragStartNode = this;\n\
    window.dhtmlDragAndDrop.dragStartObject = this.dragStarter;\n\
    document.body.onmouseup = window.dhtmlDragAndDrop.preCreateDragCopy;\n\
    document.body.onmousemove = window.dhtmlDragAndDrop.callDrag;\n\
    window.dhtmlDragAndDrop.downtime = new Date().valueOf();\n\
\n\
\n\
    if ((e) && (e.preventDefault)) {\n\
        e.preventDefault();\n\
        return false;\n\
    }\n\
    return false;\n\
};\n\
dhtmlDragAndDropObject.prototype.callDrag = function (e) {\n\
    if (!e)\n\
        e = window.event;\n\
    dragger = window.dhtmlDragAndDrop;\n\
    if ((new Date()).valueOf() - dragger.downtime < 100) return;\n\
\n\
    //if ((e.button == 0)&&(_isIE))\n\
    //  return dragger.stopDrag();\n\
\n\
    if (!dragger.dragNode) {\n\
        if (dragger.waitDrag) {\n\
            dragger.dragNode = dragger.dragStartObject._createDragNode(dragger.dragStartNode, e);\n\
\n\
            if (!dragger.dragNode)\n\
                return dragger.stopDrag();\n\
\n\
            dragger.dragNode.onselectstart = function () {\n\
                return false;\n\
            }\n\
            dragger.gldragNode = dragger.dragNode;\n\
            document.body.appendChild(dragger.dragNode);\n\
            document.body.onmouseup = dragger.stopDrag;\n\
            dragger.waitDrag = 0;\n\
            dragger.dragNode.pWindow = window;\n\
            dragger.initFrameRoute();\n\
        } else return dragger.stopDrag(e, true);\n\
    }\n\
\n\
    if (dragger.dragNode.parentNode != window.document.body && dragger.gldragNode) {\n\
        var grd = dragger.gldragNode;\n\
\n\
        if (dragger.gldragNode.old)\n\
            grd = dragger.gldragNode.old;\n\
\n\
        //if (!document.all) dragger.calculateFramePosition();\n\
        grd.parentNode.removeChild(grd);\n\
        var oldBody = dragger.dragNode.pWindow;\n\
\n\
        if (grd.pWindow && grd.pWindow.dhtmlDragAndDrop.lastLanding)\n\
            grd.pWindow.dhtmlDragAndDrop.lastLanding.dragLanding._dragOut(grd.pWindow.dhtmlDragAndDrop.lastLanding);\n\
\n\
        //    var oldp=dragger.dragNode.parentObject;\n\
        if (_isIE) {\n\
            var div = document.createElement(\"Div\");\n\
            div.innerHTML = dragger.dragNode.outerHTML;\n\
            dragger.dragNode = div.childNodes[0];\n\
        } else\n\
            dragger.dragNode = dragger.dragNode.cloneNode(true);\n\
\n\
        dragger.dragNode.pWindow = window;\n\
        //    dragger.dragNode.parentObject=oldp;\n\
\n\
        dragger.gldragNode.old = dragger.dragNode;\n\
        document.body.appendChild(dragger.dragNode);\n\
        oldBody.dhtmlDragAndDrop.dragNode = dragger.dragNode;\n\
    }\n\
\n\
    dragger.dragNode.style.left = e.clientX + 15 + (dragger.fx ? dragger.fx * (-1) : 0) + (document.body.scrollLeft || document.documentElement.scrollLeft) + \"px\";\n\
    dragger.dragNode.style.top = e.clientY + 3 + (dragger.fy ? dragger.fy * (-1) : 0) + (document.body.scrollTop || document.documentElement.scrollTop) + \"px\";\n\
\n\
    if (!e.srcElement)\n\
        var z = e.target;\n\
    else\n\
        z = e.srcElement;\n\
    dragger.checkLanding(z, e);\n\
}\n\
\n\
dhtmlDragAndDropObject.prototype.calculateFramePosition = function (n) {\n\
    //this.fx = 0, this.fy = 0;\n\
    if (window.name) {\n\
        var el = parent.frames[window.name].frameElement.offsetParent;\n\
        var fx = 0;\n\
        var fy = 0;\n\
\n\
        while (el) {\n\
            fx += el.offsetLeft;\n\
            fy += el.offsetTop;\n\
            el = el.offsetParent;\n\
        }\n\
\n\
        if ((parent.dhtmlDragAndDrop)) {\n\
            var ls = parent.dhtmlDragAndDrop.calculateFramePosition(1);\n\
            fx += ls.split('_')[0] * 1;\n\
            fy += ls.split('_')[1] * 1;\n\
        }\n\
\n\
        if (n)\n\
            return fx + \"_\" + fy;\n\
        else\n\
            this.fx = fx;\n\
        this.fy = fy;\n\
    }\n\
    return \"0_0\";\n\
}\n\
dhtmlDragAndDropObject.prototype.checkLanding = function (htmlObject, e) {\n\
    if ((htmlObject) && (htmlObject.dragLanding)) {\n\
        if (this.lastLanding)\n\
            this.lastLanding.dragLanding._dragOut(this.lastLanding);\n\
        this.lastLanding = htmlObject;\n\
        this.lastLanding = this.lastLanding.dragLanding._dragIn(this.lastLanding, this.dragStartNode, e.clientX,\n\
            e.clientY, e);\n\
        this.lastLanding_scr = (_isIE ? e.srcElement : e.target);\n\
    } else {\n\
        if ((htmlObject) && (htmlObject.tagName != \"BODY\"))\n\
            this.checkLanding(htmlObject.parentNode, e);\n\
        else {\n\
            if (this.lastLanding)\n\
                this.lastLanding.dragLanding._dragOut(this.lastLanding, e.clientX, e.clientY, e);\n\
            this.lastLanding = 0;\n\
\n\
            if (this._onNotFound)\n\
                this._onNotFound();\n\
        }\n\
    }\n\
}\n\
dhtmlDragAndDropObject.prototype.stopDrag = function (e, mode) {\n\
    dragger = window.dhtmlDragAndDrop;\n\
\n\
    if (!mode) {\n\
        dragger.stopFrameRoute();\n\
        var temp = dragger.lastLanding;\n\
        dragger.lastLanding = null;\n\
\n\
        if (temp)\n\
            temp.dragLanding._drag(dragger.dragStartNode, dragger.dragStartObject, temp, (_isIE ? event.srcElement : e.target));\n\
    }\n\
    dragger.lastLanding = null;\n\
\n\
    if ((dragger.dragNode) && (dragger.dragNode.parentNode == document.body))\n\
        dragger.dragNode.parentNode.removeChild(dragger.dragNode);\n\
    dragger.dragNode = 0;\n\
    dragger.gldragNode = 0;\n\
    dragger.fx = 0;\n\
    dragger.fy = 0;\n\
    dragger.dragStartNode = 0;\n\
    dragger.dragStartObject = 0;\n\
    document.body.onmouseup = dragger.tempDOMU;\n\
    document.body.onmousemove = dragger.tempDOMM;\n\
    dragger.tempDOMU = null;\n\
    dragger.tempDOMM = null;\n\
    dragger.waitDrag = 0;\n\
}\n\
\n\
dhtmlDragAndDropObject.prototype.stopFrameRoute = function (win) {\n\
    if (win)\n\
        window.dhtmlDragAndDrop.stopDrag(1, 1);\n\
\n\
    for (var i = 0; i < window.frames.length; i++) {\n\
        try {\n\
            if ((window.frames[i] != win) && (window.frames[i].dhtmlDragAndDrop))\n\
                window.frames[i].dhtmlDragAndDrop.stopFrameRoute(window);\n\
        } catch (e) {}\n\
    }\n\
\n\
    try {\n\
        if ((parent.dhtmlDragAndDrop) && (parent != window) && (parent != win))\n\
            parent.dhtmlDragAndDrop.stopFrameRoute(window);\n\
    } catch (e) {}\n\
}\n\
dhtmlDragAndDropObject.prototype.initFrameRoute = function (win, mode) {\n\
    if (win) {\n\
        window.dhtmlDragAndDrop.preCreateDragCopy();\n\
        window.dhtmlDragAndDrop.dragStartNode = win.dhtmlDragAndDrop.dragStartNode;\n\
        window.dhtmlDragAndDrop.dragStartObject = win.dhtmlDragAndDrop.dragStartObject;\n\
        window.dhtmlDragAndDrop.dragNode = win.dhtmlDragAndDrop.dragNode;\n\
        window.dhtmlDragAndDrop.gldragNode = win.dhtmlDragAndDrop.dragNode;\n\
        window.document.body.onmouseup = window.dhtmlDragAndDrop.stopDrag;\n\
        window.waitDrag = 0;\n\
\n\
        if (((!_isIE) && (mode)) && ((!_isFF) || (_FFrv < 1.8)))\n\
            window.dhtmlDragAndDrop.calculateFramePosition();\n\
    }\n\
    try {\n\
        if ((parent.dhtmlDragAndDrop) && (parent != window) && (parent != win))\n\
            parent.dhtmlDragAndDrop.initFrameRoute(window);\n\
    } catch (e) {}\n\
\n\
    for (var i = 0; i < window.frames.length; i++) {\n\
        try {\n\
            if ((window.frames[i] != win) && (window.frames[i].dhtmlDragAndDrop))\n\
                window.frames[i].dhtmlDragAndDrop.initFrameRoute(window, ((!win || mode) ? 1 : 0));\n\
        } catch (e) {}\n\
    }\n\
}\n\
\n\
_isFF = false;\n\
_isIE = false;\n\
_isOpera = false;\n\
_isKHTML = false;\n\
_isMacOS = false;\n\
_isChrome = false;\n\
_FFrv = false;\n\
_KHTMLrv = false;\n\
_OperaRv = false;\n\
\n\
if (navigator.userAgent.indexOf('Macintosh') != -1)\n\
    _isMacOS = true;\n\
\n\
\n\
if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n\
    _isChrome = true;\n\
\n\
if ((navigator.userAgent.indexOf('Safari') != -1) || (navigator.userAgent.indexOf('Konqueror') != -1)) {\n\
    _KHTMLrv = parseFloat(navigator.userAgent.substr(navigator.userAgent.indexOf('Safari') + 7, 5));\n\
\n\
    if (_KHTMLrv > 525) { //mimic FF behavior for Safari 3.1+\n\
        _isFF = true;\n\
        _FFrv = 1.9;\n\
    } else\n\
        _isKHTML = true;\n\
} else if (navigator.userAgent.indexOf('Opera') != -1) {\n\
    _isOpera = true;\n\
    _OperaRv = parseFloat(navigator.userAgent.substr(navigator.userAgent.indexOf('Opera') + 6, 3));\n\
} else if (navigator.appName.indexOf(\"Microsoft\") != -1) {\n\
    _isIE = true;\n\
    if ((navigator.appVersion.indexOf(\"MSIE 8.0\") != -1 || navigator.appVersion.indexOf(\"MSIE 9.0\") != -1 || navigator.appVersion.indexOf(\"MSIE 10.0\") != -1) && document.compatMode != \"BackCompat\") {\n\
        _isIE = 8;\n\
    }\n\
} else {\n\
    _isFF = true;\n\
    _FFrv = parseFloat(navigator.userAgent.split(\"rv:\")[1])\n\
}\n\
\n\
\n\
//multibrowser Xpath processor\n\
dtmlXMLLoaderObject.prototype.doXPath = function (xpathExp, docObj, namespace, result_type) {\n\
    if (_isKHTML || (!_isIE && !window.XPathResult))\n\
        return this.doXPathOpera(xpathExp, docObj);\n\
\n\
    if (_isIE) { //IE\n\
        if (!docObj)\n\
            if (!this.xmlDoc.nodeName)\n\
                docObj = this.xmlDoc.responseXML\n\
            else\n\
                docObj = this.xmlDoc;\n\
\n\
        if (!docObj)\n\
            dhtmlxError.throwError(\"LoadXML\", \"Incorrect XML\", [\n\
                (docObj || this.xmlDoc),\n\
                this.mainObject\n\
            ]);\n\
\n\
        if (namespace != null)\n\
            docObj.setProperty(\"SelectionNamespaces\", \"xmlns:xsl='\" + namespace + \"'\"); //\n\
\n\
        if (result_type == 'single') {\n\
            return docObj.selectSingleNode(xpathExp);\n\
        } else {\n\
            return docObj.selectNodes(xpathExp) || new Array(0);\n\
        }\n\
    } else { //Mozilla\n\
        var nodeObj = docObj;\n\
\n\
        if (!docObj) {\n\
            if (!this.xmlDoc.nodeName) {\n\
                docObj = this.xmlDoc.responseXML\n\
            } else {\n\
                docObj = this.xmlDoc;\n\
            }\n\
        }\n\
\n\
        if (!docObj)\n\
            dhtmlxError.throwError(\"LoadXML\", \"Incorrect XML\", [\n\
                (docObj || this.xmlDoc),\n\
                this.mainObject\n\
            ]);\n\
\n\
        if (docObj.nodeName.indexOf(\"document\") != -1) {\n\
            nodeObj = docObj;\n\
        } else {\n\
            nodeObj = docObj;\n\
            docObj = docObj.ownerDocument;\n\
        }\n\
        var retType = XPathResult.ANY_TYPE;\n\
\n\
        if (result_type == 'single')\n\
            retType = XPathResult.FIRST_ORDERED_NODE_TYPE\n\
        var rowsCol = new Array();\n\
        var col = docObj.evaluate(xpathExp, nodeObj, function (pref) {\n\
            return namespace\n\
        }, retType, null);\n\
\n\
        if (retType == XPathResult.FIRST_ORDERED_NODE_TYPE) {\n\
            return col.singleNodeValue;\n\
        }\n\
        var thisColMemb = col.iterateNext();\n\
\n\
        while (thisColMemb) {\n\
            rowsCol[rowsCol.length] = thisColMemb;\n\
            thisColMemb = col.iterateNext();\n\
        }\n\
        return rowsCol;\n\
    }\n\
}\n\
\n\
function _dhtmlxError(type, name, params) {\n\
    if (!this.catches)\n\
        this.catches = new Array();\n\
\n\
    return this;\n\
}\n\
\n\
_dhtmlxError.prototype.catchError = function (type, func_name) {\n\
    this.catches[type] = func_name;\n\
}\n\
_dhtmlxError.prototype.throwError = function (type, name, params) {\n\
    if (this.catches[type])\n\
        return this.catches[type](type, name, params);\n\
\n\
    if (this.catches[\"ALL\"])\n\
        return this.catches[\"ALL\"](type, name, params);\n\
\n\
    alert(\"Error type: \" + arguments[0] + \"\\n\
Description: \" + arguments[1]);\n\
    return null;\n\
}\n\
\n\
window.dhtmlxError = new _dhtmlxError();\n\
\n\
\n\
//opera fake, while 9.0 not released\n\
//multibrowser Xpath processor\n\
dtmlXMLLoaderObject.prototype.doXPathOpera = function (xpathExp, docObj) {\n\
    //this is fake for Opera\n\
    var z = xpathExp.replace(/[\\/]+/gi, \"/\").split('/');\n\
    var obj = null;\n\
    var i = 1;\n\
\n\
    if (!z.length)\n\
        return [];\n\
\n\
    if (z[0] == \".\")\n\
        obj = [docObj];\n\
    else if (z[0] == \"\") {\n\
        obj = (this.xmlDoc.responseXML || this.xmlDoc).getElementsByTagName(z[i].replace(/\\[[^\\]]*\\]/g, \"\"));\n\
        i++;\n\
    } else\n\
        return [];\n\
\n\
    for (i; i < z.length; i++) obj = this._getAllNamedChilds(obj, z[i]);\n\
\n\
    if (z[i - 1].indexOf(\"[\") != -1)\n\
        obj = this._filterXPath(obj, z[i - 1]);\n\
    return obj;\n\
}\n\
\n\
dtmlXMLLoaderObject.prototype._filterXPath = function (a, b) {\n\
    var c = new Array();\n\
    var b = b.replace(/[^\\[]*\\[\\@/g, \"\").replace(/[\\[\\]\\@]*/g, \"\");\n\
\n\
    for (var i = 0; i < a.length; i++)\n\
        if (a[i].getAttribute(b))\n\
            c[c.length] = a[i];\n\
\n\
    return c;\n\
}\n\
dtmlXMLLoaderObject.prototype._getAllNamedChilds = function (a, b) {\n\
    var c = new Array();\n\
\n\
    if (_isKHTML)\n\
        b = b.toUpperCase();\n\
\n\
    for (var i = 0; i < a.length; i++)\n\
        for (var j = 0; j < a[i].childNodes.length; j++) {\n\
            if (_isKHTML) {\n\
                if (a[i].childNodes[j].tagName && a[i].childNodes[j].tagName.toUpperCase() == b)\n\
                    c[c.length] = a[i].childNodes[j];\n\
            } else if (a[i].childNodes[j].tagName == b)\n\
                c[c.length] = a[i].childNodes[j];\n\
        }\n\
\n\
    return c;\n\
}\n\
\n\
function dhtmlXHeir(a, b) {\n\
    for (var c in b)\n\
        if (typeof (b[c]) == \"function\")\n\
            a[c] = b[c];\n\
    return a;\n\
}\n\
\n\
function dhtmlxEvent(el, event, handler) {\n\
    if (el.addEventListener)\n\
        el.addEventListener(event, handler, false);\n\
\n\
    else if (el.attachEvent)\n\
        el.attachEvent(\"on\" + event, handler);\n\
}\n\
\n\
//============= XSL Extension ===================================\n\
\n\
dtmlXMLLoaderObject.prototype.xslDoc = null;\n\
dtmlXMLLoaderObject.prototype.setXSLParamValue = function (paramName, paramValue, xslDoc) {\n\
    if (!xslDoc)\n\
        xslDoc = this.xslDoc\n\
\n\
    if (xslDoc.responseXML)\n\
        xslDoc = xslDoc.responseXML;\n\
    var item =\n\
        this.doXPath(\"/xsl:stylesheet/xsl:variable[@name='\" + paramName + \"']\", xslDoc,\n\
            \"http:/\\/www.w3.org/1999/XSL/Transform\", \"single\");\n\
\n\
    if (item != null)\n\
        item.firstChild.nodeValue = paramValue\n\
}\n\
dtmlXMLLoaderObject.prototype.doXSLTransToObject = function (xslDoc, xmlDoc) {\n\
    if (!xslDoc)\n\
        xslDoc = this.xslDoc;\n\
\n\
    if (xslDoc.responseXML)\n\
        xslDoc = xslDoc.responseXML\n\
\n\
    if (!xmlDoc)\n\
        xmlDoc = this.xmlDoc;\n\
\n\
    if (xmlDoc.responseXML)\n\
        xmlDoc = xmlDoc.responseXML\n\
\n\
    //MOzilla\n\
    if (!_isIE) {\n\
        if (!this.XSLProcessor) {\n\
            this.XSLProcessor = new XSLTProcessor();\n\
            this.XSLProcessor.importStylesheet(xslDoc);\n\
        }\n\
        var result = this.XSLProcessor.transformToDocument(xmlDoc);\n\
    } else {\n\
        var result = new ActiveXObject(\"Msxml2.DOMDocument.3.0\");\n\
        try {\n\
            xmlDoc.transformNodeToObject(xslDoc, result);\n\
        } catch (e) {\n\
            result = xmlDoc.transformNode(xslDoc);\n\
        }\n\
    }\n\
    return result;\n\
}\n\
\n\
dtmlXMLLoaderObject.prototype.doXSLTransToString = function (xslDoc, xmlDoc) {\n\
    var res = this.doXSLTransToObject(xslDoc, xmlDoc);\n\
    if (typeof (res) == \"string\")\n\
        return res;\n\
    return this.doSerialization(res);\n\
}\n\
\n\
dtmlXMLLoaderObject.prototype.doSerialization = function (xmlDoc) {\n\
    if (!xmlDoc)\n\
        xmlDoc = this.xmlDoc;\n\
    if (xmlDoc.responseXML)\n\
        xmlDoc = xmlDoc.responseXML\n\
    if (!_isIE) {\n\
        var xmlSerializer = new XMLSerializer();\n\
        return xmlSerializer.serializeToString(xmlDoc);\n\
    } else\n\
        return xmlDoc.xml;\n\
}\n\
\n\
/**\n\
 *   @desc:\n\
 *   @type: private\n\
 */\n\
dhtmlxEventable = function (obj) {\n\
    obj.attachEvent = function (name, catcher, callObj) {\n\
        name = 'ev_' + name.toLowerCase();\n\
        if (!this[name])\n\
            this[name] = new this.eventCatcher(callObj || this);\n\
\n\
        return (name + ':' + this[name].addEvent(catcher)); //return ID (event name & event ID)\n\
    }\n\
    obj.callEvent = function (name, arg0) {\n\
        name = 'ev_' + name.toLowerCase();\n\
        if (this[name])\n\
            return this[name].apply(this, arg0);\n\
        return true;\n\
    }\n\
    obj.checkEvent = function (name) {\n\
        return ( !! this['ev_' + name.toLowerCase()])\n\
    }\n\
    obj.eventCatcher = function (obj) {\n\
        var dhx_catch = [];\n\
        var z = function () {\n\
            var res = true;\n\
            for (var i = 0; i < dhx_catch.length; i++) {\n\
                if (dhx_catch[i] != null) {\n\
                    var zr = dhx_catch[i].apply(obj, arguments);\n\
                    res = res && zr;\n\
                }\n\
            }\n\
            return res;\n\
        }\n\
        z.addEvent = function (ev) {\n\
            if (typeof (ev) != \"function\")\n\
                ev = eval(ev);\n\
            if (ev)\n\
                return dhx_catch.push(ev) - 1;\n\
            return false;\n\
        }\n\
        z.removeEvent = function (id) {\n\
            dhx_catch[id] = null;\n\
        }\n\
        return z;\n\
    }\n\
    obj.detachEvent = function (id) {\n\
        if (id != false) {\n\
            var list = id.split(':'); //get EventName and ID\n\
            this[list[0]].removeEvent(list[1]); //remove event\n\
        }\n\
    }\n\
    obj.detachAllEvents = function () {\n\
        for (var name in this) {\n\
            if (name.indexOf(\"ev_\") == 0)\n\
                delete this[name];\n\
        }\n\
    }\n\
    obj = null;\n\
};\n\
\n\
if (!window.dhtmlx)\n\
    window.dhtmlx = {};\n\
\n\
(function () {\n\
    var _dhx_msg_cfg = null;\n\
\n\
    function callback(config, result) {\n\
        var usercall = config.callback;\n\
        modality(false);\n\
        config.box.parentNode.removeChild(config.box);\n\
        _dhx_msg_cfg = config.box = null;\n\
        if (usercall)\n\
            usercall(result);\n\
    }\n\
\n\
    function modal_key(e) {\n\
        if (_dhx_msg_cfg) {\n\
            e = e || event;\n\
            var code = e.which || event.keyCode;\n\
            if (dhtmlx.message.keyboard) {\n\
                if (code == 13 || code == 32)\n\
                    callback(_dhx_msg_cfg, true);\n\
                if (code == 27)\n\
                    callback(_dhx_msg_cfg, false);\n\
            }\n\
            if (e.preventDefault)\n\
                e.preventDefault();\n\
            return !(e.cancelBubble = true);\n\
        }\n\
    }\n\
    if (document.attachEvent)\n\
        document.attachEvent(\"onkeydown\", modal_key);\n\
    else\n\
        document.addEventListener(\"keydown\", modal_key, true);\n\
\n\
    function modality(mode) {\n\
        if (!modality.cover) {\n\
            modality.cover = document.createElement(\"DIV\");\n\
            //necessary for IE only\n\
            modality.cover.onkeydown = modal_key;\n\
            modality.cover.className = \"dhx_modal_cover\";\n\
            document.body.appendChild(modality.cover);\n\
        }\n\
        var height = document.body.scrollHeight;\n\
        modality.cover.style.display = mode ? \"inline-block\" : \"none\";\n\
    }\n\
\n\
    function button(text, result) {\n\
        var button_css = \"dhtmlx_\" + text.toLowerCase().replace(/ /g, \"_\") + \"_button\"; // dhtmlx_ok_button, dhtmlx_click_me_button\n\
        return \"<div class='dhtmlx_popup_button \" + button_css + \"' result='\" + result + \"' ><div>\" + text + \"</div></div>\";\n\
    }\n\
\n\
    function info(text) {\n\
        if (!t.area) {\n\
            t.area = document.createElement(\"DIV\");\n\
            t.area.className = \"dhtmlx_message_area\";\n\
            t.area.style[t.position] = \"5px\";\n\
            document.body.appendChild(t.area);\n\
        }\n\
\n\
        t.hide(text.id);\n\
        var message = document.createElement(\"DIV\");\n\
        message.innerHTML = \"<div>\" + text.text + \"</div>\";\n\
        message.className = \"dhtmlx-info dhtmlx-\" + text.type;\n\
        message.onclick = function () {\n\
            t.hide(text.id);\n\
            text = null;\n\
        };\n\
\n\
        if (t.position == \"bottom\" && t.area.firstChild)\n\
            t.area.insertBefore(message, t.area.firstChild);\n\
        else\n\
            t.area.appendChild(message);\n\
\n\
        if (text.expire > 0)\n\
            t.timers[text.id] = window.setTimeout(function () {\n\
                t.hide(text.id);\n\
            }, text.expire);\n\
\n\
        t.pull[text.id] = message;\n\
        message = null;\n\
\n\
        return text.id;\n\
    }\n\
\n\
    function _boxStructure(config, ok, cancel) {\n\
        var box = document.createElement(\"DIV\");\n\
        box.className = \" dhtmlx_modal_box dhtmlx-\" + config.type;\n\
        box.setAttribute(\"dhxbox\", 1);\n\
\n\
        var inner = '';\n\
\n\
        if (config.width)\n\
            box.style.width = config.width;\n\
        if (config.height)\n\
            box.style.height = config.height;\n\
        if (config.title)\n\
            inner += '<div class=\"dhtmlx_popup_title\">' + config.title + '</div>';\n\
        inner += '<div class=\"dhtmlx_popup_text\"><span>' + (config.content ? '' : config.text) + '</span></div><div  class=\"dhtmlx_popup_controls\">';\n\
        if (ok)\n\
            inner += button(config.ok || \"OK\", true);\n\
        if (cancel)\n\
            inner += button(config.cancel || \"Cancel\", false);\n\
        if (config.buttons) {\n\
            for (var i = 0; i < config.buttons.length; i++)\n\
                inner += button(config.buttons[i], i);\n\
        }\n\
        inner += '</div>';\n\
        box.innerHTML = inner;\n\
\n\
        if (config.content) {\n\
            var node = config.content;\n\
            if (typeof node == \"string\")\n\
                node = document.getElementById(node);\n\
            if (node.style.display == 'none')\n\
                node.style.display = \"\";\n\
            box.childNodes[config.title ? 1 : 0].appendChild(node);\n\
        }\n\
\n\
        box.onclick = function (e) {\n\
            e = e || event;\n\
            var source = e.target || e.srcElement;\n\
            if (!source.className) source = source.parentNode;\n\
            if (source.className.split(\" \")[0] == \"dhtmlx_popup_button\") {\n\
                result = source.getAttribute(\"result\");\n\
                result = (result == \"true\") || (result == \"false\" ? false : result);\n\
                callback(config, result);\n\
            }\n\
        };\n\
        config.box = box;\n\
        if (ok || cancel)\n\
            _dhx_msg_cfg = config;\n\
\n\
        return box;\n\
    }\n\
\n\
    function _createBox(config, ok, cancel) {\n\
        var box = config.tagName ? config : _boxStructure(config, ok, cancel);\n\
\n\
        if (!config.hidden)\n\
            modality(true);\n\
        document.body.appendChild(box);\n\
        var x = Math.abs(Math.floor(((window.innerWidth || document.documentElement.offsetWidth) - box.offsetWidth) / 2));\n\
        var y = Math.abs(Math.floor(((window.innerHeight || document.documentElement.offsetHeight) - box.offsetHeight) / 2));\n\
        if (config.position == \"top\")\n\
            box.style.top = \"-3px\";\n\
        else\n\
            box.style.top = y + 'px';\n\
        box.style.left = x + 'px';\n\
        //necessary for IE only\n\
        box.onkeydown = modal_key;\n\
\n\
        box.focus();\n\
        if (config.hidden)\n\
            dhtmlx.modalbox.hide(box);\n\
\n\
        return box;\n\
    }\n\
\n\
    function alertPopup(config) {\n\
        return _createBox(config, true, false);\n\
    }\n\
\n\
    function confirmPopup(config) {\n\
        return _createBox(config, true, true);\n\
    }\n\
\n\
    function boxPopup(config) {\n\
        return _createBox(config);\n\
    }\n\
\n\
    function box_params(text, type, callback) {\n\
        if (typeof text != \"object\") {\n\
            if (typeof type == \"function\") {\n\
                callback = type;\n\
                type = \"\";\n\
            }\n\
            text = {\n\
                text: text,\n\
                type: type,\n\
                callback: callback\n\
            };\n\
        }\n\
        return text;\n\
    }\n\
\n\
    function params(text, type, expire, id) {\n\
        if (typeof text != \"object\")\n\
            text = {\n\
                text: text,\n\
                type: type,\n\
                expire: expire,\n\
                id: id\n\
            };\n\
        text.id = text.id || t.uid();\n\
        text.expire = text.expire || t.expire;\n\
        return text;\n\
    }\n\
    dhtmlx.alert = function () {\n\
        text = box_params.apply(this, arguments);\n\
        text.type = text.type || \"confirm\";\n\
        return alertPopup(text);\n\
    };\n\
    dhtmlx.confirm = function () {\n\
        text = box_params.apply(this, arguments);\n\
        text.type = text.type || \"alert\";\n\
        return confirmPopup(text);\n\
    };\n\
    dhtmlx.modalbox = function () {\n\
        text = box_params.apply(this, arguments);\n\
        text.type = text.type || \"alert\";\n\
        return boxPopup(text);\n\
    };\n\
    dhtmlx.modalbox.hide = function (node) {\n\
        while (node && node.getAttribute && !node.getAttribute(\"dhxbox\"))\n\
            node = node.parentNode;\n\
        if (node) {\n\
            node.parentNode.removeChild(node);\n\
            modality(false);\n\
        }\n\
    };\n\
    var t = dhtmlx.message = function (text, type, expire, id) {\n\
        text = params.apply(this, arguments);\n\
        text.type = text.type || \"info\";\n\
\n\
        var subtype = text.type.split(\"-\")[0];\n\
        switch (subtype) {\n\
        case \"alert\":\n\
            return alertPopup(text);\n\
        case \"confirm\":\n\
            return confirmPopup(text);\n\
        case \"modalbox\":\n\
            return boxPopup(text);\n\
        default:\n\
            return info(text);\n\
            break;\n\
        }\n\
    };\n\
\n\
    t.seed = (new Date()).valueOf();\n\
    t.uid = function () {\n\
        return t.seed++;\n\
    };\n\
    t.expire = 4000;\n\
    t.keyboard = true;\n\
    t.position = \"top\";\n\
    t.pull = {};\n\
    t.timers = {};\n\
\n\
    t.hideAll = function () {\n\
        for (var key in t.pull)\n\
            t.hide(key);\n\
    };\n\
    t.hide = function (id) {\n\
        var obj = t.pull[id];\n\
        if (obj && obj.parentNode) {\n\
            window.setTimeout(function () {\n\
                obj.parentNode.removeChild(obj);\n\
                obj = null;\n\
            }, 2000);\n\
            obj.className += \" hidden\";\n\
\n\
            if (t.timers[id])\n\
                window.clearTimeout(t.timers[id]);\n\
            delete t.pull[id];\n\
        }\n\
    };\n\
})();\n\
/**\n\
 *   @desc: constructor, data processor object\n\
 * @param: serverProcessorURL - url used for update\n\
 * @type: public\n\
 */\n\
function dataProcessor(serverProcessorURL) {\n\
    this.serverProcessor = serverProcessorURL;\n\
    this.action_param = \"!nativeeditor_status\";\n\
\n\
    this.object = null;\n\
    this.updatedRows = []; //ids of updated rows\n\
\n\
    this.autoUpdate = true;\n\
    this.updateMode = \"cell\";\n\
    this._tMode = \"GET\";\n\
    this.post_delim = \"_\";\n\
\n\
    this._waitMode = 0;\n\
    this._in_progress = {}; //?\n\
    this._invalid = {};\n\
    this.mandatoryFields = [];\n\
    this.messages = [];\n\
\n\
    this.styles = {\n\
        updated: \"font-weight:bold;\",\n\
        inserted: \"font-weight:bold;\",\n\
        deleted: \"text-decoration : line-through;\",\n\
        invalid: \"background-color:FFE0E0;\",\n\
        invalid_cell: \"border-bottom:2px solid red;\",\n\
        error: \"color:red;\",\n\
        clear: \"font-weight:normal;text-decoration:none;\"\n\
    };\n\
\n\
    this.enableUTFencoding(true);\n\
    dhtmlxEventable(this);\n\
\n\
    return this;\n\
}\n\
\n\
dataProcessor.prototype = {\n\
    /**\n\
     *   @desc: select GET or POST transaction model\n\
     * @param: mode - GET/POST\n\
     * @param: total - true/false - send records row by row or all at once (for grid only)\n\
     * @type: public\n\
     */\n\
    setTransactionMode: function (mode, total) {\n\
        this._tMode = mode;\n\
        this._tSend = total;\n\
    },\n\
    escape: function (data) {\n\
        if (this._utf)\n\
            return encodeURIComponent(data);\n\
        else\n\
            return escape(data);\n\
    },\n\
    /**\n\
     *   @desc: allows to set escaping mode\n\
     * @param: true - utf based escaping, simple - use current page encoding\n\
     * @type: public\n\
     */\n\
    enableUTFencoding: function (mode) {\n\
        this._utf = convertStringToBoolean(mode);\n\
    },\n\
    /**\n\
     *   @desc: allows to define, which column may trigger update\n\
     * @param: val - array or list of true/false values\n\
     * @type: public\n\
     */\n\
    setDataColumns: function (val) {\n\
        this._columns = (typeof val == \"string\") ? val.split(\",\") : val;\n\
    },\n\
    /**\n\
     *   @desc: get state of updating\n\
     * @returns:   true - all in sync with server, false - some items not updated yet.\n\
     * @type: public\n\
     */\n\
    getSyncState: function () {\n\
        return !this.updatedRows.length;\n\
    },\n\
    /**\n\
     *   @desc: enable/disable named field for data syncing, will use column ids for grid\n\
     * @param:   mode - true/false\n\
     * @type: public\n\
     */\n\
    enableDataNames: function (mode) {\n\
        this._endnm = convertStringToBoolean(mode);\n\
    },\n\
    /**\n\
     *   @desc: enable/disable mode , when only changed fields and row id send to the server side, instead of all fields in default mode\n\
     * @param:   mode - true/false\n\
     * @type: public\n\
     */\n\
    enablePartialDataSend: function (mode) {\n\
        this._changed = convertStringToBoolean(mode);\n\
    },\n\
    /**\n\
     *   @desc: set if rows should be send to server automaticaly\n\
     * @param: mode - \"row\" - based on row selection changed, \"cell\" - based on cell editing finished, \"off\" - manual data sending\n\
     * @type: public\n\
     */\n\
    setUpdateMode: function (mode, dnd) {\n\
        this.autoUpdate = (mode == \"cell\");\n\
        this.updateMode = mode;\n\
        this.dnd = dnd;\n\
    },\n\
    ignore: function (code, master) {\n\
        this._silent_mode = true;\n\
        code.call(master || window);\n\
        this._silent_mode = false;\n\
    },\n\
    /**\n\
     *   @desc: mark row as updated/normal. check mandatory fields,initiate autoupdate (if turned on)\n\
     * @param: rowId - id of row to set update-status for\n\
     * @param: state - true for \"updated\", false for \"not updated\"\n\
     * @param: mode - update mode name\n\
     * @type: public\n\
     */\n\
    setUpdated: function (rowId, state, mode) {\n\
        if (this._silent_mode) return;\n\
        var ind = this.findRow(rowId);\n\
\n\
        mode = mode || \"updated\";\n\
        var existing = this.obj.getUserData(rowId, this.action_param);\n\
        if (existing && mode == \"updated\") mode = existing;\n\
        if (state) {\n\
            this.set_invalid(rowId, false); //clear previous error flag\n\
            this.updatedRows[ind] = rowId;\n\
            this.obj.setUserData(rowId, this.action_param, mode);\n\
            if (this._in_progress[rowId])\n\
                this._in_progress[rowId] = \"wait\";\n\
        } else {\n\
            if (!this.is_invalid(rowId)) {\n\
                this.updatedRows.splice(ind, 1);\n\
                this.obj.setUserData(rowId, this.action_param, \"\");\n\
            }\n\
        }\n\
\n\
        //clear changed flag\n\
        if (!state)\n\
            this._clearUpdateFlag(rowId);\n\
\n\
        this.markRow(rowId, state, mode);\n\
        if (state && this.autoUpdate) this.sendData(rowId);\n\
    },\n\
    _clearUpdateFlag: function (id) {},\n\
    markRow: function (id, state, mode) {\n\
        var str = \"\";\n\
        var invalid = this.is_invalid(id);\n\
        if (invalid) {\n\
            str = this.styles[invalid];\n\
            state = true;\n\
        }\n\
        if (this.callEvent(\"onRowMark\", [id, state, mode, invalid])) {\n\
            //default logic\n\
            str = this.styles[state ? mode : \"clear\"] + str;\n\
\n\
            this.obj[this._methods[0]](id, str);\n\
\n\
            if (invalid && invalid.details) {\n\
                str += this.styles[invalid + \"_cell\"];\n\
                for (var i = 0; i < invalid.details.length; i++)\n\
                    if (invalid.details[i])\n\
                        this.obj[this._methods[1]](id, i, str);\n\
            }\n\
        }\n\
    },\n\
    getState: function (id) {\n\
        return this.obj.getUserData(id, this.action_param);\n\
    },\n\
    is_invalid: function (id) {\n\
        return this._invalid[id];\n\
    },\n\
    set_invalid: function (id, mode, details) {\n\
        if (details) mode = {\n\
            value: mode,\n\
            details: details,\n\
            toString: function () {\n\
                return this.value.toString();\n\
            }\n\
        };\n\
        this._invalid[id] = mode;\n\
    },\n\
    /**\n\
     *   @desc: check mandatory fields and varify values of cells, initiate update (if specified)\n\
     * @param: rowId - id of row to set update-status for\n\
     * @type: public\n\
     */\n\
    checkBeforeUpdate: function (rowId) {\n\
        return true;\n\
    },\n\
    /**\n\
     *   @desc: send row(s) values to server\n\
     * @param: rowId - id of row which data to send. If not specified, then all \"updated\" rows will be send\n\
     * @type: public\n\
     */\n\
    sendData: function (rowId) {\n\
        if (this._waitMode && (this.obj.mytype == \"tree\" || this.obj._h2)) return;\n\
        if (this.obj.editStop) this.obj.editStop();\n\
\n\
\n\
        if (typeof rowId == \"undefined\" || this._tSend) return this.sendAllData();\n\
        if (this._in_progress[rowId]) return false;\n\
\n\
        this.messages = [];\n\
        if (!this.checkBeforeUpdate(rowId) && this.callEvent(\"onValidatationError\", [rowId, this.messages])) return false;\n\
        this._beforeSendData(this._getRowData(rowId), rowId);\n\
    },\n\
    _beforeSendData: function (data, rowId) {\n\
        if (!this.callEvent(\"onBeforeUpdate\", [rowId, this.getState(rowId), data])) return false;\n\
        this._sendData(data, rowId);\n\
    },\n\
    serialize: function (data, id) {\n\
        if (typeof data == \"string\")\n\
            return data;\n\
        if (typeof id != \"undefined\")\n\
            return this.serialize_one(data, \"\");\n\
        else {\n\
            var stack = [];\n\
            var keys = [];\n\
            for (var key in data)\n\
                if (data.hasOwnProperty(key)) {\n\
                    stack.push(this.serialize_one(data[key], key + this.post_delim));\n\
                    keys.push(key);\n\
                }\n\
            stack.push(\"ids=\" + this.escape(keys.join(\",\")));\n\
            if (dhtmlx.security_key)\n\
                stack.push(\"dhx_security=\" + dhtmlx.security_key);\n\
            return stack.join(\"&\");\n\
        }\n\
    },\n\
    serialize_one: function (data, pref) {\n\
        if (typeof data == \"string\")\n\
            return data;\n\
        var stack = [];\n\
        for (var key in data)\n\
            if (data.hasOwnProperty(key))\n\
                stack.push(this.escape((pref || \"\") + key) + \"=\" + this.escape(data[key]));\n\
        return stack.join(\"&\");\n\
    },\n\
    _sendData: function (a1, rowId) {\n\
        if (!a1) return; //nothing to send\n\
        if (!this.callEvent(\"onBeforeDataSending\", rowId ? [rowId, this.getState(rowId), a1] : [null, null, a1])) return false;\n\
\n\
        if (rowId)\n\
            this._in_progress[rowId] = (new Date()).valueOf();\n\
        var a2 = new dtmlXMLLoaderObject(this.afterUpdate, this, true);\n\
\n\
        var a3 = this.serverProcessor + (this._user ? (getUrlSymbol(this.serverProcessor) + [\"dhx_user=\" + this._user, \"dhx_version=\" + this.obj.getUserData(0, \"version\")].join(\"&\")) : \"\");\n\
\n\
        if (this._tMode != \"POST\")\n\
            a2.loadXML(a3 + ((a3.indexOf(\"?\") != -1) ? \"&\" : \"?\") + this.serialize(a1, rowId));\n\
        else\n\
            a2.loadXML(a3, true, this.serialize(a1, rowId));\n\
\n\
        this._waitMode++;\n\
    },\n\
    sendAllData: function () {\n\
        if (!this.updatedRows.length) return;\n\
\n\
        this.messages = [];\n\
        var valid = true;\n\
        for (var i = 0; i < this.updatedRows.length; i++)\n\
            valid &= this.checkBeforeUpdate(this.updatedRows[i]);\n\
        if (!valid && !this.callEvent(\"onValidatationError\", [\"\", this.messages])) return false;\n\
\n\
        if (this._tSend)\n\
            this._sendData(this._getAllData());\n\
        else\n\
            for (var i = 0; i < this.updatedRows.length; i++)\n\
                if (!this._in_progress[this.updatedRows[i]]) {\n\
                    if (this.is_invalid(this.updatedRows[i])) continue;\n\
                    this._beforeSendData(this._getRowData(this.updatedRows[i]), this.updatedRows[i]);\n\
                    if (this._waitMode && (this.obj.mytype == \"tree\" || this.obj._h2)) return; //block send all for tree\n\
                }\n\
    },\n\
\n\
\n\
\n\
\n\
    _getAllData: function (rowId) {\n\
        var out = {};\n\
        var has_one = false;\n\
        for (var i = 0; i < this.updatedRows.length; i++) {\n\
            var id = this.updatedRows[i];\n\
            if (this._in_progress[id] || this.is_invalid(id)) continue;\n\
            if (!this.callEvent(\"onBeforeUpdate\", [id, this.getState(id)])) continue;\n\
            out[id] = this._getRowData(id, id + this.post_delim);\n\
            has_one = true;\n\
            this._in_progress[id] = (new Date()).valueOf();\n\
        }\n\
        return has_one ? out : null;\n\
    },\n\
\n\
\n\
    /**\n\
     *   @desc: specify column which value should be varified before sending to server\n\
     * @param: ind - column index (0 based)\n\
     * @param: verifFunction - function (object) which should verify cell value (if not specified, then value will be compared to empty string). Two arguments will be passed into it: value and column name\n\
     * @type: public\n\
     */\n\
    setVerificator: function (ind, verifFunction) {\n\
        this.mandatoryFields[ind] = verifFunction || (function (value) {\n\
            return (value != \"\");\n\
        });\n\
    },\n\
    /**\n\
     *   @desc: remove column from list of those which should be verified\n\
     * @param: ind - column Index (0 based)\n\
     * @type: public\n\
     */\n\
    clearVerificator: function (ind) {\n\
        this.mandatoryFields[ind] = false;\n\
    },\n\
\n\
\n\
\n\
\n\
    findRow: function (pattern) {\n\
        var i = 0;\n\
        for (i = 0; i < this.updatedRows.length; i++)\n\
            if (pattern == this.updatedRows[i]) break;\n\
        return i;\n\
    },\n\
\n\
\n\
\n\
\n\
    /**\n\
     *   @desc: define custom actions\n\
     * @param: name - name of action, same as value of action attribute\n\
     * @param: handler - custom function, which receives a XMl response content for action\n\
     * @type: private\n\
     */\n\
    defineAction: function (name, handler) {\n\
        if (!this._uActions) this._uActions = [];\n\
        this._uActions[name] = handler;\n\
    },\n\
\n\
\n\
\n\
\n\
    /**\n\
     *     @desc: used in combination with setOnBeforeUpdateHandler to create custom client-server transport system\n\
     *     @param: sid - id of item before update\n\
     *     @param: tid - id of item after up0ate\n\
     *     @param: action - action name\n\
     *     @type: public\n\
     *     @topic: 0\n\
     */\n\
    afterUpdateCallback: function (sid, tid, action, btag) {\n\
        var marker = sid;\n\
        var correct = (action != \"error\" && action != \"invalid\");\n\
        if (!correct) this.set_invalid(sid, action);\n\
        if ((this._uActions) && (this._uActions[action]) && (!this._uActions[action](btag)))\n\
            return (delete this._in_progress[marker]);\n\
\n\
        if (this._in_progress[marker] != \"wait\")\n\
            this.setUpdated(sid, false);\n\
\n\
        var soid = sid;\n\
\n\
        switch (action) {\n\
        case \"update\":\n\
        case \"updated\":\n\
        case \"inserted\":\n\
        case \"insert\":\n\
            if (tid != sid) {\n\
                this.obj[this._methods[2]](sid, tid);\n\
                sid = tid;\n\
            }\n\
            break;\n\
        case \"delete\":\n\
        case \"deleted\":\n\
            this.obj.setUserData(sid, this.action_param, \"true_deleted\");\n\
            this.obj[this._methods[3]](sid);\n\
            delete this._in_progress[marker];\n\
            return this.callEvent(\"onAfterUpdate\", [sid, action, tid, btag]);\n\
            break;\n\
        }\n\
\n\
        if (this._in_progress[marker] != \"wait\") {\n\
            if (correct) this.obj.setUserData(sid, this.action_param, '');\n\
            delete this._in_progress[marker];\n\
        } else {\n\
            delete this._in_progress[marker];\n\
            this.setUpdated(tid, true, this.obj.getUserData(sid, this.action_param));\n\
        }\n\
\n\
        this.callEvent(\"onAfterUpdate\", [sid, action, tid, btag]);\n\
    },\n\
\n\
    /**\n\
     *   @desc: response from server\n\
     * @param: xml - XMLLoader object with response XML\n\
     * @type: private\n\
     */\n\
    afterUpdate: function (that, b, c, d, xml) {\n\
        xml.getXMLTopNode(\"data\"); //fix incorrect content type in IE\n\
        if (!xml.xmlDoc.responseXML) return;\n\
        var atag = xml.doXPath(\"//data/action\");\n\
        for (var i = 0; i < atag.length; i++) {\n\
            var btag = atag[i];\n\
            var action = btag.getAttribute(\"type\");\n\
            var sid = btag.getAttribute(\"sid\");\n\
            var tid = btag.getAttribute(\"tid\");\n\
\n\
            that.afterUpdateCallback(sid, tid, action, btag);\n\
        }\n\
        that.finalizeUpdate();\n\
    },\n\
    finalizeUpdate: function () {\n\
        if (this._waitMode) this._waitMode--;\n\
\n\
        if ((this.obj.mytype == \"tree\" || this.obj._h2) && this.updatedRows.length)\n\
            this.sendData();\n\
        this.callEvent(\"onAfterUpdateFinish\", []);\n\
        if (!this.updatedRows.length)\n\
            this.callEvent(\"onFullSync\", []);\n\
    },\n\
\n\
\n\
\n\
\n\
    /**\n\
     *   @desc: initializes data-processor\n\
     * @param: anObj - dhtmlxGrid object to attach this data-processor to\n\
     * @type: public\n\
     */\n\
    init: function (anObj) {\n\
        this.obj = anObj;\n\
        if (this.obj._dp_init)\n\
            this.obj._dp_init(this);\n\
    },\n\
\n\
\n\
    setOnAfterUpdate: function (ev) {\n\
        this.attachEvent(\"onAfterUpdate\", ev);\n\
    },\n\
    enableDebug: function (mode) {},\n\
    setOnBeforeUpdateHandler: function (func) {\n\
        this.attachEvent(\"onBeforeDataSending\", func);\n\
    },\n\
\n\
\n\
\n\
    /*! starts autoupdate mode\n\
    @param interval\n\
      time interval for sending update requests\n\
  */\n\
    setAutoUpdate: function (interval, user) {\n\
        interval = interval || 2000;\n\
\n\
        this._user = user || (new Date()).valueOf();\n\
        this._need_update = false;\n\
        this._loader = null;\n\
        this._update_busy = false;\n\
\n\
        this.attachEvent(\"onAfterUpdate\", function (sid, action, tid, xml_node) {\n\
            this.afterAutoUpdate(sid, action, tid, xml_node);\n\
        });\n\
        this.attachEvent(\"onFullSync\", function () {\n\
            this.fullSync();\n\
        });\n\
\n\
        var self = this;\n\
        window.setInterval(function () {\n\
            self.loadUpdate();\n\
        }, interval);\n\
    },\n\
\n\
\n\
    /*! process updating request answer\n\
    if status == collision version is depricated\n\
    set flag for autoupdating immidiatly\n\
  */\n\
    afterAutoUpdate: function (sid, action, tid, xml_node) {\n\
        if (action == 'collision') {\n\
            this._need_update = true;\n\
            return false;\n\
        } else {\n\
            return true;\n\
        }\n\
    },\n\
\n\
\n\
    /*! callback function for onFillSync event\n\
    call update function if it's need\n\
  */\n\
    fullSync: function () {\n\
        if (this._need_update == true) {\n\
            this._need_update = false;\n\
            this.loadUpdate();\n\
        }\n\
        return true;\n\
    },\n\
\n\
\n\
    /*! sends query to the server and call callback function\n\
     */\n\
    getUpdates: function (url, callback) {\n\
        if (this._update_busy)\n\
            return false;\n\
        else\n\
            this._update_busy = true;\n\
\n\
        this._loader = this._loader || new dtmlXMLLoaderObject(true);\n\
\n\
        this._loader.async = true;\n\
        this._loader.waitCall = callback;\n\
        this._loader.loadXML(url);\n\
    },\n\
\n\
\n\
    /*! returns xml node value\n\
    @param node\n\
      xml node\n\
  */\n\
    _v: function (node) {\n\
        if (node.firstChild) return node.firstChild.nodeValue;\n\
        return \"\";\n\
    },\n\
\n\
\n\
    /*! returns values array of xml nodes array\n\
    @param arr\n\
      array of xml nodes\n\
  */\n\
    _a: function (arr) {\n\
        var res = [];\n\
        for (var i = 0; i < arr.length; i++) {\n\
            res[i] = this._v(arr[i]);\n\
        };\n\
        return res;\n\
    },\n\
\n\
\n\
    /*! loads updates and processes them\n\
     */\n\
    loadUpdate: function () {\n\
        var self = this;\n\
        var version = this.obj.getUserData(0, \"version\");\n\
        var url = this.serverProcessor + getUrlSymbol(this.serverProcessor) + [\"dhx_user=\" + this._user, \"dhx_version=\" + version].join(\"&\");\n\
        url = url.replace(\"editing=true&\", \"\");\n\
        this.getUpdates(url, function () {\n\
            var vers = self._loader.doXPath(\"//userdata\");\n\
            self.obj.setUserData(0, \"version\", self._v(vers[0]));\n\
\n\
            var upds = self._loader.doXPath(\"//update\");\n\
            if (upds.length) {\n\
                self._silent_mode = true;\n\
\n\
                for (var i = 0; i < upds.length; i++) {\n\
                    var status = upds[i].getAttribute('status');\n\
                    var id = upds[i].getAttribute('id');\n\
                    var parent = upds[i].getAttribute('parent');\n\
                    switch (status) {\n\
                    case 'inserted':\n\
                        self.callEvent(\"insertCallback\", [upds[i], id, parent]);\n\
                        break;\n\
                    case 'updated':\n\
                        self.callEvent(\"updateCallback\", [upds[i], id, parent]);\n\
                        break;\n\
                    case 'deleted':\n\
                        self.callEvent(\"deleteCallback\", [upds[i], id, parent]);\n\
                        break;\n\
                    }\n\
                }\n\
\n\
                self._silent_mode = false;\n\
            }\n\
\n\
            self._update_busy = false;\n\
            self = null;\n\
        });\n\
    }\n\
\n\
};\n\
\n\
//(c)dhtmlx ltd. www.dhtmlx.com\n\
/*\n\
  dhx_sort[index]=direction\n\
  dhx_filter[index]=mask\n\
*/\n\
if (window.dhtmlXGridObject) {\n\
    dhtmlXGridObject.prototype._init_point_connector = dhtmlXGridObject.prototype._init_point;\n\
    dhtmlXGridObject.prototype._init_point = function () {\n\
        var clear_url = function (url) {\n\
            url = url.replace(/(\\?|\\&)connector[^\\f]*/g, \"\");\n\
            return url + (url.indexOf(\"?\") != -1 ? \"&\" : \"?\") + \"connector=true\" + (this.hdr.rows.length > 0 ? \"&dhx_no_header=1\" : \"\");\n\
        };\n\
        var combine_urls = function (url) {\n\
            return clear_url.call(this, url) + (this._connector_sorting || \"\") + (this._connector_filter || \"\");\n\
        };\n\
        var sorting_url = function (url, ind, dir) {\n\
            this._connector_sorting = \"&dhx_sort[\" + ind + \"]=\" + dir;\n\
            return combine_urls.call(this, url);\n\
        };\n\
        var filtering_url = function (url, inds, vals) {\n\
            for (var i = 0; i < inds.length; i++)\n\
                inds[i] = \"dhx_filter[\" + inds[i] + \"]=\" + encodeURIComponent(vals[i]);\n\
            this._connector_filter = \"&\" + inds.join(\"&\");\n\
            return combine_urls.call(this, url);\n\
        };\n\
        this.attachEvent(\"onCollectValues\", function (ind) {\n\
            if (this._con_f_used[ind]) {\n\
                if (typeof (this._con_f_used[ind]) == \"object\")\n\
                    return this._con_f_used[ind];\n\
                else\n\
                    return false;\n\
            }\n\
            return true;\n\
        });\n\
        this.attachEvent(\"onDynXLS\", function () {\n\
            this.xmlFileUrl = combine_urls.call(this, this.xmlFileUrl);\n\
            return true;\n\
        });\n\
        this.attachEvent(\"onBeforeSorting\", function (ind, type, dir) {\n\
            if (type == \"connector\") {\n\
                var self = this;\n\
                this.clearAndLoad(sorting_url.call(this, this.xmlFileUrl, ind, dir), function () {\n\
                    self.setSortImgState(true, ind, dir);\n\
                });\n\
                return false;\n\
            }\n\
            return true;\n\
        });\n\
        this.attachEvent(\"onFilterStart\", function (a, b) {\n\
            if (this._con_f_used.length) {\n\
                this.clearAndLoad(filtering_url.call(this, this.xmlFileUrl, a, b));\n\
                return false;\n\
            }\n\
            return true;\n\
        });\n\
        this.attachEvent(\"onXLE\", function (a, b, c, xml) {\n\
            if (!xml) return;\n\
        });\n\
\n\
        if (this._init_point_connector) this._init_point_connector();\n\
    };\n\
    dhtmlXGridObject.prototype._con_f_used = [];\n\
    dhtmlXGridObject.prototype._in_header_connector_text_filter = function (t, i) {\n\
        if (!this._con_f_used[i])\n\
            this._con_f_used[i] = 1;\n\
        return this._in_header_text_filter(t, i);\n\
    };\n\
    dhtmlXGridObject.prototype._in_header_connector_select_filter = function (t, i) {\n\
        if (!this._con_f_used[i])\n\
            this._con_f_used[i] = 2;\n\
        return this._in_header_select_filter(t, i);\n\
    };\n\
    dhtmlXGridObject.prototype.load_connector = dhtmlXGridObject.prototype.load;\n\
    dhtmlXGridObject.prototype.load = function (url, call, type) {\n\
        if (!this._colls_loaded && this.cellType) {\n\
            var ar = [];\n\
            for (var i = 0; i < this.cellType.length; i++)\n\
                if (this.cellType[i].indexOf(\"co\") == 0 || this._con_f_used[i] == 2) ar.push(i);\n\
            if (ar.length)\n\
                arguments[0] += (arguments[0].indexOf(\"?\") != -1 ? \"&\" : \"?\") + \"connector=true&dhx_colls=\" + ar.join(\",\");\n\
        }\n\
        return this.load_connector.apply(this, arguments);\n\
    };\n\
    dhtmlXGridObject.prototype._parseHead_connector = dhtmlXGridObject.prototype._parseHead;\n\
    dhtmlXGridObject.prototype._parseHead = function (url, call, type) {\n\
        this._parseHead_connector.apply(this, arguments);\n\
        if (!this._colls_loaded) {\n\
            var cols = this.xmlLoader.doXPath(\"./coll_options\", arguments[0]);\n\
            for (var i = 0; i < cols.length; i++) {\n\
                var f = cols[i].getAttribute(\"for\");\n\
                var v = [];\n\
                var combo = null;\n\
                if (this.cellType[f] == \"combo\")\n\
                    combo = this.getColumnCombo(f);\n\
                if (this.cellType[f].indexOf(\"co\") == 0)\n\
                    combo = this.getCombo(f);\n\
\n\
                var os = this.xmlLoader.doXPath(\"./item\", cols[i]);\n\
                for (var j = 0; j < os.length; j++) {\n\
                    var val = os[j].getAttribute(\"value\");\n\
\n\
                    if (combo) {\n\
                        var lab = os[j].getAttribute(\"label\") || val;\n\
\n\
                        if (combo.addOption)\n\
                            combo.addOption([\n\
                                [val, lab]\n\
                            ]);\n\
                        else\n\
                            combo.put(val, lab);\n\
\n\
                        v[v.length] = lab;\n\
                    } else\n\
                        v[v.length] = val;\n\
                }\n\
                if (this._con_f_used[f * 1])\n\
                    this._con_f_used[f * 1] = v;\n\
            }\n\
            this._colls_loaded = true;\n\
        }\n\
    };\n\
}\n\
\n\
if (window.dataProcessor) {\n\
    dataProcessor.prototype.init_original = dataProcessor.prototype.init;\n\
    dataProcessor.prototype.init = function (obj) {\n\
        this.init_original(obj);\n\
        obj._dataprocessor = this;\n\
\n\
        this.setTransactionMode(\"POST\", true);\n\
        this.serverProcessor += (this.serverProcessor.indexOf(\"?\") != -1 ? \"&\" : \"?\") + \"editing=true\";\n\
    };\n\
}\n\
dhtmlxError.catchError(\"LoadXML\", function (a, b, c) {\n\
    if (c[0].status != 0) {\n\
        alert(c[0].responseText);\n\
    }\n\
});\n\
\n\
window.dhtmlXScheduler = window.scheduler = {\n\
    version: \"4.0.1\"\n\
};\n\
dhtmlxEventable(scheduler);\n\
\n\
scheduler.init = function (id, date, mode) {\n\
    date = date || (scheduler._currentDate());\n\
    mode = mode || \"week\";\n\
\n\
    //hook for terrace skin\n\
    if (this._skin_init)\n\
        scheduler._skin_init();\n\
\n\
    scheduler.date.init();\n\
\n\
    this._obj = (typeof id == \"string\") ? document.getElementById(id) : id;\n\
    this._els = [];\n\
    this._scroll = true;\n\
    this._quirks = (_isIE && document.compatMode == \"BackCompat\");\n\
    this._quirks7 = (_isIE && navigator.appVersion.indexOf(\"MSIE 8\") == -1);\n\
\n\
    this.get_elements();\n\
    this.init_templates();\n\
    this.set_actions();\n\
\n\
    (function () {\n\
        var oldSize = getWindowSize();\n\
        dhtmlxEvent(window, \"resize\", function () {\n\
            var newSize = getWindowSize();\n\
\n\
            // ie7-8 triggers \"resize\" when window's elements are resized, it messes container-autoresize extension\n\
            // check if it's actually resized\n\
            if (!equals(oldSize, newSize)) {\n\
                window.clearTimeout(scheduler._resize_timer);\n\
                scheduler._resize_timer = window.setTimeout(function () {\n\
                    if (scheduler.callEvent(\"onSchedulerResize\", [])) {\n\
                        scheduler.update_view();\n\
                        scheduler.callEvent(\"onAfterSchedulerResize\", []);\n\
                    }\n\
                }, 100);\n\
            }\n\
            oldSize = newSize;\n\
\n\
        });\n\
\n\
        function getWindowSize() {\n\
            return {\n\
                w: window.innerWidth || document.documentElement.clientWidth,\n\
                h: window.innerHeight || document.documentElement.clientHeight\n\
            };\n\
        }\n\
\n\
        function equals(a, b) {\n\
            return a.w == b.w && a.h == b.h;\n\
        }\n\
    })();\n\
    this._init_touch_events();\n\
    this.set_sizes();\n\
    scheduler.callEvent('onSchedulerReady', []);\n\
    this.setCurrentView(date, mode);\n\
};\n\
\n\
scheduler.xy = {\n\
    min_event_height: 40,\n\
    scale_width: 50,\n\
    scroll_width: 18,\n\
    scale_height: 20,\n\
    month_scale_height: 20,\n\
    menu_width: 25,\n\
    margin_top: 0,\n\
    margin_left: 0,\n\
    editor_width: 140\n\
};\n\
scheduler.keys = {\n\
    edit_save: 13,\n\
    edit_cancel: 27\n\
};\n\
scheduler.set_sizes = function () {\n\
    var w = this._x = this._obj.clientWidth - this.xy.margin_left;\n\
    var h = this._y = this._obj.clientHeight - this.xy.margin_top;\n\
\n\
    //not-table mode always has scroll - need to be fixed in future\n\
    var scale_x = this._table_view ? 0 : (this.xy.scale_width + this.xy.scroll_width);\n\
    var scale_s = this._table_view ? -1 : this.xy.scale_width;\n\
\n\
    this.set_xy(this._els[\"dhx_cal_navline\"][0], w, this.xy.nav_height, 0, 0);\n\
    this.set_xy(this._els[\"dhx_cal_header\"][0], w - scale_x, this.xy.scale_height, scale_s, this.xy.nav_height + (this._quirks ? -1 : 1));\n\
    //to support alter-skin, we need a way to alter height directly from css\n\
    var actual_height = this._els[\"dhx_cal_navline\"][0].offsetHeight;\n\
    if (actual_height > 0) this.xy.nav_height = actual_height;\n\
\n\
    var data_y = this.xy.scale_height + this.xy.nav_height + (this._quirks ? -2 : 0);\n\
    this.set_xy(this._els[\"dhx_cal_data\"][0], w, h - (data_y + 2), 0, data_y + 2);\n\
};\n\
scheduler.set_xy = function (node, w, h, x, y) {\n\
    node.style.width = Math.max(0, w) + \"px\";\n\
    node.style.height = Math.max(0, h) + \"px\";\n\
    if (arguments.length > 3) {\n\
        node.style.left = x + \"px\";\n\
        node.style.top = y + \"px\";\n\
    }\n\
};\n\
scheduler.get_elements = function () {\n\
    //get all child elements as named hash\n\
    var els = this._obj.getElementsByTagName(\"DIV\");\n\
    for (var i = 0; i < els.length; i++) {\n\
        var name = els[i].className;\n\
        if (name) name = name.split(\" \")[0];\n\
        if (!this._els[name]) this._els[name] = [];\n\
        this._els[name].push(els[i]);\n\
\n\
        //check if name need to be changed\n\
        var t = scheduler.locale.labels[els[i].getAttribute(\"name\") || name];\n\
        if (t) els[i].innerHTML = t;\n\
    }\n\
};\n\
scheduler.set_actions = function () {\n\
    for (var a in this._els)\n\
        if (this._click[a])\n\
            for (var i = 0; i < this._els[a].length; i++)\n\
                this._els[a][i].onclick = scheduler._click[a];\n\
    this._obj.onselectstart = function (e) {\n\
        return false;\n\
    };\n\
    //disable resize event\n\
//    this._obj.onmousemove = function (e) {\n\
//        if (!scheduler._temp_touch_block)\n\
//            scheduler._on_mouse_move(e || event);\n\
//    };\n\
//    this._obj.onmousedown = function (e) {\n\
//        if (!scheduler._ignore_next_click)\n\
//            scheduler._on_mouse_down(e || event);\n\
//    };\n\
//    this._obj.onmouseup = function (e) {\n\
//        if (!scheduler._ignore_next_click)\n\
//            scheduler._on_mouse_up(e || event);\n\
//    };\n\
    this._obj.ondblclick = function (e) {\n\
        scheduler._on_dbl_click(e || event);\n\
    };\n\
    this._obj.oncontextmenu = function (e) {\n\
        var ev = e || event;\n\
        var src = ev.target || ev.srcElement;\n\
        var returnValue = scheduler.callEvent(\"onContextMenu\", [scheduler._locate_event(src), ev]);\n\
        return returnValue;\n\
    };\n\
};\n\
scheduler.select = function (id) {\n\
    if (this._select_id == id) return;\n\
    this.editStop(false);\n\
    this.unselect();\n\
    this._select_id = id;\n\
    this.updateEvent(id);\n\
};\n\
scheduler.unselect = function (id) {\n\
    if (id && id != this._select_id) return;\n\
    var t = this._select_id;\n\
    this._select_id = null;\n\
    if (t) this.updateEvent(t);\n\
};\n\
scheduler.getState = function () {\n\
    return {\n\
        mode: this._mode,\n\
        date: this._date,\n\
        min_date: this._min_date,\n\
        max_date: this._max_date,\n\
        editor_id: this._edit_id,\n\
        lightbox_id: this._lightbox_id,\n\
        new_event: this._new_event,\n\
        select_id: this._select_id,\n\
        expanded: this.expanded,\n\
        drag_id: this._drag_id,\n\
        drag_mode: this._drag_mode\n\
    };\n\
};\n\
scheduler._click = {\n\
    dhx_cal_data: function (e) {\n\
        //in case of touch disable click processing\n\
        if (scheduler._ignore_next_click) {\n\
            if (e.preventDefault)\n\
                e.preventDefault();\n\
            e.cancelBubble = true;\n\
            return scheduler._ignore_next_click = false;\n\
        }\n\
\n\
        var trg = e ? e.target : event.srcElement;\n\
        var id = scheduler._locate_event(trg);\n\
\n\
        e = e || event;\n\
\n\
        if (!id) {\n\
            scheduler.callEvent(\"onEmptyClick\", [scheduler.getActionData(e).date, e]);\n\
        } else {\n\
            if (!scheduler.callEvent(\"onClick\", [id, e]) || scheduler.config.readonly) return;\n\
        }\n\
\n\
        if (id && scheduler.config.select) {\n\
\n\
            scheduler.select(id);\n\
            var mask = trg.className;\n\
            if (mask.indexOf(\"_icon\") != -1)\n\
                scheduler._click.buttons[mask.split(\" \")[1].replace(\"icon_\", \"\")](id);\n\
        } else\n\
            scheduler._close_not_saved();\n\
    },\n\
    dhx_cal_prev_button: function () {\n\
        scheduler._click.dhx_cal_next_button(0, -1);\n\
    },\n\
    dhx_cal_next_button: function (dummy, step) {\n\
        scheduler.setCurrentView(scheduler.date.add( //next line changes scheduler._date , but seems it has not side-effects\n\
            scheduler.date[scheduler._mode + \"_start\"](scheduler._date), (step || 1), scheduler._mode));\n\
    },\n\
    dhx_cal_today_button: function () {\n\
        if (scheduler.callEvent(\"onBeforeTodayDisplayed\", [])) {\n\
            scheduler.setCurrentView(scheduler._currentDate());\n\
        }\n\
    },\n\
    dhx_cal_tab: function () {\n\
        var name = this.getAttribute(\"name\");\n\
        var mode = name.substring(0, name.search(\"_tab\"));\n\
        scheduler.setCurrentView(scheduler._date, mode);\n\
    },\n\
    buttons: {\n\
        \"delete\": function (id) {\n\
            var c = scheduler.locale.labels.confirm_deleting;\n\
            scheduler._dhtmlx_confirm(c, scheduler.locale.labels.title_confirm_deleting, function () {\n\
                scheduler.deleteEvent(id)\n\
            });\n\
        },\n\
        edit: function (id) {\n\
            scheduler.edit(id);\n\
        },\n\
        save: function (id) {\n\
            scheduler.editStop(true);\n\
        },\n\
        details: function (id) {\n\
            scheduler.showLightbox(id);\n\
        },\n\
        cancel: function (id) {\n\
            scheduler.editStop(false);\n\
        }\n\
    }\n\
};\n\
scheduler._dhtmlx_confirm = function (message, title, callback) {\n\
    if (!message)\n\
        return callback();\n\
    var opts = {\n\
        text: message\n\
    };\n\
    if (title)\n\
        opts.title = title;\n\
    if (callback) {\n\
        opts.callback = function (result) {\n\
            if (result)\n\
                callback();\n\
        };\n\
    }\n\
    dhtmlx.confirm(opts);\n\
};\n\
scheduler.addEventNow = function (start, end, e) {\n\
    var base = {};\n\
    if (start && start.constructor.toString().match(/object/i) !== null) {\n\
        base = start;\n\
        start = null;\n\
    }\n\
\n\
    var d = (this.config.event_duration || this.config.time_step) * 60000;\n\
    if (!start) start = base.start_date || Math.round((scheduler._currentDate()).valueOf() / d) * d;\n\
    var start_date = new Date(start);\n\
    if (!end) {\n\
        var start_hour = this.config.first_hour;\n\
        if (start_hour > start_date.getHours()) {\n\
            start_date.setHours(start_hour);\n\
            start = start_date.valueOf();\n\
        }\n\
        end = start.valueOf() + d;\n\
    }\n\
    var end_date = new Date(end);\n\
\n\
    // scheduler.addEventNow(new Date(), new Date()) + collision though get_visible events defect (such event was not retrieved)\n\
    if (start_date.valueOf() == end_date.valueOf())\n\
        end_date.setTime(end_date.valueOf() + d);\n\
\n\
    base.start_date = base.start_date || start_date;\n\
    base.end_date = base.end_date || end_date;\n\
    base.text = base.text || this.locale.labels.new_event;\n\
    base.id = this._drag_id = this.uid();\n\
    this._drag_mode = \"new-size\";\n\
\n\
    this._loading = true;\n\
    this.addEvent(base);\n\
    this.callEvent(\"onEventCreated\", [this._drag_id, e]);\n\
    this._loading = false;\n\
\n\
    this._drag_event = {}; //dummy , to trigger correct event updating logic\n\
    this._on_mouse_up(e);\n\
};\n\
scheduler._on_dbl_click = function (e, src) {\n\
    src = src || (e.target || e.srcElement);\n\
    if (this.config.readonly || !src.className) return;\n\
    var name = src.className.split(\" \")[0];\n\
    switch (name) {\n\
    case \"dhx_scale_holder\":\n\
    case \"dhx_scale_holder_now\":\n\
    case \"dhx_month_body\":\n\
    case \"dhx_wa_day_data\":\n\
    case \"dhx_marked_timespan\":\n\
        if (!scheduler.config.dblclick_create) break;\n\
        this.addEventNow(this.getActionData(e).date, null, e);\n\
        break;\n\
    case \"dhx_cal_event\":\n\
    case \"dhx_wa_ev_body\":\n\
    case \"dhx_agenda_line\":\n\
    case \"dhx_grid_event\":\n\
    case \"dhx_cal_event_line\":\n\
    case \"dhx_cal_event_clear\":\n\
        var id = this._locate_event(src);\n\
        if (!this.callEvent(\"onDblClick\", [id, e])) return;\n\
        if (this.config.details_on_dblclick || this._table_view || !this.getEvent(id)._timed || !this.config.select){\n\
            if (this._table_view)//disable db click on a scheduled event\n\
                return;\n\
            this.showLightbox(id);\n\
        }\n\
        else\n\
            this.edit(id);\n\
        break;\n\
    case \"dhx_time_block\":\n\
    case \"dhx_cal_container\":\n\
        return;\n\
        break;\n\
    default:\n\
        var t = this[\"dblclick_\" + name];\n\
        if (t) {\n\
            t.call(this, e);\n\
        } else {\n\
            if (src.parentNode && src != this)\n\
                return scheduler._on_dbl_click(e, src.parentNode);\n\
        }\n\
        break;\n\
    }\n\
};\n\
\n\
scheduler._mouse_coords = function (ev) {\n\
    var pos;\n\
    var b = document.body;\n\
    var d = document.documentElement;\n\
    if (!_isIE && (ev.pageX || ev.pageY))\n\
        pos = {\n\
            x: ev.pageX,\n\
            y: ev.pageY\n\
        };\n\
    else pos = {\n\
        x: ev.clientX + (b.scrollLeft || d.scrollLeft || 0) - b.clientLeft,\n\
        y: ev.clientY + (b.scrollTop || d.scrollTop || 0) - b.clientTop\n\
    };\n\
\n\
    //apply layout\n\
    pos.x -= getAbsoluteLeft(this._obj) + (this._table_view ? 0 : this.xy.scale_width);\n\
    pos.y -= getAbsoluteTop(this._obj) + this.xy.nav_height + (this._dy_shift || 0) + this.xy.scale_height - this._els[\"dhx_cal_data\"][0].scrollTop;\n\
    pos.ev = ev;\n\
\n\
    var handler = this[\"mouse_\" + this._mode];\n\
    if (handler)\n\
        return handler.call(this, pos);\n\
\n\
    if (this._cols) {\n\
        var column = pos.x / this._cols[0];\n\
        if (this._ignores)\n\
            for (var i = 0; i <= column; i++)\n\
                if (this._ignores[i])\n\
                    column++;\n\
    }\n\
\n\
    //transform to date\n\
    if (!this._table_view) {\n\
        //\"get position\" can be invoked before columns are loaded into the units view(e.g. by onMouseMove handler in key_nav.js)\n\
        if (!this._cols) return pos;\n\
        pos.x = Math.min(this._cols.length - 1, Math.max(0, Math.ceil(column) - 1));\n\
\n\
        pos.y = Math.max(0, Math.ceil(pos.y * 60 / (this.config.time_step * this.config.hour_size_px)) - 1) + this.config.first_hour * (60 / this.config.time_step);\n\
    } else {\n\
        if (!this._cols || !this._colsS) // agenda/map views\n\
            return pos;\n\
        var dy = 0;\n\
        for (dy = 1; dy < this._colsS.heights.length; dy++)\n\
            if (this._colsS.heights[dy] > pos.y) break;\n\
\n\
        pos.y = Math.ceil((Math.max(0, column) + Math.max(0, dy - 1) * 7) * 24 * 60 / this.config.time_step);\n\
\n\
        if (scheduler._drag_mode || this._mode == \"month\")\n\
            pos.y = (Math.max(0, Math.ceil(column) - 1) + Math.max(0, dy - 1) * 7) * 24 * 60 / this.config.time_step;\n\
\n\
        //we care about ignored days only during event moving in month view\n\
        if (this._drag_mode == \"move\") {\n\
            if (scheduler._ignores_detected && scheduler.config.preserve_length) {\n\
                pos._ignores = true;\n\
                //get real lengtn of event\n\
                if (!this._drag_event._event_length)\n\
                    this._drag_event._event_length = this._get_real_event_length(this._drag_event.start_date, this._drag_event.end_date, {\n\
                        x_step: 1,\n\
                        x_unit: \"day\"\n\
                    });\n\
            }\n\
        }\n\
\n\
        pos.x = 0;\n\
    }\n\
    return pos;\n\
};\n\
scheduler._close_not_saved = function () {\n\
    if (new Date().valueOf() - (scheduler._new_event || 0) > 500 && scheduler._edit_id) {\n\
        var c = scheduler.locale.labels.confirm_closing;\n\
\n\
        scheduler._dhtmlx_confirm(c, scheduler.locale.labels.title_confirm_closing, function () {\n\
            scheduler.editStop(scheduler.config.positive_closing);\n\
        });\n\
    }\n\
};\n\
scheduler._correct_shift = function (start, back) {\n\
    return start -= ((new Date(scheduler._min_date)).getTimezoneOffset() - (new Date(start)).getTimezoneOffset()) * 60000 * (back ? -1 : 1);\n\
};\n\
scheduler._on_mouse_move = function (e) {\n\
    if (this._drag_mode) {\n\
        var pos = this._mouse_coords(e);\n\
        if (!this._drag_pos || pos.force_redraw || this._drag_pos.x != pos.x || this._drag_pos.y != pos.y) {\n\
            var start, end;\n\
            if (this._edit_id != this._drag_id)\n\
                this._close_not_saved();\n\
\n\
            this._drag_pos = pos;\n\
\n\
            if (this._drag_mode == \"create\") {\n\
                this._close_not_saved();\n\
                this._loading = true; //will be ignored by dataprocessor\n\
\n\
                start = this._get_date_from_pos(pos).valueOf();\n\
\n\
                if (!this._drag_start) {\n\
                    var res = this.callEvent(\"onBeforeEventCreated\", [e, this._drag_id]);\n\
                    if (!res)\n\
                        return;\n\
\n\
\n\
                    this._drag_start = start;\n\
                    return;\n\
                }\n\
\n\
                end = start;\n\
                if (end == this._drag_start) {}\n\
\n\
                var start_date = new Date(this._drag_start);\n\
                var end_date = new Date(end);\n\
                if ((this._mode == \"day\" || this._mode == \"week\") && (start_date.getHours() == end_date.getHours() && start_date.getMinutes() == end_date.getMinutes())) {\n\
                    end_date = new Date(this._drag_start + 1000);\n\
                }\n\
\n\
\n\
                this._drag_id = this.uid();\n\
                this.addEvent(start_date, end_date, this.locale.labels.new_event, this._drag_id, pos.fields);\n\
\n\
                this.callEvent(\"onEventCreated\", [this._drag_id, e]);\n\
                this._loading = false;\n\
                this._drag_mode = \"new-size\";\n\
\n\
            }\n\
\n\
            var ev = this.getEvent(this._drag_id);\n\
\n\
            if (this._drag_mode == \"move\") {\n\
                start = this._min_date.valueOf() + (pos.y * this.config.time_step + pos.x * 24 * 60 - (scheduler._move_pos_shift || 0)) * 60000;\n\
                if (!pos.custom && this._table_view) start += this.date.time_part(ev.start_date) * 1000;\n\
                start = this._correct_shift(start);\n\
\n\
                if (pos._ignores && this.config.preserve_length && this._table_view) {\n\
                    if (this.matrix)\n\
                        var obj = this.matrix[this._mode];\n\
                    obj = obj || {\n\
                        x_step: 1,\n\
                        x_unit: \"day\"\n\
                    };\n\
                    end = start * 1 + this._get_fictional_event_length(start, this._drag_event._event_length, obj);\n\
                } else\n\
                    end = ev.end_date.valueOf() - (ev.start_date.valueOf() - start);\n\
            } else { // resize\n\
                start = ev.start_date.valueOf();\n\
                end = ev.end_date.valueOf();\n\
                if (this._table_view) {\n\
                    var resize_date = this._min_date.valueOf() + pos.y * this.config.time_step * 60000 + (pos.custom ? 0 : 24 * 60 * 60000);\n\
                    if (this._mode == \"month\")\n\
                        resize_date = this._correct_shift(resize_date, false);\n\
\n\
                    if (pos.resize_from_start)\n\
                        start = resize_date;\n\
                    else\n\
                        end = resize_date;\n\
                } else {\n\
                    end = this.date.date_part(new Date(ev.end_date)).valueOf() + pos.y * this.config.time_step * 60000;\n\
                    this._els[\"dhx_cal_data\"][0].style.cursor = \"s-resize\";\n\
                    if (this._mode == \"week\" || this._mode == \"day\")\n\
                        end = this._correct_shift(end);\n\
                }\n\
                if (this._drag_mode == \"new-size\") {\n\
                    if (end <= this._drag_start) {\n\
                        var shift = pos.shift || ((this._table_view && !pos.custom) ? 24 * 60 * 60000 : 0);\n\
                        start = end - (pos.shift ? 0 : shift);\n\
                        end = this._drag_start + (shift || (this.config.time_step * 60000));\n\
                    } else {\n\
                        start = this._drag_start;\n\
                    }\n\
                } else {\n\
                    if (end <= start)\n\
                        end = start + this.config.time_step * 60000;\n\
                }\n\
            }\n\
            var new_end = new Date(end - 1);\n\
            var new_start = new Date(start);\n\
            //prevent out-of-borders situation for day|week view\n\
            if (this._table_view || (new_end.getDate() == new_start.getDate() && new_end.getHours() < this.config.last_hour) || scheduler._allow_dnd) {\n\
                ev.start_date = new_start;\n\
                ev.end_date = new Date(end);\n\
                if (this.config.update_render) {\n\
                    //fix for repaint after dnd and scroll issue, #231\n\
                    var sx = scheduler._els[\"dhx_cal_data\"][0].scrollTop;\n\
                    this.update_view();\n\
                    scheduler._els[\"dhx_cal_data\"][0].scrollTop = sx;\n\
                } else\n\
                    this.updateEvent(this._drag_id);\n\
            }\n\
            if (this._table_view) {\n\
                this.for_rendered(this._drag_id, function (r) {\n\
                    r.className += \" dhx_in_move\";\n\
                });\n\
            }\n\
        }\n\
    } else {\n\
        if (scheduler.checkEvent(\"onMouseMove\")) {\n\
            var id = this._locate_event(e.target || e.srcElement);\n\
            this.callEvent(\"onMouseMove\", [id, e]);\n\
        }\n\
    }\n\
};\n\
scheduler._on_mouse_down = function (e, src) {\n\
    // on Mac we do not get onmouseup event when clicking right mouse button leaving us in dnd state\n\
    // let's ignore right mouse button then\n\
    if (e.button == 2)\n\
        return;\n\
\n\
    if (this.config.readonly || this._drag_mode) return;\n\
    src = src || (e.target || e.srcElement);\n\
    var classname = src.className && src.className.split(\" \")[0];\n\
\n\
    switch (classname) {\n\
    case \"dhx_cal_event_line\":\n\
    case \"dhx_cal_event_clear\":\n\
        if (this._table_view)\n\
            this._drag_mode = \"move\"; //item in table mode\n\
        break;\n\
    case \"dhx_event_move\":\n\
    case \"dhx_wa_ev_body\":\n\
        this._drag_mode = \"move\";\n\
        break;\n\
    case \"dhx_event_resize\":\n\
        this._drag_mode = \"resize\";\n\
        break;\n\
    case \"dhx_scale_holder\":\n\
    case \"dhx_scale_holder_now\":\n\
    case \"dhx_month_body\":\n\
    case \"dhx_matrix_cell\":\n\
    case \"dhx_marked_timespan\":\n\
        this._drag_mode = \"create\";\n\
        this.unselect(this._select_id);\n\
        break;\n\
    case \"\":\n\
        if (src.parentNode)\n\
            return scheduler._on_mouse_down(e, src.parentNode);\n\
    default:\n\
        if (scheduler.checkEvent(\"onMouseDown\") && scheduler.callEvent(\"onMouseDown\", [classname])) {\n\
            if (src.parentNode && src != this) {\n\
                return scheduler._on_mouse_down(e, src.parentNode);\n\
            }\n\
        }\n\
        this._drag_mode = null;\n\
        this._drag_id = null;\n\
        break;\n\
    }\n\
    if (this._drag_mode) {\n\
        var id = this._locate_event(src);\n\
        if (!this.config[\"drag_\" + this._drag_mode] || !this.callEvent(\"onBeforeDrag\", [id, this._drag_mode, e]))\n\
            this._drag_mode = this._drag_id = 0;\n\
        else {\n\
            this._drag_id = id;\n\
            this._drag_event = scheduler._lame_clone(this.getEvent(this._drag_id) || {});\n\
        }\n\
    }\n\
    this._drag_start = null;\n\
};\n\
scheduler._on_mouse_up = function (e) {\n\
    if (e && e.button == 2 && scheduler.config.touch) return;\n\
    if (this._drag_mode && this._drag_id) {\n\
        this._els[\"dhx_cal_data\"][0].style.cursor = \"default\";\n\
        //drop\n\
        var ev = this.getEvent(this._drag_id);\n\
        if (this._drag_event._dhx_changed || !this._drag_event.start_date || ev.start_date.valueOf() != this._drag_event.start_date.valueOf() || ev.end_date.valueOf() != this._drag_event.end_date.valueOf()) {\n\
            var is_new = (this._drag_mode == \"new-size\");\n\
            if (!this.callEvent(\"onBeforeEventChanged\", [ev, e, is_new, this._drag_event])) {\n\
                if (is_new)\n\
                    this.deleteEvent(ev.id, true);\n\
                else {\n\
                    this._drag_event._dhx_changed = false;\n\
                    scheduler._lame_copy(ev, this._drag_event);\n\
                    this.updateEvent(ev.id);\n\
                }\n\
            } else {\n\
                var drag_id = this._drag_id;\n\
                this._drag_id = this._drag_mode = null;\n\
                if (is_new && this.config.edit_on_create) {\n\
                    this.unselect();\n\
                    this._new_event = new Date(); //timestamp of creation\n\
                    //if selection disabled - force lightbox usage\n\
                    if (this._table_view || this.config.details_on_create || !this.config.select) {\n\
                        return this.showLightbox(drag_id);\n\
                    }\n\
                    this._drag_pos = true; //set flag to trigger full redraw\n\
                    this._select_id = this._edit_id = drag_id;\n\
                } else {\n\
                    if (!this._new_event)\n\
                        this.callEvent(is_new ? \"onEventAdded\" : \"onEventChanged\", [drag_id, this.getEvent(drag_id)]);\n\
                }\n\
            }\n\
        }\n\
        if (this._drag_pos) this.render_view_data(); //redraw even if there is no real changes - necessary for correct positioning item after drag\n\
    }\n\
    this._drag_id = null;\n\
    this._drag_mode = null;\n\
    this._drag_pos = null;\n\
};\n\
scheduler.update_view = function () {\n\
    this._reset_scale();\n\
    if (this._load_mode && this._load()) return this._render_wait = true;\n\
    this.render_view_data();\n\
};\n\
\n\
scheduler.isViewExists = function (mode) {\n\
    return !!(scheduler[mode + \"_view\"] ||\n\
        (scheduler.date[mode + \"_start\"] && scheduler.templates[mode + \"_date\"] && scheduler.templates[mode + \"_scale_date\"]));\n\
};\n\
\n\
scheduler.updateView = function (date, mode) {\n\
    date = date || this._date;\n\
    mode = mode || this._mode;\n\
    var dhx_cal_data = 'dhx_cal_data';\n\
\n\
    if (!this._mode)\n\
        this._obj.className += \" dhx_scheduler_\" + mode;\n\
    else {\n\
        this._obj.className = this._obj.className.replace(\"dhx_scheduler_\" + this._mode, \"dhx_scheduler_\" + mode);\n\
    }\n\
\n\
    var prev_scroll = (this._mode == mode && this.config.preserve_scroll) ? this._els[dhx_cal_data][0].scrollTop : false; // saving current scroll\n\
\n\
    //hide old custom view\n\
    if (this[this._mode + \"_view\"] && mode && this._mode != mode)\n\
        this[this._mode + \"_view\"](false);\n\
\n\
    this._close_not_saved();\n\
\n\
    var dhx_multi_day = 'dhx_multi_day';\n\
    if (this._els[dhx_multi_day]) {\n\
        this._els[dhx_multi_day][0].parentNode.removeChild(this._els[dhx_multi_day][0]);\n\
        this._els[dhx_multi_day] = null;\n\
    }\n\
\n\
    this._mode = mode;\n\
    this._date = date;\n\
    this._table_view = (this._mode == \"month\");\n\
\n\
    var tabs = this._els[\"dhx_cal_tab\"];\n\
    if (tabs) { //calendar can work without view tabs\n\
        for (var i = 0; i < tabs.length; i++) {\n\
            var name = tabs[i].className;\n\
            name = name.replace(/ active/g, \"\");\n\
            if (tabs[i].getAttribute(\"name\") == this._mode + \"_tab\")\n\
                name = name + \" active\";\n\
            tabs[i].className = name;\n\
        }\n\
    }\n\
    //show new view\n\
    var view = this[this._mode + \"_view\"];\n\
    view ? view(true) : this.update_view();\n\
\n\
    if (typeof prev_scroll == \"number\") // if we are updating or working with the same view scrollTop should be saved\n\
        this._els[dhx_cal_data][0].scrollTop = prev_scroll; // restoring original scroll\n\
};\n\
scheduler.setCurrentView = function (date, mode) {\n\
    if (!this.callEvent(\"onBeforeViewChange\", [this._mode, this._date, mode || this._mode, date || this._date])) return;\n\
    this.updateView(date, mode);\n\
    this.callEvent(\"onViewChange\", [this._mode, this._date]);\n\
};\n\
scheduler._render_x_header = function (i, left, d, h) {\n\
    //header scale  \n\
    var head = document.createElement(\"DIV\");\n\
    head.className = \"dhx_scale_bar\";\n\
\n\
    if (this.templates[this._mode + \"_scalex_class\"]) {\n\
        //'_scalex_class' - timeline already have similar template, use the same name\n\
        head.className += ' ' + this.templates[this._mode + \"_scalex_class\"](d);\n\
    }\n\
\n\
    var width = this._cols[i] - 1;\n\
\n\
    if (this._mode == \"month\" && i === 0 && this.config.left_border) {\n\
        head.className += \" dhx_scale_bar_border\";\n\
        left = left + 1;\n\
    }\n\
    this.set_xy(head, width, this.xy.scale_height - 2, left, 0); //-1 for border\n\
    head.innerHTML = this.templates[this._mode + \"_scale_date\"](d, this._mode); //TODO - move in separate method\n\
    h.appendChild(head);\n\
};\n\
scheduler._reset_scale = function () {\n\
    //current mode doesn't support scales\n\
    //we mustn't call reset_scale for such modes, so it just to be sure\n\
    if (!this.templates[this._mode + \"_date\"]) return;\n\
\n\
    var h = this._els[\"dhx_cal_header\"][0];\n\
    var b = this._els[\"dhx_cal_data\"][0];\n\
    var c = this.config;\n\
\n\
    h.innerHTML = \"\";\n\
    b.scrollTop = 0; //fix flickering in FF\n\
    b.innerHTML = \"\";\n\
\n\
    var str = ((c.readonly || (!c.drag_resize)) ? \" dhx_resize_denied\" : \"\") + ((c.readonly || (!c.drag_move)) ? \" dhx_move_denied\" : \"\");\n\
    if (str) b.className = \"dhx_cal_data\" + str;\n\
\n\
    this._scales = {};\n\
    this._cols = []; //store for data section\n\
    this._colsS = {\n\
        height: 0\n\
    };\n\
    this._dy_shift = 0;\n\
\n\
    this.set_sizes();\n\
    var summ = parseInt(h.style.width, 10); //border delta\n\
    var left = 0;\n\
\n\
    var d, dd, sd, today;\n\
    dd = this.date[this._mode + \"_start\"](new Date(this._date.valueOf()));\n\
    d = sd = this._table_view ? scheduler.date.week_start(dd) : dd;\n\
    today = this.date.date_part(scheduler._currentDate());\n\
\n\
    //reset date in header\n\
    var ed = scheduler.date.add(dd, 1, this._mode);\n\
    var count = 7;\n\
\n\
    if (!this._table_view) {\n\
        var count_n = this.date[\"get_\" + this._mode + \"_end\"];\n\
        if (count_n) ed = count_n(dd);\n\
        count = Math.round((ed.valueOf() - dd.valueOf()) / (1000 * 60 * 60 * 24));\n\
    }\n\
\n\
    this._min_date = d;\n\
    this._els[\"dhx_cal_date\"][0].innerHTML = this.templates[this._mode + \"_date\"](dd, ed, this._mode);\n\
\n\
\n\
    this._process_ignores(sd, count, \"day\", 1);\n\
    var realcount = count - this._ignores_detected;\n\
\n\
    for (var i = 0; i < count; i++) {\n\
        if (this._ignores[i]) {\n\
            this._cols[i] = 0;\n\
            realcount++;\n\
        } else {\n\
            this._cols[i] = Math.floor(summ / (realcount - i));\n\
            this._render_x_header(i, left, d, h);\n\
        }\n\
        if (!this._table_view) {\n\
            var scales = document.createElement(\"DIV\");\n\
            var cls = \"dhx_scale_holder\";\n\
            if (d.valueOf() == today.valueOf()) cls = \"dhx_scale_holder_now\";\n\
            scales.className = cls + \" \" + this.templates.week_date_class(d, today);\n\
            this.set_xy(scales, this._cols[i] - 1, c.hour_size_px * (c.last_hour - c.first_hour), left + this.xy.scale_width + 1, 0); //-1 for border\n\
            b.appendChild(scales);\n\
            this.callEvent(\"onScaleAdd\", [scales, d]);\n\
        }\n\
\n\
        d = this.date.add(d, 1, \"day\");\n\
        summ -= this._cols[i];\n\
        left += this._cols[i];\n\
        this._colsS[i] = (this._cols[i - 1] || 0) + (this._colsS[i - 1] || (this._table_view ? 0 : this.xy.scale_width + 2));\n\
        this._colsS['col_length'] = count + 1;\n\
    }\n\
\n\
    this._max_date = d;\n\
    this._colsS[count] = this._cols[count - 1] + this._colsS[count - 1];\n\
\n\
    if (this._table_view) // month view\n\
        this._reset_month_scale(b, dd, sd);\n\
    else {\n\
        this._reset_hours_scale(b, dd, sd);\n\
        if (c.multi_day) {\n\
            var dhx_multi_day = 'dhx_multi_day';\n\
\n\
            if (this._els[dhx_multi_day]) {\n\
                this._els[dhx_multi_day][0].parentNode.removeChild(this._els[dhx_multi_day][0]);\n\
                this._els[dhx_multi_day] = null;\n\
            }\n\
\n\
            var navline = this._els[\"dhx_cal_navline\"][0];\n\
            var top = navline.offsetHeight + this._els[\"dhx_cal_header\"][0].offsetHeight + 1;\n\
\n\
            var c1 = document.createElement(\"DIV\");\n\
            c1.className = dhx_multi_day;\n\
            c1.style.visibility = \"hidden\";\n\
            this.set_xy(c1, this._colsS[this._colsS.col_length - 1] + this.xy.scroll_width, 0, 0, top); // 2 extra borders, dhx_header has -1 bottom margin\n\
            b.parentNode.insertBefore(c1, b);\n\
\n\
            var c2 = c1.cloneNode(true);\n\
            c2.className = dhx_multi_day + \"_icon\";\n\
            c2.style.visibility = \"hidden\";\n\
            this.set_xy(c2, this.xy.scale_width, 0, 0, top); // dhx_header has -1 bottom margin\n\
\n\
            c1.appendChild(c2);\n\
            this._els[dhx_multi_day] = [c1, c2];\n\
            this._els[dhx_multi_day][0].onclick = this._click.dhx_cal_data;\n\
        }\n\
    }\n\
};\n\
scheduler._reset_hours_scale = function (b, dd, sd) {\n\
    var c = document.createElement(\"DIV\");\n\
    c.className = \"dhx_scale_holder\";\n\
\n\
    var date = new Date(1980, 1, 1, this.config.first_hour, 0, 0);\n\
    for (var i = this.config.first_hour * 1; i < this.config.last_hour; i++) {\n\
        var cc = document.createElement(\"DIV\");\n\
        cc.className = \"dhx_scale_hour\";\n\
        cc.style.height = this.config.hour_size_px - (this._quirks ? 0 : 1) + \"px\";\n\
        var width = this.xy.scale_width;\n\
        if (this.config.left_border) {\n\
            width = width - 1;\n\
            cc.className += \" dhx_scale_hour_border\";\n\
        }\n\
        cc.style.width = width + \"px\";\n\
        cc.innerHTML = scheduler.templates.hour_scale(date);\n\
\n\
        c.appendChild(cc);\n\
        date = this.date.add(date, 1, \"hour\");\n\
    }\n\
    b.appendChild(c);\n\
    if (this.config.scroll_hour)\n\
        b.scrollTop = this.config.hour_size_px * (this.config.scroll_hour - this.config.first_hour);\n\
};\n\
\n\
scheduler._currentDate = function () {\n\
    if (scheduler.config.now_date) {\n\
        return new Date(scheduler.config.now_date);\n\
    }\n\
    return new Date();\n\
};\n\
\n\
scheduler._process_ignores = function (sd, n, mode, step, preserve) {\n\
    this._ignores = [];\n\
    this._ignores_detected = 0;\n\
    var ignore = scheduler[\"ignore_\" + this._mode];\n\
\n\
    if (ignore) {\n\
        var ign_date = new Date(sd);\n\
        for (var i = 0; i < n; i++) {\n\
            if (ignore(ign_date)) {\n\
                this._ignores_detected += 1;\n\
                this._ignores[i] = true;\n\
                if (preserve)\n\
                    n++;\n\
            }\n\
            ign_date = scheduler.date.add(ign_date, step, mode);\n\
        }\n\
    }\n\
};\n\
\n\
scheduler._reset_month_scale = function (b, dd, sd) {\n\
    var ed = scheduler.date.add(dd, 1, \"month\");\n\
\n\
    //trim time part for comparation reasons\n\
    var cd = scheduler._currentDate();\n\
    this.date.date_part(cd);\n\
    this.date.date_part(sd);\n\
\n\
    var rows = Math.ceil(Math.round((ed.valueOf() - sd.valueOf()) / (60 * 60 * 24 * 1000)) / 7);\n\
    var tdcss = [];\n\
    var height = (Math.floor(b.clientHeight / rows) - 22);\n\
\n\
    this._colsS.height = height + 22;\n\
\n\
\n\
\n\
    var h = this._colsS.heights = [];\n\
    for (var i = 0; i <= 7; i++) {\n\
        var cell_width = ((this._cols[i] || 0) - 1);\n\
        if (i === 0 && this.config.left_border) {\n\
            cell_width = cell_width - 1;\n\
        }\n\
        tdcss[i] = \" style='height:\" + height + \"px; width:\" + cell_width + \"px;' \";\n\
    }\n\
\n\
\n\
\n\
    var cellheight = 0;\n\
    this._min_date = sd;\n\
    var html = \"<table cellpadding='0' cellspacing='0'>\";\n\
    var rendered_dates = [];\n\
    for (var i = 0; i < rows; i++) {\n\
        html += \"<tr>\";\n\
\n\
        for (var j = 0; j < 7; j++) {\n\
            html += \"<td\";\n\
\n\
            var cls = \"\";\n\
            if (sd < dd)\n\
                cls = 'dhx_before';\n\
            else if (sd >= ed)\n\
                cls = 'dhx_after';\n\
            else if (sd.valueOf() == cd.valueOf())\n\
                cls = 'dhx_now';\n\
            html += \" class='\" + cls + \" \" + this.templates.month_date_class(sd, cd) + \"' >\";\n\
            var body_class = \"dhx_month_body\";\n\
            var head_class = \"dhx_month_head\";\n\
            if (j === 0 && this.config.left_border) {\n\
                body_class += \" dhx_month_body_border\";\n\
                head_class += \" dhx_month_head_border\";\n\
            }\n\
            if (!this._ignores_detected || !this._ignores[j]) {\n\
                html += \"<div class='\" + head_class + \"'>\" + this.templates.month_day(sd) + \"</div>\";\n\
                html += \"<div class='\" + body_class + \"' \" + tdcss[j] + \"></div></td>\";\n\
            } else {\n\
                html += \"<div></div><div></div>\";\n\
            }\n\
            rendered_dates.push(sd);\n\
            sd = this.date.add(sd, 1, \"day\");\n\
        }\n\
        html += \"</tr>\";\n\
        h[i] = cellheight;\n\
        cellheight += this._colsS.height;\n\
    }\n\
    html += \"</table>\";\n\
    this._max_date = sd;\n\
\n\
    b.innerHTML = html;\n\
\n\
    this._scales = {};\n\
    var divs = b.getElementsByTagName('div');\n\
    for (var i = 0; i < rendered_dates.length; i++) { // [header, body, header, body, ...]\n\
        var div = divs[(i * 2) + 1];\n\
        var date = rendered_dates[i];\n\
        this._scales[+date] = div;\n\
    }\n\
    for (var i = 0; i < rendered_dates.length; i++) {\n\
        var date = rendered_dates[i];\n\
        this.callEvent(\"onScaleAdd\", [this._scales[+date], date]);\n\
    }\n\
\n\
    return sd;\n\
};\n\
scheduler.getLabel = function (property, key) {\n\
    var sections = this.config.lightbox.sections;\n\
    for (var i = 0; i < sections.length; i++) {\n\
        if (sections[i].map_to == property) {\n\
            var options = sections[i].options;\n\
            for (var j = 0; j < options.length; j++) {\n\
                if (options[j].key == key) {\n\
                    return options[j].label;\n\
                }\n\
            }\n\
        }\n\
    }\n\
    return \"\";\n\
};\n\
scheduler.updateCollection = function (list_name, collection) {\n\
    var list = scheduler.serverList(list_name);\n\
    if (!list) return false;\n\
    list.splice(0, list.length);\n\
    list.push.apply(list, collection || []);\n\
    scheduler.callEvent(\"onOptionsLoad\", []);\n\
    scheduler.resetLightbox();\n\
    return true;\n\
};\n\
scheduler._lame_clone = function (object, cache) {\n\
    var i, t, result; // iterator, types array, result\n\
\n\
    cache = cache || [];\n\
\n\
    for (i = 0; i < cache.length; i += 2)\n\
        if (object === cache[i])\n\
            return cache[i + 1];\n\
\n\
    if (object && typeof object == \"object\") {\n\
        result = {};\n\
        t = [Array, Date, Number, String, Boolean];\n\
        for (i = 0; i < t.length; i++) {\n\
            if (object instanceof t[i])\n\
                result = i ? new t[i](object) : new t[i](); // first one is array\n\
        }\n\
        cache.push(object, result);\n\
        for (i in object) {\n\
            if (Object.prototype.hasOwnProperty.apply(object, [i]))\n\
                result[i] = scheduler._lame_clone(object[i], cache)\n\
        }\n\
    }\n\
    return result || object;\n\
};\n\
scheduler._lame_copy = function (target, source) {\n\
    for (var key in source) {\n\
        if (source.hasOwnProperty(key)) {\n\
            target[key] = source[key];\n\
        }\n\
    }\n\
    return target;\n\
};\n\
scheduler._get_date_from_pos = function (pos) {\n\
    var start = this._min_date.valueOf() + (pos.y * this.config.time_step + (this._table_view ? 0 : pos.x) * 24 * 60) * 60000;\n\
    return new Date(this._correct_shift(start));\n\
};\n\
// n_ev - native event\n\
scheduler.getActionData = function (n_ev) {\n\
    var pos = this._mouse_coords(n_ev);\n\
    return {\n\
        date: this._get_date_from_pos(pos),\n\
        section: pos.section\n\
    };\n\
};\n\
scheduler._focus = function (node, select) {\n\
    if (node && node.focus) {\n\
        if (this.config.touch) {\n\
            window.setTimeout(function () {\n\
                node.focus();\n\
            }, 100);\n\
        } else {\n\
            if (select && node.select) node.select();\n\
            node.focus();\n\
        }\n\
    }\n\
}\n\
\n\
//non-linear scales\n\
scheduler._get_real_event_length = function (sd, fd, obj) {\n\
    var ev_length = fd - sd;\n\
    var hours = (obj._start_correction + obj._end_correction) || 0;\n\
    var ignore = this[\"ignore_\" + this._mode];\n\
\n\
    var start_slot = 0;\n\
    if (obj.render) {\n\
        start_slot = this._get_date_index(obj, sd);\n\
        var end_slot = this._get_date_index(obj, fd);\n\
    } else {\n\
        var end_slot = Math.round(ev_length / 60 / 60 / 1000 / 24);\n\
    }\n\
\n\
    while (start_slot < end_slot) {\n\
        var check = scheduler.date.add(fd, -obj.x_step, obj.x_unit);\n\
        if (ignore && ignore(fd))\n\
            ev_length -= (fd - check);\n\
        else\n\
            ev_length -= hours;\n\
\n\
        fd = check;\n\
        end_slot--;\n\
    }\n\
    return ev_length;\n\
};\n\
scheduler._get_fictional_event_length = function (end_date, ev_length, obj, back) {\n\
    var sd = new Date(end_date);\n\
    var dir = back ? -1 : 1;\n\
\n\
    //get difference caused by first|last hour\n\
    if (obj._start_correction || obj._end_correction) {\n\
        if (back)\n\
            var today = (sd.getHours() * 60 + sd.getMinutes()) - (obj.first_hour || 0) * 60;\n\
        else\n\
            var today = (obj.last_hour || 0) * 60 - (sd.getHours() * 60 + sd.getMinutes());\n\
        var per_day = (obj.last_hour - obj.first_hour) * 60;\n\
        var days = Math.ceil((ev_length / (60 * 1000) - today) / per_day);\n\
        ev_length += days * (24 * 60 - per_day) * 60 * 1000;\n\
    }\n\
\n\
    var fd = new Date(end_date * 1 + ev_length * dir);\n\
    var ignore = this[\"ignore_\" + this._mode];\n\
\n\
    var start_slot = 0;\n\
    if (obj.render) {\n\
        start_slot = this._get_date_index(obj, sd);\n\
        var end_slot = this._get_date_index(obj, fd);\n\
    } else {\n\
        var end_slot = Math.round(ev_length / 60 / 60 / 1000 / 24);\n\
    }\n\
\n\
    while (start_slot * dir <= end_slot * dir) {\n\
        var check = scheduler.date.add(sd, obj.x_step * dir, obj.x_unit);\n\
        if (ignore && ignore(sd)) {\n\
            ev_length += (check - sd) * dir;\n\
            end_slot += dir;\n\
        }\n\
\n\
        sd = check;\n\
        start_slot += dir;\n\
    }\n\
\n\
    return ev_length;\n\
};\n\
\n\
scheduler.date = {\n\
    init: function () {\n\
        var s = scheduler.locale.date.month_short;\n\
        var t = scheduler.locale.date.month_short_hash = {};\n\
        for (var i = 0; i < s.length; i++)\n\
            t[s[i]] = i;\n\
\n\
        var s = scheduler.locale.date.month_full;\n\
        var t = scheduler.locale.date.month_full_hash = {};\n\
        for (var i = 0; i < s.length; i++)\n\
            t[s[i]] = i;\n\
    },\n\
    date_part: function (date) {\n\
        date.setHours(0);\n\
        date.setMinutes(0);\n\
        date.setSeconds(0);\n\
        date.setMilliseconds(0);\n\
        if (date.getHours() != 0)\n\
            date.setTime(date.getTime() + 60 * 60 * 1000 * (24 - date.getHours()));\n\
        return date;\n\
    },\n\
    time_part: function (date) {\n\
        return (date.valueOf() / 1000 - date.getTimezoneOffset() * 60) % 86400;\n\
    },\n\
    week_start: function (date) {\n\
        var shift = date.getDay();\n\
        if (scheduler.config.start_on_monday) {\n\
            if (shift === 0) shift = 6;\n\
            else shift--;\n\
        }\n\
        return this.date_part(this.add(date, -1 * shift, \"day\"));\n\
    },\n\
    month_start: function (date) {\n\
        date.setDate(1);\n\
        return this.date_part(date);\n\
    },\n\
    year_start: function (date) {\n\
        date.setMonth(0);\n\
        return this.month_start(date);\n\
    },\n\
    day_start: function (date) {\n\
        return this.date_part(date);\n\
    },\n\
    add: function (date, inc, mode) {\n\
        var ndate = new Date(date.valueOf());\n\
        switch (mode) {\n\
        case \"week\":\n\
            inc *= 7;\n\
        case \"day\":\n\
            ndate.setDate(ndate.getDate() + inc);\n\
            if (!date.getHours() && ndate.getHours()) //shift to yesterday\n\
                ndate.setTime(ndate.getTime() + 60 * 60 * 1000 * (24 - ndate.getHours()));\n\
            break;\n\
        case \"month\":\n\
            ndate.setMonth(ndate.getMonth() + inc);\n\
            break;\n\
        case \"year\":\n\
            ndate.setYear(ndate.getFullYear() + inc);\n\
            break;\n\
        case \"hour\":\n\
            ndate.setHours(ndate.getHours() + inc);\n\
            break;\n\
        case \"minute\":\n\
            ndate.setMinutes(ndate.getMinutes() + inc);\n\
            break;\n\
        default:\n\
            return scheduler.date[\"add_\" + mode](date, inc, mode);\n\
        }\n\
        return ndate;\n\
    },\n\
    to_fixed: function (num) {\n\
        if (num < 10) return \"0\" + num;\n\
        return num;\n\
    },\n\
    copy: function (date) {\n\
        return new Date(date.valueOf());\n\
    },\n\
    date_to_str: function (format, utc) {\n\
        format = format.replace(/%[a-zA-Z]/g, function (a) {\n\
            switch (a) {\n\
            case \"%d\":\n\
                return \"\\\"+scheduler.date.to_fixed(date.getDate())+\\\"\";\n\
            case \"%m\":\n\
                return \"\\\"+scheduler.date.to_fixed((date.getMonth()+1))+\\\"\";\n\
            case \"%j\":\n\
                return \"\\\"+date.getDate()+\\\"\";\n\
            case \"%n\":\n\
                return \"\\\"+(date.getMonth()+1)+\\\"\";\n\
            case \"%y\":\n\
                return \"\\\"+scheduler.date.to_fixed(date.getFullYear()%100)+\\\"\";\n\
            case \"%Y\":\n\
                return \"\\\"+date.getFullYear()+\\\"\";\n\
            case \"%D\":\n\
                return \"\\\"+scheduler.locale.date.day_short[date.getDay()]+\\\"\";\n\
            case \"%l\":\n\
                return \"\\\"+scheduler.locale.date.day_full[date.getDay()]+\\\"\";\n\
            case \"%M\":\n\
                return \"\\\"+scheduler.locale.date.month_short[date.getMonth()]+\\\"\";\n\
            case \"%F\":\n\
                return \"\\\"+scheduler.locale.date.month_full[date.getMonth()]+\\\"\";\n\
            case \"%h\":\n\
                return \"\\\"+scheduler.date.to_fixed((date.getHours()+11)%12+1)+\\\"\";\n\
            case \"%g\":\n\
                return \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\
            case \"%G\":\n\
                return \"\\\"+date.getHours()+\\\"\";\n\
            case \"%H\":\n\
                return \"\\\"+scheduler.date.to_fixed(date.getHours())+\\\"\";\n\
            case \"%i\":\n\
                return \"\\\"+scheduler.date.to_fixed(date.getMinutes())+\\\"\";\n\
            case \"%a\":\n\
                return \"\\\"+(date.getHours()>11?\\\"pm\\\":\\\"am\\\")+\\\"\";\n\
            case \"%A\":\n\
                return \"\\\"+(date.getHours()>11?\\\"PM\\\":\\\"AM\\\")+\\\"\";\n\
            case \"%s\":\n\
                return \"\\\"+scheduler.date.to_fixed(date.getSeconds())+\\\"\";\n\
            case \"%W\":\n\
                return \"\\\"+scheduler.date.to_fixed(scheduler.date.getISOWeek(date))+\\\"\";\n\
            default:\n\
                return a;\n\
            }\n\
        });\n\
        if (utc) format = format.replace(/date\\.get/g, \"date.getUTC\");\n\
        return new Function(\"date\", \"return \\\"\" + format + \"\\\";\");\n\
    },\n\
    str_to_date: function (format, utc) {\n\
        var splt = \"var temp=date.match(/[a-zA-Z]+|[0-9]+/g);\";\n\
        var mask = format.match(/%[a-zA-Z]/g);\n\
        for (var i = 0; i < mask.length; i++) {\n\
            switch (mask[i]) {\n\
            case \"%j\":\n\
            case \"%d\":\n\
                splt += \"set[2]=temp[\" + i + \"]||1;\";\n\
                break;\n\
            case \"%n\":\n\
            case \"%m\":\n\
                splt += \"set[1]=(temp[\" + i + \"]||1)-1;\";\n\
                break;\n\
            case \"%y\":\n\
                splt += \"set[0]=temp[\" + i + \"]*1+(temp[\" + i + \"]>50?1900:2000);\";\n\
                break;\n\
            case \"%g\":\n\
            case \"%G\":\n\
            case \"%h\":\n\
            case \"%H\":\n\
                splt += \"set[3]=temp[\" + i + \"]||0;\";\n\
                break;\n\
            case \"%i\":\n\
                splt += \"set[4]=temp[\" + i + \"]||0;\";\n\
                break;\n\
            case \"%Y\":\n\
                splt += \"set[0]=temp[\" + i + \"]||0;\";\n\
                break;\n\
            case \"%a\":\n\
            case \"%A\":\n\
                splt += \"set[3]=set[3]%12+((temp[\" + i + \"]||'').toLowerCase()=='am'?0:12);\";\n\
                break;\n\
            case \"%s\":\n\
                splt += \"set[5]=temp[\" + i + \"]||0;\";\n\
                break;\n\
            case \"%M\":\n\
                splt += \"set[1]=scheduler.locale.date.month_short_hash[temp[\" + i + \"]]||0;\";\n\
                break;\n\
            case \"%F\":\n\
                splt += \"set[1]=scheduler.locale.date.month_full_hash[temp[\" + i + \"]]||0;\";\n\
                break;\n\
            default:\n\
                break;\n\
            }\n\
        }\n\
        var code = \"set[0],set[1],set[2],set[3],set[4],set[5]\";\n\
        if (utc) code = \" Date.UTC(\" + code + \")\";\n\
        return new Function(\"date\", \"var set=[0,0,1,0,0,0]; \" + splt + \" return new Date(\" + code + \");\");\n\
    },\n\
    getISOWeek: function (ndate) {\n\
        if (!ndate) return false;\n\
        var nday = ndate.getDay();\n\
        if (nday === 0) {\n\
            nday = 7;\n\
        }\n\
        var first_thursday = new Date(ndate.valueOf());\n\
        first_thursday.setDate(ndate.getDate() + (4 - nday));\n\
        var year_number = first_thursday.getFullYear(); // year of the first Thursday\n\
        var ordinal_date = Math.round((first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\
        var week_number = 1 + Math.floor(ordinal_date / 7);\n\
        return week_number;\n\
    },\n\
    getUTCISOWeek: function (ndate) {\n\
        return this.getISOWeek(this.convert_to_utc(ndate));\n\
    },\n\
    convert_to_utc: function (date) {\n\
        return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\
    }\n\
};\n\
scheduler.locale = {\n\
    date: {\n\
        month_full: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\
        month_short: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\
        day_full: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\
        day_short: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\
    },\n\
    labels: {\n\
        dhx_cal_today_button: \"Today\",\n\
        day_tab: \"Day\",\n\
        week_tab: \"Week\",\n\
        month_tab: \"Month\",\n\
        new_event: \"New event\",\n\
        icon_save: \"Save\",\n\
        icon_cancel: \"Cancel\",\n\
        icon_details: \"Details\",\n\
        icon_edit: \"Edit\",\n\
        icon_delete: \"Delete\",\n\
        confirm_closing: \"\", //Your changes will be lost, are your sure ?\n\
        confirm_deleting: \"Event will be deleted permanently, are you sure?\",\n\
        section_description: \"Description\",\n\
        section_time: \"Time period\",\n\
        full_day: \"Full day\",\n\
\n\
        /*recurring events*/\n\
        confirm_recurring: \"Do you want to edit the whole set of repeated events?\",\n\
        section_recurring: \"Repeat event\",\n\
        button_recurring: \"Disabled\",\n\
        button_recurring_open: \"Enabled\",\n\
        button_edit_series: \"Edit series\",\n\
        button_edit_occurrence: \"Edit occurrence\",\n\
\n\
        /*agenda view extension*/\n\
        agenda_tab: \"Agenda\",\n\
        date: \"Date\",\n\
        description: \"Description\",\n\
\n\
        /*year view extension*/\n\
        year_tab: \"Year\",\n\
\n\
        /* week agenda extension */\n\
        week_agenda_tab: \"Agenda\",\n\
\n\
        /*grid view extension*/\n\
        grid_tab: \"Grid\",\n\
        drag_to_create: \"Drag to create\",\n\
        drag_to_move: \"Drag to move\"\n\
    }\n\
};\n\
\n\
\n\
/*\n\
%e  Day of the month without leading zeros (01..31)\n\
%d  Day of the month, 2 digits with leading zeros (01..31)\n\
%j  Day of the year, 3 digits with leading zeros (001..366)\n\
%a  A textual representation of a day, two letters\n\
%W  A full textual representation of the day of the week\n\
\n\
%c  Numeric representation of a month, without leading zeros (0..12)\n\
%m  Numeric representation of a month, with leading zeros (00..12)\n\
%b  A short textual representation of a month, three letters (Jan..Dec)\n\
%M  A full textual representation of a month, such as January or March (January..December)\n\
\n\
%y  A two digit representation of a year (93..03)\n\
%Y  A full numeric representation of a year, 4 digits (1993..03)\n\
*/\n\
\n\
scheduler.config = {\n\
    default_date: \"%j %M %Y\",\n\
    month_date: \"%F %Y\",\n\
    load_date: \"%Y-%m-%d\",\n\
    week_date: \"%l\",\n\
    day_date: \"%D, %F %j\",\n\
    hour_date: \"%H:%i\",\n\
    month_day: \"%d\",\n\
    xml_date: \"%m/%d/%Y %H:%i\",\n\
    api_date: \"%d-%m-%Y %H:%i\",\n\
    preserve_length: true,\n\
    time_step: 5,\n\
\n\
    start_on_monday: 1,\n\
    first_hour: 0,\n\
    last_hour: 24,\n\
    readonly: false,\n\
    drag_resize: 1,\n\
    drag_move: 1,\n\
    drag_create: 1,\n\
    dblclick_create: 1,\n\
    edit_on_create: 1,\n\
    details_on_create: 0,\n\
\n\
    cascade_event_display: false,\n\
    cascade_event_count: 4,\n\
    cascade_event_margin: 30,\n\
\n\
    multi_day: true,\n\
    multi_day_height_limit: 0,\n\
\n\
    drag_lightbox: true,\n\
    preserve_scroll: true,\n\
    select: true,\n\
\n\
    server_utc: false,\n\
    touch: true,\n\
    touch_tip: true,\n\
    touch_drag: 500,\n\
    quick_info_detached: true,\n\
\n\
    positive_closing: false,\n\
\n\
    icons_edit: [\"icon_save\", \"icon_cancel\"],\n\
    icons_select: [\"icon_details\", \"icon_edit\", \"icon_delete\"],\n\
    buttons_left: [\"dhx_save_btn\", \"dhx_cancel_btn\"],\n\
    buttons_right: [\"dhx_delete_btn\"],\n\
    lightbox: {\n\
        sections: [{\n\
            name: \"description\",\n\
            height: 200,\n\
            map_to: \"text\",\n\
            type: \"textarea\",\n\
            focus: true\n\
        }, {\n\
            name: \"time\",\n\
            height: 72,\n\
            type: \"time\",\n\
            map_to: \"auto\"\n\
        }]\n\
    },\n\
    highlight_displayed_event: true,\n\
    left_border: false\n\
};\n\
scheduler.templates = {};\n\
scheduler.init_templates = function () {\n\
    var labels = scheduler.locale.labels;\n\
    labels.dhx_save_btn = labels.icon_save;\n\
    labels.dhx_cancel_btn = labels.icon_cancel;\n\
    labels.dhx_delete_btn = labels.icon_delete;\n\
\n\
\n\
    var d = scheduler.date.date_to_str;\n\
    var c = scheduler.config;\n\
    var f = function (a, b) {\n\
        for (var c in b)\n\
            if (!a[c]) a[c] = b[c];\n\
    };\n\
    f(scheduler.templates, {\n\
        day_date: d(c.default_date),\n\
        month_date: d(c.month_date),\n\
        week_date: function (d1, d2) {\n\
            return scheduler.templates.day_date(d1) + \" &ndash; \" + scheduler.templates.day_date(scheduler.date.add(d2, -1, \"day\"));\n\
        },\n\
        day_scale_date: d(c.default_date),\n\
        month_scale_date: d(c.week_date),\n\
        week_scale_date: d(c.day_date),\n\
        hour_scale: d(c.hour_date),\n\
        time_picker: d(c.hour_date),\n\
        event_date: d(c.hour_date),\n\
        month_day: d(c.month_day),\n\
        xml_date: scheduler.date.str_to_date(c.xml_date, c.server_utc),\n\
        load_format: d(c.load_date, c.server_utc),\n\
        xml_format: d(c.xml_date, c.server_utc),\n\
        api_date: scheduler.date.str_to_date(c.api_date),\n\
        event_header: function (start, end, ev) {\n\
            return scheduler.templates.event_date(start) + \" - \" + scheduler.templates.event_date(end);\n\
        },\n\
        event_text: function (start, end, ev) {\n\
            return ev.text;\n\
        },\n\
        event_class: function (start, end, ev) {\n\
            return \"\";\n\
        },\n\
        month_date_class: function (d) {\n\
            return \"\";\n\
        },\n\
        week_date_class: function (d) {\n\
            return \"\";\n\
        },\n\
        event_bar_date: function (start, end, ev) {\n\
            return scheduler.templates.event_date(start) + \" \";\n\
        },\n\
        event_bar_text: function (start, end, ev) {\n\
            return ev.text;\n\
        },\n\
        month_events_link: function (date, count) {\n\
            return \"<a title='Click to view all \"+ count + \" events'>View all of \" + count + \" events</a>\";\n\
        }\n\
    });\n\
    this.callEvent(\"onTemplatesReady\", []);\n\
};\n\
\n\
\n\
\n\
scheduler.uid = function () {\n\
    if (!this._seed) this._seed = (new Date).valueOf();\n\
    return this._seed++;\n\
};\n\
scheduler._events = {};\n\
scheduler.clearAll = function () {\n\
    this._events = {};\n\
    this._loaded = {};\n\
    this.clear_view();\n\
    this.callEvent(\"onClearAll\", []);\n\
};\n\
scheduler.addEvent = function (start_date, end_date, text, id, extra_data) {\n\
    if (!arguments.length)\n\
        return this.addEventNow();\n\
    var ev = start_date;\n\
    if (arguments.length != 1) {\n\
        ev = extra_data || {};\n\
        ev.start_date = start_date;\n\
        ev.end_date = end_date;\n\
        ev.text = text;\n\
        ev.id = id;\n\
    }\n\
    ev.id = ev.id || scheduler.uid();\n\
    ev.text = ev.text || \"\";\n\
\n\
    if (typeof ev.start_date == \"string\") ev.start_date = this.templates.api_date(ev.start_date);\n\
    if (typeof ev.end_date == \"string\") ev.end_date = this.templates.api_date(ev.end_date);\n\
\n\
    var d = (this.config.event_duration || this.config.time_step) * 60000;\n\
    if (ev.start_date.valueOf() == ev.end_date.valueOf())\n\
        ev.end_date.setTime(ev.end_date.valueOf() + d);\n\
\n\
    ev._timed = this.isOneDayEvent(ev);\n\
\n\
    var is_new = !this._events[ev.id];\n\
    this._events[ev.id] = ev;\n\
    this.event_updated(ev);\n\
    if (!this._loading)\n\
        this.callEvent(is_new ? \"onEventAdded\" : \"onEventChanged\", [ev.id, ev]);\n\
    return ev.id;\n\
};\n\
scheduler.deleteEvent = function (id, silent) {\n\
    var ev = this._events[id];\n\
    if (!silent && (!this.callEvent(\"onBeforeEventDelete\", [id, ev]) || !this.callEvent(\"onConfirmedBeforeEventDelete\", [id, ev])))\n\
        return;\n\
    if (ev) {\n\
        delete this._events[id];\n\
        this.unselect(id);\n\
        this.event_updated(ev);\n\
    }\n\
\n\
    this.callEvent(\"onEventDeleted\", [id, ev]);\n\
};\n\
scheduler.getEvent = function (id) {\n\
    return this._events[id];\n\
};\n\
scheduler.setEvent = function (id, hash) {\n\
    if (!hash.id)\n\
        hash.id = id;\n\
\n\
    this._events[id] = hash;\n\
};\n\
scheduler.for_rendered = function (id, method) {\n\
    for (var i = this._rendered.length - 1; i >= 0; i--)\n\
        if (this._rendered[i].getAttribute(\"event_id\") == id)\n\
            method(this._rendered[i], i);\n\
};\n\
scheduler.changeEventId = function (id, new_id) {\n\
    if (id == new_id) return;\n\
    var ev = this._events[id];\n\
    if (ev) {\n\
        ev.id = new_id;\n\
        this._events[new_id] = ev;\n\
        delete this._events[id];\n\
    }\n\
    this.for_rendered(id, function (r) {\n\
        r.setAttribute(\"event_id\", new_id);\n\
    });\n\
    if (this._select_id == id) this._select_id = new_id;\n\
    if (this._edit_id == id) this._edit_id = new_id;\n\
    //if (this._drag_id==id) this._drag_id=new_id;\n\
    this.callEvent(\"onEventIdChange\", [id, new_id]);\n\
};\n\
\n\
(function () {\n\
    var attrs = [\"text\", \"Text\", \"start_date\", \"StartDate\", \"end_date\", \"EndDate\"];\n\
    var create_getter = function (name) {\n\
        return function (id) {\n\
            return (scheduler.getEvent(id))[name];\n\
        };\n\
    };\n\
    var create_setter = function (name) {\n\
        return function (id, value) {\n\
            var ev = scheduler.getEvent(id);\n\
            ev[name] = value;\n\
            ev._changed = true;\n\
            ev._timed = this.isOneDayEvent(ev);\n\
            scheduler.event_updated(ev, true);\n\
        };\n\
    };\n\
    for (var i = 0; i < attrs.length; i += 2) {\n\
        scheduler[\"getEvent\" + attrs[i + 1]] = create_getter(attrs[i]);\n\
        scheduler[\"setEvent\" + attrs[i + 1]] = create_setter(attrs[i]);\n\
    }\n\
})();\n\
\n\
scheduler.event_updated = function (ev, force) {\n\
    if (this.is_visible_events(ev))\n\
        this.render_view_data();\n\
    else\n\
        this.clear_event(ev.id);\n\
};\n\
scheduler.is_visible_events = function (ev) {\n\
    return (ev.start_date < this._max_date && this._min_date < ev.end_date);\n\
};\n\
scheduler.isOneDayEvent = function (ev) {\n\
    var delta = ev.end_date.getDate() - ev.start_date.getDate();\n\
\n\
    if (!delta)\n\
        return ev.start_date.getMonth() == ev.end_date.getMonth() && ev.start_date.getFullYear() == ev.end_date.getFullYear();\n\
    else {\n\
        if (delta < 0) delta = Math.ceil((ev.end_date.valueOf() - ev.start_date.valueOf()) / (24 * 60 * 60 * 1000));\n\
        return (delta == 1 && !ev.end_date.getHours() && !ev.end_date.getMinutes() && (ev.start_date.getHours() || ev.start_date.getMinutes()));\n\
    }\n\
\n\
};\n\
scheduler.get_visible_events = function (only_timed) {\n\
    //not the best strategy for sure\n\
    var stack = [];\n\
\n\
    for (var id in this._events)\n\
        if (this.is_visible_events(this._events[id]))\n\
            if (!only_timed || this._events[id]._timed)\n\
                if (this.filter_event(id, this._events[id]))\n\
                    stack.push(this._events[id]);\n\
\n\
    return stack;\n\
};\n\
scheduler.filter_event = function (id, ev) {\n\
    var filter = this[\"filter_\" + this._mode];\n\
    return (filter) ? filter(id, ev) : true;\n\
};\n\
scheduler._is_main_area_event = function (ev) {\n\
    return !!ev._timed;\n\
};\n\
scheduler.render_view_data = function (evs, hold) {\n\
    if (!evs) {\n\
        if (this._not_render) {\n\
            this._render_wait = true;\n\
            return;\n\
        }\n\
        this._render_wait = false;\n\
\n\
        this.clear_view();\n\
        evs = this.get_visible_events(!(this._table_view || this.config.multi_day));\n\
    }\n\
    for (var i = 0, len = evs.length; i < len; i++) {\n\
        this._recalculate_timed(evs[i]);\n\
    }\n\
\n\
    //do not need to use multiday block , so hard code it, may switch back in the future\n\
    if (false && this.config.multi_day && !this._table_view) {\n\
\n\
        var tvs = [];\n\
        var tvd = [];\n\
        for (var i = 0; i < evs.length; i++) {\n\
            if (this._is_main_area_event(evs[i]))\n\
                tvs.push(evs[i]);\n\
            else\n\
                tvd.push(evs[i]);\n\
        }\n\
\n\
        // multiday events\n\
        this._rendered_location = this._els['dhx_multi_day'][0];\n\
        this._table_view = true;\n\
        this.render_data(tvd, hold);\n\
        this._table_view = false;\n\
\n\
        // normal events\n\
        this._rendered_location = this._els['dhx_cal_data'][0];\n\
        this._table_view = false;\n\
        this.render_data(tvs, hold);\n\
\n\
    } else {\n\
        this._rendered_location = this._els['dhx_cal_data'][0];\n\
        this.render_data(evs, hold);\n\
    }\n\
};\n\
\n\
\n\
scheduler._view_month_day = function (e) {\n\
    var date = scheduler.getActionData(e).date;\n\
    if (!scheduler.callEvent(\"onViewMoreClick\", [date]))\n\
        return;\n\
    scheduler.setCurrentView(date, \"day\");\n\
};\n\
\n\
scheduler._render_month_link = function (ev) {\n\
    var parent = this._rendered_location;\n\
    var toRender = this._lame_clone(ev);\n\
\n\
    //render links in each cell of multiday events\n\
    for (var d = ev._sday; d < ev._eday; d++) {\n\
\n\
        toRender._sday = d;\n\
        toRender._eday = d + 1;\n\
\n\
        var date = scheduler.date;\n\
        var curr = scheduler._min_date;\n\
        curr = date.add(curr, toRender._sweek, \"week\");\n\
        curr = date.add(curr, toRender._sday, \"day\");\n\
        var count = scheduler.getEvents(curr, date.add(curr, 1, \"day\")).length;\n\
\n\
        var pos = this._get_event_bar_pos(toRender);\n\
        var widt = (pos.x2 - pos.x);\n\
\n\
        var el = document.createElement(\"div\");\n\
        el.onclick = function (e) {\n\
            scheduler._view_month_day(e || event);\n\
        };\n\
        el.className = \"dhx_month_link\";\n\
        el.style.top = pos.y + \"px\";\n\
        el.style.left = pos.x + \"px\";\n\
        el.style.width = widt + \"px\";\n\
        el.innerHTML = scheduler.templates.month_events_link(curr, count);\n\
        this._rendered.push(el);\n\
\n\
        parent.appendChild(el);\n\
    }\n\
};\n\
\n\
scheduler._recalculate_timed = function (id) {\n\
    if (!id) return;\n\
    if (typeof (id) != \"object\")\n\
        var ev = this._events[id];\n\
    else\n\
        var ev = id;\n\
    if (!ev) return;\n\
    ev._timed = scheduler.isOneDayEvent(ev);\n\
};\n\
scheduler.attachEvent(\"onEventChanged\", scheduler._recalculate_timed);\n\
scheduler.attachEvent(\"onEventAdded\", scheduler._recalculate_timed);\n\
\n\
scheduler.render_data = function (evs, hold) {\n\
    evs = this._pre_render_events(evs, hold);\n\
\n\
    for (var i = 0; i < evs.length; i++){\n\
        if (this._table_view) {\n\
            if (scheduler._mode != 'month') {\n\
                this.render_event_bar(evs[i]); //may be multiday section on other views\n\
            } else {\n\
                var max_evs = scheduler.config.max_month_events;\n\
                if (max_evs !== max_evs * 1 || evs[i]._sorder < max_evs) {\n\
                    //of max number events per month cell is set and event can be rendered\n\
                    this.render_event_bar(evs[i]);\n\
                } else if (max_evs !== undefined && evs[i]._sorder == max_evs) {\n\
                    //render 'view more' links\n\
                    scheduler._render_month_link(evs[i]);\n\
                } else {\n\
                    //do not render events with ordinal number > maximum events per cell\n\
                }\n\
            }\n\
        } else\n\
            this.render_event(evs[i]);\n\
    }\n\
};\n\
scheduler._pre_render_events = function (evs, hold) {\n\
    var hb = this.xy.bar_height;\n\
    var h_old = this._colsS.heights;\n\
    var h = this._colsS.heights = [0, 0, 0, 0, 0, 0, 0];\n\
    var data = this._els[\"dhx_cal_data\"][0];\n\
\n\
    if (!this._table_view)\n\
        evs = this._pre_render_events_line(evs, hold); //ignore long events for now\n\
    else\n\
        evs = this._pre_render_events_table(evs, hold);\n\
\n\
    if (this._table_view) {\n\
        if (hold)\n\
            this._colsS.heights = h_old;\n\
        else {\n\
            var evl = data.firstChild;\n\
            if (evl.rows) {\n\
                for (var i = 0; i < evl.rows.length; i++) {\n\
                    h[i]++;\n\
                    if ((h[i]) * hb > this._colsS.height - 22) { // 22 - height of cell's header\n\
                        //we have overflow, update heights\n\
                        var cells = evl.rows[i].cells;\n\
\n\
                        var cHeight = this._colsS.height - 22;\n\
                        if (this.config.max_month_events * 1 !== this.config.max_month_events || h[i] <= this.config.max_month_events) {\n\
                            cHeight = h[i] * hb;\n\
                        } else if ((this.config.max_month_events + 1) * hb > this._colsS.height - 22) {\n\
                            cHeight = (this.config.max_month_events + 1) * hb;\n\
                        }\n\
\n\
                        for (var j = 0; j < cells.length; j++) {\n\
                            cells[j].childNodes[1].style.height = cHeight + \"px\";\n\
                        }\n\
                        h[i] = (h[i - 1] || 0) + cells[0].offsetHeight;\n\
                    }\n\
                    h[i] = (h[i - 1] || 0) + evl.rows[i].cells[0].offsetHeight;\n\
                }\n\
                h.unshift(0);\n\
                if (evl.parentNode.offsetHeight < evl.parentNode.scrollHeight && !evl._h_fix && scheduler.xy.scroll_width) {\n\
                    //we have v-scroll, decrease last day cell\n\
                    for (var i = 0; i < evl.rows.length; i++) {\n\
                        //get last visible cell\n\
                        var last = 6;\n\
                        while (this._ignores[last]) last--;\n\
\n\
                        var cell = evl.rows[i].cells[last].childNodes[0];\n\
                        var w = cell.offsetWidth - scheduler.xy.scroll_width + \"px\";\n\
                        cell.style.width = w;\n\
                        cell.nextSibling.style.width = w;\n\
                    }\n\
                    evl._h_fix = true;\n\
                }\n\
            } else {\n\
                if (!evs.length && this._els[\"dhx_multi_day\"][0].style.visibility == \"visible\")\n\
                    h[0] = -1;\n\
                if (evs.length || h[0] == -1) {\n\
                    //shift days to have space for multiday events\n\
                    var childs = evl.parentNode.childNodes;\n\
\n\
                    // +1 so multiday events would have 2px from top and 2px from bottom by default\n\
                    var full_multi_day_height = (h[0] + 1) * hb + 1;\n\
\n\
                    var used_multi_day_height = full_multi_day_height;\n\
                    var used_multi_day_height_css = full_multi_day_height + \"px\";\n\
                    if (this.config.multi_day_height_limit) {\n\
                        used_multi_day_height = Math.min(full_multi_day_height, this.config.multi_day_height_limit);\n\
                        used_multi_day_height_css = used_multi_day_height + \"px\";\n\
                    }\n\
\n\
                    data.style.top = (this._els[\"dhx_cal_navline\"][0].offsetHeight + this._els[\"dhx_cal_header\"][0].offsetHeight + used_multi_day_height) + 'px';\n\
                    data.style.height = (this._obj.offsetHeight - parseInt(data.style.top, 10) - (this.xy.margin_top || 0)) + 'px';\n\
\n\
                    var multi_day_section = this._els[\"dhx_multi_day\"][0];\n\
                    multi_day_section.style.height = used_multi_day_height_css;\n\
                    multi_day_section.style.visibility = (h[0] == -1 ? \"hidden\" : \"visible\");\n\
\n\
                    // icon\n\
                    var multi_day_icon = this._els[\"dhx_multi_day\"][1];\n\
                    multi_day_icon.style.height = used_multi_day_height_css;\n\
                    multi_day_icon.style.visibility = (h[0] == -1 ? \"hidden\" : \"visible\");\n\
                    multi_day_icon.className = h[0] ? \"dhx_multi_day_icon\" : \"dhx_multi_day_icon_small\";\n\
                    this._dy_shift = (h[0] + 1) * hb;\n\
                    h[0] = 0;\n\
\n\
                    if (used_multi_day_height != full_multi_day_height) {\n\
                        data.style.top = (parseInt(data.style.top) + 2) + \"px\";\n\
\n\
                        multi_day_section.style.overflowY = \"auto\";\n\
                        multi_day_section.style.width = (parseInt(multi_day_section.style.width) - 2) + \"px\";\n\
\n\
                        multi_day_icon.style.position = \"fixed\";\n\
                        multi_day_icon.style.top = \"\";\n\
                        multi_day_icon.style.left = \"\";\n\
                    }\n\
                }\n\
            }\n\
        }\n\
    }\n\
\n\
    return evs;\n\
};\n\
scheduler._get_event_sday = function (ev) {\n\
    return Math.floor((ev.start_date.valueOf() - this._min_date.valueOf()) / (24 * 60 * 60 * 1000));\n\
};\n\
scheduler._get_event_mapped_end_date = function (ev) {\n\
    var end_date = ev.end_date;\n\
    if (this.config.separate_short_events) {\n\
        var ev_duration = (ev.end_date - ev.start_date) / 60000; // minutes\n\
        if (ev_duration < this._min_mapped_duration) {\n\
            end_date = this.date.add(end_date, this._min_mapped_duration - ev_duration, \"minute\");\n\
        }\n\
    }\n\
    return end_date;\n\
};\n\
scheduler._pre_render_events_line = function (evs, hold) {\n\
    evs.sort(function (a, b) {\n\
        if (a.start_date.valueOf() == b.start_date.valueOf())\n\
            return a.id > b.id ? 1 : -1;\n\
        return a.start_date > b.start_date ? 1 : -1;\n\
    });\n\
    var days = []; //events by weeks\n\
    var evs_originals = [];\n\
\n\
    this._min_mapped_duration = Math.ceil(this.xy.min_event_height * 60 / this.config.hour_size_px); // values could change along the way\n\
\n\
    for (var i = 0; i < evs.length; i++) {\n\
        var ev = evs[i];\n\
\n\
        //check date overflow\n\
        var sd = ev.start_date;\n\
        var ed = ev.end_date;\n\
        //check scale overflow\n\
        var sh = sd.getHours();\n\
        var eh = ed.getHours();\n\
\n\
        ev._sday = this._get_event_sday(ev); // sday based on event start_date\n\
        if (this._ignores[ev._sday]) {\n\
            //ignore event\n\
            evs.splice(i, 1);\n\
            i--;\n\
            continue;\n\
        }\n\
\n\
        if (!days[ev._sday]) days[ev._sday] = [];\n\
\n\
        if (!hold) {\n\
            ev._inner = false;\n\
\n\
            var stack = days[ev._sday];\n\
\n\
            while (stack.length) {\n\
                var t_ev = stack[stack.length - 1];\n\
                var t_end_date = this._get_event_mapped_end_date(t_ev);\n\
                if (t_end_date.valueOf() <= ev.start_date.valueOf()) {\n\
                    stack.splice(stack.length - 1, 1);\n\
                } else {\n\
                    break;\n\
                }\n\
            }\n\
\n\
            var sorderSet = false;\n\
            for (var j = 0; j < stack.length; j++) {\n\
                var t_ev = stack[j];\n\
                var t_end_date = this._get_event_mapped_end_date(t_ev);\n\
                if (t_end_date.valueOf() <= ev.start_date.valueOf()) {\n\
                    sorderSet = true;\n\
                    ev._sorder = t_ev._sorder;\n\
                    stack.splice(j, 1);\n\
                    ev._inner = true;\n\
                    break;\n\
                }\n\
            }\n\
\n\
            if (stack.length)\n\
                stack[stack.length - 1]._inner = true;\n\
\n\
            if (!sorderSet) {\n\
                if (stack.length) {\n\
                    if (stack.length <= stack[stack.length - 1]._sorder) {\n\
                        if (!stack[stack.length - 1]._sorder)\n\
                            ev._sorder = 0;\n\
                        else\n\
                            for (j = 0; j < stack.length; j++) {\n\
                                var _is_sorder = false;\n\
                                for (var k = 0; k < stack.length; k++) {\n\
                                    if (stack[k]._sorder == j) {\n\
                                        _is_sorder = true;\n\
                                        break;\n\
                                    }\n\
                                }\n\
                                if (!_is_sorder) {\n\
                                    ev._sorder = j;\n\
                                    break;\n\
                                }\n\
                            }\n\
                        ev._inner = true;\n\
                    } else {\n\
                        var _max_sorder = stack[0]._sorder;\n\
                        for (j = 1; j < stack.length; j++) {\n\
                            if (stack[j]._sorder > _max_sorder)\n\
                                _max_sorder = stack[j]._sorder;\n\
                        }\n\
                        ev._sorder = _max_sorder + 1;\n\
                        ev._inner = false;\n\
                    }\n\
\n\
                } else\n\
                    ev._sorder = 0;\n\
            }\n\
\n\
            stack.push(ev);\n\
\n\
            if (stack.length > (stack.max_count || 0)) {\n\
                stack.max_count = stack.length;\n\
                ev._count = stack.length;\n\
            } else {\n\
                ev._count = (ev._count) ? ev._count : 1;\n\
            }\n\
        }\n\
\n\
        if (sh < this.config.first_hour || eh >= this.config.last_hour) {\n\
            // Need to create copy of event as we will be changing it's start/end date\n\
            // e.g. first_hour = 11 and event.start_date hours = 9. Need to preserve that info\n\
            evs_originals.push(ev);\n\
            evs[i] = ev = this._copy_event(ev);\n\
\n\
            if (sh < this.config.first_hour) {\n\
                ev.start_date.setHours(this.config.first_hour);\n\
                ev.start_date.setMinutes(0);\n\
            }\n\
            if (eh >= this.config.last_hour) {\n\
                ev.end_date.setMinutes(0);\n\
                ev.end_date.setHours(this.config.last_hour);\n\
            }\n\
\n\
            if (ev.start_date > ev.end_date || sh == this.config.last_hour) {\n\
                evs.splice(i, 1);\n\
                i--;\n\
                continue;\n\
            }\n\
        }\n\
    }\n\
    if (!hold) {\n\
        for (var i = 0; i < evs.length; i++) {\n\
            evs[i]._count = days[evs[i]._sday].max_count;\n\
        }\n\
        for (var i = 0; i < evs_originals.length; i++)\n\
            evs_originals[i]._count = days[evs_originals[i]._sday].max_count;\n\
    }\n\
\n\
    return evs;\n\
};\n\
scheduler._time_order = function (evs) {\n\
    evs.sort(function (a, b) {\n\
        if (a.start_date.valueOf() == b.start_date.valueOf()) {\n\
            if (a._timed && !b._timed) return 1;\n\
            if (!a._timed && b._timed) return -1;\n\
            return a.id > b.id ? 1 : -1;\n\
        }\n\
        return a.start_date > b.start_date ? 1 : -1;\n\
    });\n\
};\n\
scheduler._pre_render_events_table = function (evs, hold) { // max - max height of week slot\n\
    this._time_order(evs);\n\
    var out = [];\n\
    var weeks = [\n\
        [],\n\
        [],\n\
        [],\n\
        [],\n\
        [],\n\
        [],\n\
        []\n\
    ]; //events by weeks\n\
    var max = this._colsS.heights;\n\
    var start_date;\n\
    var cols = this._cols.length;\n\
    var chunks_info = {};\n\
\n\
    for (var i = 0; i < evs.length; i++) {\n\
        var ev = evs[i];\n\
        var id = ev.id;\n\
        if (!chunks_info[id]) {\n\
            chunks_info[id] = {\n\
                first_chunk: true,\n\
                last_chunk: true\n\
            };\n\
        }\n\
        var chunk_info = chunks_info[id];\n\
        var sd = (start_date || ev.start_date);\n\
        var ed = ev.end_date;\n\
        //trim events which are crossing through current view\n\
        if (sd < this._min_date) {\n\
            chunk_info.first_chunk = false;\n\
            sd = this._min_date;\n\
        }\n\
        if (ed > this._max_date) {\n\
            chunk_info.last_chunk = false;\n\
            ed = this._max_date;\n\
        }\n\
\n\
        var locate_s = this.locate_holder_day(sd, false, ev);\n\
        ev._sday = locate_s % cols;\n\
\n\
        //skip single day events for ignored dates\n\
        if (this._ignores[ev._sday] && ev._timed) continue;\n\
\n\
        var locate_e = this.locate_holder_day(ed, true, ev) || cols;\n\
        ev._eday = (locate_e % cols) || cols; //cols used to fill full week, when event end on monday\n\
        ev._length = locate_e - locate_s;\n\
\n\
        //3600000 - compensate 1 hour during winter|summer time shift\n\
        ev._sweek = Math.floor((this._correct_shift(sd.valueOf(), 1) - this._min_date.valueOf()) / (60 * 60 * 1000 * 24 * cols));\n\
\n\
        //current slot\n\
        var stack = weeks[ev._sweek];\n\
        //check order position\n\
        var stack_line;\n\
\n\
        for (stack_line = 0; stack_line < stack.length; stack_line++)\n\
            if (stack[stack_line]._eday <= ev._sday)\n\
                break;\n\
\n\
        if (!ev._sorder || !hold) {\n\
            ev._sorder = stack_line;\n\
        }\n\
\n\
        if (ev._sday + ev._length <= cols) {\n\
            start_date = null;\n\
            out.push(ev);\n\
            stack[stack_line] = ev;\n\
            //get max height of slot\n\
            max[ev._sweek] = stack.length - 1;\n\
            ev._first_chunk = chunk_info.first_chunk;\n\
            ev._last_chunk = chunk_info.last_chunk;\n\
        } else { // split long event in chunks\n\
            var copy = this._copy_event(ev);\n\
            copy.id = ev.id;\n\
            copy._length = cols - ev._sday;\n\
            copy._eday = cols;\n\
            copy._sday = ev._sday;\n\
            copy._sweek = ev._sweek;\n\
            copy._sorder = ev._sorder;\n\
            copy.end_date = this.date.add(sd, copy._length, \"day\");\n\
            copy._first_chunk = chunk_info.first_chunk;\n\
            if (chunk_info.first_chunk) {\n\
                chunk_info.first_chunk = false;\n\
            }\n\
\n\
            out.push(copy);\n\
            stack[stack_line] = copy;\n\
            start_date = copy.end_date;\n\
            //get max height of slot\n\
            max[ev._sweek] = stack.length - 1;\n\
            i--;\n\
            continue; //repeat same step\n\
        }\n\
    }\n\
    return out;\n\
};\n\
scheduler._copy_dummy = function () {\n\
    var a = new Date(this.start_date);\n\
    var b = new Date(this.end_date);\n\
    this.start_date = a;\n\
    this.end_date = b;\n\
};\n\
scheduler._copy_event = function (ev) {\n\
    this._copy_dummy.prototype = ev;\n\
    return new this._copy_dummy();\n\
    //return {start_date:ev.start_date, end_date:ev.end_date, text:ev.text, id:ev.id}\n\
};\n\
scheduler._rendered = [];\n\
scheduler.clear_view = function () {\n\
    for (var i = 0; i < this._rendered.length; i++) {\n\
        var obj = this._rendered[i];\n\
        if (obj.parentNode) obj.parentNode.removeChild(obj);\n\
    }\n\
    this._rendered = [];\n\
};\n\
scheduler.updateEvent = function (id) {\n\
    var ev = this.getEvent(id);\n\
    this.clear_event(id);\n\
\n\
    if (ev && this.is_visible_events(ev) && this.filter_event(id, ev) && (this._table_view || this.config.multi_day || ev._timed)) {\n\
        if (this.config.update_render)\n\
            this.render_view_data();\n\
        else\n\
            this.render_view_data([ev], true);\n\
    }\n\
};\n\
scheduler.clear_event = function (id) {\n\
    this.for_rendered(id, function (node, i) {\n\
        if (node.parentNode)\n\
            node.parentNode.removeChild(node);\n\
        scheduler._rendered.splice(i, 1);\n\
    });\n\
};\n\
scheduler.render_event = function (ev) {\n\
    var menu = scheduler.xy.menu_width;\n\
    var menu_offset = (this.config.use_select_menu_space) ? 0 : menu;\n\
    if (ev._sday < 0) return; //can occur in case of recurring event during time shift\n\
\n\
    var parent = scheduler.locate_holder(ev._sday);\n\
    if (!parent) return; //attempt to render non-visible event\n\
\n\
    var sm = ev.start_date.getHours() * 60 + ev.start_date.getMinutes();\n\
    var em = (ev.end_date.getHours() * 60 + ev.end_date.getMinutes()) || (scheduler.config.last_hour * 60);\n\
    var ev_count = ev._count || 1;\n\
    var ev_sorder = ev._sorder || 0;\n\
    var top = (Math.round((sm * 60 * 1000 - this.config.first_hour * 60 * 60 * 1000) * this.config.hour_size_px / (60 * 60 * 1000))) % (this.config.hour_size_px * 24); //42px/hour\n\
    var height = Math.max(scheduler.xy.min_event_height, (em - sm) * this.config.hour_size_px / 60); //42px/hour\n\
    var width = Math.floor((parent.clientWidth - menu_offset) / ev_count);\n\
    var left = ev_sorder * width;\n\
    if (!ev._inner) width = width * (ev_count - ev_sorder);\n\
    if (this.config.cascade_event_display) {\n\
        var limit = this.config.cascade_event_count;\n\
        var margin = this.config.cascade_event_margin;\n\
        left = ev_sorder % limit * margin;\n\
        var right = (ev._inner) ? (ev_count - ev_sorder - 1) % limit * margin / 2 : 0;\n\
        width = Math.floor(parent.clientWidth - menu_offset - left - right);\n\
    }\n\
\n\
    var d = this._render_v_bar(ev.id, menu_offset + left, top, width, height, ev._text_style, scheduler.templates.event_header(ev.start_date, ev.end_date, ev), scheduler.templates.event_text(ev.start_date, ev.end_date, ev));\n\
\n\
    this._rendered.push(d);\n\
    parent.appendChild(d);\n\
\n\
    left = left + parseInt(parent.style.left, 10) + menu_offset;\n\
\n\
    if (this._edit_id == ev.id) {\n\
\n\
        d.style.zIndex = 1; //fix overlapping issue\n\
        width = Math.max(width - 4, scheduler.xy.editor_width);\n\
        d = document.createElement(\"DIV\");\n\
        d.setAttribute(\"event_id\", ev.id);\n\
        this.set_xy(d, width, height - 20, left, top + 14);\n\
        d.className = \"dhx_cal_editor\";\n\
\n\
        var d2 = document.createElement(\"DIV\");\n\
        this.set_xy(d2, width - 6, height - 26);\n\
        d2.style.cssText += \";margin:2px 2px 2px 2px;overflow:hidden;\";\n\
\n\
        d.appendChild(d2);\n\
        this._els[\"dhx_cal_data\"][0].appendChild(d);\n\
        this._rendered.push(d);\n\
\n\
        d2.innerHTML = \"<textarea class='dhx_cal_editor'>\" + ev.text + \"</textarea>\";\n\
        if (this._quirks7) d2.firstChild.style.height = height - 12 + \"px\"; //IEFIX\n\
        this._editor = d2.firstChild;\n\
        this._editor.onkeydown = function (e) {\n\
            if ((e || event).shiftKey) return true;\n\
            var code = (e || event).keyCode;\n\
            if (code == scheduler.keys.edit_save) scheduler.editStop(true);\n\
            if (code == scheduler.keys.edit_cancel) scheduler.editStop(false);\n\
        };\n\
        this._editor.onselectstart = function (e) {\n\
            return (e || event).cancelBubble = true;\n\
        };\n\
        scheduler._focus(d2.firstChild, true);\n\
        //IE and opera can add x-scroll during focusing\n\
        this._els[\"dhx_cal_data\"][0].scrollLeft = 0;\n\
    }\n\
    if (this.xy.menu_width !== 0 && this._select_id == ev.id) {\n\
        if (this.config.cascade_event_display && this._drag_mode)\n\
            d.style.zIndex = 1; //fix overlapping issue for cascade view in case of dnd of selected event\n\
        var icons = this.config[\"icons_\" + ((this._edit_id == ev.id) ? \"edit\" : \"select\")];\n\
        var icons_str = \"\";\n\
        var bg_color = (ev.color ? (\"background-color: \" + ev.color + \";\") : \"\");\n\
        var color = (ev.textColor ? (\"color: \" + ev.textColor + \";\") : \"\");\n\
        for (var i = 0; i < icons.length; i++)\n\
            icons_str += \"<div class='dhx_menu_icon \" + icons[i] + \"' style='\" + bg_color + \"\" + color + \"' title='\" + this.locale.labels[icons[i]] + \"'></div>\";\n\
        var obj = this._render_v_bar(ev.id, left - menu + 1, top, menu, icons.length * 20 + 26 - 2, \"\", \"<div style='\" + bg_color + \"\" + color + \"' class='dhx_menu_head'></div>\", icons_str, true);\n\
        obj.style.left = left - menu + 1;\n\
        this._els[\"dhx_cal_data\"][0].appendChild(obj);\n\
        this._rendered.push(obj);\n\
    }\n\
};\n\
scheduler._render_v_bar = function (id, x, y, w, h, style, contentA, contentB, bottom) {\n\
    var d = document.createElement(\"DIV\");\n\
    var ev = this.getEvent(id);\n\
\n\
    var cs = (bottom) ? \"dhx_cal_event dhx_cal_select_menu\" : \"dhx_cal_event\";\n\
\n\
    var cse = scheduler.templates.event_class(ev.start_date, ev.end_date, ev);\n\
    if (cse) cs = cs + \" \" + cse;\n\
\n\
    var bg_color = (ev.color ? (\"background:\" + ev.color + \";\") : \"\");\n\
    var color = (ev.textColor ? (\"color:\" + ev.textColor + \";\") : \"\");\n\
\n\
    var html = '<div event_id=\"' + id + '\" class=\"' + cs + '\" style=\"position:absolute; top:' + y + 'px; left:' + x + 'px; width:' + (w - 4) + 'px; height:' + h + 'px;' + (style || \"\") + '\"></div>';\n\
    d.innerHTML = html;\n\
\n\
    var container = d.cloneNode(true).firstChild;\n\
\n\
    if (!bottom && scheduler.renderEvent(container, ev)) {\n\
        return container;\n\
    } else {\n\
        container = d.firstChild;\n\
\n\
        var inner_html = '<div class=\"dhx_event_move dhx_header\" style=\" width:' + (w - 6) + 'px;' + bg_color + '\" >&nbsp;</div>';\n\
        inner_html += '<div class=\"dhx_event_move dhx_title\" style=\"' + bg_color + '' + color + '\">' + contentA + '</div>';\n\
        inner_html += '<div class=\"dhx_body\" style=\" width:' + (w - (this._quirks ? 4 : 14)) + 'px; height:' + (h - (this._quirks ? 20 : 30) + 1) + 'px;' + bg_color + '' + color + '\">' + contentB + '</div>'; // +2 css specific, moved from render_event\n\
\n\
        var footer_class = \"dhx_event_resize dhx_footer\";\n\
        if (bottom)\n\
            footer_class = \"dhx_resize_denied \" + footer_class;\n\
\n\
        inner_html += '<div class=\"' + footer_class + '\" style=\" width:' + (w - 8) + 'px;' + (bottom ? ' margin-top:-1px;' : '') + '' + bg_color + '' + color + '\" ></div>';\n\
\n\
        container.innerHTML = inner_html;\n\
    }\n\
\n\
    return container;\n\
};\n\
scheduler.renderEvent = function () {\n\
    return false;\n\
},\n\
scheduler.locate_holder = function (day) {\n\
    if (this._mode == \"day\") return this._els[\"dhx_cal_data\"][0].firstChild; //dirty\n\
    return this._els[\"dhx_cal_data\"][0].childNodes[day];\n\
};\n\
scheduler.locate_holder_day = function (date, past) {\n\
    var day = Math.floor((this._correct_shift(date, 1) - this._min_date) / (60 * 60 * 24 * 1000));\n\
    //when locating end data of event , we need to use next day if time part was defined\n\
    if (past && this.date.time_part(date)) day++;\n\
    return day;\n\
};\n\
\n\
\n\
\n\
scheduler._get_dnd_order = function (order, ev_height, max_height) {\n\
    if (!this._drag_event)\n\
        return order;\n\
    if (!this._drag_event._orig_sorder)\n\
        this._drag_event._orig_sorder = order;\n\
    else\n\
        order = this._drag_event._orig_sorder;\n\
\n\
    var evTop = ev_height * order;\n\
    while ((evTop + ev_height) > max_height) {\n\
        order--;\n\
        evTop -= ev_height;\n\
    }\n\
    return order;\n\
};\n\
//scheduler._get_event_bar_pos = function(sday, eday, week, drag){\n\
scheduler._get_event_bar_pos = function (ev) {\n\
    var x = this._colsS[ev._sday];\n\
    var x2 = this._colsS[ev._eday];\n\
    if (x2 == x) x2 = this._colsS[ev._eday + 1];\n\
    var hb = this.xy.bar_height;\n\
\n\
    var order = ev._sorder;\n\
    if (ev.id == this._drag_id) {\n\
        var cellHeight = this._colsS.heights[ev._sweek + 1] - this._colsS.heights[ev._sweek] - 22; //22 for month head height\n\
        order = scheduler._get_dnd_order(order, hb, cellHeight);\n\
    }\n\
    var y_event_offset = order * hb;\n\
    var y = this._colsS.heights[ev._sweek] + (this._colsS.height ? (this.xy.month_scale_height + 2) : 2) + y_event_offset;\n\
    return {\n\
        x: x,\n\
        x2: x2,\n\
        y: y\n\
    };\n\
};\n\
\n\
scheduler.render_event_bar = function (ev) {\n\
    var parent = this._rendered_location;\n\
    var pos = this._get_event_bar_pos(ev);\n\
\n\
    var y = pos.y;\n\
    var x = pos.x;\n\
    var x2 = pos.x2;\n\
\n\
    //events in ignored dates\n\
\n\
    if (!x2) return;\n\
\n\
\n\
    var d = document.createElement(\"DIV\");\n\
    var cs = \"dhx_cal_event_clear\";\n\
    //do not need dhx_cal_event_line, comment for future using\n\
//    if (!ev._timed) {\n\
//        cs = \"dhx_cal_event_line\";\n\
//        if (ev.hasOwnProperty(\"_first_chunk\") && ev._first_chunk)\n\
//            cs += \" dhx_cal_event_line_start\";\n\
//        if (ev.hasOwnProperty(\"_last_chunk\") && ev._last_chunk)\n\
//            cs += \" dhx_cal_event_line_end\";\n\
//    }\n\
\n\
    var cse = scheduler.templates.event_class(ev.start_date, ev.end_date, ev);\n\
    if (cse) cs = cs + \" \" + cse;\n\
\n\
    var bg_color = (ev.color ? (\"background:\" + ev.color + \";\") : \"\");\n\
    var color = (ev.textColor ? (\"color:\" + ev.textColor + \";\") : \"\");\n\
\n\
    var html = '<div event_id=\"' + ev.id + '\" class=\"' + cs + '\" style=\"position:absolute; top:' + y + 'px; left:' + x + 'px; width:' + (x2 - x - 15) + 'px;' + color + '' + bg_color + '' + (ev._text_style || \"\") + '\">';\n\
\n\
    ev = scheduler.getEvent(ev.id); // ev at this point could be a part of a larged event\n\
//    if (ev._timed)\n\
    html += scheduler.templates.event_bar_date(ev.start_date, ev.end_date, ev);\n\
    html += scheduler.templates.event_bar_text(ev.start_date, ev.end_date, ev) + '</div>';\n\
    html += '</div>';\n\
\n\
    d.innerHTML = html;\n\
\n\
    this._rendered.push(d.firstChild);\n\
    parent.appendChild(d.firstChild);\n\
};\n\
\n\
scheduler._locate_event = function (node) {\n\
    var id = null;\n\
    while (node && !id && node.getAttribute) {\n\
        id = node.getAttribute(\"event_id\");\n\
        node = node.parentNode;\n\
    }\n\
    return id;\n\
};\n\
\n\
scheduler.edit = function (id) {\n\
    if (this._edit_id == id) return;\n\
    this.editStop(false, id);\n\
    this._edit_id = id;\n\
    this.updateEvent(id);\n\
};\n\
scheduler.editStop = function (mode, id) {\n\
    if (id && this._edit_id == id) return;\n\
    var ev = this.getEvent(this._edit_id);\n\
    if (ev) {\n\
        if (mode) ev.text = this._editor.value;\n\
        this._edit_id = null;\n\
        this._editor = null;\n\
        this.updateEvent(ev.id);\n\
        this._edit_stop_event(ev, mode);\n\
    }\n\
};\n\
scheduler._edit_stop_event = function (ev, mode) {\n\
    if (this._new_event) {\n\
        if (!mode) {\n\
            if (ev) // in case of custom lightbox user can already delete event\n\
                this.deleteEvent(ev.id, true);\n\
        } else {\n\
            this.callEvent(\"onEventAdded\", [ev.id, ev]);\n\
        }\n\
        this._new_event = null;\n\
    } else {\n\
        if (mode) {\n\
            this.callEvent(\"onEventChanged\", [ev.id, ev]);\n\
        }\n\
    }\n\
};\n\
\n\
scheduler.getEvents = function (from, to) {\n\
    var result = [];\n\
    for (var a in this._events) {\n\
        var ev = this._events[a];\n\
        if (ev && ((!from && !to) || (ev.start_date < to && ev.end_date > from)))\n\
            result.push(ev);\n\
    }\n\
    return result;\n\
};\n\
scheduler.getRenderedEvent = function (id) {\n\
    if (!id)\n\
        return;\n\
    var rendered_events = scheduler._rendered;\n\
    for (var i = 0; i < rendered_events.length; i++) {\n\
        var rendered_event = rendered_events[i];\n\
        if (rendered_event.getAttribute(\"event_id\") == id) {\n\
            return rendered_event;\n\
        }\n\
    }\n\
    return null;\n\
};\n\
scheduler.showEvent = function (id, mode) {\n\
    var ev = (typeof id == \"number\" || typeof id == \"string\") ? scheduler.getEvent(id) : id;\n\
    mode = mode || scheduler._mode;\n\
\n\
    if (!ev || (this.checkEvent(\"onBeforeEventDisplay\") && !this.callEvent(\"onBeforeEventDisplay\", [ev, mode])))\n\
        return;\n\
\n\
    var scroll_hour = scheduler.config.scroll_hour;\n\
    scheduler.config.scroll_hour = ev.start_date.getHours();\n\
    var preserve_scroll = scheduler.config.preserve_scroll;\n\
    scheduler.config.preserve_scroll = false;\n\
\n\
    var original_color = ev.color;\n\
    var original_text_color = ev.textColor;\n\
    if (scheduler.config.highlight_displayed_event) {\n\
        ev.color = scheduler.config.displayed_event_color;\n\
        ev.textColor = scheduler.config.displayed_event_text_color;\n\
    }\n\
\n\
    scheduler.setCurrentView(new Date(ev.start_date), mode);\n\
\n\
    ev.color = original_color;\n\
    ev.textColor = original_text_color;\n\
    scheduler.config.scroll_hour = scroll_hour;\n\
    scheduler.config.preserve_scroll = preserve_scroll;\n\
\n\
    if (scheduler.matrix && scheduler.matrix[mode]) {\n\
        scheduler._els.dhx_cal_data[0].scrollTop = getAbsoluteTop(scheduler.getRenderedEvent(ev.id)) - getAbsoluteTop(scheduler._els.dhx_cal_data[0]) - 20;\n\
    }\n\
\n\
    scheduler.callEvent(\"onAfterEventDisplay\", [ev, mode]);\n\
};\n\
\n\
scheduler._loaded = {};\n\
scheduler._load = function (url, from) {\n\
    url = url || this._load_url;\n\
\n\
    if (!url) {\n\
        //if scheduler.setLoadMode is called before scheduler.init, initial rendering will invoke data loading while url is undefined\n\
        return;\n\
    }\n\
\n\
    url += (url.indexOf(\"?\") == -1 ? \"?\" : \"&\") + \"timeshift=\" + (new Date()).getTimezoneOffset();\n\
    if (this.config.prevent_cache) url += \"&uid=\" + this.uid();\n\
    var to;\n\
    from = from || this._date;\n\
\n\
    if (this._load_mode) {\n\
        var lf = this.templates.load_format;\n\
\n\
        from = this.date[this._load_mode + \"_start\"](new Date(from.valueOf()));\n\
        while (from > this._min_date) from = this.date.add(from, -1, this._load_mode);\n\
        to = from;\n\
\n\
        var cache_line = true;\n\
        while (to < this._max_date) {\n\
            to = this.date.add(to, 1, this._load_mode);\n\
            if (this._loaded[lf(from)] && cache_line)\n\
                from = this.date.add(from, 1, this._load_mode);\n\
            else cache_line = false;\n\
        }\n\
\n\
        var temp_to = to;\n\
        do {\n\
            to = temp_to;\n\
            temp_to = this.date.add(to, -1, this._load_mode);\n\
        } while (temp_to > from && this._loaded[lf(temp_to)]);\n\
\n\
        if (to <= from)\n\
            return false; //already loaded\n\
        dhtmlxAjax.get(url + \"&from=\" + lf(from) + \"&to=\" + lf(to), function (l) {\n\
            scheduler.on_load(l);\n\
        });\n\
        while (from < to) {\n\
            this._loaded[lf(from)] = true;\n\
            from = this.date.add(from, 1, this._load_mode);\n\
        }\n\
    } else\n\
        dhtmlxAjax.get(url, function (l) {\n\
            scheduler.on_load(l);\n\
        });\n\
    this.callEvent(\"onXLS\", []);\n\
    return true;\n\
};\n\
scheduler.on_load = function (loader) {\n\
    var evs;\n\
    if (this._process && this._process != \"xml\") {\n\
        evs = this[this._process].parse(loader.xmlDoc.responseText);\n\
    } else {\n\
        evs = this._magic_parser(loader);\n\
    }\n\
\n\
    scheduler._process_loading(evs);\n\
\n\
    this.callEvent(\"onXLE\", []);\n\
};\n\
scheduler._process_loading = function (evs) {\n\
    this._loading = true;\n\
    this._not_render = true;\n\
    for (var i = 0; i < evs.length; i++) {\n\
        if (!this.callEvent(\"onEventLoading\", [evs[i]])) continue;\n\
        this.addEvent(evs[i]);\n\
    }\n\
    this._not_render = false;\n\
    if (this._render_wait) this.render_view_data();\n\
\n\
    this._loading = false;\n\
    if (this._after_call) this._after_call();\n\
    this._after_call = null;\n\
};\n\
scheduler._init_event = function (event) {\n\
    event.text = (event.text || event._tagvalue) || \"\";\n\
    event.start_date = scheduler._init_date(event.start_date);\n\
    event.end_date = scheduler._init_date(event.end_date);\n\
};\n\
\n\
scheduler._init_date = function (date) {\n\
    if (!date)\n\
        return null;\n\
    if (typeof date == \"string\")\n\
        return scheduler.templates.xml_date(date);\n\
    else return new Date(date);\n\
};\n\
\n\
scheduler.json = {};\n\
scheduler.json.parse = function (data) {\n\
    if (typeof data == \"string\") {\n\
        scheduler._temp = eval(\"(\" + data + \")\");\n\
        data = (scheduler._temp) ? scheduler._temp.data || scheduler._temp.d || scheduler._temp : [];\n\
    }\n\
\n\
    if (data.dhx_security)\n\
        dhtmlx.security_key = data.dhx_security;\n\
\n\
    var collections = (scheduler._temp && scheduler._temp.collections) ? scheduler._temp.collections : {};\n\
    var collections_loaded = false;\n\
    for (var key in collections) {\n\
        if (collections.hasOwnProperty(key)) {\n\
            collections_loaded = true;\n\
            var collection = collections[key];\n\
            var arr = scheduler.serverList[key];\n\
            if (!arr) continue;\n\
            arr.splice(0, arr.length); //clear old options\n\
            for (var j = 0; j < collection.length; j++) {\n\
                var option = collection[j];\n\
                var obj = {\n\
                    key: option.value,\n\
                    label: option.label\n\
                }; // resulting option object\n\
                for (var option_key in option) {\n\
                    if (option.hasOwnProperty(option_key)) {\n\
                        if (option_key == \"value\" || option_key == \"label\")\n\
                            continue;\n\
                        obj[option_key] = option[option_key]; // obj['value'] = option['value']\n\
                    }\n\
                }\n\
                arr.push(obj);\n\
            }\n\
        }\n\
    }\n\
    if (collections_loaded)\n\
        scheduler.callEvent(\"onOptionsLoad\", []);\n\
\n\
    var evs = [];\n\
    for (var i = 0; i < data.length; i++) {\n\
        var event = data[i];\n\
        scheduler._init_event(event);\n\
        evs.push(event);\n\
    }\n\
    return evs;\n\
};\n\
scheduler.parse = function (data, type) {\n\
    this._process = type;\n\
    this.on_load({\n\
        xmlDoc: {\n\
            responseText: data\n\
        }\n\
    });\n\
};\n\
scheduler.load = function (url, call) {\n\
    if (typeof call == \"string\") {\n\
        this._process = call;\n\
        call = arguments[2];\n\
    }\n\
\n\
    this._load_url = url;\n\
    this._after_call = call;\n\
    this._load(url, this._date);\n\
};\n\
//possible values - day,week,month,year,all\n\
scheduler.setLoadMode = function (mode) {\n\
    if (mode == \"all\") mode = \"\";\n\
    this._load_mode = mode;\n\
};\n\
\n\
scheduler.serverList = function (name, array) {\n\
    if (array) {\n\
        return this.serverList[name] = array.slice(0);\n\
    }\n\
    return this.serverList[name] = (this.serverList[name] || []);\n\
};\n\
scheduler._userdata = {};\n\
scheduler._magic_parser = function (loader) {\n\
    var xml;\n\
    if (!loader.getXMLTopNode) { //from a string\n\
        var xml_string = loader.xmlDoc.responseText;\n\
        loader = new dtmlXMLLoaderObject(function () {});\n\
        loader.loadXMLString(xml_string);\n\
    }\n\
\n\
    xml = loader.getXMLTopNode(\"data\");\n\
    if (xml.tagName != \"data\") return []; //not an xml\n\
    var skey = xml.getAttribute(\"dhx_security\");\n\
    if (skey)\n\
        dhtmlx.security_key = skey;\n\
\n\
    var opts = loader.doXPath(\"//coll_options\");\n\
    for (var i = 0; i < opts.length; i++) {\n\
        var bind = opts[i].getAttribute(\"for\");\n\
        var arr = this.serverList[bind];\n\
        if (!arr) continue;\n\
        arr.splice(0, arr.length); //clear old options\n\
        var itms = loader.doXPath(\".//item\", opts[i]);\n\
        for (var j = 0; j < itms.length; j++) {\n\
            var itm = itms[j];\n\
            var attrs = itm.attributes;\n\
            var obj = {\n\
                key: itms[j].getAttribute(\"value\"),\n\
                label: itms[j].getAttribute(\"label\")\n\
            };\n\
            for (var k = 0; k < attrs.length; k++) {\n\
                var attr = attrs[k];\n\
                if (attr.nodeName == \"value\" || attr.nodeName == \"label\")\n\
                    continue;\n\
                obj[attr.nodeName] = attr.nodeValue;\n\
            }\n\
            arr.push(obj);\n\
        }\n\
    }\n\
    if (opts.length)\n\
        scheduler.callEvent(\"onOptionsLoad\", []);\n\
\n\
    var ud = loader.doXPath(\"//userdata\");\n\
    for (var i = 0; i < ud.length; i++) {\n\
        var udx = this._xmlNodeToJSON(ud[i]);\n\
        this._userdata[udx.name] = udx.text;\n\
    }\n\
\n\
    var evs = [];\n\
    xml = loader.doXPath(\"//event\");\n\
\n\
    for (var i = 0; i < xml.length; i++) {\n\
        var ev = evs[i] = this._xmlNodeToJSON(xml[i]);\n\
        scheduler._init_event(ev);\n\
    }\n\
    return evs;\n\
};\n\
scheduler._xmlNodeToJSON = function (node) {\n\
    var t = {};\n\
    for (var i = 0; i < node.attributes.length; i++)\n\
        t[node.attributes[i].name] = node.attributes[i].value;\n\
\n\
    for (var i = 0; i < node.childNodes.length; i++) {\n\
        var child = node.childNodes[i];\n\
        if (child.nodeType == 1)\n\
            t[child.tagName] = child.firstChild ? child.firstChild.nodeValue : \"\";\n\
    }\n\
\n\
    if (!t.text) t.text = node.firstChild ? node.firstChild.nodeValue : \"\";\n\
\n\
    return t;\n\
};\n\
scheduler.attachEvent(\"onXLS\", function () {\n\
    if (this.config.show_loading === true) {\n\
        var t;\n\
        t = this.config.show_loading = document.createElement(\"DIV\");\n\
        t.className = 'dhx_loading';\n\
        t.style.left = Math.round((this._x - 128) / 2) + \"px\";\n\
        t.style.top = Math.round((this._y - 15) / 2) + \"px\";\n\
        this._obj.appendChild(t);\n\
    }\n\
});\n\
scheduler.attachEvent(\"onXLE\", function () {\n\
    var t = this.config.show_loading;\n\
    if (t && typeof t == \"object\") {\n\
        this._obj.removeChild(t);\n\
        this.config.show_loading = true;\n\
    }\n\
});\n\
\n\
/*\n\
This software is allowed to use under GPL or you need to obtain Commercial or Enterise License\n\
to use it in not GPL project. Please contact sales@dhtmlx.com for details\n\
*/\n\
scheduler.ical = {\n\
    parse: function (str) {\n\
        var data = str.match(RegExp(this.c_start + \"[^\\f]*\" + this.c_end, \"\"));\n\
        if (!data.length) return;\n\
\n\
        //unfolding \n\
        data[0] = data[0].replace(/[\\r\\n\
]+(?=[a-z \\t])/g, \" \");\n\
        //drop property\n\
        data[0] = data[0].replace(/\\;[^:\\r\\n\
]*:/g, \":\");\n\
\n\
\n\
        var incoming = [];\n\
        var match;\n\
        var event_r = RegExp(\"(?:\" + this.e_start + \")([^\\f]*?)(?:\" + this.e_end + \")\", \"g\");\n\
        while (match = event_r.exec(data)) {\n\
            var e = {};\n\
            var param;\n\
            var param_r = /[^\\r\\n\
]+[\\r\\n\
]+/g;\n\
            while (param = param_r.exec(match[1]))\n\
                this.parse_param(param.toString(), e);\n\
            if (e.uid && !e.id) e.id = e.uid; //fallback to UID, when ID is not defined\n\
            incoming.push(e);\n\
        }\n\
        return incoming;\n\
    },\n\
    parse_param: function (str, obj) {\n\
        var d = str.indexOf(\":\");\n\
        if (d == -1) return;\n\
\n\
        var name = str.substr(0, d).toLowerCase();\n\
        var value = str.substr(d + 1).replace(/\\\\\\,/g, \",\").replace(/[\\r\\n\
]+$/, \"\");\n\
        if (name == \"summary\")\n\
            name = \"text\";\n\
        else if (name == \"dtstart\") {\n\
            name = \"start_date\";\n\
            value = this.parse_date(value, 0, 0);\n\
        } else if (name == \"dtend\") {\n\
            name = \"end_date\";\n\
            value = this.parse_date(value, 0, 0);\n\
        }\n\
        obj[name] = value;\n\
    },\n\
    parse_date: function (value, dh, dm) {\n\
        var t = value.split(\"T\");\n\
        if (t[1]) {\n\
            dh = t[1].substr(0, 2);\n\
            dm = t[1].substr(2, 2);\n\
        }\n\
        var dy = t[0].substr(0, 4);\n\
        var dn = parseInt(t[0].substr(4, 2), 10) - 1;\n\
        var dd = t[0].substr(6, 2);\n\
        if (scheduler.config.server_utc && !t[1]) { // if no hours/minutes were specified == full day event\n\
            return new Date(Date.UTC(dy, dn, dd, dh, dm));\n\
        }\n\
        return new Date(dy, dn, dd, dh, dm);\n\
    },\n\
    c_start: \"BEGIN:VCALENDAR\",\n\
    e_start: \"BEGIN:VEVENT\",\n\
    e_end: \"END:VEVENT\",\n\
    c_end: \"END:VCALENDAR\"\n\
};\n\
scheduler._lightbox_controls = {};\n\
scheduler.formSection = function (name) {\n\
    var config = this.config.lightbox.sections;\n\
    var i = 0;\n\
    for (i; i < config.length; i++)\n\
        if (config[i].name == name)\n\
            break;\n\
    var section = config[i];\n\
    if (!scheduler._lightbox)\n\
        scheduler.getLightbox();\n\
    var header = document.getElementById(section.id);\n\
    var node = header.nextSibling;\n\
\n\
    var result = {\n\
        section: section,\n\
        header: header,\n\
        node: node,\n\
        getValue: function (ev) {\n\
            return scheduler.form_blocks[section.type].get_value(node, (ev || {}), section);\n\
        },\n\
        setValue: function (value, ev) {\n\
            return scheduler.form_blocks[section.type].set_value(node, value, (ev || {}), section);\n\
        }\n\
    };\n\
\n\
    var handler = scheduler._lightbox_controls[\"get_\" + section.type + \"_control\"];\n\
    return handler ? handler(result) : result;\n\
};\n\
scheduler._lightbox_controls.get_template_control = function (result) {\n\
    result.control = result.node;\n\
    return result;\n\
};\n\
scheduler._lightbox_controls.get_select_control = function (result) {\n\
    result.control = result.node.getElementsByTagName('select')[0];\n\
    return result;\n\
};\n\
scheduler._lightbox_controls.get_textarea_control = function (result) {\n\
    result.control = result.node.getElementsByTagName('textarea')[0];\n\
    return result;\n\
};\n\
scheduler._lightbox_controls.get_time_control = function (result) {\n\
    result.control = result.node.getElementsByTagName('select'); // array\n\
    return result;\n\
};\n\
scheduler.form_blocks = {\n\
    template: {\n\
        render: function (sns) {\n\
            var height = (sns.height || \"30\") + \"px\";\n\
            return \"<div class='dhx_cal_ltext dhx_cal_template' style='height:\" + height + \";'></div>\";\n\
        },\n\
        set_value: function (node, value, ev, config) {\n\
            node.innerHTML = value || \"\";\n\
        },\n\
        get_value: function (node, ev, config) {\n\
            return node.innerHTML || \"\";\n\
        },\n\
        focus: function (node) {}\n\
    },\n\
    textarea: {\n\
        render: function (sns) {\n\
            var height = (sns.height || \"130\") + \"px\";\n\
            return \"<div class='dhx_cal_ltext' style='height:\" + height + \";'><textarea></textarea></div>\";\n\
        },\n\
        set_value: function (node, value, ev) {\n\
            node.firstChild.value = value || \"\";\n\
        },\n\
        get_value: function (node, ev) {\n\
            return node.firstChild.value;\n\
        },\n\
        focus: function (node) {\n\
            var a = node.firstChild;\n\
            scheduler._focus(a, true)\n\
        }\n\
    },\n\
    select: {\n\
        render: function (sns) {\n\
            var height = (sns.height || \"23\") + \"px\";\n\
            var html = \"<div class='dhx_cal_ltext' style='height:\" + height + \";'><select style='width:100%;'>\";\n\
            for (var i = 0; i < sns.options.length; i++)\n\
                html += \"<option value='\" + sns.options[i].key + \"'>\" + sns.options[i].label + \"</option>\";\n\
            html += \"</select></div>\";\n\
            return html;\n\
        },\n\
        set_value: function (node, value, ev, sns) {\n\
            var select = node.firstChild;\n\
            if (!select._dhx_onchange && sns.onchange) {\n\
                select.onchange = sns.onchange;\n\
                select._dhx_onchange = true;\n\
            }\n\
            if (typeof value == \"undefined\")\n\
                value = (select.options[0] || {}).value;\n\
            select.value = value || \"\";\n\
        },\n\
        get_value: function (node, ev) {\n\
            return node.firstChild.value;\n\
        },\n\
        focus: function (node) {\n\
            var a = node.firstChild;\n\
            scheduler._focus(a, true);\n\
        }\n\
    },\n\
    time: {\n\
        render: function (sns) {\n\
            if (!sns.time_format) {\n\
                // default order\n\
                sns.time_format = [\"%H:%i\", \"%d\", \"%m\", \"%Y\"];\n\
            }\n\
            // map: default order => real one\n\
            sns._time_format_order = {};\n\
            var time_format = sns.time_format;\n\
\n\
            var cfg = scheduler.config;\n\
            var dt = this.date.date_part(scheduler._currentDate());\n\
            var last = 24 * 60,\n\
                first = 0;\n\
            if (scheduler.config.limit_time_select) {\n\
                last = 60 * cfg.last_hour + 1;\n\
                first = 60 * cfg.first_hour;\n\
                dt.setHours(cfg.first_hour);\n\
            }\n\
            var html = \"\";\n\
\n\
            for (var p = 0; p < time_format.length; p++) {\n\
                var time_option = time_format[p];\n\
\n\
                // adding spaces between selects\n\
                if (p > 0) {\n\
                    html += \" \";\n\
                }\n\
\n\
                switch (time_option) {\n\
                case \"%Y\":\n\
                    sns._time_format_order[3] = p;\n\
                    //year\n\
                    html += \"<select>\";\n\
                    var year = dt.getFullYear() - 5; //maybe take from config?\n\
                    for (var i = 0; i < 10; i++)\n\
                        html += \"<option value='\" + (year + i) + \"'>\" + (year + i) + \"</option>\";\n\
                    html += \"</select> \";\n\
                    break;\n\
                case \"%m\":\n\
                    sns._time_format_order[2] = p;\n\
                    //month\n\
                    html += \"<select>\";\n\
                    for (var i = 0; i < 12; i++)\n\
                        html += \"<option value='\" + i + \"'>\" + this.locale.date.month_full[i] + \"</option>\";\n\
                    html += \"</select>\";\n\
                    break;\n\
                case \"%d\":\n\
                    sns._time_format_order[1] = p;\n\
                    //days\n\
                    html += \"<select>\";\n\
                    for (var i = 1; i < 32; i++)\n\
                        html += \"<option value='\" + i + \"'>\" + i + \"</option>\";\n\
                    html += \"</select>\";\n\
                    break;\n\
                case \"%H:%i\":\n\
                    sns._time_format_order[0] = p;\n\
                    //hours\n\
                    html += \"<select>\";\n\
                    var i = first;\n\
                    var tdate = dt.getDate();\n\
                    sns._time_values = [];\n\
\n\
                    while (i < last) {\n\
                        var time = this.templates.time_picker(dt);\n\
                        html += \"<option value='\" + i + \"'>\" + time + \"</option>\";\n\
                        sns._time_values.push(i);\n\
                        dt.setTime(dt.valueOf() + this.config.time_step * 60 * 1000);\n\
                        var diff = (dt.getDate() != tdate) ? 1 : 0; // moved or not to the next day\n\
                        i = diff * 24 * 60 + dt.getHours() * 60 + dt.getMinutes();\n\
                    }\n\
                    html += \"</select>\";\n\
                    break;\n\
                }\n\
            }\n\
\n\
            return \"<div style='height:30px;padding-top:0px;font-size:inherit;' class='dhx_section_time'>\" + html + \"<span style='font-weight:normal; font-size:10pt;'> &nbsp;&ndash;&nbsp; </span>\" + html + \"</div>\";\n\
        },\n\
        set_value: function (node, value, ev, config) {\n\
            var cfg = scheduler.config;\n\
            var s = node.getElementsByTagName(\"select\");\n\
            var map = config._time_format_order;\n\
\n\
            if (cfg.full_day) {\n\
                if (!node._full_day) {\n\
                    var html = \"<label class='dhx_fullday'><input type='checkbox' name='full_day' value='true'> \" + scheduler.locale.labels.full_day + \"&nbsp;</label></input>\";\n\
                    if (!scheduler.config.wide_form)\n\
                        html = node.previousSibling.innerHTML + html;\n\
                    node.previousSibling.innerHTML = html;\n\
                    node._full_day = true;\n\
                }\n\
                var input = node.previousSibling.getElementsByTagName(\"input\")[0];\n\
                input.checked = (scheduler.date.time_part(ev.start_date) === 0 && scheduler.date.time_part(ev.end_date) === 0);\n\
\n\
                s[map[0]].disabled = input.checked;\n\
                s[map[0] + s.length / 2].disabled = input.checked;\n\
\n\
                input.onclick = function () {\n\
                    if (input.checked) {\n\
                        var obj = {};\n\
                        scheduler.form_blocks.time.get_value(node, obj, config);\n\
\n\
                        var start_date = scheduler.date.date_part(obj.start_date);\n\
                        var end_date = scheduler.date.date_part(obj.end_date);\n\
\n\
                        if (+end_date == +start_date || (+end_date >= +start_date && (ev.end_date.getHours() != 0 || ev.end_date.getMinutes() != 0)))\n\
                            end_date = scheduler.date.add(end_date, 1, \"day\");\n\
                    }\n\
\n\
                    s[map[0]].disabled = input.checked;\n\
                    s[map[0] + s.length / 2].disabled = input.checked;\n\
\n\
                    _fill_lightbox_select(s, 0, start_date || ev.start_date);\n\
                    _fill_lightbox_select(s, 4, end_date || ev.end_date);\n\
                };\n\
            }\n\
\n\
            if (cfg.auto_end_date && cfg.event_duration) {\n\
                function _update_lightbox_select() {\n\
                    var start_date = new Date(s[map[3]].value, s[map[2]].value, s[map[1]].value, 0, s[map[0]].value);\n\
                    var end_date = new Date(start_date.getTime() + (scheduler.config.event_duration * 60 * 1000));\n\
                    _fill_lightbox_select(s, 4, end_date);\n\
                }\n\
                for (var i = 0; i < 4; i++) {\n\
                    s[i].onchange = _update_lightbox_select;\n\
                }\n\
            }\n\
\n\
            function _fill_lightbox_select(s, i, d) {\n\
                var time_values = config._time_values;\n\
                var direct_value = d.getHours() * 60 + d.getMinutes();\n\
                var fixed_value = direct_value;\n\
                var value_found = false;\n\
                for (var k = 0; k < time_values.length; k++) {\n\
                    var t_v = time_values[k];\n\
                    if (t_v === direct_value) {\n\
                        value_found = true;\n\
                        break;\n\
                    }\n\
                    if (t_v < direct_value)\n\
                        fixed_value = t_v;\n\
                }\n\
\n\
                s[i + map[0]].value = (value_found) ? direct_value : fixed_value;\n\
                if (!(value_found || fixed_value)) {\n\
                    s[i + map[0]].selectedIndex = -1; //show empty select in FF\n\
                }\n\
                s[i + map[1]].value = d.getDate();\n\
                s[i + map[2]].value = d.getMonth();\n\
                s[i + map[3]].value = d.getFullYear();\n\
            }\n\
\n\
            _fill_lightbox_select(s, 0, ev.start_date);\n\
            _fill_lightbox_select(s, 4, ev.end_date);\n\
        },\n\
        get_value: function (node, ev, config) {\n\
            s = node.getElementsByTagName(\"select\");\n\
            var map = config._time_format_order;\n\
\n\
            ev.start_date = new Date(s[map[3]].value, s[map[2]].value, s[map[1]].value, 0, s[map[0]].value);\n\
            ev.end_date = new Date(s[map[3] + 4].value, s[map[2] + 4].value, s[map[1] + 4].value, 0, s[map[0] + 4].value);\n\
\n\
            if (ev.end_date <= ev.start_date)\n\
                ev.end_date = scheduler.date.add(ev.start_date, scheduler.config.time_step, \"minute\");\n\
            return {\n\
                start_date: new Date(ev.start_date),\n\
                end_date: new Date(ev.end_date)\n\
            };\n\
        },\n\
        focus: function (node) {\n\
            scheduler._focus(node.getElementsByTagName(\"select\")[0]);\n\
        }\n\
    }\n\
};\n\
scheduler.showCover = function (box) {\n\
    if (box) {\n\
        box.style.display = \"block\";\n\
\n\
        var scroll_top = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;\n\
        var scroll_left = window.pageXOffset || document.body.scrollLeft || document.documentElement.scrollLeft;\n\
\n\
        var view_height = window.innerHeight || document.documentElement.clientHeight;\n\
\n\
        if (scroll_top) // if vertical scroll on window\n\
            box.style.top = Math.round(scroll_top + Math.max((view_height - box.offsetHeight) / 2, 0)) + \"px\";\n\
        else // vertical scroll on body\n\
            box.style.top = Math.round(Math.max(((view_height - box.offsetHeight) / 2), 0) + 9) + \"px\"; // +9 for compatibility with auto tests\n\
\n\
        // not quite accurate but used for compatibility reasons\n\
        if (document.documentElement.scrollWidth > document.body.offsetWidth) // if horizontal scroll on the window\n\
            box.style.left = Math.round(scroll_left + (document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\
        else // horizontal scroll on the body\n\
            box.style.left = Math.round((document.body.offsetWidth - box.offsetWidth) / 2) + \"px\";\n\
    }\n\
    this.show_cover();\n\
};\n\
scheduler.showLightbox = function (id) {\n\
    if (!id) return;\n\
    if (!this.callEvent(\"onBeforeLightbox\", [id])) {\n\
        if (this._new_event)\n\
            this._new_event = null;\n\
        return;\n\
    }\n\
    var box = this.getLightbox();\n\
    this.showCover(box);\n\
    this._fill_lightbox(id, box);\n\
    this.callEvent(\"onLightbox\", [id]);\n\
};\n\
scheduler._fill_lightbox = function (id, box) {\n\
    var ev = this.getEvent(id);\n\
    var s = box.getElementsByTagName(\"span\");\n\
    if (scheduler.templates.lightbox_header) {\n\
        s[1].innerHTML = \"\";\n\
        s[2].innerHTML = scheduler.templates.lightbox_header(ev.start_date, ev.end_date, ev);\n\
    } else {\n\
        s[1].innerHTML = this.templates.event_header(ev.start_date, ev.end_date, ev);\n\
        s[2].innerHTML = (this.templates.event_bar_text(ev.start_date, ev.end_date, ev) || \"\").substr(0, 70); //IE6 fix\n\
    }\n\
\n\
    var sns = this.config.lightbox.sections;\n\
    for (var i = 0; i < sns.length; i++) {\n\
        var current_sns = sns[i];\n\
        var node = document.getElementById(current_sns.id).nextSibling;\n\
        var block = this.form_blocks[current_sns.type];\n\
        var value = (ev[current_sns.map_to] !== undefined) ? ev[current_sns.map_to] : current_sns.default_value;\n\
        block.set_value.call(this, node, value, ev, current_sns);\n\
        if (sns[i].focus)\n\
            block.focus.call(this, node);\n\
    }\n\
\n\
    scheduler._lightbox_id = id;\n\
};\n\
scheduler._lightbox_out = function (ev) {\n\
    var sns = this.config.lightbox.sections;\n\
    for (var i = 0; i < sns.length; i++) {\n\
        var node = document.getElementById(sns[i].id);\n\
        node = (node ? node.nextSibling : node);\n\
        var block = this.form_blocks[sns[i].type];\n\
        var res = block.get_value.call(this, node, ev, sns[i]);\n\
        if (sns[i].map_to != \"auto\")\n\
            ev[sns[i].map_to] = res;\n\
    }\n\
    return ev;\n\
};\n\
scheduler._empty_lightbox = function (data) {\n\
    var id = scheduler._lightbox_id;\n\
    var ev = this.getEvent(id);\n\
    var box = this.getLightbox();\n\
\n\
    this._lame_copy(ev, data);\n\
\n\
    this.setEvent(ev.id, ev);\n\
    this._edit_stop_event(ev, true);\n\
    this.render_view_data();\n\
};\n\
scheduler.hide_lightbox = function (id) {\n\
    this.hideCover(this.getLightbox());\n\
    this._lightbox_id = null;\n\
    this.callEvent(\"onAfterLightbox\", []);\n\
};\n\
scheduler.hideCover = function (box) {\n\
    if (box) box.style.display = \"none\";\n\
    this.hide_cover();\n\
};\n\
scheduler.hide_cover = function () {\n\
    if (this._cover)\n\
        this._cover.parentNode.removeChild(this._cover);\n\
    this._cover = null;\n\
};\n\
scheduler.show_cover = function () {\n\
    this._cover = document.createElement(\"DIV\");\n\
    this._cover.className = \"dhx_cal_cover\";\n\
    var _document_height = ((document.height !== undefined) ? document.height : document.body.offsetHeight);\n\
    var _scroll_height = ((document.documentElement) ? document.documentElement.scrollHeight : 0);\n\
    this._cover.style.height = Math.max(_document_height, _scroll_height) + 'px';\n\
    document.body.appendChild(this._cover);\n\
};\n\
scheduler.save_lightbox = function () {\n\
    var data = this._lightbox_out({}, this._lame_copy(this.getEvent(this._lightbox_id)));\n\
    if (this.checkEvent(\"onEventSave\") && !this.callEvent(\"onEventSave\", [this._lightbox_id, data, this._new_event]))\n\
        return;\n\
    this._empty_lightbox(data);\n\
    this.hide_lightbox();\n\
};\n\
scheduler.startLightbox = function (id, box) {\n\
    this._lightbox_id = id;\n\
    this._custom_lightbox = true;\n\
\n\
    this._temp_lightbox = this._lightbox;\n\
    this._lightbox = box;\n\
    this.showCover(box);\n\
};\n\
scheduler.endLightbox = function (mode, box) {\n\
    this._edit_stop_event(scheduler.getEvent(this._lightbox_id), mode);\n\
    if (mode)\n\
        scheduler.render_view_data();\n\
    this.hideCover(box);\n\
\n\
    if (this._custom_lightbox) {\n\
        this._lightbox = this._temp_lightbox;\n\
        this._custom_lightbox = false;\n\
    }\n\
    this._temp_lightbox = this._lightbox_id = null; // in case of custom lightbox user only calls endLightbox so we need to reset _lightbox_id\n\
};\n\
scheduler.resetLightbox = function () {\n\
    if (scheduler._lightbox && !scheduler._custom_lightbox)\n\
        scheduler._lightbox.parentNode.removeChild(scheduler._lightbox);\n\
    scheduler._lightbox = null;\n\
};\n\
scheduler.cancel_lightbox = function () {\n\
    this.callEvent(\"onEventCancel\", [this._lightbox_id, this._new_event]);\n\
    this.endLightbox(false);\n\
    this.hide_lightbox();\n\
};\n\
scheduler._init_lightbox_events = function () {\n\
    this.getLightbox().onclick = function (e) {\n\
        var src = e ? e.target : event.srcElement;\n\
        if (!src.className) src = src.previousSibling;\n\
        if (src && src.className)\n\
            switch (src.className) {\n\
            case \"dhx_save_btn\":\n\
                scheduler.save_lightbox();\n\
                break;\n\
            case \"dhx_delete_btn\":\n\
                var c = scheduler.locale.labels.confirm_deleting;\n\
\n\
                scheduler._dhtmlx_confirm(c, scheduler.locale.labels.title_confirm_deleting, function () {\n\
                    scheduler.deleteEvent(scheduler._lightbox_id);\n\
                    scheduler._new_event = null; //clear flag, if it was unsaved event\n\
                    scheduler.hide_lightbox();\n\
                });\n\
\n\
                break;\n\
            case \"dhx_cancel_btn\":\n\
                scheduler.cancel_lightbox();\n\
                break;\n\
\n\
            default:\n\
                if (src.getAttribute(\"dhx_button\")) {\n\
                    scheduler.callEvent(\"onLightboxButton\", [src.className, src, e]);\n\
                } else {\n\
                    var index, block, sec;\n\
                    if (src.className.indexOf(\"dhx_custom_button\") != -1) {\n\
                        if (src.className.indexOf(\"dhx_custom_button_\") != -1) {\n\
                            index = src.parentNode.getAttribute(\"index\");\n\
                            sec = src.parentNode.parentNode;\n\
                        } else {\n\
                            index = src.getAttribute(\"index\");\n\
                            sec = src.parentNode;\n\
                            src = src.firstChild;\n\
                        }\n\
                    }\n\
                    if (index) {\n\
                        block = scheduler.form_blocks[scheduler.config.lightbox.sections[index].type];\n\
                        block.button_click(index, src, sec, sec.nextSibling);\n\
                    }\n\
                }\n\
                break;\n\
            }\n\
    };\n\
    this.getLightbox().onkeydown = function (e) {\n\
        switch ((e || event).keyCode) {\n\
        case scheduler.keys.edit_save:\n\
            if ((e || event).shiftKey) return;\n\
            scheduler.save_lightbox();\n\
            break;\n\
        case scheduler.keys.edit_cancel:\n\
            scheduler.cancel_lightbox();\n\
            break;\n\
        default:\n\
            break;\n\
        }\n\
    };\n\
};\n\
scheduler.setLightboxSize = function () {\n\
    var d = this._lightbox;\n\
    if (!d) return;\n\
\n\
    var con = d.childNodes[1];\n\
    con.style.height = \"0px\";\n\
    con.style.height = con.scrollHeight + \"px\";\n\
    d.style.height = con.scrollHeight + scheduler.xy.lightbox_additional_height + \"px\";\n\
    con.style.height = con.scrollHeight + \"px\"; //it is incredible , how ugly IE can be\n\
};\n\
\n\
scheduler._init_dnd_events = function () {\n\
    dhtmlxEvent(document.body, \"mousemove\", scheduler._move_while_dnd);\n\
    dhtmlxEvent(document.body, \"mouseup\", scheduler._finish_dnd);\n\
    scheduler._init_dnd_events = function () {};\n\
};\n\
scheduler._move_while_dnd = function (e) {\n\
    if (scheduler._dnd_start_lb) {\n\
        if (!document.dhx_unselectable) {\n\
            document.body.className += \" dhx_unselectable\";\n\
            document.dhx_unselectable = true;\n\
        }\n\
        var lb = scheduler.getLightbox();\n\
        var now = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\
        lb.style.top = scheduler._lb_start[1] + now[1] - scheduler._dnd_start_lb[1] + \"px\";\n\
        lb.style.left = scheduler._lb_start[0] + now[0] - scheduler._dnd_start_lb[0] + \"px\";\n\
    }\n\
};\n\
scheduler._ready_to_dnd = function (e) {\n\
    var lb = scheduler.getLightbox();\n\
    scheduler._lb_start = [parseInt(lb.style.left, 10), parseInt(lb.style.top, 10)];\n\
    scheduler._dnd_start_lb = (e && e.target) ? [e.pageX, e.pageY] : [event.clientX, event.clientY];\n\
};\n\
scheduler._finish_dnd = function () {\n\
    if (scheduler._lb_start) {\n\
        scheduler._lb_start = scheduler._dnd_start_lb = false;\n\
        document.body.className = document.body.className.replace(\" dhx_unselectable\", \"\");\n\
        document.dhx_unselectable = false;\n\
    }\n\
};\n\
scheduler.getLightbox = function () { //scheduler.config.wide_form=true;\n\
    if (!this._lightbox) {\n\
        var d = document.createElement(\"DIV\");\n\
        d.className = \"dhx_cal_light\";\n\
        if (scheduler.config.wide_form)\n\
            d.className += \" dhx_cal_light_wide\";\n\
        if (scheduler.form_blocks.recurring)\n\
            d.className += \" dhx_cal_light_rec\";\n\
\n\
        if (/msie|MSIE 6/.test(navigator.userAgent))\n\
            d.className += \" dhx_ie6\";\n\
        d.style.visibility = \"hidden\";\n\
        var html = this._lightbox_template;\n\
\n\
        var buttons = this.config.buttons_left;\n\
        for (var i = 0; i < buttons.length; i++)\n\
            html += \"<div class='dhx_btn_set dhx_left_btn_set \" + buttons[i] + \"_set'><div dhx_button='1' class='\" + buttons[i] + \"'></div><div>\" + scheduler.locale.labels[buttons[i]] + \"</div></div>\";\n\
\n\
        buttons = this.config.buttons_right;\n\
        for (var i = 0; i < buttons.length; i++)\n\
            html += \"<div class='dhx_btn_set dhx_right_btn_set \" + buttons[i] + \"_set' style='float:right;'><div dhx_button='1' class='\" + buttons[i] + \"'></div><div>\" + scheduler.locale.labels[buttons[i]] + \"</div></div>\";\n\
\n\
        html += \"</div>\";\n\
        d.innerHTML = html;\n\
        if (scheduler.config.drag_lightbox) {\n\
            d.firstChild.onmousedown = scheduler._ready_to_dnd;\n\
            d.firstChild.onselectstart = function () {\n\
                return false;\n\
            };\n\
            d.firstChild.style.cursor = \"pointer\";\n\
            scheduler._init_dnd_events();\n\
\n\
        }\n\
        document.body.insertBefore(d, document.body.firstChild);\n\
        this._lightbox = d;\n\
\n\
        var sns = this.config.lightbox.sections;\n\
        html = \"\";\n\
        for (var i = 0; i < sns.length; i++) {\n\
            var block = this.form_blocks[sns[i].type];\n\
            if (!block) continue; //ignore incorrect blocks\n\
            sns[i].id = \"area_\" + this.uid();\n\
            var button = \"\";\n\
            if (sns[i].button) {\n\
                button = \"<div class='dhx_custom_button' index='\" + i + \"'><div class='dhx_custom_button_\" + sns[i].button + \"'></div><div>\" + this.locale.labels[\"button_\" + sns[i].button] + \"</div></div>\";\n\
            }\n\
\n\
            if (this.config.wide_form) {\n\
                html += \"<div class='dhx_wrap_section'>\";\n\
            }\n\
            html += \"<div id='\" + sns[i].id + \"' class='dhx_cal_lsection'>\" + button + this.locale.labels[\"section_\" + sns[i].name] + \"</div>\" + block.render.call(this, sns[i]);\n\
            html += \"</div>\"\n\
        }\n\
\n\
        var ds = d.getElementsByTagName(\"div\");\n\
        for (var i = 0; i < ds.length; i++) {\n\
            var t_ds = ds[i];\n\
            if (t_ds.className == \"dhx_cal_larea\") {\n\
                t_ds.innerHTML = html;\n\
                break;\n\
            }\n\
        }\n\
\n\
        //sizes\n\
        this.setLightboxSize();\n\
\n\
        this._init_lightbox_events(this);\n\
        d.style.display = \"none\";\n\
        d.style.visibility = \"visible\";\n\
    }\n\
    return this._lightbox;\n\
};\n\
scheduler._lightbox_template = \"<div class='dhx_cal_ltitle'><span class='dhx_mark'>&nbsp;</span><span class='dhx_time'></span><span class='dhx_title'></span></div><div class='dhx_cal_larea'></div>\";\n\
\n\
scheduler._init_touch_events = function () {\n\
    if (this.config.touch != \"force\")\n\
        this.config.touch = this.config.touch && ((navigator.userAgent.indexOf(\"Mobile\") != -1) || (navigator.userAgent.indexOf(\"iPad\") != -1) || (navigator.userAgent.indexOf(\"Android\") != -1) || (navigator.userAgent.indexOf(\"Touch\") != -1));\n\
\n\
    if (this.config.touch) {\n\
        this.xy.scroll_width = 0;\n\
        if (window.navigator.msPointerEnabled) {\n\
            this._touch_events([\"MSPointerMove\", \"MSPointerDown\", \"MSPointerUp\"], function (ev) {\n\
                if (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE) return null;\n\
                return ev;\n\
            }, function (ev) {\n\
                return (!ev || ev.pointerType == ev.MSPOINTER_TYPE_MOUSE);\n\
            });\n\
        } else\n\
            this._touch_events([\"touchmove\", \"touchstart\", \"touchend\"], function (ev) {\n\
                if (ev.touches && ev.touches.length > 1) return null;\n\
                if (ev.touches[0])\n\
                    return {\n\
                        target: ev.target,\n\
                        pageX: ev.touches[0].pageX,\n\
                        pageY: ev.touches[0].pageY\n\
                    };\n\
                else\n\
                    return ev;\n\
            }, function () {\n\
                return false;\n\
            });\n\
    }\n\
};\n\
\n\
scheduler._touch_events = function (names, accessor, ignore) {\n\
    //webkit on android need to be handled separately\n\
    var a_webkit = (navigator.userAgent.indexOf(\"Android\") != -1) && (navigator.userAgent.indexOf(\"WebKit\") != -1);\n\
    var source, tracker, timer, drag_mode, scroll_mode, action_mode;\n\
    var dblclicktime = 0;\n\
\n\
    function check_direction_swipe(s_ev, e_ev, step) {\n\
        if (!s_ev || !e_ev) return;\n\
\n\
        var dy = Math.abs(s_ev.pageY - e_ev.pageY);\n\
        var dx = Math.abs(s_ev.pageX - e_ev.pageX);\n\
        if (dx > step && (!dy || (dx / dy > 3))) {\n\
            if (s_ev.pageX > e_ev.pageX)\n\
                scheduler._click.dhx_cal_next_button();\n\
            else\n\
                scheduler._click.dhx_cal_prev_button();\n\
        }\n\
    };\n\
    dhtmlxEvent(document.body, names[0], function (e) {\n\
        if (ignore(e)) return;\n\
\n\
        if (drag_mode) {\n\
            scheduler._on_mouse_move(accessor(e));\n\
            scheduler._update_global_tip();\n\
            if (e.preventDefault)\n\
                e.preventDefault();\n\
            e.cancelBubble = true;\n\
            return false;\n\
        }\n\
\n\
        if (tracker && a_webkit) {\n\
            check_direction_swipe(tracker, accessor(e), 0);\n\
        }\n\
\n\
        tracker = accessor(e);\n\
        //ignore common and scrolling moves\n\
        if (!action_mode) return;\n\
\n\
        //multitouch    \n\
        if (!tracker) {\n\
            scroll_mode = true;\n\
            return;\n\
        }\n\
\n\
        //target changed - probably in scroll mode\n\
\n\
        if (source.target != tracker.target || (Math.abs(source.pageX - tracker.pageX) > 5) || (Math.abs(source.pageY - tracker.pageY) > 5)) {\n\
            scroll_mode = true;\n\
            clearTimeout(timer);\n\
        }\n\
\n\
    });\n\
\n\
    dhtmlxEvent(this._els[\"dhx_cal_data\"][0], \"scroll\", drag_cancel);\n\
    dhtmlxEvent(this._els[\"dhx_cal_data\"][0], \"touchcancel\", drag_cancel);\n\
    dhtmlxEvent(this._els[\"dhx_cal_data\"][0], \"contextmenu\", function (e) {\n\
        if (action_mode) {\n\
            if (e && e.preventDefault)\n\
                e.preventDefault();\n\
            (e || event).cancelBubble = true;\n\
            return false;\n\
        }\n\
    });\n\
    dhtmlxEvent(this._els[\"dhx_cal_data\"][0], names[1], function (e) {\n\
        if (ignore(e)) return;\n\
\n\
        drag_mode = scroll_mode = tracker = false;\n\
        action_mode = true;\n\
        scheduler._temp_touch_block = true;\n\
\n\
        var fake_event = tracker = accessor(e);\n\
        if (!fake_event) {\n\
            scroll_mode = true;\n\
            return;\n\
        }\n\
\n\
        //dbl click\n\
        var now = new Date();\n\
\n\
        if (!scroll_mode && !drag_mode && now - dblclicktime < 250) {\n\
            scheduler._click.dhx_cal_data(fake_event);\n\
            window.setTimeout(function () {\n\
                scheduler._on_dbl_click(fake_event);\n\
            }, 50);\n\
\n\
            if (e.preventDefault)\n\
                e.preventDefault();\n\
            e.cancelBubble = true;\n\
            scheduler._block_next_stop = true;\n\
            return false;\n\
        }\n\
        dblclicktime = now;\n\
\n\
        //drag\n\
\n\
        if (scroll_mode || drag_mode || !scheduler.config.touch_drag)\n\
            return;\n\
\n\
        //there is no target\n\
        timer = setTimeout(function () {\n\
\n\
            drag_mode = true;\n\
            var target = source.target;\n\
            if (target && target.className && target.className.indexOf(\"dhx_body\") != -1)\n\
                target = target.previousSibling;\n\
\n\
            scheduler._on_mouse_down(source, target);\n\
            if (scheduler._drag_mode && scheduler._drag_mode != \"create\") {\n\
                var pos = -1;\n\
                scheduler.for_rendered(scheduler._drag_id, function (node, i) {\n\
                    pos = node.getBoundingClientRect().top;\n\
                    node.style.display = 'none';\n\
                    scheduler._rendered.splice(i, 1);\n\
                });\n\
                if (pos >= 0) {\n\
                    var step = scheduler.config.time_step;\n\
                    scheduler._move_pos_shift = step * Math.round((fake_event.pageY - pos) * 60 / (scheduler.config.hour_size_px * step));\n\
                }\n\
            }\n\
\n\
            if (scheduler.config.touch_tip)\n\
                scheduler._show_global_tip();\n\
            scheduler._on_mouse_move(source);\n\
        }, scheduler.config.touch_drag);\n\
\n\
        source = fake_event;\n\
    });\n\
\n\
    function drag_cancel(e) {\n\
        scheduler._hide_global_tip();\n\
        if (drag_mode) {\n\
            scheduler._on_mouse_up(accessor(e || event));\n\
            scheduler._temp_touch_block = false;\n\
        }\n\
        scheduler._drag_id = null;\n\
        scheduler._drag_mode = null;\n\
        scheduler._drag_pos = null;\n\
\n\
        clearTimeout(timer);\n\
        drag_mode = action_mode = false;\n\
        scroll_mode = true;\n\
    }\n\
    dhtmlxEvent(this._els[\"dhx_cal_data\"][0], names[2], function (e) {\n\
        if (ignore(e)) return;\n\
\n\
        if (!drag_mode)\n\
            check_direction_swipe(source, tracker, 200);\n\
\n\
        if (drag_mode)\n\
            scheduler._ignore_next_click = true;\n\
\n\
        drag_cancel(e);\n\
        if (scheduler._block_next_stop) {\n\
            scheduler._block_next_stop = false;\n\
            if (e.preventDefault)\n\
                e.preventDefault();\n\
            e.cancelBubble = true;\n\
            return false;\n\
        }\n\
    });\n\
\n\
    dhtmlxEvent(document.body, names[2], drag_cancel);\n\
};\n\
\n\
scheduler._show_global_tip = function () {\n\
    scheduler._hide_global_tip();\n\
\n\
    var toptip = scheduler._global_tip = document.createElement(\"DIV\");\n\
    toptip.className = 'dhx_global_tip';\n\
\n\
    scheduler._update_global_tip(1);\n\
\n\
    document.body.appendChild(toptip);\n\
};\n\
scheduler._update_global_tip = function (init) {\n\
    var toptip = scheduler._global_tip;\n\
    if (toptip) {\n\
        var time = \"\";\n\
        if (scheduler._drag_id && !init) {\n\
            var ev = scheduler.getEvent(scheduler._drag_id);\n\
            if (ev)\n\
                time = \"<div>\" + (ev._timed ? scheduler.templates.event_header(ev.start_date, ev.end_date, ev) : scheduler.templates.day_date(ev.start_date, ev.end_date, ev)) + \"</div>\";\n\
        }\n\
\n\
        if (scheduler._drag_mode == \"create\" || scheduler._drag_mode == \"new-size\")\n\
            toptip.innerHTML = (scheduler.locale.drag_to_create || \"Drag to create\") + time;\n\
        else\n\
            toptip.innerHTML = (scheduler.locale.drag_to_move || \"Drag to move\") + time;\n\
    }\n\
};\n\
scheduler._hide_global_tip = function () {\n\
    var toptip = scheduler._global_tip;\n\
    if (toptip && toptip.parentNode) {\n\
        toptip.parentNode.removeChild(toptip);\n\
        scheduler._global_tip = 0;\n\
    }\n\
};\n\
\n\
scheduler._dp_init = function (dp) {\n\
    dp._methods = [\"_set_event_text_style\", \"\", \"changeEventId\", \"deleteEvent\"];\n\
\n\
    this.attachEvent(\"onEventAdded\", function (id) {\n\
        if (!this._loading && this._validId(id))\n\
            dp.setUpdated(id, true, \"inserted\");\n\
    });\n\
    this.attachEvent(\"onConfirmedBeforeEventDelete\", function (id) {\n\
        if (!this._validId(id)) return;\n\
        var z = dp.getState(id);\n\
\n\
        if (z == \"inserted\" || this._new_event) {\n\
            dp.setUpdated(id, false);\n\
            return true;\n\
        }\n\
        if (z == \"deleted\") return false;\n\
        if (z == \"true_deleted\") return true;\n\
\n\
        dp.setUpdated(id, true, \"deleted\");\n\
        return false;\n\
    });\n\
    this.attachEvent(\"onEventChanged\", function (id) {\n\
        if (!this._loading && this._validId(id))\n\
            dp.setUpdated(id, true, \"updated\");\n\
    });\n\
\n\
    dp._getRowData = function (id, pref) {\n\
        var ev = this.obj.getEvent(id);\n\
        var data = {};\n\
\n\
        for (var a in ev) {\n\
            if (a.indexOf(\"_\") == 0) continue;\n\
            if (ev[a] && ev[a].getUTCFullYear) //not very good, but will work\n\
                data[a] = this.obj.templates.xml_format(ev[a]);\n\
            else\n\
                data[a] = ev[a];\n\
        }\n\
\n\
        return data;\n\
    };\n\
    dp._clearUpdateFlag = function () {};\n\
\n\
    dp.attachEvent(\"insertCallback\", scheduler._update_callback);\n\
    dp.attachEvent(\"updateCallback\", scheduler._update_callback);\n\
    dp.attachEvent(\"deleteCallback\", function (upd, id) {\n\
        this.obj.setUserData(id, this.action_param, \"true_deleted\");\n\
        this.obj.deleteEvent(id);\n\
    });\n\
\n\
};\n\
\n\
scheduler._validId = function (id) {\n\
    return true;\n\
};\n\
\n\
scheduler.setUserData = function (id, name, value) {\n\
    if (id)\n\
        this.getEvent(id)[name] = value;\n\
    else\n\
        this._userdata[name] = value;\n\
};\n\
scheduler.getUserData = function (id, name) {\n\
    return id ? this.getEvent(id)[name] : this._userdata[name];\n\
};\n\
scheduler._set_event_text_style = function (id, style) {\n\
    this.for_rendered(id, function (r) {\n\
        r.style.cssText += \";\" + style;\n\
    });\n\
    var ev = this.getEvent(id);\n\
    ev[\"_text_style\"] = style;\n\
    this.event_updated(ev);\n\
};\n\
\n\
scheduler._update_callback = function (upd, id) {\n\
    var data = scheduler._xmlNodeToJSON(upd.firstChild);\n\
    data.text = data.text || data._tagvalue;\n\
    data.start_date = scheduler.templates.xml_date(data.start_date);\n\
    data.end_date = scheduler.templates.xml_date(data.end_date);\n\
\n\
    scheduler.addEvent(data);\n\
};\n\
scheduler._skin_settings = {\n\
    fix_tab_position: [1, 0],\n\
    use_select_menu_space: [1, 0],\n\
    wide_form: [1, 0],\n\
\n\
    hour_size_px: [44, 42],\n\
    displayed_event_color: [\"#ff4a4a\", \"ffc5ab\"],\n\
    displayed_event_text_color: [\"#ffef80\", \"7e2727\"]\n\
};\n\
\n\
scheduler._skin_xy = {\n\
    lightbox_additional_height: [90, 50],\n\
    nav_height: [39, 22],\n\
    bar_height: [24, 20]\n\
};\n\
\n\
scheduler._configure = function (col, data, skin) {\n\
    for (var key in data)\n\
        if (typeof col[key] == \"undefined\")\n\
            col[key] = data[key][skin];\n\
};\n\
scheduler._skin_init = function () {\n\
    if (!scheduler.skin) {\n\
        var links = document.getElementsByTagName(\"link\");\n\
        for (var i = 0; i < links.length; i++) {\n\
            var res = links[i].href.match(\"dhtmlxscheduler_([a-z]+).css\");\n\
            if (res) {\n\
                scheduler.skin = res[1];\n\
                break;\n\
            }\n\
        }\n\
    }\n\
\n\
\n\
\n\
    var set = 0;\n\
    if (scheduler.skin && scheduler.skin != \"terrace\") set = 1;\n\
\n\
    //apply skin related settings\n\
    this._configure(scheduler.config, scheduler._skin_settings, set);\n\
    this._configure(scheduler.xy, scheduler._skin_xy, set);\n\
\n\
    //classic skin need not any further customization\n\
    if (set) return;\n\
\n\
\n\
    var minic = scheduler.config.minicalendar;\n\
    if (minic) minic.padding = 14;\n\
\n\
    //  scheduler.templates.event_bar_date = function(start,end,ev) {\n\
    //    return \"• <b>\"+scheduler.templates.event_date(start)+\"</b> \";\n\
    //  };\n\
\n\
    //scheduler._lightbox_template=\"<div class='dhx_cal_ltitle'><span class='dhx_mark'>&nbsp;</span><span class='dhx_time'></span><span class='dhx_title'></span><div class='dhx_close_icon'></div></div><div class='dhx_cal_larea'></div>\";\n\
    scheduler.attachEvent(\"onTemplatesReady\", function () {\n\
\n\
        var date_to_str = scheduler.date.date_to_str(\"%d\");\n\
        var old_month_day = scheduler.templates.month_day;\n\
        scheduler.templates.month_day = function (date) {\n\
            if (this._mode == \"month\") {\n\
                var label = date_to_str(date);\n\
                if (date.getDate() == 1) {\n\
                    label = scheduler.locale.date.month_full[date.getMonth()] + \" \" + label;\n\
                }\n\
                if (+date == +scheduler.date.date_part(new Date)) {\n\
                    label = scheduler.locale.labels.dhx_cal_today_button + \" \" + label;\n\
                }\n\
                return label;\n\
            } else {\n\
                return old_month_day.call(this, date);\n\
            }\n\
        };\n\
\n\
        if (scheduler.config.fix_tab_position) {\n\
            var navline_divs = scheduler._els[\"dhx_cal_navline\"][0].getElementsByTagName('div');\n\
            var tabs = [];\n\
            var last = 211;\n\
            for (var i = 0; i < navline_divs.length; i++) {\n\
                var div = navline_divs[i];\n\
                var name = div.getAttribute(\"name\");\n\
                if (name) { // mode tab\n\
                    div.style.right = \"auto\";\n\
                    switch (name) {\n\
                    case \"day_tab\":\n\
                        div.className += \" dhx_cal_tab_first\";\n\
                        break;\n\
                    case \"week_tab\":\n\
                        break;\n\
                    case \"month_tab\":\n\
                        div.className += \" dhx_cal_tab_last\";\n\
                        break;\n\
                    default:\n\
                        div.className += \" dhx_cal_tab_standalone\";\n\
                        last = last + 14 + div.offsetWidth;\n\
                        break;\n\
                    }\n\
                }\n\
\n\
            }\n\
        }\n\
    });\n\
    scheduler._skin_init = function () {};\n\
};\n\
\n\
\n\
if (window.jQuery) {\n\
\n\
    (function ($) {\n\
\n\
        var methods = [];\n\
        $.fn.dhx_scheduler = function (config) {\n\
            if (typeof (config) === 'string') {\n\
                if (methods[config]) {\n\
                    return methods[config].apply(this, []);\n\
                } else {\n\
                    $.error('Method ' + config + ' does not exist on jQuery.dhx_scheduler');\n\
                }\n\
            } else {\n\
                var views = [];\n\
                this.each(function () {\n\
                    if (this && this.getAttribute) {\n\
                        if (!this.getAttribute(\"dhxscheduler\")) {\n\
                            for (var key in config)\n\
                                if (key != \"data\")\n\
                                    scheduler.config[key] = config[key];\n\
\n\
                            if (!this.getElementsByTagName(\"div\").length) {\n\
                                this.innerHTML = '<div class=\"dhx_cal_navline\"><div class=\"dhx_cal_prev_button\">&nbsp;</div><div class=\"dhx_cal_next_button\">&nbsp;</div><div class=\"dhx_cal_today_button\"></div><div class=\"dhx_cal_date\"></div><div class=\"dhx_cal_tab\" name=\"day_tab\" style=\"right:204px;\"></div><div class=\"dhx_cal_tab\" name=\"week_tab\" style=\"right:140px;\"></div><div class=\"dhx_cal_tab\" name=\"month_tab\" style=\"right:76px;\"></div></div><div class=\"dhx_cal_header\"></div><div class=\"dhx_cal_data\"></div>';\n\
                                this.className += \" dhx_cal_container\";\n\
                            }\n\
                            scheduler.init(this, scheduler.config.date, scheduler.config.mode);\n\
                            if (config.data)\n\
                                scheduler.parse(config.data);\n\
\n\
                            views.push(scheduler);\n\
                        }\n\
                    }\n\
                });\n\
\n\
                if (views.length === 1) return views[0];\n\
                return views;\n\
            }\n\
        };\n\
\n\
\n\
\n\
\n\
    })(jQuery);\n\
\n\
}\n\
\n\
module.exports = scheduler//@ sourceURL=scheduler/dhtmlxscheduler.js"
));
require.register("scheduler/dhtmlxscheduler_container_autoresize.js", Function("exports, require, module",
"/*\n\
This software is allowed to use under GPL or you need to obtain Commercial or Enterise License\n\
to use it in non-GPL project. Please contact sales@dhtmlx.com for details\n\
*/\n\
(function () {\n\
    scheduler.config.container_autoresize = !0;\n\
    scheduler.config.month_day_min_height = 90;\n\
    var p = scheduler._pre_render_events;\n\
    scheduler._pre_render_events = function (e, c) {\n\
        if (!scheduler.config.container_autoresize) return p.apply(this, arguments);\n\
        var g = this.xy.bar_height,\n\
            l = this._colsS.heights,\n\
            a = this._colsS.heights = [0, 0, 0, 0, 0, 0, 0],\n\
            b = this._els.dhx_cal_data[0],\n\
            e = this._table_view ? this._pre_render_events_table(e, c) : this._pre_render_events_line(e, c);\n\
        if (this._table_view) if (c) this._colsS.heights = l;\n\
        else {\n\
            var f = b.firstChild;\n\
            if (f.rows) {\n\
                for (var d = 0; d < f.rows.length; d++) {\n\
                    a[d]++;\n\
                    if (a[d] * g > this._colsS.height - 22) {\n\
                        var h = f.rows[d].cells,\n\
                            j = this._colsS.height - 22;\n\
                        this.config.max_month_events * 1 !== this.config.max_month_events || a[d] <= this.config.max_month_events ? j = a[d] * g : (this.config.max_month_events + 1) * g > this._colsS.height - 22 && (j = (this.config.max_month_events + 1) * g);\n\
                        for (var i = 0; i < h.length; i++) h[i].childNodes[1].style.height = j + \"px\";\n\
                        a[d] = (a[d - 1] || 0) + h[0].offsetHeight;\n\
                    }\n\
                    a[d] = (a[d - 1] || 0) + f.rows[d].cells[0].offsetHeight;\n\
                }\n\
                a.unshift(0);\n\
            } else if (!e.length && this._els.dhx_multi_day[0].style.visibility == \"visible\" && (a[0] = -1), e.length || a[0] == -1) {\n\
                var n = f.parentNode.childNodes,\n\
                    m = (a[0] + 1) * g + 1 + \"px\";\n\
                b.style.top = this._els.dhx_cal_navline[0].offsetHeight + this._els.dhx_cal_header[0].offsetHeight + parseInt(m, 10) + \"px\";\n\
                b.style.height = this._obj.offsetHeight - parseInt(b.style.top, 10) - (this.xy.margin_top || 0) + \"px\";\n\
                var k = this._els.dhx_multi_day[0];\n\
                k.style.height = m;\n\
                k.style.visibility = a[0] == -1 ? \"hidden\" : \"visible\";\n\
                k = this._els.dhx_multi_day[1];\n\
                k.style.height = m;\n\
                k.style.visibility = a[0] == -1 ? \"hidden\" : \"visible\";\n\
                k.className = a[0] ? \"dhx_multi_day_icon\" : \"dhx_multi_day_icon_small\";\n\
                this._dy_shift = (a[0] + 1) * g;\n\
                a[0] = 0;\n\
            }\n\
        }\n\
        return e;\n\
    };\n\
    var n = [\"dhx_cal_navline\", \"dhx_cal_header\", \"dhx_multi_day\", \"dhx_cal_data\"],\n\
        classes =  require('classes'),\n\
        $calender = undefined,\n\
        o = function (e) {\n\
            for (var c = 0, g = 0; g < n.length; g++) {\n\
                var l = n[g],\n\
                    a = scheduler._els[l] ? scheduler._els[l][0] : null,\n\
                    b = 0;\n\
                switch (l) {\n\
                case \"dhx_cal_navline\":\n\
                case \"dhx_cal_header\":\n\
                    b = parseInt(a.style.height, 10);\n\
                    break;\n\
                case \"dhx_multi_day\":\n\
                    b = a ? a.offsetHeight : 0;\n\
                    b == 1 && (b = 0);\n\
                    break;\n\
                case \"dhx_cal_data\":\n\
                    var b = Math.max(a.offsetHeight - 1, a.scrollHeight),\n\
                        f = scheduler.getState().mode;\n\
                    if (f == \"month\") {\n\
                        if (scheduler.config.month_day_min_height && !e) var d = a.getElementsByTagName(\"tr\").length,\n\
                            b = d * scheduler.config.month_day_min_height;\n\
                        if (e) a.style.height = b + \"px\";\n\
                    }\n\
                    if (scheduler.matrix && scheduler.matrix[f]) if (e) b += 2, a.style.height = b + \"px\";\n\
                    else for (var b = 2, h = scheduler.matrix[f], j = h.y_unit, i = 0; i < j.length; i++) b += !j[i].children ? h.dy : h.folder_dy || h.dy;\n\
                    if (f == \"day\" || f == \"week\") b += 2;\n\
                }\n\
                c += b;\n\
            }\n\
            scheduler._obj.style.height = c + \"px\";\n\
            e || scheduler.updateView();\n\
        },\n\
        c = function () {\n\
            $calender = $calender || document.querySelector(\".calendar-body\");\n\
            if($calender && classes($calender).has('hidden')){\n\
                return;\n\
            }\n\
            var c = scheduler.getState().mode;\n\
            o();\n\
            (scheduler.matrix && scheduler.matrix[c] || c == \"month\") && window.setTimeout(function () {\n\
                o(!0)\n\
            }, 1);\n\
        };\n\
    scheduler.attachEvent(\"onViewChange\", c);\n\
    scheduler.attachEvent(\"onXLE\", c);\n\
    scheduler.attachEvent(\"onEventChanged\", c);\n\
    scheduler.attachEvent(\"onEventCreated\", c);\n\
    scheduler.attachEvent(\"onEventAdded\", c);\n\
    scheduler.attachEvent(\"onEventDeleted\", c);\n\
    scheduler.attachEvent(\"onAfterSchedulerResize\", c);\n\
    scheduler.attachEvent(\"onClearAll\", c);\n\
})();//@ sourceURL=scheduler/dhtmlxscheduler_container_autoresize.js"
));
require.register("scheduler/index.js", Function("exports, require, module",
"var template = require('./templates/index.js'),\n\
    moment = require('moment'),\n\
    domify = require('domify'),\n\
    _      = require('underscore'),\n\
    dhtmlxScheduler = require('./dhtmlxscheduler.js'),\n\
    autoresize = require('./dhtmlxscheduler_container_autoresize.js'),\n\
    event = require('event'),\n\
    TestEvent = require('./test-event.js'),\n\
    CalendarItem = require('./calendar-item.js'),\n\
    EventList = require('./event-list.js'),\n\
    TestViewModel = require('test-view-model'),\n\
    TestViewModelDelegate = require('./delegates/test-view-model.js'),\n\
    instance,\n\
    AgendaViewModel = require('agenda'),\n\
    classes = require('classes'),\n\
    showEventBalloon = require('./balloon.js');\n\
\n\
var $ = window.jQuery,\n\
    translate = window.translate,\n\
    ko = window.ko;\n\
\n\
function Scheduler(rootVm) {\n\
    var self = this,\n\
        TestViewModel = window.TestViewModel,\n\
        delegate = new TestViewModelDelegate(self);\n\
\n\
    self.rootVm = rootVm;\n\
    self.schedulerTest = new TestViewModel(rootVm, delegate);\n\
    self.rendered = false;\n\
    self.$el = domify(template);\n\
\n\
    self.calendarItems = ko.observableArray();\n\
    self.unfilteredCalendarItems = ko.observableArray();\n\
    self.updatedItem = new Array();\n\
    self.devices = ko.computed(function() {\n\
        return self.calculateDevicesList(self.unfilteredCalendarItems());\n\
    })\n\
\n\
    self.searchText = ko.observable(\"\");\n\
    self.checkedDevices = ko.observableArray([]);\n\
\n\
    self.eventList = new EventList();\n\
//    self.rootVm.testResultsHistoryHandlers.push(self);\n\
    self.agenda = undefined;\n\
\n\
    self.formats = {\n\
        ldml: {\n\
            date: \"YYYY-MM-DD\",\n\
            time: \"hh:mm\"\n\
        },\n\
        strftime: {\n\
            date: \"%Y-%m-%d\",\n\
            time: \"%h:%i\"\n\
        }\n\
    };\n\
}\n\
\n\
Scheduler.create = function(rootVm) {\n\
    if (!instance) {\n\
        instance = new Scheduler(rootVm);\n\
    }\n\
\n\
    return instance;\n\
}\n\
\n\
Scheduler.prototype.render = function() {\n\
    try {\n\
        var self = this;\n\
\n\
        if (self.rendered) {\n\
            // If user click the 'calendar' tab, we need to check whether we have new history results need to add into Calendar cache\n\
            if (self.updatedItem.length) {\n\
                self.unfilteredCalendarItems(self.unfilteredCalendarItems().concat(self.updatedItem));\n\
                self.calendarItems(self.calendarItems().concat(self.updatedItem));\n\
                self.updatedItem = new Array();\n\
            }\n\
\n\
            self.reloadCalendar();\n\
\n\
            return;\n\
        }\n\
\n\
        self.updatedItem = new Array();\n\
        self.schedulingCalendarVisible = ko.observable(true);\n\
        self.schedulingTestVisible = ko.computed(function () { return !self.schedulingCalendarVisible(); })\n\
\n\
        document.querySelector('#main > .calendar').appendChild(self.$el);\n\
\n\
\n\
        //self.eventList.render(self.calendarItems);\n\
\n\
        self.initAgenda();\n\
\n\
        self.$el.querySelector('.calendar-agenda-container').appendChild(self.agenda.$el);\n\
\n\
        self.initCalendar();\n\
\n\
        self.initBindings();\n\
\n\
        self.init_render_adjust();\n\
\n\
        self.rendered = true;\n\
    } catch(e) { window.logger.error(e + ' stack: ' + e.stack); }\n\
}\n\
\n\
Scheduler.prototype.init_render_adjust = function() {\n\
    var self = this,\n\
        $el = self.$el,\n\
        $agenda_button = $el.querySelector(\".tab_agenda\"),\n\
        $calender_view_buttons = $el.querySelectorAll(\".dhx_cal_tab\"),\n\
        $calender_date = $el.querySelector(\".dhx_cal_date\");\n\
\n\
    classes($agenda_button).add('active');\n\
\n\
    [].forEach.call($calender_view_buttons, function($buttons){\n\
        if(classes($buttons).has('active')){\n\
            classes($buttons).remove('active');\n\
        }\n\
    });\n\
\n\
    $calender_date.textContent = self.agenda.get_date();\n\
}\n\
\n\
Scheduler.prototype.initAgenda = function() {\n\
    var self = this,\n\
        click_handler = function() {\n\
            var $el = this.$el,\n\
                model = this.model,\n\
                devices = model.remote_devices() || [];\n\
\n\
            if(devices && devices.length === 0){\n\
                devices.unshift({\n\
                    id: -1,\n\
                    name: translate(\"Local chassis\"),\n\
                    host: null\n\
                });\n\
            }\n\
\n\
            switch (model.type()) {\n\
                // XXX DRY this two calls\n\
                case \"scheduled_test\":\n\
                    showEventBalloon(\n\
                        $el,\n\
                        model.name(),\n\
                        moment(model.datetime()).format(\"LT\"),\n\
                        'scheduled',\n\
                        undefined,\n\
                        devices,\n\
\n\
                        translate(\"Delete\"),\n\
                        function () {\n\
                            model.cancelTestEvent(function() {\n\
                                self.agenda.reset(false);\n\
                            })\n\
                        },\n\
\n\
                        translate(\"Edit\"),\n\
                        function () {\n\
                            var test = new TestTemplateViewModel(self.rootVm);\n\
                            test.inflate(model.test_config());\n\
                            self.schedulerTest.loadTest(test, new TestEvent(model.event_info()));\n\
                        }\n\
                    );\n\
                    break;\n\
                case \"executed_test\":\n\
                    showEventBalloon(\n\
                        $el,\n\
                        model.name(),\n\
                        moment(model.datetime()).format(\"LT\"),\n\
                        model.status(),\n\
                        model.error_reason(),\n\
                        devices,\n\
\n\
                        undefined,\n\
                        undefined,\n\
\n\
                        translate(\"View results\"),\n\
                        function () {\n\
                            self.openTestResultsPage(model.test_result_id());\n\
                        }\n\
                    );\n\
                    break;\n\
\n\
                case \"remotely_scheduled_test\":\n\
                    showEventBalloon(\n\
                        $el,\n\
                        model.name(),\n\
                        moment(model.datetime()).format(\"LT\"),\n\
                        window.translate('scheduled remotely (read-only)'),\n\
                        model.error_reason(),\n\
                        devices,\n\
\n\
                        undefined,\n\
                        undefined,\n\
\n\
                        undefined,\n\
                        undefined\n\
                    );\n\
                    break;\n\
            }\n\
        }\n\
\n\
    self.agenda = AgendaViewModel.factory(click_handler);\n\
    self.initAgendaBindings();\n\
}\n\
\n\
Scheduler.prototype.initCalendar = function() {\n\
    var self = this,\n\
        formats = self.formats.strftime;\n\
\n\
    dhtmlxScheduler.config.readonly = true;\n\
    dhtmlxScheduler.config.api_date = formats.date + ' ' + formats.time;\n\
    dhtmlxScheduler.config.xml_date = formats.date + ' ' + formats.time;\n\
    dhtmlxScheduler.config.drag_move = false;\n\
    dhtmlxScheduler.config.drag_resize= false;\n\
    dhtmlxScheduler.config.dblclick_create = false;\n\
    dhtmlxScheduler.config.details_on_dblclick = false;\n\
    dhtmlxScheduler.config.max_month_events = 3;\n\
    dhtmlxScheduler.config.fix_tab_position = false;\n\
    dhtmlxScheduler.config.separate_short_events = true;\n\
    dhtmlxScheduler.xy.bar_height = 47;\n\
    dhtmlxScheduler.xy.scale_width = 60;\n\
    dhtmlxScheduler.xy.min_event_height = 34;\n\
    dhtmlxScheduler.xy.scroll_width = 0;\n\
\n\
    dhtmlxScheduler.renderEvent = function(container, event) {\n\
        var event_bar_date = dhtmlxScheduler.templates.event_bar_date(event.start_date, event.end_date, event),\n\
            event_bar_text = dhtmlxScheduler.templates.event_bar_text(event.start_date, event.end_date, event);\n\
\n\
        container.innerHTML = event_bar_date + event_bar_text;\n\
        return true;\n\
    };\n\
\n\
    dhtmlxScheduler.templates.event_class = function(start, end, calendarItem) {\n\
        return calendarItem.status;\n\
    };\n\
\n\
    dhtmlxScheduler.templates.event_bar_icon = function(start, end, calendarItem) {\n\
        var status = calendarItem.status;\n\
\n\
        return status === undefined || status === 'pass' ? '' : '<span class=\"status-icon\"></span>';\n\
    };\n\
\n\
    dhtmlxScheduler.templates.event_bar_date = function(start, end, calendarItem) {\n\
        var html = dhtmlxScheduler.templates.event_bar_icon(start, end, calendarItem);\n\
\n\
        html += ' <b>' + moment(start).format('LT') + '</b>';\n\
\n\
        return html;\n\
    };\n\
\n\
    dhtmlxScheduler.templates.event_bar_text = function(start, end, calendarItem) {\n\
        // XXX refactor to template!\n\
        var result = \"\";\n\
        //comment KO way because it conflict with calendar autosize\n\
//        result += '<span class=\"calendar-item-devices event-devices\" data-item-id=' + calendarItem.id + ' data-bind=\"foreach: devices\">';\n\
//        result += '  <span class=\"icon\" data-bind=\"style: {backgroundColor: color, borderColor: color}\"></span>';\n\
//        result += '</span>';\n\
//        result += '<div class=\"testName\"><span title=\"'+ calendarItem.text+'\">' + calendarItem.text + '</span></div>';\n\
\n\
        result += '<span class=\"calendar-item-devices event-devices\">';\n\
        calendarItem.devices.forEach(function(device){\n\
            var color = device.color;\n\
            result += '  <span class=\"icon\" style=\"background-color: '+ color+'; border-color:'+ color+';\"></span>';\n\
        });\n\
        result += '</span>';\n\
        result += '<div class=\"testName\"><span title=\"'+ calendarItem.text+'\">' + calendarItem.text + '</span></div>';\n\
        return result;\n\
    }\n\
\n\
    dhtmlxScheduler.init('scheduler_here', new Date(), \"day\");\n\
\n\
    self.calendarItems.subscribe(function(newVal) {\n\
        dhtmlxScheduler.clearAll();\n\
        dhtmlxScheduler.parse(newVal, \"json\");\n\
//        self.bindCalendarDevicesKOHAndlers();\n\
    })\n\
\n\
    dhtmlxScheduler.attachEvent(\"onViewChange\", Scheduler.prototype.reloadCalendarItems.bind(this));\n\
\n\
    //this.reloadCalendarItems();\n\
}\n\
\n\
//Scheduler.prototype.bindCalendarDevicesKOHAndlers = function() {\n\
//    var events = document.querySelectorAll('#scheduler_here .calendar-item-devices'),\n\
//        self = this;\n\
//    _.each(events, function(event) {\n\
//        var itemId = event.dataset.itemId,\n\
//            item = _.find(self.calendarItems(), function(item) { return item.id == itemId });\n\
//        ko.applyBindings(item, event);\n\
//    })\n\
//}\n\
\n\
Scheduler.prototype.calculateDevicesList = function(items) {\n\
    // method semantics: items.map(&:devices).flatten.uniq\n\
    // XXX refactor to underscore\n\
\n\
    var resultMap = {},\n\
        result = [];\n\
\n\
    for (var i = 0, len = items.length; i < len; ++i) {\n\
        var devices = items[i].devices;\n\
        for (var j = 0, len2 = devices.length; j < len2; ++j) {\n\
            resultMap[devices[j].id] = devices[j];\n\
        }\n\
    }\n\
\n\
    for(var o in resultMap) {\n\
        result.push(resultMap[o]);\n\
    }\n\
\n\
    return result;\n\
}\n\
\n\
Scheduler.prototype.reloadCalendarItems = function() {\n\
    var self = this;\n\
\n\
    var state = dhtmlxScheduler.getState();\n\
    util.lightbox.working(new LightboxWorkingViewModel(window.translate(\"Start\"), window.translate(\"Loading Calendar Items...\")));\n\
    CalendarItem.loadByRange(state.min_date, state.max_date, function(calendarItems) {\n\
        var items = self.prepareItems(calendarItems);\n\
        self.unfilteredCalendarItems(items);\n\
        self.calendarItems(items);\n\
        util.lightbox.close();\n\
    })\n\
}\n\
\n\
Scheduler.prototype.updateCache = function(data) {\n\
    var self = this;\n\
    var tmpCalendarItems = self.calendarItems();\n\
    // Make sure no expired tests existed in Calendar cache\n\
    for (var i = 0; i < tmpCalendarItems.length; i++) {\n\
        var currDate = new Date();\n\
        if (tmpCalendarItems[i].start_date < currDate) {\n\
            if (tmpCalendarItems[i].test_result_id == undefined) {\n\
                self.calendarItems.remove(tmpCalendarItems[i]);\n\
            }\n\
        }\n\
    }\n\
\n\
    for (var i = 0; i < data.length; i++) {\n\
        var updateData = data[i];\n\
        for (var j = 0; j < self.calendarItems().length; j++) {\n\
            if (data[i].result_id <= self.calendarItems()[j].test_result_id) {\n\
                updateData = undefined;\n\
                break;\n\
            }\n\
        }\n\
        if (updateData) {\n\
            self.updateCalendarItemByResultId(updateData.result_id);\n\
        }\n\
    }\n\
}\n\
\n\
Scheduler.prototype.updateCalendarItemByResultId = function(result_id) {\n\
    var self = this;\n\
\n\
    var state = dhtmlxScheduler.getState();\n\
    util.lightbox.working(new LightboxWorkingViewModel(window.translate(\"Start\"), window.translate(\"Loading Calendar Items...\")));\n\
    CalendarItem.loadByResultId(result_id, function(calendarItems) {\n\
        var items = self.prepareItems(calendarItems);\n\
        self.updatedItem = self.updatedItem.concat(items);\n\
        // If current tab is 'calendar', we need to refresh the calendar cache automatically\n\
        if (self.rootVm.selectedTab() == 'calendar') {\n\
            self.unfilteredCalendarItems(self.unfilteredCalendarItems().concat(self.updatedItem));\n\
            self.calendarItems(self.calendarItems().concat(self.updatedItem));\n\
            self.updatedItem = new Array();\n\
        }\n\
        util.lightbox.close();\n\
    })\n\
}\n\
\n\
Scheduler.prototype.prepareItems = function(items) {\n\
    var result = [];\n\
    for (var i = 0; i < items.length; i++) {\n\
        result.push(items[i].viewModel(this.checkedDevices, this));\n\
    }\n\
\n\
    return result;\n\
}\n\
\n\
Scheduler.prototype.reloadCalendar = function() {\n\
    var self = this,\n\
        $el = self.$el,\n\
        $agenda = $el.querySelector(\".calendar-agenda-container\"),\n\
        $calender = $el.querySelector(\".calendar-body\");\n\
\n\
    if(classes($calender).has('hidden')){\n\
        self.agenda.reset(false);\n\
    }\n\
    else{\n\
        self.reloadCalendarItems();\n\
    }\n\
}\n\
\n\
Scheduler.prototype.initAgendaBindings = function() {\n\
    var self = this,\n\
        $el = self.$el,\n\
        $agenda = $el.querySelector(\".calendar-agenda-container\"),\n\
        $scheduler_here = $el.querySelector(\"#scheduler_here\"),\n\
        $calender = $el.querySelector(\".calendar-body\"),\n\
        $agenda_button = $el.querySelector(\".tab_agenda\"),\n\
        $today_button = $el.querySelector(\".dhx_cal_today_button\"),\n\
        $prev_button = $el.querySelector(\".dhx_cal_prev_button\"),\n\
        $next_button = $el.querySelector(\".dhx_cal_next_button\"),\n\
        $calender_view_buttons = $el.querySelectorAll(\".dhx_cal_tab\"),\n\
        $calender_date = $el.querySelector(\".dhx_cal_date\"),\n\
        $calender_search = $el.querySelector(\".scheduler-search input.shaded\");\n\
\n\
    var reset_search = function(){\n\
            $calender_search.value = '';\n\
            self.agenda.set_search_key('');\n\
        },\n\
        //agenda date -> calendar date\n\
        sync_date_to_calendar = function(){\n\
            if(window.scheduler && window.scheduler._date){\n\
                window.scheduler._date = new Date(self.agenda.get_date()); //new Date(self.focused_datetime.format('YYYY-MM-DD'));\n\
            }\n\
        },\n\
        //calendar date -> agenda date\n\
        sync_date_from_calendar = function(){\n\
            if(window.scheduler && window.scheduler._date){\n\
                self.agenda.model.set_focused_date(moment(window.scheduler._date).startOf('day'));\n\
            }\n\
        },\n\
        calender_views_handler = function(e){\n\
            reset_search();\n\
            if(classes($calender).has('hidden')){\n\
                classes($calender).remove('hidden');\n\
                classes($agenda).add('hidden');\n\
                classes($agenda_button).remove('active');\n\
            }\n\
        },\n\
        agenda_view_handler = function(e){\n\
            reset_search();\n\
            if(classes($agenda).has('hidden')){\n\
                classes($agenda).remove('hidden');\n\
                classes($agenda_button).add('active');\n\
                classes($calender).add('hidden');\n\
                $scheduler_here.removeAttribute(\"style\");\n\
\n\
            }\n\
            [].forEach.call($calender_view_buttons, function($buttons){\n\
                if(classes($buttons).has('active')){\n\
                    classes($buttons).remove('active');\n\
                }\n\
            });\n\
            sync_date_from_calendar();\n\
            self.agenda.reset(false);\n\
            $calender_date.textContent = self.agenda.get_date();\n\
            self.unfilteredCalendarItems([]);\n\
        },\n\
        today_handler = function(e){\n\
            if(classes($calender).has('hidden')){\n\
                if (e && e.stopPropagation) {\n\
                    e.stopImmediatePropagation();\n\
                }\n\
                self.agenda.reset(true);\n\
                $calender_date.textContent = self.agenda.get_date();\n\
                sync_date_to_calendar();\n\
            }\n\
        },\n\
        prev_handler = function(e){\n\
            if(classes($calender).has('hidden')){\n\
                if (e && e.stopPropagation) {\n\
                    e.stopImmediatePropagation();\n\
                }\n\
                self.agenda.model.shift_focused_date(-1);\n\
                self.agenda.reset(false);\n\
                $calender_date.textContent = self.agenda.get_date();\n\
                sync_date_to_calendar();\n\
            }\n\
        },\n\
        next_handler = function(e){\n\
            if(classes($calender).has('hidden')){\n\
                if (e && e.stopPropagation) {\n\
                    e.stopImmediatePropagation();\n\
                }\n\
                self.agenda.model.shift_focused_date(1);\n\
                self.agenda.reset(false);\n\
                $calender_date.textContent = self.agenda.get_date();\n\
                sync_date_to_calendar();\n\
            }\n\
        };\n\
\n\
    var done_typing_interval = 1000,\n\
        done_typing = function(){\n\
            self.agenda.reset(false);\n\
        },\n\
        typing_timer,\n\
        search_keyup_handler = function(e){\n\
            if(classes($calender).has('hidden')){\n\
                if (e && e.stopPropagation) {\n\
                    e.stopImmediatePropagation();\n\
                }\n\
                clearTimeout(typing_timer);\n\
                typing_timer = setTimeout(done_typing, done_typing_interval);\n\
                self.agenda.set_search_key($calender_search.value);\n\
            }\n\
        };\n\
\n\
    event.bind($today_button, 'click', today_handler);\n\
    event.bind($prev_button, 'click', prev_handler);\n\
    event.bind($next_button, 'click', next_handler);\n\
    event.bind($agenda_button, 'click', agenda_view_handler);\n\
    [].forEach.call($calender_view_buttons, function($buttons){\n\
        event.bind($buttons, 'click', calender_views_handler);\n\
    });\n\
\n\
    event.bind($calender_search, 'input', search_keyup_handler);\n\
\n\
    classes($calender).add('hidden');\n\
}\n\
\n\
Scheduler.prototype.initBindings = function() {\n\
    var self = this,\n\
        scheduleButton = document.querySelector(\".scheduler-test-button\");\n\
\n\
\n\
    event.bind(scheduleButton, \"click\", function() {\n\
        self.schedulerTest.openTestCreationLightbox();\n\
    })\n\
\n\
    self.devices.subscribe(function(devices) {\n\
        var ids = _.map(devices, function(device) { return device.id });\n\
        self.checkedDevices(ids);\n\
    })\n\
\n\
\n\
    dhtmlxScheduler.attachEvent(\"onClick\", function(id, e) {\n\
        var calendarEvent = dhtmlxScheduler.getEvent(id);\n\
        CalendarItem.itemOnClickHandler(e, calendarEvent, self);\n\
    })\n\
\n\
    self.searchText.subscribe(function(newVal) {\n\
        self.filterItems();\n\
    })\n\
\n\
    ko.applyBindings(self, self.$el);\n\
}\n\
\n\
\n\
Scheduler.prototype.openTestResultsPage = function(test_result_id) {\n\
    var self = this;\n\
    var matchedResults = ko.utils.arrayFirst(self.rootVm.testResultsHistory(), function (item) {\n\
        return item.result_id() === test_result_id;\n\
    });\n\
\n\
    if (matchedResults === null) {\n\
        // Keep the context to use it later (In callback function)\n\
        var context = self;\n\
        self.rootVm.getResultHistory({\"result_id\" : test_result_id}, function(){\n\
            matchedResults = ko.utils.arrayFirst(context.rootVm.testResultsHistory(), function (item) {\n\
                return item.result_id() === test_result_id;\n\
            });\n\
\n\
            if (matchedResults !== null) {\n\
                context.rootVm.loadRecentTest(matchedResults)\n\
            }\n\
        });\n\
    } else {\n\
        self.rootVm.loadRecentTest(matchedResults);\n\
    }\n\
}\n\
\n\
Scheduler.prototype.filterItems = function() {\n\
    var items = this.unfilteredCalendarItems(),\n\
        filteredItems = this.filterRemoteBoxes(this.filterSearch(items));\n\
\n\
    this.calendarItems(filteredItems);\n\
}\n\
\n\
Scheduler.prototype.filterSearch = function(items) {\n\
    var result = [],\n\
        searchText = this.searchText();\n\
\n\
    for (var i = 0,len = items.length; i < len; ++i) {\n\
        if (items[i].name.toLowerCase().indexOf(searchText.toLowerCase()) != -1) {\n\
            result.push(items[i]);\n\
        }\n\
    }\n\
\n\
    return result;\n\
}\n\
\n\
Scheduler.prototype.filterRemoteBoxes = function(items) {\n\
    var result = [],\n\
        checkedBoxes = this.checkedDevices();\n\
\n\
    for (var i = 0,len = items.length; i < len; ++i) {\n\
        if (items[i].hasAnyDevice(checkedBoxes)) {\n\
            result.push(items[i]);\n\
        }\n\
    }\n\
\n\
    return result;\n\
}\n\
\n\
Scheduler.prototype.toggleBoxChecker = function(device) {\n\
    if (this.checkedDevices().indexOf(device.id) == -1){\n\
        this.checkedDevices.push(device.id);\n\
    } else {\n\
        this.checkedDevices.remove(device.id);\n\
    }\n\
    this.filterItems();\n\
}\n\
\n\
\n\
module.exports = Scheduler;\n\
//@ sourceURL=scheduler/index.js"
));
require.register("scheduler/test-event.js", Function("exports, require, module",
"/*global ko:true, ValidationResultsViewModel:true, LightboxWorkingViewModel:true */\n\
\n\
var model = require('model'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    moment = require('moment-timezone'),\n\
    tz = require('./tz.js'),\n\
    repeater_types_map = {\n\
        \"DAILY\": \"day(s)\",\n\
        \"WEEKLY\": \"week(s)\",\n\
        \"MONTHLY\": \"month(s)\"\n\
    },\n\
    AsyncPoller = require('async-poller');\n\
\n\
var handled_failure_reasons = [\n\
    'event_is_in_past',\n\
    'conflicts_found'\n\
];\n\
\n\
/**\n\
 * Returns a user-friendly error message for a given error reason - add more!\n\
 *\n\
 * @param reason One of TestEvent.failure_handlers\n\
 * @param details\n\
 * @returns {string}\n\
 */\n\
function get_friendly_error(reason, details) {\n\
    var map = {\n\
        'event_is_in_past': function (details) {\n\
            return window.translate('calendar.schedule_in_past', {\n\
                datetime: moment(details.server_time).format('LLL')\n\
            });\n\
        },\n\
\n\
        'conflicts_found': function (details) {\n\
            return window.translate('calendar.schedule_conflicts', {\n\
                name: details[0].name,\n\
                datetime: moment.tz(details[0].datetime, tz.name()).format('LLL')\n\
            });\n\
        }\n\
    };\n\
\n\
    if (map[reason] === undefined) {\n\
        return reason;\n\
    }\n\
\n\
    return map[reason](details);\n\
}\n\
\n\
/**\n\
 * Factory for creating callbacks to use during reservation, validation,\n\
 * and persistence phases. Updates lightbox with user-friendly messages.\n\
 *\n\
 * @param lightbox_title\n\
 * @param success\n\
 * @param error\n\
 * @returns {function} Callback\n\
 */\n\
function handler_factory(lightbox_title, success, error) {\n\
    success = success || function () {};\n\
    error = error || function () {};\n\
\n\
    return function handle_response(err, res) {\n\
        var failure_message,\n\
            lightbox_vm;\n\
\n\
        if (res.body.result === 'FAILURE' && handled_failure_reasons.indexOf(res.body.reason) !== -1) {\n\
            // Failed, but we can handle it\n\
\n\
            failure_message = get_friendly_error(res.body.reason, res.body.details);\n\
\n\
            lightbox_vm = new ValidationResultsViewModel();\n\
            lightbox_vm.addCheckResults(lightbox_title, false, failure_message);\n\
\n\
            window.util.lightbox.open({\n\
                url : 'html/lightbox_tmpl',\n\
                selector : '#lightbox-run-test-validation-template',\n\
                cancelSelector: '.cancel-button',\n\
                isModal : false,\n\
                onOpenComplete: function show_invalid() {\n\
                    var $lb = document.querySelector('#lightbox-run-test-validation');\n\
                    ko.applyBindings(lightbox_vm, $lb);\n\
                    error(res);\n\
                }\n\
            });\n\
            return;\n\
        }\n\
\n\
        if (res.body.result === 'FAILURE' || err) {\n\
            // Unknown/exceptional error\n\
            var e = res.body || err;\n\
            window.logger.error(e);\n\
            window.util.lightbox.error(lightbox_title);\n\
            return error(e);\n\
        }\n\
\n\
        if (res.body.is_ready === false && res.body.is_valid && res.body.messages.length) {\n\
            // Still validating, update the lightbox\n\
            var message = res.body.messages[0];\n\
\n\
            lightbox_vm = new LightboxWorkingViewModel(lightbox_title, message.header, null, message.content);\n\
            window.util.lightbox.working(lightbox_vm);\n\
            return success(res);\n\
        }\n\
\n\
        if (res.body.is_ready === false && res.body.is_valid === false) {\n\
            // Failed validation, surface error to user\n\
\n\
            var messages = res.body.messages || [];\n\
\n\
            lightbox_vm = new ValidationResultsViewModel();\n\
\n\
            // Add failure messages to validation lightbox\n\
            messages.forEach(function (message) {\n\
                // Make message human-friendly if possible\n\
                var friendly_message = get_friendly_error(message.content);\n\
\n\
                lightbox_vm.addCheckResults(message.header, false, friendly_message);\n\
            });\n\
\n\
            window.util.lightbox.open({\n\
                url : 'html/lightbox_tmpl',\n\
                selector : '#lightbox-run-test-validation-template',\n\
                cancelSelector: '.cancel-button',\n\
                isModal : false,\n\
                onOpenComplete: function show_invalid() {\n\
                    var $lb = document.querySelector('#lightbox-run-test-validation');\n\
                    ko.applyBindings(lightbox_vm, $lb);\n\
                    error(res);\n\
                }\n\
            });\n\
            return;\n\
        }\n\
\n\
        return success(res);\n\
    };\n\
}\n\
\n\
var TestEvent = model('TestEvent')\n\
    .attr('id')\n\
    .attr('type')\n\
    .attr('name')\n\
    .attr('duration')\n\
    .attr('timezone')\n\
    .attr('details');\n\
\n\
TestEvent.createOrUpdateTestEvent = function (testConfig, eventConfig, callback) {\n\
    var reserve_and_begin_validation,\n\
        poll_for_validation,\n\
        persist = eventConfig.id ? TestEvent.update : TestEvent.create;\n\
\n\
    // Chain the phases\n\
    persist = persist.bind(this, testConfig, eventConfig, callback);\n\
    poll_for_validation = TestEvent.poll_for_validation.bind(this, persist);\n\
    reserve_and_begin_validation = TestEvent.reserve_and_begin_validation.bind(this, testConfig, eventConfig, poll_for_validation);\n\
\n\
    // Begin the process\n\
    reserve_and_begin_validation();\n\
};\n\
\n\
TestEvent.cancelTestEvent = function (id, callback) {\n\
    request\n\
        .post('/spirent/schedule/test-events/' + id + '/cancel')\n\
        .use(no_cache)\n\
        .send('')\n\
        .set('Accept', 'application/json')\n\
        .end(function (err, res) {\n\
            if (err || res.body.result === 'FAILURE') {\n\
                window.logger.error(err || res.body);\n\
                window.util.lightbox.error(window.translate(\"Canceling scheduled test\"));\n\
                return;\n\
            }\n\
\n\
            return callback(res);\n\
        });\n\
};\n\
\n\
/**\n\
 * Performs server-side validation\n\
 */\n\
TestEvent.reserve_and_begin_validation = function (test_config, event_config, success) {\n\
    var status = window.translate('Validating schedule'),\n\
        lb = new LightboxWorkingViewModel('working', status),\n\
        url = '/spirent/schedule/pending-events',\n\
        data = {\n\
            'test_config': test_config,\n\
            'event_config': event_config\n\
        };\n\
\n\
    window.util.lightbox.working(lb);\n\
\n\
    if (event_config.id) {\n\
        data.event_id = event_config.id;\n\
    }\n\
\n\
    request.post(url)\n\
        .use(no_cache)\n\
        .send(JSON.stringify(data))\n\
        .set('Accept', 'application/json')\n\
        .end(handler_factory(status, success));\n\
};\n\
\n\
TestEvent.poll_for_validation = function (success) {\n\
    var status = window.translate('Validating Test Configuration...'),\n\
        lb = new LightboxWorkingViewModel('working', status),\n\
        again, // Set in poll()\n\
        handle_success = function (response) {\n\
            var is_running = !response.body.is_ready && response.body.is_valid;\n\
\n\
            if (is_running) {\n\
                // Continue polling\n\
                return again();\n\
            }\n\
\n\
            // Validation completed\n\
            poller.stop();\n\
\n\
            if (response.body.is_ready) {\n\
                success();\n\
            }\n\
        },\n\
        handle_failure = function () {\n\
            poller.stop();\n\
        },\n\
        handle_response = handler_factory(status, handle_success, handle_failure),\n\
        poll = function (next) {\n\
            again = next;\n\
\n\
            request.get('/spirent/get_istestready')\n\
                .use(no_cache)\n\
                .set('Accept', 'application/json')\n\
                .end(handle_response);\n\
        },\n\
        poller = new AsyncPoller(poll, 500);\n\
\n\
    window.util.lightbox.working(lb);\n\
\n\
    // Start polling\n\
    poller.poll();\n\
};\n\
\n\
TestEvent.create = function (test_config, event_config, success) {\n\
    var status = window.translate('Saving scheduled test'),\n\
        lb = new LightboxWorkingViewModel('working', status),\n\
        url = '/spirent/schedule/test-events',\n\
        data = {\n\
            'test_config': test_config,\n\
            'event_config': event_config\n\
        };\n\
\n\
    window.util.lightbox.working(lb);\n\
\n\
    request.post(url)\n\
        .use(no_cache)\n\
        .send(JSON.stringify(data))\n\
        .set('Accept', 'application/json')\n\
        .end(handler_factory(status, success));\n\
};\n\
\n\
TestEvent.update = function (test_config, event_config, success) {\n\
    var status = window.translate('Updating scheduled test'),\n\
        lb = new LightboxWorkingViewModel('working', status),\n\
        url = '/spirent/schedule/test-events/' + event_config.id,\n\
        data = {\n\
            'test_config': test_config,\n\
            'event_config': event_config\n\
        };\n\
\n\
    window.util.lightbox.working(lb);\n\
\n\
    request.put(url)\n\
        .use(no_cache)\n\
        .send(JSON.stringify(data))\n\
        .set('Accept', 'application/json')\n\
        .end(handler_factory(status, success));\n\
};\n\
\n\
TestEvent.emptyEvent = function(){\n\
    return {\n\
        type: 'SINGLE',\n\
        details: { fire_datetime: moment().utc().add(5, 'minutes').format(\"YYYY-MM-DD HH:mm\") },\n\
        timezone: tz.name()\n\
    }\n\
};\n\
\n\
var WEEKDAYS = ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'];\n\
\n\
TestEvent.fromViewModel = function(vm) {\n\
    var result = {\n\
            \"name\": vm.testEventName(),\n\
            \"duration\": vm.duration(),\n\
            \"timezone\": tz.name()\n\
        };\n\
\n\
    if (vm.eventId) {\n\
        result.id = vm.eventId;\n\
    }\n\
\n\
    if (vm.schedulerRepeat() == false) {\n\
        result.type = \"SINGLE\";\n\
        result.details = {\n\
                \"fire_datetime\": vm.selectedScheduleDate() + ' ' + vm.selectedScheduleTime()\n\
            };\n\
    } else {\n\
        result.type = \"RECURRING\";\n\
        result.details = {\n\
                \"repetition_type\": vm.repeatType(),\n\
                \"interval\": parseInt(vm.repeatInterval()),\n\
                \"fire_time\": vm.selectedScheduleTime(),\n\
                \"start_date\": vm.selectedScheduleDate()\n\
            };\n\
        switch (vm.repeatEndsOnType()) {\n\
            case \"NEVER\":\n\
                break;\n\
            case \"COUNT\":\n\
                result.details.count = parseInt(vm.repeatCount());\n\
                break;\n\
            case \"ON\":\n\
                result.details.end_date = vm.repeatUntil();\n\
                break;\n\
        }\n\
\n\
        switch (vm.repeatType()) {\n\
            case \"WEEKLY\":\n\
                result.details.days_of_week = vm.selectedWeekdays();\n\
                break;\n\
            case \"MONTHLY\":\n\
                var date = moment(vm.selectedScheduleDate()),\n\
                    dayOfMonth = date.date(),\n\
                    dayOfWeek = date.day();\n\
\n\
                switch (vm.selectedMonthlyRepeatByType()) {\n\
                    case \"NTH_DAY\":\n\
                        result.details.special_day_of_month = \"NTH_DAY\";\n\
                        result.details.position_in_month = dayOfMonth;\n\
                        break;\n\
                    case \"NTH_WEEKDAY\":\n\
                        result.details.special_day_of_month = \"NTH_\" + vm.selectedScheduleWeekday();\n\
                        result.details.position_in_month = Math.floor(dayOfMonth / 7); // n-th weekday in month\n\
                        break;\n\
                }\n\
                break;\n\
        }\n\
    }\n\
\n\
    return new this(result);\n\
}\n\
\n\
TestEvent.initTestEventFields = function(base) {\n\
    base.eventId = undefined;\n\
    base.atTimeTranslation = translate(\"at\");\n\
    base.forTimeTranslation = translate(\"for\");\n\
    base.scheduleAtestToRunOnTranslation = translate(\"Run on\");\n\
    base.neverTranslation = translate(\"Repeat forever\");\n\
    base.afterTranslation = translate(\"Stop after\");\n\
    base.occurencesTranslation = translate(\"test(s)\");\n\
    base.onTranslation = translate(\"Stop on\");\n\
\n\
    base.duration = ko.computed(function() { return base.vmConfiguration.duration() });\n\
    base.durationTranslation = ko.computed(function() { return base.vmConfiguration.duration() + ' ' + translate('min(s)'); });\n\
\n\
    base.testEventName = ko.observable(base.vmConfiguration.name());\n\
    base.testEventName.subscribe(function(newVal) {\n\
        if (newVal !== undefined && base.vmConfiguration.name() != newVal) {\n\
            base.vmConfiguration.name(newVal);\n\
        }\n\
    });\n\
    base.availableScheduleTimes = TestEvent.generateAvailableScheduleTimes();\n\
    base.availableRepeaterDisplayTypes = ko.observable([\n\
        {\n\
            value: 'DAILY',\n\
            label: translate(repeater_types_map.DAILY)\n\
        },\n\
        {\n\
            value: 'WEEKLY',\n\
            label: translate(repeater_types_map.WEEKLY)\n\
        },\n\
        {\n\
            value: 'MONTHLY',\n\
            label: translate(repeater_types_map.MONTHLY)\n\
        }\n\
    ]);\n\
    base.availableRepeatIntervals = ko.observable(['1','2','3','4','5','6']);\n\
    base.repeatWeekdays = ko.observable(WEEKDAYS);\n\
\n\
\n\
    // real data, same fields as in refillTestEventFields\n\
    base.selectedScheduleDate = ko.observable(moment().format(\"YYYY-MM-DD\"));\n\
    base.selectedScheduleWeekday = ko.computed(function() { // this one is not real data, calculation dependencies put it here\n\
        var weekDay = moment(base.selectedScheduleDate()).day();\n\
        if (weekDay == 0)\n\
            weekDay = 7 ;// js sunday is 0\n\
        return WEEKDAYS[weekDay - 1];\n\
    })\n\
    base.selectedScheduleMeridian = ko.observable(moment().add(1, 'hours').format(\"hh:00 a\"));\n\
    base.selectedScheduleTime = ko.computed(function() {\n\
        return moment(base.selectedScheduleMeridian(), \"hh:mm a\").format(\"HH:mm\");\n\
    });\n\
    base.selectedScheduleTimezone = ko.observable(tz.name());\n\
    base.schedulerRepeat = ko.observable(false);\n\
    base.repeatType = ko.observable(base.availableRepeaterDisplayTypes()[0].value);\n\
    base.repeatTypeTranslation = ko.computed(function () {\n\
        return repeater_types_map[base.repeatType()];\n\
    });\n\
    base.repeatInterval = ko.observable('1');\n\
    base.selectedWeekdays = ko.observableArray([base.selectedScheduleWeekday()]);\n\
    base.selectedMonthlyRepeatByType = ko.observable(\"\");\n\
    base.repeatEndsOnType = ko.observable(\"ON\");\n\
    base.repeatUntil = ko.observable(moment(base.selectedScheduleDate()).add('months', 3).format(\"YYYY-MM-DD\")); // default value: 3 month from today\n\
    base.repeatCount = ko.observable('1');\n\
    // end real data, everything below immediately depends on above\n\
\n\
\n\
    base.repeaterTitle = ko.computed(function() {\n\
        var result = [translate('every'), base.repeatInterval(), base.repeatTypeTranslation()].join(' ');\n\
\n\
        if (base.repeatEndsOnType() == \"COUNT\") {\n\
            result += ', ' + base.repeatCount() + ' ' + translate(\"time(s)\");\n\
        }\n\
\n\
        if (base.repeatEndsOnType() == \"ON\") {\n\
            result += \" \" + translate(\"until\") + \" \" + base.repeatUntil();\n\
        }\n\
        return result + \".\";\n\
    })\n\
\n\
    base.timezone = ko.computed(function() {\n\
        var tz = base.selectedScheduleTimezone();\n\
\n\
        tz = tz.replace('_', ' ');\n\
\n\
        return '(' + tz + ')';\n\
    });\n\
\n\
}\n\
\n\
// XXX ugly, but looks like no way to reapply whole sub-view-model in KO? elaborate and refactor.\n\
TestEvent.prototype.refillTestEventFields = function(base) {\n\
    var event_timezone = this.timezone(),\n\
        local_timezone = tz.name(),\n\
        fire_datetime = moment.tz(this.fire_Datetime(), local_timezone);\n\
//        firedate = moment.tz(this.fireDate(), event_timezone),\n\
//        firetime = moment.tz(this.fireTime(), 'HH:mm', event_timezone);\n\
//\n\
//    // Convert fire-date/-time to user's local time\n\
//    firedate = firedate.tz(local_timezone);\n\
//    firetime = firetime.tz(local_timezone);\n\
\n\
    base.eventId = this.get('id') || undefined;\n\
    base.testEventName(this.get('name'));\n\
    base.selectedScheduleDate(fire_datetime.format('YYYY-MM-DD'));\n\
    base.selectedScheduleMeridian(fire_datetime.format('hh:mm a'));\n\
//    base.selectedScheduleTime(fire_datetime.format('HH:mm'));\n\
    base.selectedScheduleTimezone(local_timezone);\n\
    base.schedulerRepeat(this.isRecurring());\n\
\n\
    // XXX values duplicate with initTestEventFields, find a way to DRY\n\
    base.repeatType(base.availableRepeaterDisplayTypes()[0].value);\n\
    base.repeatInterval('1');\n\
    base.selectedWeekdays([base.selectedScheduleWeekday()]);\n\
    base.selectedMonthlyRepeatByType(\"\");\n\
    base.repeatEndsOnType(\"ON\");\n\
    base.repeatUntil(moment(base.selectedScheduleDate()).add('months', 3).format(\"YYYY-MM-DD\")); // default value: 3 month from today\n\
    base.repeatCount('1');\n\
\n\
    // now rewrite fields with real values only\n\
    if (this.isRecurring()) {\n\
        base.repeatInterval(this.get('details').interval.toString());\n\
        base.repeatType(this.get('details').repetition_type);\n\
        switch (base.repeatType()) {\n\
            case \"WEEKLY\":\n\
                base.selectedWeekdays(this.get('details').days_of_week);\n\
                break;\n\
            case \"MONTHLY\":\n\
                if (this.get('details').special_day_of_month == 'NTH_DAY') {\n\
                    base.selectedMonthlyRepeatByType('NTH_DAY');\n\
                } else {\n\
                    base.selectedMonthlyRepeatByType('NTH_WEEKDAY');\n\
                }\n\
                break;\n\
        }\n\
        if (this.get('end_date')) {\n\
            // ... repeatEndsOnType is already set to ON\n\
            base.repeatUntil(this.get('details').end_date);\n\
        } else if (this.get('details').count) {\n\
            base.repeatEndsOnType('COUNT');\n\
            base.repeatCount(this.get('details').count);\n\
        } else {\n\
            base.repeatEndsOnType(\"NEVER\");\n\
        }\n\
    }\n\
}\n\
\n\
TestEvent.prototype.fire_Datetime = function() {\n\
    if (this.isRecurring()) {\n\
        return this.get('details').start_date + ' ' + this.get('details').fire_time;\n\
    } else {\n\
        return this.get('details').fire_datetime;\n\
    }\n\
}\n\
\n\
TestEvent.prototype.fireDate = function() {\n\
    if (this.isRecurring()) {\n\
        return this.get('details').start_date;\n\
    } else {\n\
        return this.get('details').fire_datetime.split(' ')[0];\n\
    }\n\
}\n\
\n\
TestEvent.prototype.fireTime = function() {\n\
    if (this.isRecurring()) {\n\
        return this.get('details').fire_time;\n\
    } else {\n\
        return this.get('details').fire_datetime.split(' ')[1];\n\
    }\n\
}\n\
\n\
TestEvent.prototype.isRecurring = function() {\n\
    return this.get('type') == 'RECURRING';\n\
}\n\
\n\
TestEvent.generateAvailableScheduleTimes = function() {\n\
    var times = [];\n\
\n\
    for (var i = 0; i <= 23; ++i) {\n\
        times.push(\"\" + i + \":\" + \"00\");\n\
        times.push(\"\" + i + \":\" + \"30\");\n\
    }\n\
\n\
    return times;\n\
}\n\
\n\
module.exports = TestEvent;\n\
\n\
//@ sourceURL=scheduler/test-event.js"
));
require.register("scheduler/calendar-item.js", Function("exports, require, module",
"var model = require('model'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    moment = require('moment'),\n\
    _ = require('underscore');\n\
\n\
var showEventBalloon = require('./balloon.js'),\n\
    TestEvent = require('./test-event.js'),\n\
    tz = require('./tz.js');\n\
\n\
var translate = window.translate,\n\
    ko = window.ko;\n\
\n\
var CalendarItem = model('CalendarItem')\n\
                    .attr('name')\n\
                    .attr('type')\n\
                    .attr('duration')\n\
                    .attr('event_info')\n\
                    .attr('test_result_id')\n\
                    .attr('status')\n\
                    .attr('error_reason')\n\
                    .attr('remote_devices')\n\
                    .attr('test_config');\n\
\n\
\n\
CalendarItem.loadByRange = function(startDate, endDate, callback) {\n\
    var self = this;\n\
\n\
    request\n\
        .get('/spirent/schedule/calendar-items')\n\
        .use(no_cache)\n\
        .query('start_date=' + moment(startDate).format(\"YYYY-MM-DD\"))\n\
        .query('end_date=' + moment(endDate).format(\"YYYY-MM-DD\"))\n\
        .query('timezone=' + tz.name())\n\
        .set('Accept', 'application/json')\n\
        .end(function(err, res) {\n\
            var wrappedItems = _.map(res.body.result, function(item) {\n\
                return new self(item);\n\
            });\n\
            callback(wrappedItems);\n\
        })\n\
}\n\
\n\
CalendarItem.loadByResultId = function(result_id, callback) {\n\
    var self = this;\n\
\n\
    request\n\
        .get('/spirent/schedule/calendar-items')\n\
        .use(no_cache)\n\
        .query('result_id=' + result_id)\n\
        .query('timezone=' + tz.name())\n\
        .set('Accept', 'application/json')\n\
        .end(function(err, res) {\n\
            var wrappedItems = _.map(res.body.result, function(item) {\n\
                return new self(item);\n\
            });\n\
            callback(wrappedItems);\n\
        });\n\
}\n\
\n\
CalendarItem.prototype.viewModel = function(checkedDevices, scheduler) {\n\
    var self = this;\n\
    return self.extendWithCalendarFields({\n\
        date: moment(self.get('datetime')).format(\"YYYY-MM-DD\"),\n\
        time: moment(self.get('datetime')).format(\"HH:mm\"),\n\
        duration: self.get('duration') + translate(\"scheduler.eventlist.message.min\"),\n\
        devices: self.prepareDevices(checkedDevices),\n\
        event_info: self.get('event_info'),\n\
        test_config: self.get('test_config'),\n\
        name: self.get('name'),\n\
        status: self.get('status') || 'scheduled',\n\
        error_reason: self.get('error_reason'),\n\
        onClick: function(clickedItem, domEvent) {\n\
            CalendarItem.itemOnClickHandler(domEvent, clickedItem, scheduler);\n\
        },\n\
        hasAnyDevice: function(deviceIds) {\n\
            // NOTE: THIS here, not SELF\n\
            // XXX refactor to underscore\n\
            for (var i=0, len=this.devices.length; i < len; ++i) {\n\
                for (var j=0, len2=deviceIds.length; j < len2; ++j) {\n\
                    if (this.devices[i].id == deviceIds[j]) {\n\
                        return true;\n\
                    }\n\
                }\n\
            }\n\
            return false;\n\
        }\n\
\n\
    });\n\
}\n\
\n\
/**\n\
 * @param domEvent\n\
 * @param calendarEvent CalendarItem\n\
 * @param scheduler Scheduler\n\
 */\n\
CalendarItem.itemOnClickHandler = function(domEvent, calendarEvent, scheduler) {\n\
    switch (calendarEvent.type) {\n\
        // XXX DRY this two calls\n\
        case \"scheduled_test\":\n\
            showEventBalloon(\n\
                domEvent.target || domEvent.srcElement,\n\
                calendarEvent.text,\n\
                moment(calendarEvent.start_date).format(\"LT\"),\n\
                calendarEvent.status,\n\
                undefined,\n\
                calendarEvent.devices,\n\
\n\
                translate(\"Delete\"),\n\
                function () {\n\
                    TestEvent.cancelTestEvent(calendarEvent.event_id, function() {\n\
                        scheduler.reloadCalendarItems();\n\
                    })\n\
                },\n\
\n\
                translate(\"Edit\"),\n\
                function () {\n\
                    var test = new TestTemplateViewModel(scheduler.rootVm);\n\
                    test.inflate(calendarEvent.test_config);\n\
                    scheduler.schedulerTest.loadTest(test, new TestEvent(calendarEvent.event_info));\n\
                }\n\
            );\n\
            break;\n\
        case \"executed_test\":\n\
            showEventBalloon(\n\
                domEvent.target || domEvent.srcElement,\n\
                calendarEvent.text,\n\
                moment(calendarEvent.start_date).format(\"LT\"),\n\
                calendarEvent.status,\n\
                calendarEvent.error_reason,\n\
                calendarEvent.devices,\n\
\n\
                undefined,\n\
                undefined,\n\
\n\
                translate(\"View results\"),\n\
                function () {\n\
                    scheduler.openTestResultsPage(calendarEvent.test_result_id);\n\
                }\n\
            );\n\
            break;\n\
    }\n\
}\n\
\n\
CalendarItem.prototype.extendWithCalendarFields = function(result) {\n\
    result.type = this.get('type');\n\
    result.text = this.get('name');\n\
    result.start_date = this.get('datetime');\n\
    result.end_date = moment(this.get('datetime')).add(\"m\", this.get('duration')).format(\"YYYY-MM-DD HH:mm\");\n\
\n\
    if (this.get('event_info')) {\n\
        result.event_id = this.get('event_info').id;\n\
    }\n\
\n\
    if (this.get('test_result_id')) {\n\
        result.test_result_id = this.get('test_result_id');\n\
    }\n\
\n\
    return result;\n\
}\n\
\n\
//function localDevice() {\n\
//    return {\n\
//        id: -1,\n\
//        name: translate(\"Local chassis\"),\n\
//        host: null\n\
//    };\n\
//}\n\
\n\
CalendarItem.prototype.prepareDevices = function(checkedDevices) {\n\
    var devices = [],\n\
        self = this;\n\
\n\
    if(self.remote_devices()){\n\
        devices = self.remote_devices();\n\
    }\n\
\n\
//    if (this.get('event_info') && this.get('event_info').remote_devices) {\n\
//        devices.concat(this.get('event_info').remote_devices);\n\
//    }\n\
//\n\
//    devices.unshift(localDevice());\n\
\n\
    return _.map(devices, function(device) {\n\
        var deviceViewModel = self.createDeviceViewModel(device);\n\
        deviceViewModel.boxCheckerColor = ko.computed(function() {\n\
            if (checkedDevices().indexOf(device.id) == -1) {\n\
                return \"transparent\";\n\
            } else {\n\
                return CalendarItem.getDeviceColor(device.id);\n\
            }\n\
        });\n\
        return deviceViewModel;\n\
    })\n\
}\n\
\n\
// XXX think of a better way to map ids to color\n\
// XXX look here: http://stackoverflow.com/questions/470690/how-to-automatically-generate-n-distinct-colors\n\
var deviceIdToColorMapping = [\"#009900\", \"#96cfde\", \"#cb96de\", \"#990000\", \"#000099\", \"#999900\", \"#990099\", \"#009999\"];\n\
\n\
CalendarItem.getDeviceColor = function(deviceId) {\n\
    return deviceIdToColorMapping[deviceId-1];\n\
}\n\
\n\
CalendarItem.prototype.createDeviceViewModel = function(device) {\n\
    var self = this;\n\
    return {\n\
        id: device.id,\n\
        name: device.name,\n\
        color: CalendarItem.getDeviceColor(device.id)\n\
    };\n\
}\n\
\n\
module.exports = CalendarItem;\n\
//@ sourceURL=scheduler/calendar-item.js"
));
require.register("scheduler/balloon.js", Function("exports, require, module",
"var template = require(\"./templates/balloon.js\"),\n\
    domify = require(\"domify\")\n\
\n\
var $ = window.jQuery,\n\
    _ko = window.ko,\n\
    _translate = window.translate\n\
\n\
var _balloon = null,\n\
    _binding = null,\n\
    _leftLabel = null,\n\
    _leftButtonClick = null,\n\
    _rightLabel = null,\n\
    _rightButtonClick = null,\n\
\n\
showEventBalloon = function (element, title, datetime, status, error_reason, devices, leftLabel, leftButtonClick, rightLabel, rightButtonClick) {\n\
    element = $(element);\n\
    element = element.attr('event_id') ? element : element.parents('[event_id]');\n\
\n\
    var id = element.attr('event_id');\n\
\n\
    if (_balloon == null) {\n\
        initializeBalloon()\n\
    }\n\
\n\
    adjustData(title, datetime, status, error_reason, devices)\n\
    adjustListeners(leftLabel, leftButtonClick, rightLabel, rightButtonClick)\n\
\n\
    _balloon.show()\n\
    adjustPosition(id)\n\
    adjustPosition(id)\n\
    $(window).on('resize', adjustPosition.bind(this, id, _balloon));\n\
}\n\
\n\
function initializeBalloon() {\n\
    _balloon = $(domify(template)).appendTo(\"body\")\n\
\n\
    _binding = {\n\
        leftButtonVisisble: ko.observable(false),\n\
        rightButtonVisisble: ko.observable(false),\n\
\n\
        labelDevices: _translate(\"Devices\"),\n\
        leftLabel: ko.observable(\"\"),\n\
        rightLabel: ko.observable(\"\"),\n\
\n\
        title: _ko.observable(\"\"),\n\
        datetime: _ko.observable(\"\"),\n\
        status: _ko.observable(\"\"),\n\
        error_reason: _ko.observable(\"\"),\n\
        devices: _ko.observable(\"\"),\n\
\n\
        onClose: function () {\n\
            _balloon.hide()\n\
        },\n\
        leftButtonClick: function () {\n\
            _balloon.hide()\n\
            _leftButtonClick()\n\
        },\n\
        rightButtonClick: function () {\n\
            _balloon.hide()\n\
            _rightButtonClick()\n\
        }\n\
    };\n\
\n\
    _binding.status_message = _ko.computed(function() {\n\
        var status = _binding.status();\n\
\n\
        if (!status) {\n\
            return '';\n\
        }\n\
\n\
        status = status.charAt(0).toUpperCase() + status.slice(1);\n\
\n\
        if (status === 'Error') {\n\
            return 'Error: ' + _binding.error_reason();\n\
        }\n\
\n\
        return status;\n\
    });\n\
\n\
    _ko.applyBindings(_binding, _balloon[0])\n\
}\n\
\n\
function adjustPosition(id, balloon) {\n\
    var element = $('[event_id=' + id + ']');\n\
    balloon = balloon || _balloon;\n\
\n\
    var elTopY = element.offset().top\n\
//    if (totalHeight(_balloon) < elTopY) {\n\
        balloon.css(\"top\", elTopY - totalHeight(_balloon))\n\
//    } else {\n\
//        _balloon.css(\"top\", elTopY + element.height() +\n\
//            marginToInt(_balloon.css(\"margin-top\")))\n\
//    }\n\
\n\
    var elCenterX = element.offset().left + totalWidth(element) / 2\n\
    var balloonWidth = totalWidth(balloon)\n\
    if (balloonWidth / 2 > elCenterX) {\n\
        balloon.css(\"left\", 0)\n\
    } else if (balloonWidth / 2 > $(window).width() - elCenterX) {\n\
        balloon.css(\"left\", $(window).width() - balloonWidth)\n\
    } else {\n\
        balloon.css(\"left\", elCenterX - balloonWidth / 2)\n\
    }\n\
}\n\
\n\
function adjustData(title, datetime, status, error_reason, devices) {\n\
    var devicesNames = []\n\
    for (var i=0, len=devices.length; i<len; ++i) { devicesNames.push(devices[i].name) }\n\
\n\
    _binding.title(title)\n\
    _binding.datetime(datetime)\n\
    _binding.status(status);\n\
    _binding.error_reason(error_reason);\n\
    _binding.devices(devicesNames.join(\", \"))\n\
}\n\
\n\
function adjustListeners(leftLabel, leftButtonClick, rightLabel, rightButtonClick) {\n\
    _binding.leftLabel(leftLabel)\n\
    _binding.rightLabel(rightLabel)\n\
\n\
    _leftButtonClick = leftButtonClick\n\
    _rightButtonClick = rightButtonClick\n\
\n\
    _binding.leftButtonVisisble(!!_leftButtonClick)\n\
    _binding.rightButtonVisisble(!!_rightButtonClick)\n\
}\n\
\n\
function totalHeight(el) {\n\
    return el.outerHeight() + marginToInt(el.css(\"margin-top\")) +\n\
        marginToInt(el.css(\"margin-bottom\"))\n\
}\n\
\n\
function totalWidth(el) {\n\
    return el.width() + marginToInt(el.css(\"margin-left\")) +\n\
        marginToInt(el.css(\"margin-right\"))\n\
}\n\
\n\
function marginToInt(margin) {\n\
    return parseInt(margin.replace(\"px\", \"\"))\n\
}\n\
\n\
module.exports = showEventBalloon\n\
//@ sourceURL=scheduler/balloon.js"
));
require.register("scheduler/event-list.js", Function("exports, require, module",
"var template = require(\"./templates/event-list.js\"),\n\
    domify = require(\"domify\")\n\
\n\
var document = window.document,\n\
    ko = window.ko\n\
\n\
\n\
var _created = false\n\
\n\
function EventList() {\n\
    if (_created) {\n\
        throw \"Event list can be initialized only once\"\n\
    }\n\
    _created = true\n\
\n\
    this.listViewVisible = ko.observable(false)\n\
}\n\
\n\
EventList.prototype.render = function(items) {\n\
    var calHeader = document.querySelector('.dhx_cal_header'),\n\
        eventListContainer = document.querySelector(\"#event-list-container\")\n\
\n\
    eventListContainer.style.top = calHeader.style.top\n\
    eventListContainer.style.left = calHeader.style.left\n\
    eventListContainer.appendChild(domify(template))\n\
\n\
    ko.applyBindings({ items: items }, eventListContainer)\n\
}\n\
\n\
module.exports = EventList\n\
//@ sourceURL=scheduler/event-list.js"
));
require.register("scheduler/templates/index.js", Function("exports, require, module",
"module.exports = '<div>\\n\
    <div data-bind=\"if: schedulingTestVisible\" class=\"test\">\\n\
        <div class=\"scheduler-configure\">\\n\
            <div class=\"container\"></div>\\n\
        </div>\\n\
        <div data-bind=\"template: { name: schedulerTest.testTemplateName(), data: schedulerTest, afterRender: schedulerTest.afterRender }\"></div>\\n\
    </div>\\n\
\\n\
    <div data-bind=\"visible: schedulingCalendarVisible\" class=\"scheduler container\">\\n\
        <a class=\"scheduler-test-button gray-button\" href=\"javascript:void(0);\">Schedule\\n\
            a Test</a>\\n\
\\n\
        <div class=\"scheduler-search box\">\\n\
            <input type=\"text\"\\n\
                   data-bind=\"value: searchText, valueUpdate: \\'input\\'\" class=\"shaded search\" placeholder=\"Search\">\\n\
            <img class=\"search\" src=\"images/magnify-gray.png\" alt=\"search\" title=\"search\">\\n\
            <!--<a class=\"scheduler-search-button button dark\"-->\\n\
               <!--data-bind=\"click: filterItems\">Search</a>-->\\n\
        </div>\\n\
        <div class=\"calendar-sidebar\">\\n\
            <div data-bind=\"foreach: devices\" class=\"devices\">\\n\
                <a data-bind=\"click: $parent.toggleBoxChecker.bind($parent)\">\\n\
                    <span data-bind=\"style: {border: \\'2px solid \\' + color}\" class=\"device-toggle\">\\n\
                        <span class=\"device-icon\" data-bind=\"style: {backgroundColor: boxCheckerColor}\"></span>\\n\
                    </span>\\n\
                    <span class=\"device-name\" data-bind=\"text: name\"></span>\\n\
                </a>\\n\
            </div>\\n\
        </div>\\n\
        <div class=\"scheduler-container\">\\n\
            <div id=\"scheduler_here\" class=\"dhx_cal_container\">\\n\
                <div class=\"dhx_cal_navline\">\\n\
                    <div class=\"dhx_cal_today_button\"></div>\\n\
                    <div class=\"dhx_cal_prev_button\"><div class=\"icon\"></div></div>\\n\
                    <div class=\"dhx_cal_next_button\"><div class=\"icon\"></div></div>\\n\
                    <div class=\"dhx_cal_date\"></div>\\n\
                    <div class=\"tab_agenda\">Agenda</div>\\n\
                    <div class=\"dhx_cal_tab day\" name=\"day_tab\"></div>\\n\
                    <div class=\"dhx_cal_tab week\" name=\"week_tab\"></div>\\n\
                    <div class=\"dhx_cal_tab month\" name=\"month_tab\"></div>\\n\
                    <!--<span id=\"as-list-checkbox-container\">-->\\n\
                        <!--<input type=\"checkbox\" id=\"as-list-checkbox\"-->\\n\
                             <!--data-bind=\"checked: eventList.listViewVisible\">-->\\n\
                        <!--<label for=\"as-list-checkbox\">As List</label>-->\\n\
                    <!--</span>-->\\n\
                </div>\\n\
                <div class=\"calendar-body\" data-bind=\"visible: !eventList.listViewVisible()\">\\n\
                    <div class=\"header-wrapper\"><div class=\"dhx_cal_header\"></div></div>\\n\
                    <div class=\"dhx_cal_data\"></div>\\n\
                </div>\\n\
                <div data-bind=\"visible: eventList.listViewVisible\">\\n\
                    <div id=\"event-list-container\"></div>\\n\
                </div>\\n\
            </div>\\n\
            <div class=\"calendar-agenda-container\"></div>\\n\
        </div>\\n\
    </div>\\n\
    <br/>\\n\
    <br/>\\n\
</div>';//@ sourceURL=scheduler/templates/index.js"
));
require.register("scheduler/templates/balloon.js", Function("exports, require, module",
"module.exports = '<div class=\"event-balloon\">\\n\
    <a href=\"#\" class=\"close-btn\" data-bind=\"click: onClose\"></a>\\n\
    <h3 class=\"title\" data-bind=\"text: title\"></span>\\n\
    </h3>\\n\
    <div class=\"datetime\" data-bind=\"text: datetime\"></div>\\n\
    <div class=\"status\" data-bind=\"if: status, text: status_message, attr: {class: \\'status \\' + status()}\"></div>\\n\
    <div class=\"devices\">\\n\
        <label data-bind=\"text: labelDevices\"></label>\\n\
        <span data-bind=\"text: devices\"></span>\\n\
    </div>\\n\
    <div class=\"actions\">\\n\
        <div data-bind=\"visible: leftButtonVisisble\">\\n\
            <a href=\"#\" class=\"button dark delete-btn\"\\n\
               data-bind=\"text: leftLabel, click: leftButtonClick\"></a>\\n\
       </div>\\n\
        <div data-bind=\"visible: rightButtonVisisble\">\\n\
            <a href=\"#\" class=\"button dark edit-btn\"\\n\
               data-bind=\"text: rightLabel, click: rightButtonClick\"></a>\\n\
        </div>\\n\
    </div>\\n\
    <div class=\"tail-shaddow\"></div>\\n\
    <div class=\"tail\"></div>\\n\
</div>\\n\
';//@ sourceURL=scheduler/templates/balloon.js"
));
require.register("scheduler/templates/event-list.js", Function("exports, require, module",
"module.exports = '<div class=\"event-list\" data-bind=\"foreach: items\">\\n\
    <div class=\"item\" data-bind=\"click: onClick\">\\n\
        <div class=\"cell date\" data-bind=\"text: date\"></div>\\n\
        <div class=\"cell time\" data-bind=\"text: time\"></div>\\n\
        <div class=\"cell duration\" data-bind=\"text: duration\"></div>\\n\
        <div class=\"cell event-devices\" data-bind=\"foreach: devices\">\\n\
            <div class=\"icon\" data-bind=\"style: {\\'background-color\\': color}, attr: {title: name}\"></div>\\n\
        </div>\\n\
        <div class=\"cell name\" data-bind=\"text: name\"></div>\\n\
        <div class=\"cell status\" data-bind=\"text: status\"></div>\\n\
        <div class=\"clear\"></div>\\n\
    </div>\\n\
    <div class=\"clear\"></div>\\n\
</div>\\n\
';//@ sourceURL=scheduler/templates/event-list.js"
));
require.register("scheduler/templates/traffic-player-header.js", Function("exports, require, module",
"module.exports = '<div class=\"header scheduler\">\\n\
    <div class=\"actions\">\\n\
        <h2 data-bind=\"text: vmConfiguration.name().substring(0,60)\"></h2>\\n\
        <h3 data-bind=\"text: vmConfiguration.categories()[0].name\"></h3>\\n\
\\n\
        <div class=\"buttons\">\\n\
            <a href=\"javascript:void(0);\" class=\"button dark save\" data-bind=\"click: openSaveModal, clickBubble: false\">\\n\
                <span data-bind=\"text: strings.save\">SAVE</span>\\n\
            </a>\\n\
            <a href=\"javascript:void(0);\" class=\"button dark close\" data-bind=\"click: closeTestEditor, clickBubble: false, text: strings.close\">CLOSE</a>\\n\
        </div>\\n\
    </div>\\n\
    <div class=\"body\">\\n\
\\n\
        <div class=\"clear\"></div>\\n\
        <ul class=\"scheduler-fields\">\\n\
            <li class=\"test-name row\">\\n\
                <label>Scheduled test name</label>\\n\
                <input type=\"text\" class=\"dark-inverted-text-box\" data-bind=\"value: testEventName\"/>\\n\
            </li>\\n\
            <li class=\"calendar row\">\\n\
                <span data-bind=\"text: scheduleAtestToRunOnTranslation\"></span>\\n\
                <input class=\"date dark-inverted-text-box no-clear-button\" type=\"text\" data-bind=\"schedulerDatePicker: selectedScheduleDate, value: selectedScheduleDate\"/>\\n\
\\n\
                <span class=\"at\" data-bind=\"text: atTimeTranslation\"></span>\\n\
                <input id=\"timepicker1\" type=\"text\" class=\"input-small time\" data-bind=\"value: selectedScheduleMeridian\" placeholder=\"--:-- --\">\\n\
                <!--<input type=\"time\" class=\"time\" data-bind=\"value: selectedScheduleTime\" />-->\\n\
                <!--<span class=\"time light-select2\" data-bind=\"attr: {\\'data-value\\': selectedScheduleTime }\">-->\\n\
                    <!--<select data-bind=\"options: availableScheduleTimes, value: selectedScheduleTime\"></select>-->\\n\
                <!--</span>-->\\n\
                <!--<span class=\"timezone\" data-bind=\"text: timezone\"></span>-->\\n\
                <span class=\"for\" data-bind=\"text: forTimeTranslation\"></span>\\n\
                <span class=\"duration light-select2\" data-bind=\"attr: {\\'data-value\\': durationTranslation}\">\\n\
                    <select data-bind=\"options: availableDurations, optionsText: \\'text\\', optionsValue: \\'value\\', value: vmConfiguration.duration, disable: vmResults.status() == \\'running\\', css: { \\'disabled\\': vmResults.status() == \\'running\\' }\"></select>\\n\
                </span>\\n\
            </li>\\n\
            <li class=\"repeat row\">\\n\
                <ul>\\n\
                    <li class=\"row\">\\n\
                        <input type=\"checkbox\" data-bind=\"checked: schedulerRepeat\" id=\"repeat-toggle\">\\n\
                        <label for=\"repeat-toggle\">Repeat <span data-bind=\"if: schedulerRepeat\"><span data-bind=\"text: repeaterTitle\"></span></span></label>\\n\
                    </li>\\n\
                    <li class=\"row\" data-bind=\"css: { hidden : !schedulerRepeat() }\">\\n\
                        <label>Repeat every</label>\\n\
                        <span class=\"repeat-interval light-select2\" data-bind=\"attr: {\\'data-value\\': repeatInterval }\">\\n\
                            <select data-bind=\"options: availableRepeatIntervals, value: repeatInterval\"></select>\\n\
                        </span>\\n\
                        <span class=\"repeat-type light-select2\" data-bind=\"attr: {\\'data-value\\': repeatTypeTranslation }\">\\n\
                            <select data-bind=\"options: availableRepeaterDisplayTypes, optionsValue: \\'value\\', optionsText: \\'label\\', value: repeatType\"></select>\\n\
                        </span>\\n\
                    </li>\\n\
                    <li class=\"row\" data-bind=\"css: { hidden : !schedulerRepeat() || repeatType() != \\'WEEKLY\\'}\">\\n\
                        <div>Repeat on:</div>\\n\
                        <div class=\"days-of-week\">\\n\
                            <ul data-bind=\"foreach: repeatWeekdays\">\\n\
                                <li style=\"display:inline;\">\\n\
                                    <label>\\n\
                                        <input type=\"checkbox\" name=\"selected-weekdays\" data-bind=\"attr: { value: $data }, checked: $parent.selectedWeekdays\" />\\n\
                                        <span data-bind=\"text: $data\"></span>\\n\
                                    </label>\\n\
                                </li>\\n\
                            </ul>\\n\
                        </div>\\n\
                    </li>\\n\
                    <li class=\"row\" data-bind=\"css: { hidden : !schedulerRepeat() || repeatType() != \\'MONTHLY\\'}\">\\n\
                        <div>Repeat by:</div>\\n\
                        <div class=\"repeat-by\">\\n\
                            <input type=\"radio\" name=\"repeat-by-type\" value=\"NTH_DAY\" data-bind=\"checked: selectedMonthlyRepeatByType\"> day of the month\\n\
                            <input type=\"radio\" name=\"repeat-by-type\" value=\"NTH_WEEKDAY\" data-bind=\"checked: selectedMonthlyRepeatByType\"> day of the week\\n\
                        </div>\\n\
                    </li>\\n\
                    <li class=\"ends row\" data-bind=\"visible: schedulerRepeat\">\\n\
                        <input type=\"radio\" value=\"NEVER\" id=\"repeat-forever\" data-bind=\"checked: repeatEndsOnType\">\\n\
                        <label for=\"repeat-forever\" data-bind=\"text: neverTranslation\">Run indefinitely</label>\\n\
\\n\
                        <input type=\"radio\" value=\"COUNT\" id=\"repeat-for\" data-bind=\"checked: repeatEndsOnType\">\\n\
                        <label for=\"repeat-for\" data-bind=\"text: afterTranslation\">Stop after</label>\\n\
                        <input type=\"text\" class=\"dark-inverted-text-box repeat-count\" data-bind=\"value: repeatCount\">\\n\
                        <label for=\"repeat-for\" data-bind=\"text: occurencesTranslation\">tests</label>\\n\
\\n\
                        <input type=\"radio\" value=\"ON\" id=\"repeat-until\" data-bind=\"checked: repeatEndsOnType\">\\n\
                        <label for=\"repeat-until\" data-bind=\"text: onTranslation\">Stop on</label>\\n\
                        <input class=\"date dark-inverted-text-box no-clear-button\" type=\"text\" data-bind=\"schedulerDatePicker: repeatUntil, value: repeatUntil\"/>\\n\
                    </li>\\n\
                </ul>\\n\
            </li>\\n\
        </ul>\\n\
    </div>\\n\
</div>';//@ sourceURL=scheduler/templates/traffic-player-header.js"
));
require.register("scheduler/delegates/test-view-model.js", Function("exports, require, module",
"/**\n\
 * Implements the delegated behavior of the traffic player\n\
 * when loaded from the Calendar or a scheduled test.\n\
 * See parent, TestViewModel.\n\
 */\n\
\n\
var domify = require('domify'),\n\
    template = domify(require('../templates/traffic-player-header.js')),\n\
    ko = window.ko,\n\
    TestEvent = require('../test-event.js'),\n\
    tz = require('../tz.js'),\n\
    util = require('utility-functions'),\n\
    validate = require('validate-form'),\n\
    classes = require('classes'),\n\
    moment = require('moment'),\n\
    event = require('event');\n\
\n\
require('bootstrap-timepicker'); //bootstrap-timepicker\n\
\n\
function SchedulerHeaderDelegate(calendar) {\n\
    this.calendar = calendar;\n\
    this.parent = undefined;\n\
    this.$el = undefined;\n\
    this.validator = undefined;\n\
    this.update_validator = undefined;\n\
    this.strings = {\n\
        'Field is required': 'Field is required',\n\
        \"Must be a date in format YYYY-MM-DD\": \"Must be a date in format YYYY-MM-DD\",\n\
        \"Select at least one day of the week\": \"Select at least one day of the week\",\n\
        \"Choose one\": \"Choose one\",\n\
        \"Please enter a number of 1 or more\": \"Please enter a number of 1 or more\",\n\
        \"Invalid schedule for test\": \"Invalid schedule for test\",\n\
        \"Test Configuration Error\": window.translate(\"Test Configuration Error\"),\n\
        \"Maximum 128 characters.\": window.translate(\"Maximum 128 characters\")\n\
    };\n\
}\n\
\n\
SchedulerHeaderDelegate.prototype.setParent = function (parent) {\n\
\n\
    TestEvent.initTestEventFields(parent);\n\
    parent.testTemplateName = ko.observable('placeholder-template');\n\
    this.parent = parent;\n\
};\n\
\n\
SchedulerHeaderDelegate.prototype.canRenderTab = function (tab_name) {\n\
    return 'calendar' === tab_name;\n\
};\n\
\n\
SchedulerHeaderDelegate.prototype.render = function () {\n\
    this.$el = template.cloneNode(true);\n\
\n\
    ko.applyBindings(this.parent, this.$el);\n\
\n\
    this.bind();\n\
\n\
    $(this.$el).find(\"#timepicker1\").timepicker({minuteStep: 1,\n\
                template: false,\n\
                showMeridian: true,\n\
                defaultTime: false});\n\
\n\
    return this.$el;\n\
};\n\
\n\
SchedulerHeaderDelegate.prototype.bind = function () {\n\
    var self = this,\n\
        $repeat = this.$el.querySelector('#repeat-toggle'),\n\
        $repeat_type = this.$el.querySelector('.repeat-type select'),\n\
        $repeatEndsOnTypes = this.$el.querySelectorAll('.ends [type=\"radio\"]');\n\
\n\
    self.bindValidator();\n\
    event.bind($repeat, 'click', self.bindValidator.bind(self));\n\
    event.bind($repeat_type, 'change', self.bindValidator.bind(self));\n\
    [].forEach.call($repeatEndsOnTypes, function($el){\n\
        event.bind($el, 'click', self.bindValidator.bind(self));\n\
    });\n\
\n\
\n\
};\n\
\n\
SchedulerHeaderDelegate.prototype.openTestCreationLightbox = function() {\n\
    var tmp = new TestEvent(TestEvent.emptyEvent()),\n\
        complete = function(){\n\
            var lightboxViewModel = new LightboxViewModel(this.parent);\n\
            ko.applyBindings(lightboxViewModel, document.getElementById(\"lightbox\"));\n\
        }.bind(this);\n\
\n\
    tmp.refillTestEventFields(this.parent);\n\
\n\
    this.parent.ensureUnreservedOrFail(function() {\n\
        util.lightbox.open({\n\
            url: \"html/lightbox_tmpl\",\n\
            selector: \"#lightbox-create-test-tmpl\",\n\
            cancelSelector: \".cancel-button\",\n\
            onOpenComplete: complete\n\
        });\n\
    });\n\
}\n\
\n\
SchedulerHeaderDelegate.prototype.loadTest = function(testConfiguration, testEvent) {\n\
    var calendar = this.calendar,\n\
        parent = this.parent;\n\
\n\
    if (testEvent) {\n\
        testEvent.refillTestEventFields(parent);\n\
    } else {\n\
        if (parent.testEventName() === undefined) {\n\
            parent.testEventName(testConfiguration.name());\n\
        }\n\
    }\n\
\n\
    // XXX code mostly COPIED from test-view-model and spirent-view-model, DRY!\n\
    parent.ensureUnreservedOrFail(function() {\n\
        parent.hasResults(false);\n\
        parent.vmResults.percentComplete(null);\n\
        parent.vmDocumentation.loadTest(testConfiguration);\n\
        parent.vmConfiguration.loadTest(testConfiguration, function() {\n\
            parent.selectTab('configuration');\n\
            if ($('#test-template').length == 0) {\n\
                util.getTemplate('html/test_tmpl', '#test-template', function(template) {\n\
                    parent.testTemplateName('test-template');\n\
                    calendar.schedulingCalendarVisible(false);\n\
                })\n\
            } else {\n\
                parent.testTemplateName('test-template');\n\
                calendar.schedulingCalendarVisible(false);\n\
            }\n\
        });\n\
    });\n\
}\n\
\n\
SchedulerHeaderDelegate.prototype.openSaveModal = function() {\n\
    var base = this.parent,\n\
        saveHandler = this.saveHandler.bind(this),\n\
        valid = function () {\n\
            var event_config = TestEvent.fromViewModel(base).toJSON();\n\
\n\
            TestEvent.createOrUpdateTestEvent(\n\
                base.vmConfiguration.toFlatObject(),\n\
                event_config,\n\
                saveHandler\n\
            );\n\
        },\n\
        invalid = function (result) {\n\
            window.logger.error('Scheduler validation failed', result);\n\
        },\n\
        reserve_handler = function(data,error){\n\
            if(error){\n\
                util.lightbox.openError(window.translate('Error'), window.translate('Unable to get reservation status.'));\n\
                window.logger.error(error);\n\
                return;\n\
            }\n\
\n\
\n\
            var reserved_info = data.reserved_remotely;\n\
            if(reserved_info.reserved === false){\n\
                util.lightbox.working(new LightboxWorkingViewModel(translate(\"Start\"), translate(\"Validating Test...\")));\n\
\n\
                try {\n\
                    base.validate(valid, invalid);\n\
                } catch(e) {\n\
                    window.logger.error(e + e.stack);\n\
                }\n\
            }\n\
            else if(reserved_info.is_reserved_by_me === true){\n\
                self.lightboxText = translate('A test is already running.  Please wait for the current test to complete before loading a new test.');\n\
                util.lightbox.open({\n\
                    url : 'html/lightbox_tmpl',\n\
                    selector : '#lightbox-message-template',\n\
                    cancelSelector: '.ok-button',\n\
                    onOpenComplete: function(){\n\
                        ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                    }\n\
                });\n\
            } else {\n\
                self.lightboxText = translate('This Axon chassis is currently reserved.<br/><br/>' +\n\
                    'User: {user}<br/>From: {from}<br/>Since: {since}<br/><br/>' +\n\
                    'Please wait for the chassis to become available before loading a test.<br><br>', {\n\
                    user: reserved_info.reserved_by,\n\
                    from: reserved_info.reserved_addr,\n\
                    since: reserved_info.reserved_since\n\
                });\n\
                util.lightbox.open({\n\
                    url : 'html/lightbox_tmpl',\n\
                    selector : '#lightbox-reserved-template',\n\
                    cancelSelector: '.ok-button',\n\
                    onOpenComplete: function(){\n\
                        ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                    }\n\
                });\n\
            }\n\
        };\n\
\n\
    util.get_chassis_reservationa_status(reserve_handler);\n\
};\n\
\n\
SchedulerHeaderDelegate.prototype.closeTestEditor = function() {\n\
    this.calendar.schedulingCalendarVisible(true);\n\
    this.reset_Template();\n\
};\n\
\n\
function get_form_value(default_getter, $el) {\n\
    var $group;\n\
\n\
    if (classes($el).has('days-of-week')) {\n\
        $group = $el.querySelectorAll('[type=checkbox]');\n\
        return [].filter.call($group, function ($item) {\n\
            return $item.checked;\n\
        }).map(function ($item) {\n\
            return $item.value;\n\
        }).join(',');\n\
    }\n\
\n\
    if (classes($el).has('repeat-by')) {\n\
        $group = $el.querySelectorAll('[type=radio]');\n\
        return [].filter.call($group, function ($item) {\n\
            return $item.checked;\n\
        }).map(function ($item) {\n\
            return $item.value;\n\
        }).join('');\n\
    }\n\
\n\
    return default_getter($el);\n\
}\n\
\n\
function mark_invalid ($el, message) {\n\
    var $old = $el.parentNode.querySelectorAll('label.validator-message'),\n\
        $message = document.createElement('label');\n\
\n\
    // Remove old validation messages\n\
    [].forEach.call($old, function ($el) {\n\
        $el.parentNode.removeChild($el);\n\
    });\n\
    classes($el).remove('invalid');\n\
\n\
    // Add new message\n\
    classes($message).add('validator-message');\n\
    $message.innerHTML = message;\n\
    $el.parentNode.appendChild($message);\n\
    classes($el).add('invalid');\n\
}\n\
\n\
SchedulerHeaderDelegate.prototype.bindValidator = function () {\n\
    if(!this.$el){\n\
       return;\n\
    }\n\
    window.util.clear_all_validation_messages(this.$el);\n\
\n\
    var self = this,\n\
        default_getter,\n\
        $name = this.$el.querySelector('.test-name input'),\n\
        $date = this.$el.querySelector('input.date'),\n\
        $time = this.$el.querySelector('.time'),\n\
        $days,\n\
        $end_count,\n\
        $end_on,\n\
        $repeat_by;\n\
\n\
    this.validator = validate(this.$el);\n\
\n\
    default_getter = this.validator.adapter.value.bind(this.validator.adapter);\n\
\n\
    this.validator\n\
        .on('blur')\n\
        .value(get_form_value.bind(this, default_getter))\n\
        .invalid(mark_invalid);\n\
\n\
    this.validator.field($name)\n\
        .is('required', this.strings['Field is required'])\n\
        .is('maximum', 128, this.strings['Maximum 128 characters.']);\n\
\n\
    this.validator.field($date)\n\
        .is('required', this.strings['Field is required'])\n\
        .is(function (value) {\n\
            return moment(value, 'YYYY-MM-DD').isValid();\n\
        }, this.strings['Must be a date in format YYYY-MM-DD']);\n\
\n\
    this.validator.field($time)\n\
        .is('required', this.strings['Field is required']);\n\
\n\
    if(this.parent.schedulerRepeat()) {\n\
        switch (this.parent.repeatType()) {\n\
            case 'DAILY':\n\
                break;\n\
            case 'WEEKLY':\n\
                // Ensure at least one day is selected\n\
                $days = this.$el.querySelector('.days-of-week');\n\
                this.validator.field($days)\n\
                    .is('required', this.strings[\"Select at least one day of the week\"]);\n\
                break;\n\
            case 'MONTHLY':\n\
                // Ensure user has chosen \"day of month\" or \"day of week\"\n\
                $repeat_by = this.$el.querySelector('.repeat-by');\n\
                this.validator.field($repeat_by)\n\
                    .is('required', this.strings[\"Choose one\"]);\n\
                break;\n\
        }\n\
\n\
        switch (this.parent.repeatEndsOnType()) {\n\
            case 'COUNT':\n\
                // Ensure user has entered # of tests to end at\n\
                $end_count = this.$el.querySelector('.repeat-count');\n\
                this.validator.field($end_count)\n\
                    .is('required', this.strings[\"Field is required\"])\n\
                    .is(/^[1-9]+[0-9]*$/, this.strings[\"Please enter a number of 1 or more\"]);\n\
                break;\n\
            case 'ON':\n\
                // Ensure user has selected a date to end on\n\
                $end_on = this.$el.querySelector('.ends .date');\n\
                this.validator.field($end_on)\n\
                    .is('required', this.strings['Field is required'])\n\
                    .is(function (value) {\n\
                        return moment(value, 'YYYY-MM-DD').isValid();\n\
                    }, this.strings['Must be a date in format YYYY-MM-DD']);\n\
                break;\n\
        }\n\
    }\n\
};\n\
\n\
SchedulerHeaderDelegate.prototype.validate = function (result) {\n\
    var strError = this.strings[\"Test Configuration Error\"],\n\
        invalid_message = this.strings[\"Invalid schedule for test\"];\n\
\n\
    this.validator.validate(function (err, valid, message) {\n\
        if (!valid) {\n\
            result.addCheckResults(strError, false, invalid_message);\n\
            result.is_valid = false;\n\
        }\n\
    });\n\
    return result;\n\
};\n\
\n\
SchedulerHeaderDelegate.prototype.saveHandler = function (response) {\n\
    var base = this.parent;\n\
\n\
    if ('SUCCESS' !== response.body.result) {\n\
        this.parseValidationFailureResults(response.body);\n\
        return; // Short-circuit\n\
    }\n\
\n\
    util.lightbox.close();\n\
    base.vmConfiguration.id(response.body.test_id);\n\
    base.vmConfiguration.isDirty = false;\n\
    this.calendar.reloadCalendar();\n\
    this.calendar.schedulingCalendarVisible(true);\n\
    this.reset_Template();\n\
};\n\
\n\
SchedulerHeaderDelegate.prototype.afterRender = function () {\n\
    if(this.$el){\n\
        return;\n\
    }\n\
\n\
    var self = this,\n\
        selected_tab = self.parent.rootVm.selectedTab(),\n\
        $parent = document.querySelector('#main > .' + selected_tab),\n\
        $header,\n\
        $cont;\n\
\n\
\n\
    self.render();\n\
\n\
    // Remove existing HTML from .test-controller\n\
    $header = $parent.querySelector('.test-controller');\n\
    while ($header.firstChild) {\n\
        $header.removeChild($header.firstChild);\n\
    }\n\
\n\
    $cont = $parent.querySelector('.scheduler-configure .container');\n\
\n\
    // Append new header delegate view\n\
    $cont.appendChild(self.$el);\n\
}\n\
\n\
SchedulerHeaderDelegate.prototype.reset_Template = function () {\n\
    if(this.$el && this.$el.parentNode){\n\
        this.$el.parentNode.removeChild(this.$el)\n\
    }\n\
    this.$el = undefined;\n\
}\n\
\n\
SchedulerHeaderDelegate.prototype.parseValidationFailureResults = function (results) {\n\
    var base = this.parent,\n\
        message,\n\
        conflict,\n\
        begin,\n\
        end;\n\
\n\
    if (results.reason && 'conflicts_found' === results.reason) {\n\
        results.is_valid = false;\n\
        results.is_ready = false;\n\
        conflict = results.conflicts[0].event_info;\n\
        begin = moment(conflict.datetime);\n\
        end = begin.clone().add({minutes: conflict.duration});\n\
        message = translate('Schedule conflicts with \"{name}\" at {begin} to {end}.', {\n\
            name: conflict.name,\n\
            begin: begin.format('LLL'),\n\
            end: end.format('LLL')\n\
        });\n\
        results.messages = results.messages || [];\n\
        results.messages.push({\n\
            header: 'Failed',\n\
            content: [message],\n\
            is_error: true\n\
        });\n\
    }\n\
\n\
    base.vmConfiguration.parseValidationResults(results);\n\
};\n\
\n\
module.exports = SchedulerHeaderDelegate;//@ sourceURL=scheduler/delegates/test-view-model.js"
));
require.register("batch-operator/index.js", Function("exports, require, module",
"var emitter = require('emitter'),\n\
    domify = require('domify'),\n\
    classes = require('classes'),\n\
    event = require('event'),\n\
    template = domify(require('./template.js'));\n\
\n\
function BatchOperator() {\n\
    this.$el = undefined;\n\
    this._items = {};\n\
    this.selected = {};\n\
    this.$operations = {};\n\
}\n\
\n\
emitter(BatchOperator.prototype);\n\
\n\
BatchOperator.prototype.isSelected = function (key) {\n\
    return this.selected.hasOwnProperty(key);\n\
};\n\
\n\
function operation(key, callback, e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    this.emit(key);\n\
    callback(this.selected);\n\
}\n\
\n\
/**\n\
 * Adds an item to the list of batch operations that can be performed on\n\
 * selected items.\n\
 *\n\
 * @param key value to emit when this operation is triggered\n\
 * @param label What the user sees\n\
 * @param callback function fired when operation is triggered; optional\n\
 */\n\
BatchOperator.prototype.addOperation = function (key, label, callback) {\n\
    callback = callback || function () {};\n\
\n\
    var $el = document.createElement('a');\n\
    $el.href = '#';\n\
\n\
    $el.innerHTML = label;\n\
    event.bind($el, 'click', operation.bind(this, key, callback));\n\
\n\
    this.$operations[key] = $el;\n\
};\n\
\n\
/**\n\
 * Gets or sets the items to be emitted when select-all is triggered\n\
 *\n\
 * @param items collection to set\n\
 */\n\
BatchOperator.prototype.items = function (items) {\n\
    if (arguments.length) {\n\
        this._items = items || {};\n\
    }\n\
\n\
    return this._items;\n\
};\n\
\n\
BatchOperator.prototype.render = function () {\n\
    var $el = template.cloneNode(true),\n\
        $actions = $el.querySelector('.actions');\n\
\n\
    this.$el = $el;\n\
\n\
    Object.keys(this.$operations).forEach(function (key) {\n\
        var $operation = document.createElement('li');\n\
        classes($operation).add('operation');\n\
        $operation.appendChild(this.$operations[key]);\n\
        $actions.appendChild($operation);\n\
    }, this);\n\
\n\
    this.bind();\n\
\n\
    return this.$el;\n\
};\n\
\n\
/**\n\
 * Depending on what's selected, renders \"select all\" or \"unselect\" and\n\
 * available operations\n\
 */\n\
BatchOperator.prototype.update = function () {\n\
    var $actions = this.$el.querySelector('.actions'),\n\
        $all = classes($actions.querySelector('.select-all')),\n\
        $none = classes($actions.querySelector('.select-none')),\n\
        $operations = $actions.querySelectorAll('.operation');\n\
\n\
    if (Object.keys(this.selected).length) {\n\
        $all.add('hidden');\n\
        $none.remove('hidden');\n\
        [].forEach.call($operations, function ($operation) {\n\
            classes($operation).remove('hidden');\n\
        });\n\
    } else {\n\
        $all.remove('hidden');\n\
        $none.add('hidden');\n\
        [].forEach.call($operations, function ($operation) {\n\
            classes($operation).add('hidden');\n\
        });\n\
    }\n\
};\n\
\n\
/**\n\
 * @param silent boolean false to emit a 'change' event; defaults to false\n\
 */\n\
BatchOperator.prototype.select_all = function (silent) {\n\
    this.selected = this._items;\n\
    if (!silent) {\n\
        this.emit('change', this.selected);\n\
    }\n\
    this.update();\n\
};\n\
\n\
/**\n\
 * @param silent boolean false to emit a 'change' event; defaults to false\n\
 */\n\
BatchOperator.prototype.select_none = function (silent) {\n\
    this.selected = {};\n\
    if (!silent) {\n\
        this.emit('change', this.selected);\n\
    }\n\
    this.update();\n\
};\n\
\n\
function click_all(e) {\n\
    e.preventDefault();\n\
    this.select_all();\n\
}\n\
\n\
function click_none(e) {\n\
    e.preventDefault();\n\
    this.select_none();\n\
}\n\
\n\
BatchOperator.prototype.bind = function () {\n\
    var $actions = this.$el.querySelector('.actions'),\n\
        $all = $actions.querySelector('.select-all'),\n\
        $none = $actions.querySelector('.select-none');\n\
\n\
    event.bind($all, 'click', click_all.bind(this));\n\
    event.bind($none, 'click', click_none.bind(this));\n\
};\n\
\n\
/**\n\
 * Adds value to selection\n\
 *\n\
 * @param key scalar or collection of key-value pairs\n\
 * @param value associated with key; unnecessary if key is a collection\n\
 */\n\
BatchOperator.prototype.select = function (key, value) {\n\
    var i;\n\
\n\
    if (key instanceof Array || key instanceof Object) {\n\
        // Key is a collection (of key-value pairs)\n\
        for (i in key) {\n\
            if (key.hasOwnProperty(i)) {\n\
                this.select(i, key[i]); // Recursion\n\
            }\n\
        }\n\
        return; // Short-circuit\n\
    }\n\
\n\
    this.selected[key] = value;\n\
    this.update();\n\
};\n\
\n\
/**\n\
 * Removes value from selection. Fails silently\n\
 *\n\
 * @param key scalar or collection\n\
 */\n\
BatchOperator.prototype.unselect = function (key) {\n\
    var index;\n\
\n\
    if (key instanceof Array || key instanceof Object) {\n\
        // Key is a collection (of keys)\n\
        for (index in key) {\n\
            if (key.hasOwnProperty(index)) {\n\
                this.unselect(index); // Recursion\n\
            }\n\
        }\n\
        return; // Short-circuit\n\
    }\n\
\n\
    if (this.selected.hasOwnProperty(key)) {\n\
        delete this.selected[key];\n\
    }\n\
\n\
    this.update();\n\
};\n\
\n\
/**\n\
 * If selected contains value, remove it; otherwise, add it. Fails silently\n\
 *\n\
 * @param key scalar or collection\n\
 * @param value associated with key; unnecessary if key is a collection\n\
 */\n\
BatchOperator.prototype.toggle = function (key, value) {\n\
    var index;\n\
\n\
    if (key instanceof Array || key instanceof Object) {\n\
        // Key is a collection (of key-value-pairs)\n\
        for (index in key) {\n\
            if (key.hasOwnProperty(index)) {\n\
                this.toggle(index, key[index]); // Recursion\n\
            }\n\
        }\n\
        return; // Short-circuit\n\
    }\n\
\n\
    if (this.selected.hasOwnProperty(key)) {\n\
        this.unselect(key);\n\
    } else {\n\
        this.select(key, value);\n\
    }\n\
};\n\
\n\
module.exports = BatchOperator;\n\
//@ sourceURL=batch-operator/index.js"
));
require.register("batch-operator/template.js", Function("exports, require, module",
"module.exports = '<div class=\"batch-operator\">\\n\
    <ul class=\"actions\">\\n\
        <li class=\"select-all\">\\n\
            <a href=\"#\">Select all</a>\\n\
        </li><li class=\"select-none\">\\n\
            <a href=\"#\">Unselect</a>\\n\
        </li>\\n\
    </ul>\\n\
</div>\\n\
';//@ sourceURL=batch-operator/template.js"
));
require.register("paginator/index.js", Function("exports, require, module",
"var emitter = require('emitter'),\n\
    domify = require('domify'),\n\
    classes = require('classes'),\n\
    event = require('event'),\n\
    template = domify(require('./template.js')),\n\
    previous_pages = 2,\n\
    pages_visible = 5;\n\
\n\
function Paginator() {\n\
    this.$el = undefined;\n\
    this.page = 1;\n\
    this.num_pages = undefined;\n\
}\n\
\n\
emitter(Paginator.prototype);\n\
\n\
Paginator.prototype.pages = function (pages) {\n\
    if (arguments.length) {\n\
        this.num_pages = Math.max(1, pages); // Ensure >= 1\n\
\n\
        // Ensure this.page is withing this.num_pages (in case a page was removed)\n\
        this.page = Math.min(this.page, this.num_pages);\n\
    }\n\
\n\
    return this.num_pages;\n\
};\n\
\n\
Paginator.prototype.render = function () {\n\
    var $el = template.cloneNode(true),\n\
        page = this.page,\n\
        $prev_ellipses = $el.querySelector('.ellipses.prev'),\n\
        $next_ellipses = $el.querySelector('.ellipses.next'),\n\
        // Always show 5 pages, even if the current page is near the end\n\
        at_end = this.num_pages - pages_visible + 1 < page - previous_pages,\n\
        first = at_end ? Math.max(1, this.num_pages - pages_visible + 1) : Math.max(1, page - previous_pages),\n\
        last = Math.min(this.num_pages, first + pages_visible - 1),\n\
        i,\n\
        $pages = $el.querySelector('.pages'),\n\
        $page,\n\
        $page_link;\n\
\n\
    this.$el = $el;\n\
\n\
    // Ellipses before page links\n\
    if (first === 1) {\n\
        classes($prev_ellipses).add('hidden');\n\
    } else {\n\
        classes($prev_ellipses).remove('hidden');\n\
    }\n\
\n\
    // Remove existing page links\n\
    while ($pages.firstChild) {\n\
        $pages.removeChild($pages.firstChild);\n\
    }\n\
\n\
    // Insert page links for current pages\n\
    for (i = first; i <= last; i += 1) {\n\
        $page = document.createElement('li');\n\
        $page_link = document.createElement('a');\n\
        $page_link.innerHTML = String(i);\n\
        if (i === page) {\n\
            classes($page).add('current');\n\
        }\n\
        event.bind($page_link, 'click', this.goto.bind(this, i));\n\
\n\
        $page.appendChild($page_link);\n\
        $pages.appendChild($page);\n\
    }\n\
\n\
    // Ellipses after page links\n\
    if (last === this.num_pages) {\n\
        classes($next_ellipses).add('hidden');\n\
    } else {\n\
        classes($next_ellipses).remove('hidden');\n\
    }\n\
\n\
    return $el;\n\
};\n\
\n\
Paginator.prototype.next = function () {\n\
    this.page += 1;\n\
    this.goto(this.page);\n\
};\n\
\n\
/**\n\
 * @param page 1-indexed\n\
 * @param e \"click\" event from DOM (when .goto() is bound to an element)\n\
 */\n\
Paginator.prototype.goto = function (page, e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    this.page = page;\n\
    this.render();\n\
    this.emit(\"change\", this.page, this);\n\
};\n\
\n\
module.exports = Paginator;//@ sourceURL=paginator/index.js"
));
require.register("paginator/template.js", Function("exports, require, module",
"module.exports = '<div class=\"paginator\">\\n\
    <div class=\"ellipses prev\">&hellip;</div>\\n\
    <ul class=\"pages\"></ul>\\n\
    <div class=\"ellipses next\">&hellip;</div>\\n\
</div>';//@ sourceURL=paginator/template.js"
));

require.register("traffic-recorder/index.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    template = domify(require('./templates/index.js')),\n\
    Collection = require('./models/recorder-collection.js'),\n\
    Model = require('./models/recorder.js'),\n\
    View = require('./views/recorder.js'),\n\
    classes = require('classes'),\n\
    event = require('event');\n\
\n\
function TrafficRecorder(recorders, ports_observable) {\n\
    this.models = recorders || new Collection();\n\
    this.$el = template;\n\
    this.views = [];\n\
    this.ports_observable = ports_observable;\n\
}\n\
\n\
TrafficRecorder.factory = function (ports_observable) {\n\
    var recorders = Collection.get(),\n\
        recorder = new TrafficRecorder(recorders, ports_observable);\n\
\n\
    recorder.render();\n\
    return recorder;\n\
};\n\
\n\
TrafficRecorder.prototype.render = function () {\n\
    var add = this.add.bind(this);\n\
\n\
    this.models.forEach(add);\n\
\n\
    this.bind();\n\
\n\
    return this.$el;\n\
};\n\
\n\
TrafficRecorder.prototype.show = function () {\n\
    var classed = classes(this.$el);\n\
    classed.remove('hidden');\n\
};\n\
\n\
TrafficRecorder.prototype.hide = function () {\n\
    var classed = classes(this.$el);\n\
    classed.add('hidden');\n\
};\n\
\n\
\n\
TrafficRecorder.prototype.add = function (model) {\n\
    var view = new View(model, this.ports_observable),\n\
        $recorders = this.$el.querySelector('.recorders');\n\
\n\
    this.views.push(view);\n\
    view.render();\n\
    $recorders.appendChild(view.$el);\n\
};\n\
\n\
TrafficRecorder.prototype.remove = function (model) {\n\
    var $recorders = this.$el.querySelector('.recorders'),\n\
        views = this.views;\n\
\n\
    views.forEach(function (view, i) {\n\
        if (view.model.id() === model.id()) {\n\
            $recorders.removeChild(view.$el);\n\
            views.splice(i, 1);\n\
        }\n\
    });\n\
};\n\
\n\
TrafficRecorder.prototype.bind = function () {\n\
    var remove = this.remove.bind(this),\n\
        add = this.add.bind(this),\n\
        $add = this.$el.querySelector('.add'),\n\
        models = this.models,\n\
        add_clicked = function () {\n\
            var model = new Model();\n\
            models.push(model);\n\
        };\n\
\n\
    // DOM -> data\n\
    event.bind($add, 'click', add_clicked);\n\
\n\
    // Data -> DOM\n\
    models.on('added', add);\n\
    models.on('removed', remove);\n\
    models.on('reset', function (collection) {\n\
        if (!collection.length) {\n\
            var model = new Model();\n\
            collection.push(model, true);\n\
        }\n\
        collection.forEach(add);\n\
    });\n\
\n\
};\n\
\n\
module.exports = TrafficRecorder;//@ sourceURL=traffic-recorder/index.js"
));
require.register("traffic-recorder/views/recorder.js", Function("exports, require, module",
"var emitter = require('emitter'),\n\
    event = require('event'),\n\
    classes = require('classes'),\n\
    InterfaceSelector = require('interface-selector'),\n\
    FilterChooser = require('capture-filter-chooser'),\n\
    ViewDelegate = require('./delegates/recorder-view.js'),\n\
    EditDelegate = require('./delegates/recorder-edit.js'),\n\
    HistoryDelegate = require('./delegates/recorder-history.js');\n\
\n\
function render_interface(selected_models, model, $interface) {\n\
    var classed = classes($interface);\n\
\n\
    classed.add('available');\n\
\n\
    classed.remove('selected');\n\
    selected_models.forEach(function (selected) {\n\
        if (model.physical_port() === selected.physical_port()) {\n\
            classed.add('selected');\n\
        }\n\
    });\n\
}\n\
\n\
function Recorder(model, ports_observable) {\n\
    this.model = model;\n\
    this.interface_selector = new InterfaceSelector(ports_observable, render_interface.bind(this, model.interfaces())); // Maybe we should pass InterfaceSelector into the constructor to avoid cross-cutting?\n\
    this.filter_chooser = new FilterChooser(model.filter());\n\
    this.edit_delegate = new EditDelegate(this);\n\
    this.view_delegate = new ViewDelegate(this);\n\
    this.history_delegate = new HistoryDelegate(this);\n\
}\n\
\n\
emitter(Recorder.prototype);\n\
\n\
Recorder.prototype.render = function () {\n\
    var model = this.model;\n\
\n\
    if (model.isNew()) {\n\
        this.edit();\n\
    } else {\n\
        this.view();\n\
    }\n\
\n\
    this.bind();\n\
\n\
    return this.$el;\n\
};\n\
\n\
Recorder.prototype.bind = function () {\n\
    var view = this.view.bind(this),\n\
        destroy = this.destroy.bind(this);\n\
\n\
    // Model -> DOM\n\
    this.model.on('change filter', this.filter_chooser.set.bind(this.filter_chooser));\n\
    this.model.on('save', view);\n\
    this.model.on('destroy', destroy);\n\
\n\
    // View -> model\n\
    this.filter_chooser.on('select', this.model.filter.bind(this.model));\n\
    this.interface_selector.on('select', this.model.interface.bind(this.model));\n\
    this.view_delegate.on('destroy', this.model.destroy.bind(this.model));\n\
\n\
    // View -> view\n\
    this.filter_chooser.on('select', this.filter_chooser.hide.bind(this.filter_chooser));\n\
    this.edit_delegate.on('done', this.save.bind(this));\n\
    this.edit_delegate.on('destroy', destroy); // Only unsaved captures can be edited, so don't need to worry about destroying the model\n\
    this.view_delegate.on('history', this.history.bind(this));\n\
    this.history_delegate.on('done', view);\n\
\n\
    // Debugging\n\
//    this.model.on('change', console.log.bind(console, 'changed: '));\n\
};\n\
\n\
Recorder.prototype.edit = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    var $el = this.edit_delegate.render();\n\
    this.replace_in_parent($el);\n\
    this.$el = $el;\n\
    return this.$el;\n\
};\n\
\n\
Recorder.prototype.view = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    var $el = this.view_delegate.render();\n\
    this.replace_in_parent($el);\n\
    this.$el = $el;\n\
    return this.$el;\n\
};\n\
\n\
Recorder.prototype.history = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    var $el = this.history_delegate.render();\n\
    this.replace_in_parent($el);\n\
    this.$el = $el;\n\
    return this.$el;\n\
};\n\
\n\
Recorder.prototype.save = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    this.model.save();\n\
};\n\
\n\
Recorder.prototype.destroy = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    if (this.$el.parentNode) {\n\
        this.$el.parentNode.removeChild(this.$el);\n\
    }\n\
};\n\
\n\
Recorder.prototype.replace_in_parent = function ($new) {\n\
    // If this.$el has been inserted into the DOM, simply assigning a new\n\
    // value to this.$el will not update the DOM.\n\
\n\
    if (this.$el && this.$el.parentNode) {\n\
        this.$el.parentNode.replaceChild($new, this.$el);\n\
    }\n\
};\n\
\n\
module.exports = Recorder;//@ sourceURL=traffic-recorder/views/recorder.js"
));
require.register("traffic-recorder/views/capture.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    classes = require('classes'),\n\
    event = require('event'),\n\
    moment = require('moment'),\n\
    strings = {\n\
        \"seconds\": \"seconds\",\n\
        \"bytes\": \"bytes\",\n\
        \"packets\": \"packets\"\n\
    };\n\
\n\
function CaptureView(model) {\n\
    this.model = model;\n\
    this.$el = undefined;\n\
}\n\
\n\
CaptureView.factory = function (model, template) {\n\
    var view = new this(model);\n\
    view.$el = template.cloneNode(true);\n\
\n\
    return view;\n\
};\n\
\n\
CaptureView.prototype.render = function () {\n\
    var model = this.model,\n\
        $el = this.$el,\n\
        $title = $el.querySelector('.title'),\n\
        $started = $el.querySelector('.started'),\n\
        $duration = $el.querySelector('.duration'),\n\
        $size = $el.querySelector('.size'),\n\
        $packets = $el.querySelector('.packets'),\n\
        $download = $el.querySelector('.download a'),\n\
        $none = $el.querySelector('.none');\n\
\n\
    this.$el = $el;\n\
\n\
    if (!model) {\n\
        classes($started).add('hidden');\n\
        classes($duration).add('hidden');\n\
        classes($size).add('hidden');\n\
        classes($packets).add('hidden');\n\
        classes($download).add('hidden');\n\
        classes($none).remove('hidden');\n\
        return $el;\n\
    }\n\
\n\
    if ($title) {\n\
        // Only used in capture history\n\
        $title.innerHTML = model.title();\n\
    }\n\
    $started.innerHTML = moment(model.started()).fromNow();\n\
    $duration.innerHTML = model.time_in_secs() + ' ' + strings.seconds;\n\
    $size.innerHTML = model.size_in_bytes() + ' ' + strings.bytes;\n\
    $packets.innerHTML = model.packet_count() + ' ' + strings.packets;\n\
    classes($started).remove('hidden');\n\
    classes($duration).remove('hidden');\n\
    classes($size).remove('hidden');\n\
    classes($packets).remove('hidden');\n\
    classes($none).add('hidden');\n\
\n\
    if ('COMPLETED' === model.status() && model.download_uri()) {\n\
        $download.href = model.download_uri();\n\
        classes($download).remove('hidden');\n\
    } else {\n\
        $download.href = '#';\n\
        classes($download).add('hidden');\n\
    }\n\
\n\
    return $el;\n\
};\n\
\n\
CaptureView.prototype.bind = function () {\n\
    this.model.on('change status', this.render.bind(this));\n\
};\n\
\n\
module.exports = CaptureView;//@ sourceURL=traffic-recorder/views/capture.js"
));
require.register("traffic-recorder/views/capture-progress.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    template = domify(require('../templates/capture-progress.js')),\n\
    recorder_to_capture_progress_map = {\n\
        'stop_at_bytes': 'size_in_bytes',\n\
        'packet_count': 'packet_count',\n\
        'time_in_secs': 'time_in_secs'\n\
    },\n\
    progress_attrs = Object.keys(recorder_to_capture_progress_map);\n\
\n\
function get_progress(current, limits) {\n\
    var progress = {},\n\
        val;\n\
\n\
    // Calculate progress for each limit/attribute\n\
    Object.keys(limits).forEach(function (attr) {\n\
        val = current[attr];\n\
\n\
        if (!limits[attr] || undefined === val || isNaN(current[attr]) || isNaN(limits[attr])) {\n\
            // Prevent divide-by-zero and non-numeric results\n\
            progress[attr] = 1;\n\
            return;\n\
        }\n\
\n\
        val = Number(val / limits[attr]);\n\
\n\
        // Ensure progress is never more than 1 (100%)\n\
        val = Math.min(val, 1);\n\
\n\
        progress[attr] = val;\n\
    });\n\
\n\
    return progress;\n\
}\n\
\n\
function CaptureProgress(limits, capture) {\n\
    this.limits = limits;\n\
    this.model = capture;\n\
    this.$el = template.cloneNode(true);\n\
}\n\
\n\
CaptureProgress.get_limits_from_recorder = function (recorder) {\n\
    var limits = {},\n\
        val;\n\
\n\
    progress_attrs.forEach(function (attr) {\n\
        val = recorder[attr]();\n\
\n\
        if (val !== undefined) {\n\
            limits[attr] = val;\n\
        }\n\
    });\n\
\n\
    return limits;\n\
};\n\
\n\
CaptureProgress.get_current_from_capture = function (capture) {\n\
    var progress = {},\n\
        capture_attr;\n\
\n\
    progress_attrs.forEach(function (attr) {\n\
        capture_attr = recorder_to_capture_progress_map[attr];\n\
        progress[attr] = capture[capture_attr]();\n\
    });\n\
\n\
    return progress;\n\
};\n\
\n\
CaptureProgress.prototype.set_capture = function (capture) {\n\
    if (this.capture && this.capture.id() === capture.id()) {\n\
        return; // Short-circuit\n\
    }\n\
\n\
    if (this.model) {\n\
        this.unbind();\n\
    }\n\
\n\
    this.model = capture;\n\
\n\
    if (capture) {\n\
        this.bind();\n\
    }\n\
};\n\
\n\
CaptureProgress.prototype.render = function () {\n\
    if (!this.model) {\n\
        return; // short-circuit\n\
    }\n\
\n\
    var current = CaptureProgress.get_current_from_capture(this.model),\n\
        progress = get_progress(current, this.limits);\n\
\n\
    // Convert progress obj to an array of values\n\
    progress = Object.keys(progress).map(function (key) {\n\
        return progress[key];\n\
    });\n\
\n\
    // Get the value for the attribute with the most progress, because the first\n\
    // attribute to reach the stop criteria will cause the capture to stop\n\
    progress = Math.max.apply(null, progress);\n\
\n\
    this.$el.querySelector('.bar').style.width = (progress * 100) + '%';\n\
};\n\
\n\
CaptureProgress.prototype.bind = function () {\n\
    this.model.on('change', this.render.bind(this));\n\
};\n\
\n\
CaptureProgress.prototype.unbind = function () {\n\
    if (this.model) {\n\
        this.model.off('change', this.render.bind(this));\n\
    }\n\
    this.$el.querySelector('.bar').style.width = 0;\n\
};\n\
\n\
module.exports = CaptureProgress;\n\
//@ sourceURL=traffic-recorder/views/capture-progress.js"
));
require.register("traffic-recorder/views/delegates/recorder-view.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    template = domify(require('../../templates/recorder-view.js')),\n\
    classes = require('classes'),\n\
    event = require('event'),\n\
    emitter = require('emitter'),\n\
    CaptureView = require('../capture.js'),\n\
    last_capture_template = domify(require('../../templates/last-capture.js')),\n\
    CaptureProgress = require('../capture-progress.js'),\n\
    strings = {\n\
        \"seconds\": \"seconds\",\n\
        \"bytes\": \"bytes\",\n\
        \"packets\": \"packets\",\n\
        \"Record\": \"Record\",\n\
        \"Stop\": \"Stop\"\n\
    };\n\
\n\
function RecorderViewDelegate(recorder) {\n\
    this.parent = recorder;\n\
    this.model = this.parent.model;\n\
    this.$el = undefined;\n\
    this.progress = undefined;\n\
}\n\
\n\
emitter(RecorderViewDelegate.prototype);\n\
\n\
RecorderViewDelegate.prototype.render = function () {\n\
    var $el = template.cloneNode(true),\n\
        parent = this.parent,\n\
        model = this.model,\n\
        $title = $el.querySelector('.title'),\n\
        $selector = $el.querySelector('.selector'),\n\
        interface_selector = parent.interface_selector,\n\
        selected_interface = model.interfaces()[0],\n\
        $filter = $el.querySelector('.filter'),\n\
        $truncate_packets = $el.querySelector('.truncate-packets'),\n\
        $stop_criteria = $el.querySelector('.stop-criteria'),\n\
        stop_criteria = [],\n\
        render_text = function ($el, value, string) {\n\
            if (undefined === value || '' === value) {\n\
                classes($el).add('hidden');\n\
                $el.querySelector('span').innerHTML = '-';\n\
            } else {\n\
                classes($el).remove('hidden');\n\
                $el.querySelector('span').innerHTML = string;\n\
            }\n\
        },\n\
        $progress = $el.querySelector('.progress');\n\
\n\
    this.$el = $el;\n\
\n\
    $title.innerHTML = model.title();\n\
\n\
    while ($selector.firstChild) {\n\
        $selector.removeChild($selector.firstChild);\n\
    }\n\
    $selector.appendChild(interface_selector.render());\n\
    interface_selector.select(selected_interface, true);\n\
    interface_selector.unbind();\n\
\n\
    render_text($truncate_packets, model.max_packet_length_in_bytes(), model.max_packet_length_in_bytes() + ' ' + strings.bytes);\n\
\n\
    render_text($filter, model.filter(), model.filter());\n\
\n\
    if (undefined !== model.time_in_secs()) {\n\
        stop_criteria.push(model.time_in_secs() + ' ' + strings.seconds);\n\
    }\n\
    if (undefined !== model.stop_at_bytes()) {\n\
        stop_criteria.push(model.stop_at_bytes() + ' ' + strings.bytes);\n\
    }\n\
    if (undefined !== model.packet_count()) {\n\
        stop_criteria.push(model.packet_count() + ' ' + strings.packets);\n\
    }\n\
    stop_criteria = stop_criteria.length > 0 ? stop_criteria : undefined;\n\
    render_text($stop_criteria, stop_criteria, stop_criteria.join(', '));\n\
\n\
    this.progress = new CaptureProgress(CaptureProgress.get_limits_from_recorder(this.model));\n\
    this.progress.render();\n\
    while ($progress.firstChild) {\n\
        $progress.removeChild($progress.firstChild);\n\
    }\n\
    $progress.appendChild(this.progress.$el);\n\
\n\
    this.set_state(this.model.state());\n\
\n\
    if (this.model.last_capture()) {\n\
        this.render_last_capture();\n\
    }\n\
\n\
    this.bind();\n\
\n\
    return $el;\n\
};\n\
\n\
RecorderViewDelegate.prototype.bind = function () {\n\
    var model = this.model,\n\
        $el = this.$el,\n\
        $delete = $el.querySelector('.delete'),\n\
        destroy = this.destroy.bind(this),\n\
        $history = $el.querySelector('.history'),\n\
        history = this.emit.bind(this, \"history\"),\n\
        $toggle = $el.querySelector('.toggle'),\n\
        transition = this.transition.bind(this),\n\
        toggle = function (e) {\n\
            e.preventDefault();\n\
            model.toggle_state();\n\
            transition();\n\
        },\n\
        poll_until_done = function (capture) {\n\
            capture.on('change', this.render_last_capture.bind(this));\n\
            capture.poll();\n\
        },\n\
        last_capture = model.last_capture();\n\
\n\
    // Model -> DOM\n\
    model.on('change state', this.set_state.bind(this));\n\
    model.captures().on('added', poll_until_done.bind(this));\n\
    if (last_capture && last_capture.status() !== 'COMPLETED') {\n\
        poll_until_done.call(this, last_capture);\n\
    }\n\
\n\
    // DOM -> Model\n\
    event.bind($delete, 'click', destroy);\n\
    event.bind($history, 'click', history);\n\
    event.bind($toggle, 'click', toggle);\n\
};\n\
\n\
RecorderViewDelegate.prototype.destroy = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    if (this.model.isNew()) {\n\
        this.parent.destroy();\n\
    } else {\n\
        this.model.destroy();\n\
    }\n\
\n\
    this.emit(\"destroy\");\n\
};\n\
\n\
RecorderViewDelegate.prototype.set_state = function (state, prev) {\n\
    if (prev === state) {\n\
        // State didn't change\n\
        return; // Short-circuit\n\
    }\n\
\n\
    if ('STARTED' === state) {\n\
        this.start();\n\
    } else if ('STOPPED' === state) {\n\
        this.stop();\n\
    } else {\n\
        // Starting or stopping\n\
        this.transition();\n\
    }\n\
};\n\
\n\
RecorderViewDelegate.prototype.transition = function () {\n\
    var $progress = this.$el.querySelector('.progress'),\n\
        $toggle = this.$el.querySelector('.toggle');\n\
\n\
    // Action buttons\n\
    this.hide_actions();\n\
\n\
    // Progress bar\n\
    classes($progress).add('hidden');\n\
    this.progress.unbind();\n\
\n\
    // Start/stop button\n\
    classes($toggle).add('loading');\n\
    $toggle.disabled = true;\n\
};\n\
\n\
RecorderViewDelegate.prototype.start = function () {\n\
    var last_capture = this.model.last_capture(),\n\
        $progress = this.$el.querySelector('.progress'),\n\
        $toggle = this.$el.querySelector('.toggle'),\n\
        toggle_classed = classes($toggle);\n\
\n\
    // Action buttons\n\
    this.hide_actions();\n\
\n\
    // Progress bar\n\
    classes($progress).remove('hidden');\n\
    this.progress.set_capture(last_capture);\n\
\n\
    // Stop button\n\
    toggle_classed.add('stop');\n\
    toggle_classed.remove('start');\n\
    toggle_classed.remove('loading');\n\
    $toggle.disabled = false;\n\
    $toggle.querySelector('span').innerHTML = strings.Stop;\n\
};\n\
\n\
RecorderViewDelegate.prototype.stop = function () {\n\
    var $progress = this.$el.querySelector('.progress'),\n\
        $toggle = this.$el.querySelector('.toggle'),\n\
        toggle_classed = classes($toggle);\n\
\n\
    // Action buttons\n\
    this.show_actions();\n\
\n\
    // Progress bar\n\
    classes($progress).add('hidden');\n\
    this.progress.unbind();\n\
\n\
    // Start button\n\
    toggle_classed.add('start');\n\
    toggle_classed.remove('stop');\n\
    toggle_classed.remove('loading');\n\
    $toggle.disabled = false;\n\
    $toggle.querySelector('span').innerHTML = strings.Record;\n\
};\n\
\n\
RecorderViewDelegate.prototype.render_last_capture = function () {\n\
    var model = this.model.last_capture(),\n\
        view = CaptureView.factory(model, last_capture_template),\n\
        $capture = this.$el.querySelector('.last-capture');\n\
\n\
    view.render();\n\
    while ($capture.firstChild) {\n\
        $capture.removeChild($capture.firstChild);\n\
    }\n\
    $capture.appendChild(view.$el);\n\
};\n\
\n\
RecorderViewDelegate.prototype.show_actions = function () {\n\
    this.toggle_actions(true);\n\
};\n\
\n\
RecorderViewDelegate.prototype.hide_actions = function () {\n\
    this.toggle_actions(false);\n\
};\n\
\n\
RecorderViewDelegate.prototype.toggle_actions = function (visible) {\n\
    var $actions = this.$el.querySelectorAll('.action a'),\n\
        method = visible ? 'remove' : 'add';\n\
\n\
    [].forEach.call($actions, function ($action) {\n\
        classes($action)[method]('hidden');\n\
    });\n\
};\n\
\n\
module.exports = RecorderViewDelegate;//@ sourceURL=traffic-recorder/views/delegates/recorder-view.js"
));
require.register("traffic-recorder/views/delegates/recorder-edit.js", Function("exports, require, module",
"var classes = require('classes'),\n\
    event = require('event'),\n\
    domify = require('domify'),\n\
    template = domify(require('../../templates/recorder-edit.js')),\n\
    emitter = require('emitter'),\n\
    validate = require('validate-form'),\n\
    strings = {\n\
        'Field is required': 'Field is required',\n\
        'Must be a positive integer': 'Must be a positive integer',\n\
        'Must select an interface': 'Must select an interface',\n\
        'Cannot capture more than 10GB (10,737,418,240 bytes)': 'Cannot capture more than 10GB (10,737,418,240 bytes)'\n\
    };\n\
\n\
function render_invalid($el, err) {\n\
    var $error = document.createElement('label'),\n\
        $messages = $el.parentNode.querySelectorAll('.validator-message');\n\
\n\
    // Remove old messages\n\
    [].forEach.call($messages, function ($el) {\n\
        $el.parentNode.removeChild($el);\n\
    });\n\
\n\
    // Insert new error\n\
    $error.innerHTML = err;\n\
    classes($error).add('validator-message');\n\
    $el.parentNode.appendChild($error);\n\
\n\
    classes($el).add('invalid');\n\
}\n\
\n\
function add_optional_integer_validation(validator, $parent) {\n\
    var field = validator.field($parent.querySelector('[type=text]'))\n\
        .is(/^[1-9]\\d*$/, strings['Must be a positive integer']);\n\
\n\
    if ($parent.querySelector('[type=checkbox]').checked) {\n\
        field.is('required');\n\
    }\n\
}\n\
\n\
\n\
function RecorderEditDelegate(recorder) {\n\
    this.parent = recorder;\n\
    this.$el = template.cloneNode(true);\n\
    this.handlers = {\n\
        'click .save': this.onsave.bind(this)\n\
    };\n\
}\n\
\n\
emitter(RecorderEditDelegate.prototype);\n\
\n\
RecorderEditDelegate.prototype.render = function () {\n\
    var $el = this.$el,\n\
        parent = this.parent,\n\
        model = parent.model,\n\
        $title = $el.querySelector('.title'),\n\
        $selector = $el.querySelector('.selector'),\n\
        interface_selector = parent.interface_selector,\n\
        filter_chooser = parent.filter_chooser,\n\
        $truncate_packets = $el.querySelector('.truncate-packets'),\n\
        $filter = $el.querySelector('.filter'),\n\
        $filter_input = $filter.querySelector('input'),\n\
        $time_in_secs = $el.querySelector('.time-in-secs'),\n\
        $stop_at_bytes = $el.querySelector('.stop-at-bytes'),\n\
        $packet_count = $el.querySelector('.packet-count'),\n\
        set_combo = function ($wrapper, val) {\n\
            var $checkbox = $wrapper.querySelector('input[type=checkbox]'),\n\
                $input = $wrapper.querySelector('input[type=text]');\n\
\n\
            val = val === undefined ? '' : String(val).trim();\n\
            $checkbox.checked = val.length;\n\
            $input.disabled = !$checkbox.checked;\n\
            $input.value = val || '';\n\
        };\n\
\n\
    this.$el = $el;\n\
\n\
    // Title\n\
    $title.value = model.title();\n\
\n\
    // Interfaces\n\
    $selector.appendChild(interface_selector.$el);\n\
    interface_selector.render();\n\
\n\
    // Stop criteria\n\
    set_combo($time_in_secs, model.time_in_secs());\n\
    set_combo($stop_at_bytes, model.stop_at_bytes());\n\
    set_combo($packet_count, model.packet_count());\n\
\n\
    // Filter\n\
    $filter_input.value = model.filter();\n\
    $el.appendChild(filter_chooser.render());\n\
    filter_chooser.hide();\n\
\n\
    // Truncate packets\n\
    set_combo($truncate_packets, model.max_packet_length_in_bytes());\n\
\n\
    this.bind();\n\
\n\
    return $el;\n\
};\n\
\n\
RecorderEditDelegate.prototype.bind = function () {\n\
    var $el = this.$el,\n\
        parent = this.parent,\n\
        model = parent.model,\n\
        $title = $el.querySelector('.title'),\n\
        interface_selector = parent.interface_selector,\n\
        filter_chooser = parent.filter_chooser,\n\
        $truncate_packets = $el.querySelector('.truncate-packets'),\n\
        $filter = $el.querySelector('.filter'),\n\
        $filter_input = $filter.querySelector('input'),\n\
        $show_chooser = $filter.querySelector('.show'),\n\
        $time_in_secs = $el.querySelector('.time-in-secs'),\n\
        $stop_at_bytes = $el.querySelector('.stop-at-bytes'),\n\
        $packet_count = $el.querySelector('.packet-count'),\n\
        bind_text = function ($text, setter) {\n\
            event.bind($text, 'change', function () {\n\
                setter($text.value);\n\
            });\n\
        },\n\
        bind_combo = function ($wrapper, setter) {\n\
            var $checkbox = $wrapper.querySelector('[type=checkbox]'),\n\
                $input = $wrapper.querySelector('input[type=text]'),\n\
                val;\n\
\n\
            event.bind($checkbox, 'change', function check() {\n\
                $input.disabled = !$checkbox.checked;\n\
                val = $checkbox.checked ? (+$input.value.trim() || undefined) : undefined;\n\
                setter(val);\n\
            });\n\
\n\
            event.bind($input, 'change', function update() {\n\
                val = $checkbox.checked ? (+$input.value.trim() || undefined) : undefined;\n\
                setter(val);\n\
            });\n\
        },\n\
        $delete = this.$el.querySelector('.delete'),\n\
        destroy = function (e) {\n\
            if (e && e.preventDefault) {\n\
                e.preventDefault();\n\
            }\n\
\n\
            if (model.isNew()) {\n\
                parent.destroy();\n\
            } else {\n\
                model.destroy();\n\
            }\n\
        },\n\
        bind_validator = this.bind_validator.bind(this);\n\
\n\
    interface_selector.bind();\n\
\n\
    // Model -> DOM\n\
    model.on('change filter', function (filter) { $filter_input.value = filter; });\n\
\n\
    // DOM -> model\n\
    bind_text($title, model.title.bind(model));\n\
    event.bind($show_chooser, 'click', filter_chooser.show.bind(filter_chooser));\n\
    bind_combo($time_in_secs, model.time_in_secs.bind(model));\n\
    bind_combo($stop_at_bytes, model.stop_at_bytes.bind(model));\n\
    bind_combo($packet_count, model.packet_count.bind(model));\n\
    bind_text($filter_input, model.filter.bind(model));\n\
    bind_combo($truncate_packets, model.max_packet_length_in_bytes.bind(model));\n\
    event.bind($delete, 'click', this.emit.bind(this, \"destroy\"));\n\
\n\
    // Validator should rebind when checkboxes change (because fields become required)\n\
    event.bind($time_in_secs.querySelector('[type=checkbox]'), 'change', bind_validator);\n\
    //event.bind($stop_at_bytes.querySelector('[type=checkbox]'), 'change', bind_validator); // Field is required to prevent filling storage\n\
    event.bind($packet_count.querySelector('[type=checkbox]'), 'change', bind_validator);\n\
    event.bind($truncate_packets.querySelector('[type=checkbox]'), 'change', bind_validator);\n\
\n\
    // Bind validator to blur events and save button\n\
    bind_validator();\n\
};\n\
\n\
RecorderEditDelegate.prototype.bind_validator = function () {\n\
    var get_form_value = this.get_form_value.bind(this),\n\
        interface_selector = this.parent.interface_selector,\n\
        $title = this.$el.querySelector('.title'),\n\
        $truncate_packets = this.$el.querySelector('.truncate-packets'),\n\
        $time_in_secs = this.$el.querySelector('.time-in-secs'),\n\
        $stop_at_bytes = this.$el.querySelector('.stop-at-bytes'),\n\
        $packet_count = this.$el.querySelector('.packet-count'),\n\
        $save = this.$el.querySelector('.save'),\n\
        default_getter;\n\
\n\
    this.validator = validate(this.$el);\n\
\n\
    default_getter = this.validator.adapter.value.bind(this.validator.adapter);\n\
\n\
    this.validator\n\
        .value(get_form_value.bind(this, default_getter))\n\
        .invalid(render_invalid)\n\
        .on('blur')\n\
\n\
        //title\n\
        .field($title)\n\
        .is('required', strings['Field is required'])\n\
\n\
        // Port selector\n\
        .field(interface_selector.$el)\n\
        .is(function (val) {\n\
            return val.length;\n\
        }, strings['Must select an interface'])\n\
\n\
        // Stop after X bytes\n\
        .field($stop_at_bytes.querySelector('[type=text]'))\n\
        .is('required', strings['Field is required'])\n\
        .is(/^[1-9]\\d*$/, strings['Must be a positive integer'])\n\
        .is(function less_than_10gb(val) {\n\
            return val <= 10737418240;\n\
        }, strings['Cannot capture more than 10GB (10,737,418,240 bytes)']);\n\
\n\
    // Stop after X seconds\n\
    add_optional_integer_validation(this.validator, $time_in_secs);\n\
\n\
    // Stop after X packets\n\
    add_optional_integer_validation(this.validator, $packet_count);\n\
\n\
    // Truncate at X packets\n\
    add_optional_integer_validation(this.validator, $truncate_packets);\n\
\n\
    event.bind($save, 'click', this.handlers['click .save']);\n\
};\n\
\n\
RecorderEditDelegate.prototype.onsave = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    var save = this.parent.save.bind(this.parent);\n\
\n\
    this.validator.validate(function (unused, is_valid) {\n\
        if (is_valid) {\n\
            save();\n\
        }\n\
    });\n\
};\n\
\n\
RecorderEditDelegate.prototype.get_form_value = function (default_getter, $el) {\n\
    if (this.parent.interface_selector.$el === $el) {\n\
        return this.parent.model.interfaces();\n\
    }\n\
\n\
    if ($el.disabled) {\n\
        return '';\n\
    }\n\
\n\
    return default_getter($el);\n\
};\n\
\n\
module.exports = RecorderEditDelegate;//@ sourceURL=traffic-recorder/views/delegates/recorder-edit.js"
));
require.register("traffic-recorder/views/delegates/recorder-history.js", Function("exports, require, module",
"var BatchOperator = require('batch-operator'),\n\
    Paginator = require('paginator'),\n\
    domify = require('domify'),\n\
    template = domify(require('../../templates/recorder-history.js')),\n\
    classes = require('classes'),\n\
    event = require('event'),\n\
    emitter = require('emitter'),\n\
    moment = require('moment'),\n\
    CaptureCollection = require('../../models/capture-collection.js'),\n\
    CaptureView = require('../capture.js'),\n\
    historical_capture_template = domify(require('../../templates/historical-capture.js')),\n\
    strings = {\n\
        \"seconds\": \"seconds\",\n\
        \"bytes\": \"bytes\",\n\
        \"packets\": \"packets\",\n\
        \"Record\": \"Record\",\n\
        \"Stop\": \"Stop\"\n\
    };\n\
\n\
function RecorderHistoryDelegate(recorder) {\n\
    this.parent = recorder;\n\
    this.model = this.parent.model;\n\
    this.$el = template.cloneNode(true);\n\
    this.batch_operator = new BatchOperator();\n\
    this.paginator = new Paginator();\n\
    this.captures_per_page = 5;\n\
    this.handlers = {\n\
        'selection changed': []\n\
    };\n\
\n\
    this.batch_operator.addOperation('delete', 'Delete', this.delete.bind(this));\n\
}\n\
\n\
emitter(RecorderHistoryDelegate.prototype);\n\
\n\
RecorderHistoryDelegate.prototype.render = function () {\n\
    var $el = this.$el,\n\
        $title = $el.querySelector('.title'),\n\
        $loading = $el.querySelector('.loading'),\n\
        $error = $el.querySelector('.error'),\n\
        $batch_operator = $el.querySelector('.capture-batch-operator');\n\
\n\
    this.$el = $el;\n\
\n\
    $title.innerHTML = this.model.title();\n\
\n\
    classes($loading).remove('hidden');\n\
    classes($error).add('hidden');\n\
\n\
    this.batch_operator.render();\n\
\n\
    // Paginator rendered in .reset()\n\
\n\
    this.bind();\n\
\n\
    return $el;\n\
};\n\
\n\
function done_loading_captures(res) {\n\
    var $loading = this.$el.querySelector('.loading'),\n\
        $error = this.$el.querySelector('.error');\n\
\n\
    classes($loading).add('hidden');\n\
\n\
    if (res instanceof Error) {\n\
        classes($error).remove('hidden');\n\
    } else {\n\
        classes($error).add('hidden');\n\
    }\n\
}\n\
\n\
function get_captures(recorder_id) {\n\
    this.captures = CaptureCollection.all(done_loading_captures.bind(this), recorder_id);\n\
    this.model.captures(this.captures);\n\
}\n\
\n\
function page_changed(page) {\n\
    this.batch_operator.select_none(true);\n\
    this.render_page(page);\n\
}\n\
\n\
RecorderHistoryDelegate.prototype.bind = function () {\n\
    var recorder_id = this.model.id(),\n\
        $error = this.$el.querySelector('.error'),\n\
        $done = this.$el.querySelector('.done');\n\
\n\
    // Model -> view\n\
    get_captures.call(this, recorder_id);\n\
    this.captures.on('added', this.reset.bind(this));\n\
    this.captures.on('removed', this.reset.bind(this));\n\
    this.captures.on('reset', this.reset.bind(this));\n\
\n\
    // View -> view\n\
    this.paginator.on('change', page_changed.bind(this));\n\
    this.batch_operator.on('change', this.render_page.bind(this, null));\n\
\n\
    // DOM -> Model\n\
    event.bind($error.querySelector('a'), 'click', get_captures.bind(this, recorder_id));\n\
    event.bind($done, 'click', this.emit.bind(this, \"done\"));\n\
};\n\
\n\
RecorderHistoryDelegate.prototype.reset = function (collection, items) {\n\
    var pages = Math.ceil(this.captures.count() / this.captures_per_page);\n\
\n\
    if (pages !== this.paginator.pages()) {\n\
        this.paginator.pages(pages);\n\
    }\n\
\n\
    this.batch_operator.update();\n\
    this.paginator.render();\n\
    this.render_page(this.paginator.page);\n\
};\n\
\n\
function selection_changed(id, capture, $operator) {\n\
    this.batch_operator.toggle(id, capture);\n\
    while ($operator.firstChild) {\n\
        $operator.removeChild($operator.firstChild);\n\
    }\n\
    $operator.appendChild(this.batch_operator.$el);\n\
}\n\
\n\
/**\n\
 * Re-renders list of captures\n\
 *\n\
 * @param page 1-indexed (typically from a paginator)\n\
 */\n\
RecorderHistoryDelegate.prototype.render_page = function (page) {\n\
    page = page || this.paginator.page;\n\
    page = Math.min(page, this.paginator.pages());\n\
\n\
    var index = page - 1,\n\
        begin = index * this.captures_per_page,\n\
        end = begin + this.captures_per_page,\n\
        captures = this.captures.slice(begin, end),\n\
        items = {}, // key-value pairs for batch operator\n\
        $loading = this.$el.querySelector('.loading'),\n\
        $captures = this.$el.querySelector('.captures'),\n\
        $batch_operator = this.$el.querySelector('.capture-batch-operator'),\n\
        $paginator = this.$el.querySelector('.capture-paginator');\n\
\n\
    classes($loading).add('hidden');\n\
\n\
    // Clear any existing captures from the list\n\
    while ($captures.firstChild) {\n\
        $captures.removeChild($captures.firstChild);\n\
    }\n\
\n\
    // Insert captures for this page and build key-value pairs for batch operator\n\
    this.handlers['selection changed'] = [];\n\
    captures.map(function (capture) {\n\
        var view = CaptureView.factory(capture, historical_capture_template),\n\
            id = capture.id(),\n\
            $checkbox;\n\
\n\
        this.handlers['selection changed'][id] = selection_changed.bind(this, id, capture, $batch_operator);\n\
\n\
        view.render();\n\
        $checkbox = view.$el.querySelector('[type=checkbox]');\n\
        $checkbox.checked = this.batch_operator.isSelected(id);\n\
        event.bind($checkbox, 'change', this.handlers['selection changed'][id]);\n\
        $captures.appendChild(view.$el);\n\
\n\
        // Create key-value pair for batch operator\n\
        items[id] = capture;\n\
    }, this);\n\
\n\
    this.batch_operator.items(items);\n\
\n\
    while ($batch_operator.firstChild) {\n\
        $batch_operator.removeChild($batch_operator.firstChild);\n\
    }\n\
    if(captures.length > 0){\n\
        $batch_operator.appendChild(this.batch_operator.$el);\n\
    }\n\
\n\
    while ($paginator.firstChild) {\n\
        $paginator.removeChild($paginator.firstChild);\n\
    }\n\
    $paginator.appendChild(this.paginator.$el);\n\
\n\
    if (1 === this.paginator.pages()) {\n\
        classes($paginator).add('hidden');\n\
    } else {\n\
        classes($paginator).remove('hidden');\n\
    }\n\
};\n\
\n\
function handle_response(capture, error, response) {\n\
    if (error || response.status !== 200) {\n\
        window.logger.error('Could not delete capture ' + capture.id());\n\
        return;\n\
    }\n\
\n\
    // Remove capture from collection\n\
    this.captures.remove(capture);\n\
\n\
    this.render_page(this.paginator.page);\n\
}\n\
\n\
RecorderHistoryDelegate.prototype.delete = function (captures) {\n\
    Object.keys(captures).forEach(function (key) {\n\
        var capture = captures[key];\n\
        capture.destroy(handle_response.bind(this, capture));\n\
    }, this);\n\
\n\
    this.batch_operator.select_none(true);\n\
};\n\
\n\
module.exports = RecorderHistoryDelegate;//@ sourceURL=traffic-recorder/views/delegates/recorder-history.js"
));
require.register("traffic-recorder/models/recorder.js", Function("exports, require, module",
"var model = require('model'),\n\
    defaults = require('model-defaults'),\n\
    Interface = require('interface-model'),\n\
    Capture = require('./capture.js'),\n\
    CaptureCollection = require('./capture-collection.js'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    strings = {\n\
        'New recorder': 'New recorder'\n\
    },\n\
    capture_status_map = {\n\
        \"COMPLETED\": \"STOPPED\",\n\
        \"STOPPED\": \"STOPPED\",\n\
        \"RUNNING\": \"STARTED\",\n\
        \"STARTED\": \"STARTED\",\n\
        \"INITIALIZING\": \"INITIALIZING\"\n\
    };\n\
\n\
var Recorder = model('Recorder')\n\
    .use(defaults)\n\
    .route('/spirent/traffic-recorder/recorders')\n\
    .attr('id')\n\
    .attr('title', {default: strings['New recorder']})\n\
    .attr('state', {default: 'STOPPED'})\n\
    .attr('captures', {default: function () { return new CaptureCollection([]); }})\n\
    .attr('filter', {default: ''})\n\
    .attr('stop_at_bytes', {default: 10737418240})\n\
    .attr('packet_count')\n\
    .attr('time_in_secs')\n\
    .attr('interfaces', {default: []})\n\
    .attr('max_packet_length_in_bytes');\n\
\n\
Recorder.headers({\n\
    'X-Requested-With': 'XMLHttpRequest',\n\
    'Cache-Control': 'no-cache',\n\
    'Accept': 'application/json'\n\
});\n\
\n\
/**\n\
 * Returns a new Recorder instance from an Object (e.g. from an AJAX response body)\n\
 * @param obj\n\
 * @returns {Recorder}\n\
 */\n\
Recorder.factory = function (obj) {\n\
    obj.max_packet_length_in_bytes = obj.config.max_packet_length_in_bytes;\n\
    obj.filter = obj.config.filter;\n\
    var stop_criteria = obj.config.stop_criteria || [],\n\
        interfaces = obj.config.interfaces || [];\n\
\n\
    obj.captures = new CaptureCollection(obj.captures || []);\n\
    obj.interfaces = interfaces.map(function (iface) {\n\
        return new Interface(iface);\n\
    });\n\
\n\
    stop_criteria.forEach(function (criterium) {\n\
        var attr = criterium.type,\n\
            val = criterium.limit;\n\
        if(\"size_in_bytes\" === attr){\n\
            obj['stop_at_bytes'] = val;\n\
        }else{\n\
            obj[attr] = val;\n\
        }\n\
    });\n\
\n\
    return new Recorder(obj);\n\
};\n\
\n\
Recorder.prototype.interface = function (iface) {\n\
    this.interfaces([iface]);\n\
};\n\
\n\
Recorder.prototype.toggle_state = function (fn) {\n\
    var update = 'STOPPED' === this.state() ? this.start : this.stop;\n\
    update.call(this, fn);\n\
};\n\
\n\
Recorder.prototype.start = function (fn) {\n\
    return this.set_state('START', fn);\n\
};\n\
\n\
Recorder.prototype.stop = function (fn) {\n\
    return this.set_state('STOP', fn);\n\
};\n\
\n\
Recorder.prototype.set_state = function (state, fn) {\n\
    fn = fn || function () {};\n\
\n\
    var url = this.url('state'),\n\
        capture,\n\
        recorder = this,\n\
        captures;\n\
\n\
    request.post(url)\n\
        .use(no_cache)\n\
        .set('Accept', 'application/json')\n\
        .send({action: state})\n\
        .end(function (err, res) {\n\
            if (err) {\n\
                return fn(new Error(err));\n\
            }\n\
\n\
            if (!res.ok) {\n\
                return fn(new Error(res.status));\n\
            }\n\
\n\
            if (res.body) {\n\
                // Started a new capture\n\
                capture = new Capture(res.body);\n\
                capture.on('change status', function handle_change(status) {\n\
                    status = capture_status_map[status]\n\
                    recorder.state(status);\n\
                });\n\
                captures = recorder.captures();\n\
                captures.push(capture);\n\
                recorder.captures(captures);\n\
                recorder.state('INITIALIZING');\n\
            }\n\
\n\
            return fn(recorder);\n\
        });\n\
};\n\
\n\
Recorder.prototype.stop_criteria = function () {\n\
    var criteria = [];\n\
\n\
    if (undefined !== this.stop_at_bytes()) {\n\
        criteria.push({\n\
            type: 'size_in_bytes',\n\
            limit: this.stop_at_bytes()\n\
        });\n\
    }\n\
    if (undefined !== this.packet_count()) {\n\
        criteria.push({\n\
            type: 'packet_count',\n\
            limit: this.packet_count()\n\
        });\n\
    }\n\
    if (undefined !== this.time_in_secs()) {\n\
        criteria.push({\n\
            type: 'time_in_secs',\n\
            limit: this.time_in_secs()\n\
        });\n\
    }\n\
\n\
    return criteria;\n\
};\n\
\n\
Recorder.prototype.last_capture = function () {\n\
    return this.captures().last_capture();\n\
};\n\
\n\
Recorder.prototype.toJSON = function () {\n\
    // Used by .save()\n\
\n\
    return {\n\
        title: this.title(),\n\
        interfaces: this.interfaces(),\n\
        filter: this.filter(),\n\
        stop_criteria: this.stop_criteria(),\n\
        max_packet_length_in_bytes: this.max_packet_length_in_bytes()\n\
    };\n\
};\n\
\n\
Recorder.primaryKey = 'id';\n\
\n\
module.exports = Recorder;//@ sourceURL=traffic-recorder/models/recorder.js"
));
require.register("traffic-recorder/models/recorder-collection.js", Function("exports, require, module",
"var emitter = require('emitter'),\n\
    Recorder = require('./recorder.js'),\n\
    Interface = require('interface-model');\n\
\n\
function Collection() {}\n\
Collection.prototype = Object.create(Array.prototype);\n\
\n\
emitter(Collection.prototype);\n\
\n\
Collection.get = function (fn) {\n\
    fn = fn || function () {};\n\
    var recorders = new this(),\n\
        map_recorders = function (err, collection) {\n\
            if(collection){\n\
                collection.forEach(function (recorder) {\n\
                    recorder = Recorder.factory(recorder.attrs);\n\
                    recorders.push(recorder, true);\n\
                });\n\
            }\n\
            recorders.emit('reset', recorders);\n\
            fn(recorders);\n\
        };\n\
\n\
    Recorder.all(map_recorders);\n\
    return recorders;\n\
};\n\
\n\
Collection.prototype.push = function (item, silent) {\n\
    silent = silent || false;\n\
    Array.prototype.push.call(this, item);\n\
    if (!silent) {\n\
        this.emit('added', item);\n\
    }\n\
};\n\
\n\
Collection.prototype.indexOf = function (item) {\n\
    var id = item.id(),\n\
        index = -1;\n\
\n\
    this.map(function (current, i) {\n\
        if (-1 === index && id === current.id()) {\n\
            index = i;\n\
        }\n\
    });\n\
\n\
    return index;\n\
};\n\
\n\
\n\
module.exports = Collection;//@ sourceURL=traffic-recorder/models/recorder-collection.js"
));
require.register("traffic-recorder/models/capture.js", Function("exports, require, module",
"var model = require('model'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    emitter = require('emitter'),\n\
    noop = function () {},\n\
    logger = window.logger,\n\
    Poller = require('async-poller');\n\
\n\
// Read-only\n\
var Capture = model('Capture')\n\
    .route('/spirent/traffic-recorder/captures')\n\
    .attr('id')\n\
    .attr('uri')\n\
    .attr('title')\n\
    .attr('recorder_id')\n\
    .attr('recorder_uri')\n\
    .attr('status')\n\
    .attr('started')\n\
    .attr('ended')\n\
    .attr('interfaces')\n\
    .attr('time_in_secs')\n\
    .attr('size_in_bytes')\n\
    .attr('file_size_in_bytes')\n\
    .attr('packet_count')\n\
    .attr('download_uri')\n\
    .attr('delete_uri');\n\
\n\
emitter(Capture.prototype);\n\
\n\
Capture.primaryKey = 'id';\n\
\n\
Capture.get_for_recorder = function (recorder_id, next) {\n\
    Capture.get('?recorder_id=' + recorder_id, next);\n\
};\n\
\n\
Capture.prototype.download = function (next) {\n\
    next = next || function () {};\n\
    Capture.get(this.id() + '/data', next);\n\
};\n\
\n\
Capture.prototype.poll = function (success, error) {\n\
    success = success || noop;\n\
    error = error || noop;\n\
\n\
    var self = this,\n\
        error_count = 0,\n\
        poller,\n\
        fn = function (next) {\n\
            request.get(self.url())\n\
                .use(no_cache)\n\
                .end(function update(res) {\n\
                    if (res.error) {\n\
                        logger.error(res.error);\n\
                        error_count += 1;\n\
\n\
                        if (error_count > 3) {\n\
                            // Give up\n\
                            return error(res.error);\n\
                        }\n\
                    } else {\n\
                        self.set(res.body);\n\
                    }\n\
\n\
                    if ('COMPLETED' === self.status()) {\n\
                        poller.stop();\n\
                        return success(res, self);\n\
                    }\n\
\n\
                    return next();\n\
                });\n\
        };\n\
\n\
    poller = new Poller(fn, 1000);\n\
    poller.poll();\n\
    return poller;\n\
};\n\
\n\
module.exports = Capture;//@ sourceURL=traffic-recorder/models/capture.js"
));
require.register("traffic-recorder/models/capture-collection.js", Function("exports, require, module",
"var emitter = require('emitter'),\n\
    Capture = require('./capture.js'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache');\n\
\n\
function sort_by_started(captures, oldest_first) {\n\
    captures = captures.sort(function (a, b) {\n\
        var a_started = typeof a.started === 'function' ? a.started() : a.started,\n\
            b_started = typeof b.started === 'function' ? b.started() : b.started,\n\
            ret;\n\
\n\
        if (a_started === b_started) {\n\
            return 0;\n\
        }\n\
\n\
        a = Date.parse(a_started);\n\
        b = Date.parse(b_started);\n\
\n\
        ret = a - b;\n\
        if (!oldest_first) {\n\
            // Reverse\n\
            ret = -ret;\n\
        }\n\
        return ret;\n\
    });\n\
\n\
    return captures;\n\
}\n\
\n\
function Collection(collection) {\n\
    if (collection instanceof Collection) {\n\
        return collection;\n\
    }\n\
\n\
    collection = collection || [];\n\
\n\
    this.items = [];\n\
\n\
    collection = sort_by_started(collection);\n\
\n\
    collection.forEach(function (item, i) {\n\
        this.items[i] = new Capture(item);\n\
    }, this);\n\
\n\
    return this;\n\
}\n\
\n\
emitter(Collection.prototype);\n\
\n\
Collection.all = function (fn, recorder_id) {\n\
    var collection = new Collection(),\n\
        emit = collection.emit.bind(collection);\n\
\n\
    fn = fn || function () {};\n\
\n\
    request.get(Capture.url() + '?recorder_id=' + recorder_id)\n\
        .use(no_cache)\n\
        .set('Accept', 'application/json')\n\
        .end(function (err, res) {\n\
            var tmp;\n\
\n\
            if (err) {\n\
                fn(new Error(err));\n\
            }\n\
\n\
            if (!res.ok) {\n\
                fn(new Error(res.status));\n\
            }\n\
\n\
            tmp = new Collection(res.body);\n\
\n\
            collection.items = tmp.items;\n\
\n\
            emit(\"reset\", collection, res.body);\n\
\n\
            fn(collection);\n\
        });\n\
\n\
    return collection;\n\
};\n\
\n\
/**\n\
 * Returns last capture or undefined\n\
 *\n\
 * @returns {Capture|undefined}\n\
 */\n\
Collection.prototype.last_capture = function () {\n\
    // Captures are sorted (most-recent first) during instantiation (see constructor)\n\
    return this.items[0];\n\
};\n\
\n\
Collection.prototype.push = function (item, silent) {\n\
    silent = silent || false;\n\
\n\
    var items = this.items;\n\
\n\
    items.splice(0, 0, item);\n\
    this.items = sort_by_started(items);\n\
\n\
    if (!silent) {\n\
        this.emit('added', item);\n\
    }\n\
};\n\
\n\
Collection.prototype.remove = function (item, silent) {\n\
    this.items.forEach(function (current, i) {\n\
        if (current.id() === item.id()) {\n\
            this.items.splice(i, 1);\n\
        }\n\
    }, this);\n\
\n\
    if (!silent) {\n\
        this.emit('removed', item);\n\
    }\n\
};\n\
\n\
Collection.prototype.indexOf = function (item) {\n\
    var id = item.id(),\n\
        index = -1;\n\
\n\
    this.items.map(function (current, i) {\n\
        if (-1 === index && id === current.id()) {\n\
            index = i;\n\
        }\n\
    });\n\
\n\
    return index;\n\
};\n\
\n\
Collection.prototype.count = function () {\n\
    return this.items.length;\n\
};\n\
\n\
/**\n\
 * Just like Array.slice\n\
 *\n\
 * @param begin (zero-indexed; inclusive)\n\
 * @param end  (zero-indexed; non-inclusive)\n\
 * @returns Array\n\
 */\n\
Collection.prototype.slice = function (begin, end) {\n\
    return this.items.slice(begin, end);\n\
};\n\
\n\
module.exports = Collection;//@ sourceURL=traffic-recorder/models/capture-collection.js"
));
require.register("traffic-recorder/templates/index.js", Function("exports, require, module",
"module.exports = '<div class=\"traffic-recorder\">\\n\
    <div class=\"recorders container\"></div>\\n\
    <div>\\n\
        <button class=\"add\"><span>+ Add new traffic recorder</span></button>\\n\
    </div>\\n\
</div>';//@ sourceURL=traffic-recorder/templates/index.js"
));
require.register("traffic-recorder/templates/capture-progress.js", Function("exports, require, module",
"module.exports = '<div class=\"capture-progress\">\\n\
    <div class=\"bar\">&nbsp;</div>\\n\
</div>\\n\
';//@ sourceURL=traffic-recorder/templates/capture-progress.js"
));
require.register("traffic-recorder/templates/recorder-view.js", Function("exports, require, module",
"module.exports = '<div class=\"recorder single-pane view\">\\n\
    <div><h1 class=\"title\"></h1></div>\\n\
    <div>\\n\
        <div class=\"body\">\\n\
            <h2 class=\"device\"></h2>\\n\
            <ul>\\n\
                <li class=\"selector\"></li>\\n\
                <li class=\"stop-criteria\"><label>Stop after</label> <span>N/A</span></li>\\n\
                <li class=\"filter\"><label>Capture packets that match</label> <span>N/A</span></li>\\n\
                <li class=\"truncate-packets\"><label>Truncate packets at</label> <span>N/A</span></li>\\n\
            </ul>\\n\
        </div><div class=\"last-capture\"></div>\\n\
    </div>\\n\
    <div class=\"footer\">\\n\
        <ul class=\"padding\">\\n\
            <li class=\"progress\">\\n\
            </li><li class=\"action\">\\n\
                <a class=\"delete\" href=\"#\">Delete</a>\\n\
            </li><li class=\"action\">\\n\
                <a class=\"history\" href=\"#\">History</a>\\n\
            </li><li class=\"action\">\\n\
                <a class=\"duplicate\" href=\"#\">Duplicate</a>\\n\
            </li><li>\\n\
                <button class=\"toggle button dark start\"><span>Record</span></button>\\n\
            </li>\\n\
        </ul>\\n\
    </div>\\n\
</div>';//@ sourceURL=traffic-recorder/templates/recorder-view.js"
));
require.register("traffic-recorder/templates/recorder-edit.js", Function("exports, require, module",
"module.exports = '<div class=\"recorder single-pane edit\">\\n\
    <div><input type=\"text\" class=\"title\" /></div>\\n\
    <div>\\n\
        <div class=\"body\">\\n\
            <ul>\\n\
                <li>\\n\
                    <label>Select a port</label>\\n\
                    <div class=\"selector\"></div>\\n\
                </li>\\n\
                <li class=\"stop-criteria\"><label>Stop after (whichever comes first)</label>\\n\
                    <ul>\\n\
                        <li class=\"time-in-secs\"><label><input type=\"checkbox\" /> Seconds</label> <input type=\"text\" /></li>\\n\
                        <li class=\"stop-at-bytes\"><label><input type=\"checkbox\" disabled /> Bytes</label> <input type=\"text\" />(required)</li>\\n\
                        <li class=\"packet-count\"><label><input type=\"checkbox\" /> Packets</label> <input type=\"text\" /></li>\\n\
                    </ul>\\n\
                </li>\\n\
                <li class=\"filter\"><label class=\"for-input\">Capture filter</label> <input type=\"text\" class=\"with-label\" /> <span  class=\"show\">Presets</span></li>\\n\
                <li class=\"truncate-packets\"><label><input type=\"checkbox\" /> Truncate packets at</label> <input type=\"text\"/> bytes</li>\\n\
            </ul>\\n\
        </div>\\n\
    </div>\\n\
    <div class=\"footer\">\\n\
        <ul class=\"padding\">\\n\
            <li class=\"action\">\\n\
                <a class=\"delete\" href=\"#\">Delete</a>\\n\
            </li><li>\\n\
            </li><li>\\n\
            </li><li>\\n\
                <button class=\"toggle button dark save\"><span>Save</span></button>\\n\
            </li>\\n\
        </ul>\\n\
    </div>\\n\
</div>\\n\
';//@ sourceURL=traffic-recorder/templates/recorder-edit.js"
));
require.register("traffic-recorder/templates/recorder-history.js", Function("exports, require, module",
"module.exports = '<div class=\"recorder single-pane history\">\\n\
    <div><h1 class=\"title\"></h1></div>\\n\
    <div>\\n\
        <div class=\"body\">\\n\
            <h2>View history</h2>\\n\
            <div class=\"loading\">Loading</div>\\n\
            <div class=\"error hidden\">Error loading results <a href=\"#\">Retry</a></div>\\n\
            <ul class=\"captures\"></ul>\\n\
            <div class=\"capture-batch-operator\"></div>\\n\
            <div class=\"capture-paginator\"></div>\\n\
        </div>\\n\
    </div>\\n\
    <div class=\"footer\">\\n\
        <ul class=\"padding\">\\n\
            <li class=\"progress\">\\n\
            </li><li class=\"action\">\\n\
            </li><li class=\"action\">\\n\
            </li><li class=\"action\">\\n\
            </li><li>\\n\
                <button class=\"toggle button dark done\"><span>Done</span></button>\\n\
            </li>\\n\
        </ul>\\n\
    </div>\\n\
</div>';//@ sourceURL=traffic-recorder/templates/recorder-history.js"
));
require.register("traffic-recorder/templates/last-capture.js", Function("exports, require, module",
"module.exports = '<ul>\\n\
    <li><h2>Last capture</h2></li>\\n\
    <li class=\"none\">No completed captures</li>\\n\
    <li class=\"started\"></li>\\n\
    <li class=\"duration\"></li>\\n\
    <li class=\"size\"></li>\\n\
    <li class=\"packets\"></li>\\n\
    <li class=\"download\"><a href=\"#\">Download</a></li>\\n\
</ul>';//@ sourceURL=traffic-recorder/templates/last-capture.js"
));
require.register("traffic-recorder/templates/historical-capture.js", Function("exports, require, module",
"module.exports = '<li class=\"historical-capture\">\\n\
    <input type=\"checkbox\" />\\n\
    <ul>\\n\
        <li class=\"none\">No completed captures</li>\\n\
        <li class=\"title\"></li>\\n\
        <li class=\"started\"></li>\\n\
        <li class=\"duration\"></li>\\n\
        <li class=\"size\"></li>\\n\
        <li class=\"packets\"></li>\\n\
    </ul>\\n\
    <div class=\"download\"><a href=\"#\">Download</a></div>\\n\
</li>';//@ sourceURL=traffic-recorder/templates/historical-capture.js"
));
require.register("traffic-recorder/test/features.js", Function("exports, require, module",
"//(function() {\n\
//var Yadda = require('yadda'),\n\
//    English = Yadda.localisation.English,\n\
//    FeatureParser = Yadda.parsers.FeatureParser,\n\
//    parser = new FeatureParser(English),\n\
//    recorder = require('traffic-recorder/features/recorder.feature.js'),\n\
//    steps = require('traffic-recorder/features/steps/recorder.js'),\n\
//    steps = new Yadda.Yadda(steps),\n\
//    steps = steps.yadda.bind(steps);\n\
//\n\
//mocha.setup('bdd');\n\
//Yadda.plugins.mocha();\n\
//\n\
//feature(recorder, function (feature) {\n\
//    scenarios(feature.scenarios, function(scenario, done) {\n\
//        steps(scenario.steps, done);\n\
//    });\n\
//});\n\
//})();//@ sourceURL=traffic-recorder/test/features.js"
));
require.register("traffic-recorder/features/recorder.feature.js", Function("exports, require, module",
"module.exports = 'Feature: A single traffic recorder\\n\
\\n\
  Scenario: Initial state\\n\
\\n\
    Given I have no recorder\\n\
    When I add a recorder\\n\
    Then the default device is selected\\n\
    And the name is \"New recorder\"\\n\
    And no ports are selected\\n\
    And the option to truncate packets is not selected\\n\
    And none of the stop criteria are selected\\n\
    And the capture filter is blank\\n\
\\n\
  Scenario: Changing the name\\n\
\\n\
    Given I have a new recorder\\n\
    When I click the name\\n\
    Then I should be able to edit the name\\n\
\\n\
  Scenario: Selecting a port\\n\
\\n\
    Given I have a new recorder\\n\
    When I click physical port 1\\n\
    Then physical port 1 should appear selected\\n\
    And physical port 1 should appear in the configuration\\n\
\\n\
  Scenario: Attempting to select a second port (not allowed)\\n\
\\n\
    Given I have a recorder with physical port 1 selected\\n\
    When I click physical port 2\\n\
    Then only physical port 2 should appear selected\\n\
    And only physical port 2 should appear in the configuration\\n\
\\n\
  Scenario: Enabling packet truncation\\n\
\\n\
    Given I have a new recorder\\n\
    When I turn packet truncation on\\n\
    Then a default value for packet size should appear in bytes\\n\
    And an option to change packet size should exist\\n\
    And packet truncation at the default value should appear in the configuration\\n\
';//@ sourceURL=traffic-recorder/features/recorder.feature.js"
));
require.register("traffic-recorder/features/steps/recorder.js", Function("exports, require, module",
"var assert = require('chai').assert,\n\
    English = require('yadda').localisation.English,\n\
    View = require('../../views/recorder.js'),\n\
    recorder,\n\
    devices = [{id: 1, name: \"Default\"}];\n\
\n\
module.exports = English.library()\n\
    .given(\"I have no recorder\", function (next) {\n\
        next();\n\
    })\n\
    .when(\"I add a recorder\", function (next) {\n\
        recorder = new View(devices);\n\
        recorder.render();\n\
        next();\n\
    })\n\
    .then(\"the default device is selected\", function (next) {\n\
        var device_name = recorder.$el.name,\n\
            default_name = devices[0].name;\n\
\n\
        assert.strictEqual(device_name, default_name);\n\
        next();\n\
    })\n\
    .then('the name is \"New recorder\"')\n\
    .then('no ports are selected')\n\
    .then('the option to truncate packets is not selected')\n\
    .then('none of the stop criteria are selected')\n\
    .then('the capture filter is blank')//@ sourceURL=traffic-recorder/features/steps/recorder.js"
));
require.register("player/index.js", Function("exports, require, module",
"module.exports = {\n\
    delegates: {\n\
        \"test-view-model\": require('./delegates/test-view-model.js')\n\
    }\n\
};//@ sourceURL=player/index.js"
));
require.register("player/delegates/test-view-model.js", Function("exports, require, module",
"/**\n\
 * Implements the delegated behavior of the traffic player.\n\
 * See parent, TestViewModel.\n\
 */\n\
\n\
var domify = require('domify'),\n\
    template = domify(require('../templates/header.js')),\n\
    ko = window.ko,\n\
    util = require('utility-functions');\n\
\n\
function PlayerTestViewModelDelegate() {\n\
    this.parent = undefined;\n\
    this.$el = undefined;\n\
}\n\
\n\
PlayerTestViewModelDelegate.prototype.setParent = function (parent) {\n\
    this.parent = parent;\n\
};\n\
\n\
PlayerTestViewModelDelegate.prototype.canRenderTab = function (tab_name) {\n\
    return 'test' === tab_name;\n\
};\n\
\n\
PlayerTestViewModelDelegate.prototype.render = function () {\n\
    this.$el = template.cloneNode(true);\n\
\n\
    ko.applyBindings(this.parent, this.$el);\n\
\n\
    return this.$el;\n\
};\n\
\n\
PlayerTestViewModelDelegate.prototype.validate = function (result) {\n\
    return result;\n\
};\n\
\n\
PlayerTestViewModelDelegate.prototype.loadTest = function(testConfiguration, testEvent) {\n\
    var callback = function() {\n\
        this.parent.hasResults(false);\n\
        this.parent.vmResults.percentComplete(null);\n\
        //this.testResultsTemplateName('placeholder-template');\n\
        //this.vmResults.reset();\n\
        this.parent.vmDocumentation.loadTest(testConfiguration);\n\
        this.parent.vmConfiguration.loadTest(testConfiguration);\n\
        this.parent.rootVm.selectTab('test');\n\
        this.parent.selectTab('configuration');\n\
    }.bind(this);\n\
\n\
    this.parent.ensureUnreservedOrFail(callback);\n\
};\n\
\n\
PlayerTestViewModelDelegate.prototype.openTestCreationLightbox = function() {\n\
    var complete = function(){\n\
            var lightboxViewModel = new LightboxViewModel(this.parent);\n\
            ko.applyBindings(lightboxViewModel, document.getElementById(\"lightbox\"));\n\
        }.bind(this);\n\
\n\
    this.parent.ensureUnreservedOrFail(function() {\n\
        util.lightbox.open({\n\
            url : \"html/lightbox_tmpl\",\n\
            selector : \"#lightbox-create-test-tmpl\",\n\
            cancelSelector: \".cancel-button\",\n\
            onOpenComplete: complete\n\
        });\n\
    })\n\
};\n\
\n\
PlayerTestViewModelDelegate.prototype.closeTestEditor = function () {\n\
    // Not used\n\
};\n\
\n\
PlayerTestViewModelDelegate.prototype.openSaveModal = function() {\n\
    var complete = function(){\n\
            this.parent.startState = {\n\
                name: this.parent.name()\n\
            };\n\
            ko.applyBindings(this.parent, document.getElementById('lightbox-save-test'));\n\
        }.bind(this),\n\
        close = function(){\n\
            if (this.parent.name() === '' || this.parent.name() != this.parent.startState.name) {\n\
                this.parent.name(this.parent.startState.name);\n\
            }\n\
            this.parent.preValidationResult(null);\n\
        }.bind(this);\n\
\n\
    util.lightbox.open({\n\
        url : 'html/lightbox_tmpl',\n\
        selector : '#lightbox-save-test-template',\n\
        cancelSelector: '.cancel-button',\n\
        onOpenComplete: complete,\n\
        onClose: close\n\
    });\n\
};\n\
\n\
PlayerTestViewModelDelegate.prototype.afterRender = function () {\n\
    var self = this,\n\
        selected_tab = self.parent.rootVm.selectedTab(),\n\
        $parent = document.querySelector('.' + selected_tab),\n\
        $header;\n\
\n\
\n\
    self.render();\n\
\n\
    // Remove existing HTML from .test-controller\n\
    $header = $parent.querySelector('.test-controller');\n\
    while ($header.firstChild) {\n\
        $header.removeChild($header.firstChild);\n\
    }\n\
\n\
    // Append new header delegate view\n\
    $header.appendChild(self.$el);\n\
}\n\
\n\
module.exports = PlayerTestViewModelDelegate;//@ sourceURL=player/delegates/test-view-model.js"
));
require.register("player/templates/header.js", Function("exports, require, module",
"module.exports = '<div class=\"header player\" data-bind=\"css: {running: isTestRunning, indefinite: indefinite}\">\\n\
    <div class=\"container\" data-bind=\"rentalBlockUI: {}\">\\n\
        <div class=\"test-player\">\\n\
            <div class=\"progress\">\\n\
                <div class=\"top-dots\">\\n\
                    <div class=\"fill\" data-bind=\"attr: { \\'style\\': \\'width: \\'+vmResults.percentComplete()+\\'%\\' }\"></div>\\n\
                </div>\\n\
                <div class=\"top-middle-dots\">\\n\
                    <div class=\"fill\" data-bind=\"attr: { \\'style\\': \\'width: \\'+vmResults.percentComplete()+\\'%\\' }\"></div>\\n\
                </div>\\n\
                <div class=\"bar-segments\">\\n\
                    <div class=\"fill\" data-bind=\"attr: { \\'style\\': \\'width: \\'+vmResults.percentComplete()+\\'%\\' }\"></div>\\n\
                </div>\\n\
                <div class=\"bottom-middle-dots\">\\n\
                    <div class=\"fill\" data-bind=\"attr: { \\'style\\': \\'width: \\'+vmResults.percentComplete()+\\'%\\' }\"></div>\\n\
                </div>\\n\
                <div class=\"bottom-dots\">\\n\
                    <div class=\"fill\" data-bind=\"attr: { \\'style\\': \\'width: \\'+vmResults.percentComplete()+\\'%\\' }\"></div>\\n\
                </div>\\n\
            </div>\\n\
            <div class=\"run\" data-bind=\"click: runTest, clickBubble: false\"><img src=\"images/test-player-play-button.png\" class=\"test-play-button\" data-bind=\"visible: vmResults.status() != \\'running\\'\"><img src=\"images/test-player-stop-button.png\" class=\"test-stop-button\" data-bind=\"visible: vmResults.status() == \\'running\\'\"></div>\\n\
            <div class=\"duration\">\\n\
                <p class=\"duration-header\" data-bind=\"text: strings.Duration + \\':\\'\">Duration:</p>\\n\
                <p data-bind=\"text: vmConfiguration.formattedDuration\" class=\"duration-text\"></p>\\n\
                <select data-bind=\"options: availableDurations, optionsText: \\'text\\', optionsValue: \\'value\\', value: vmConfiguration.duration, disable: vmResults.status() == \\'running\\', css: { \\'disabled\\': vmResults.status() == \\'running\\' }\"></select>\\n\
            </div>\\n\
            <div class=\"duration indefinite\">\\n\
                <p class=\"duration-header\" data-bind=\"text: strings[\\'Duration is based on configuration\\']\">Duration is based on configuration</p>\\n\
            </div>\\n\
        </div>\\n\
        <div class=\"test-detail\">\\n\
            <ul>\\n\
                <li><h2 data-bind=\"text: vmConfiguration.name\"></h2></li>\\n\
                <li><h3 data-bind=\"text: vmConfiguration.categories()[0].name\"></h3></li>\\n\
                <li>\\n\
                    <span class=\"round-button-outer\" data-bind=\"visible: vmResults.status() != \\'running\\'\"><a class=\"round-button\" href=\"javascript:void(0);\" data-bind=\"click: openSaveModal, clickBubble: false\"><span class=\"round-button-text\" data-bind=\"text: strings.save\">SAVE</span><img src=\"images/save.png\" /></a></span>\\n\
                    <!--<span class=\"round-button-outer\"><a class=\"round-button\" href=\"javascript:void(0);\" data-bind=\"click: openHelpModal, clickBubble: false\"><img class=\"question_mark_button\" src=\"images/question-mark.png\" /></a></span>-->\\n\
                </li>\\n\
            </ul>\\n\
        </div>\\n\
        <div class=\"clear\"></div>\\n\
    </div>\\n\
</div>';//@ sourceURL=player/templates/header.js"
));
require.register("test-view-model/index.js", Function("exports, require, module",
"var DefaultHeaderDelegate = require('player').delegates[\"test-view-model\"],\n\
    indefinite_modules = [\n\
        \"axon.testcases.spirent.throughput_test\"\n\
    ],\n\
    util = require('utility-functions');\n\
\n\
/**\n\
 * Test configuration page - manages ConfiguredTestViewModel internally\n\
 *\n\
 * @param rootVModel SpirentEnterpriseViewModel\n\
 * @param delegate\n\
 * @constructor\n\
 */\n\
function TestViewModel(rootVModel, delegate) {\n\
    var self = this;\n\
\n\
    self.rootVm = rootVModel;\n\
\n\
    self.getAvailableTracks = self.rootVm.getAvailableTracks;\n\
    self.getAvailablePlaylists = self.rootVm.getAvailablePlaylists;\n\
    self.getAvailableDevices = self.rootVm.getAvailableDevices;\n\
    self.getAvailableEndpoints = self.rootVm.getAvailableEndpoints;\n\
    self.getAvailableTests = self.rootVm.getAvailableTests;\n\
    self.getAvailableDatapoints = self.rootVm.getAvailableDatapoints;\n\
    self.availableTracks = self.rootVm.availableTracks;\n\
    self.availablePlaylists = self.rootVm.availablePlaylists;\n\
    self.availableDevices = self.rootVm.availableDevices;\n\
    self.availableEndpoints = self.rootVm.availableEndpoints;\n\
    self.availableTests = self.rootVm.availableTests;\n\
    self.userTests = self.rootVm.userTests;\n\
    self.factoryTests = self.rootVm.factoryTests;\n\
    self.availableTestsByCategory = self.rootVm.availableTestsByCategory;\n\
    self.availableDatapointsMap = self.rootVm.availableDatapointsMap;\n\
    self.getResultTypes = self.rootVm.getResultTypes;\n\
    self.availableCustomers = self.rootVm.availableCustomers;\n\
    self.availableLocations = self.rootVm.availableLocations;\n\
    self.availableTags = self.rootVm.availableTags;\n\
\n\
    self.strings = {\n\
        \"save\": translate('Save'),\n\
        \"close\": translate('CLOSE'),\n\
        \"Duration\": translate('Duration'),\n\
        \"Duration is based on configuration\": translate(\"Duration is based on configuration\")\n\
    };\n\
\n\
    self.availableDurations = [];\n\
    for (var i = 1; i <= 15; i++) {\n\
        self.availableDurations.push({\n\
            value: i,\n\
            text: translate('{value} MIN', {\n\
                value: i\n\
            })\n\
        });\n\
    }\n\
    for (var i = 20; i <= 120; i+=5) {\n\
        self.availableDurations.push({\n\
            value: i,\n\
            text: translate('{value} MIN', {\n\
                value: i\n\
            })\n\
        });\n\
    }\n\
\n\
    self.vmConfiguration = new ConfiguredTestViewModel(self);\n\
    self.vmResults = new TestResultsViewModel(self);\n\
    self.vmDocumentation = new TestDocumentationViewModel(self);\n\
    self.vmSidebar = new TestSidebarViewModel(self);\n\
\n\
    self.startingTab = self.vmSidebar.startingTab;\n\
    self.name = self.vmConfiguration.name;\n\
    self.description = self.vmConfiguration.description;\n\
    self.initializeAvailableTestsDraggable = self.vmSidebar.initializeAvailableTestsDraggable;\n\
\n\
    self.selectedTab = ko.observable();\n\
    self.startingTab = 'configuration';\n\
\n\
    self.selectedTab(self.startingTab);\n\
\n\
//    self.selectedTab.subscribe(self.onSelectedTabUpdated.bind(self));\n\
\n\
    self.isTestRunning = ko.observable(false);\n\
    self.hasResults = ko.observable(false);\n\
\n\
    self.testConfigurationTemplateName = ko.observable('placeholder-template');\n\
    self.testResultsTemplateName = ko.observable('placeholder-template');\n\
    self.testDocumentationTemplateName = ko.observable('placeholder-template');\n\
\n\
    self.save = self.vmConfiguration.save.bind(self.vmConfiguration);\n\
\n\
    self.displayTags = ko.computed({\n\
        read: self.vmConfiguration.displayTagsRead.bind(self.vmConfiguration),\n\
        write: self.vmConfiguration.displayTagsWrite.bind(self.vmConfiguration)\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.configurationTabClass = ko.computed(self.getTabClassFor.bind(self, 'configuration')).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.resultsTabClass = ko.computed(self.getTabClassForResults.bind(self, 'results')).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.documentationTabClass = ko.computed(self.getTabClassFor.bind(self, 'documentation')).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.isShowConfiguration = ko.computed(self.computeIsShowConfiguration.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.isShowResults = ko.computed(self.computeIsShowResults.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.isShowDocumentation = ko.computed(self.computeIsShowDocumentation.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.indefinite = ko.observable(true);\n\
\n\
    // Note: vmConfiguration.module is not an observable\n\
    self.vmConfiguration.on('changed:module', function (new_module) {\n\
        self.indefinite(-1 !== indefinite_modules.indexOf(new_module));\n\
    });\n\
\n\
    self.lightboxText = ko.observable();\n\
    self.preValidationResult = self.vmConfiguration.preValidationResult;\n\
\n\
    // Allow extension through delegation - i.e. loading, saving, etc.\n\
    if (!delegate) {\n\
        delegate = new DefaultHeaderDelegate();\n\
    }\n\
    delegate.setParent(self);\n\
    self.delegate = delegate;\n\
}\n\
\n\
TestViewModel.prototype.afterRender = function () {\n\
    var self = this.data,\n\
        selected_tab = self.rootVm.selectedTab(),\n\
        $parent = document.querySelector('.' + selected_tab),\n\
        $header;\n\
\n\
    if (!self.delegate.canRenderTab(selected_tab)) {\n\
        return;\n\
    }\n\
\n\
    return self.delegate.afterRender();\n\
};\n\
\n\
TestViewModel.typesafe = function (that) {\n\
    if (!(that instanceof TestViewModel)) {\n\
        throw 'This method must be executed on a TestViewModel';\n\
    }\n\
\n\
    return that;\n\
};\n\
\n\
TestViewModel.prototype.computeIsShowConfiguration = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() == 'configuration';\n\
};\n\
\n\
TestViewModel.prototype.computeIsShowResults = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() == 'results';\n\
};\n\
\n\
TestViewModel.prototype.computeIsShowDocumentation = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() == 'documentation';\n\
};\n\
\n\
TestViewModel.prototype.openSaveModal = function () {\n\
    this.delegate.openSaveModal();\n\
};\n\
\n\
TestViewModel.prototype.openHelpModal = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    util.lightbox.open({\n\
        url : 'html/lightbox_tmpl',\n\
        selector : '#lightbox-test-header-help-template',\n\
        cancelSelector: '.cancel-button',\n\
        onOpenComplete: function(){\n\
            ko.applyBindings(self, document.getElementById('lightbox-test-header-help'));\n\
        }\n\
    });\n\
};\n\
\n\
TestViewModel.prototype.getTabClassFor = function (tabName) {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    if (self.selectedTab() == tabName) {\n\
        return 'selected';\n\
    }\n\
\n\
    return '';\n\
};\n\
TestViewModel.prototype.getTabClassForResults = function (tabName) {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    if (self.selectedTab() == tabName) {\n\
        return 'selected';\n\
    } else if(self.hasResults()) {\n\
        return\n\
    } else {\n\
        return 'disabled'\n\
    }\n\
\n\
    return '';\n\
};\n\
\n\
TestViewModel.prototype.selectTab = function(tab, callback){\n\
    var self = TestViewModel.typesafe(this);\n\
    callback = callback || function(){};\n\
\n\
    self.selectedTab(tab);\n\
\n\
    var testModule = self.vmConfiguration.module.split('.').pop();\n\
    var configurationTemplateRoute = \"test_module/test_configuration_tmpl/\"+testModule;\n\
    var configurationTemplateName = \"test-configuration-\"+testModule;\n\
    var documentationTemplateRoute = \"test_module/test_documentation_tmpl/\"+testModule;\n\
    switch (tab) {\n\
        case 'configuration':\n\
            util.lightbox.close();\n\
            util.lightbox.working(new LightboxWorkingViewModel(translate(\"Loading\"), translate(\"Loading\")));\n\
            util.getTemplate(configurationTemplateRoute, '#' + configurationTemplateName, function(template){\n\
                self.testConfigurationTemplateName(configurationTemplateName);\n\
                util.lightbox.close();\n\
                callback();\n\
            }, self.selectedTab() != tab);\n\
            break;\n\
        case 'results':\n\
            util.lightbox.close();\n\
            util.lightbox.working(new LightboxWorkingViewModel(translate(\"Loading\"), translate(\"Loading\")));\n\
            util.getTemplate(configurationTemplateRoute, '#' + configurationTemplateName, function(template){\n\
                self.testConfigurationTemplateName(configurationTemplateName);\n\
                util.lightbox.close();\n\
                self.templateResultsTab(self.isTestRunning(), callback);\n\
            }, self.selectedTab() != tab);\n\
\n\
            break;\n\
        case 'documentation':\n\
            util.getTemplate(documentationTemplateRoute, '#test-documentation-tmpl', function(template){\n\
                self.testDocumentationTemplateName('test-documentation-tmpl');\n\
            }, self.selectedTab() != tab);\n\
\n\
            callback();\n\
\n\
            break;\n\
    }\n\
\n\
    appHistory.push(spirentEnterpriseVm);\n\
};\n\
\n\
TestViewModel.prototype.templateResultsTab = function(isTestRunning, callback){\n\
    var self = TestViewModel.typesafe(this),\n\
        moduleName = self.vmConfiguration.module.split('.').pop(),\n\
        resultsTemplateRoute = \"test_module/test_results_tmpl/\"+self.vmConfiguration.module.split('.').pop(),\n\
        resultsNeedToRunSelector = \"#results-need-to-run-tmpl-\" + moduleName,\n\
        resultsChartSelector = \"#results-chart-tmpl-\" + moduleName;\n\
\n\
    callback = callback || $.noop;\n\
\n\
    if(!self.hasResults() && !isTestRunning){\n\
        util.lightbox.close();\n\
        util.lightbox.working(new LightboxWorkingViewModel(translate(\"Loading\"), translate(\"Loading\")));\n\
        util.getTemplate(resultsTemplateRoute, resultsNeedToRunSelector, function(template){\n\
            template.tmpl().appendTo($(\".results\").empty());\n\
            util.lightbox.close();\n\
            callback();\n\
        }, true);\n\
    }else{\n\
        if(self.hasResults()){\n\
            callback();\n\
\n\
            self.refreshActiveChartOnVisible();\n\
\n\
            return;\n\
        }\n\
\n\
        util.lightbox.close();\n\
        util.lightbox.working(new LightboxWorkingViewModel(translate(\"Loading\"), translate(\"Loading\")));\n\
        util.getTemplate(resultsTemplateRoute, resultsChartSelector, function(template){\n\
            template.tmpl().appendTo($(\".results\").empty());\n\
            self.hasResults(true);\n\
            util.lightbox.close();\n\
            callback();\n\
        }, true);\n\
    }\n\
};\n\
\n\
TestViewModel.prototype.refreshTestDraggables = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    self.vmSidebar.refreshTestDraggables();\n\
};\n\
\n\
TestViewModel.prototype.refreshActiveChartOnVisible = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    if ($('.results #result-charts:visible').length == 0) {\n\
        setTimeout(function () { self.refreshActiveChartOnVisible(); }, 1);\n\
        return;\n\
    }\n\
\n\
    self.vmResults.activeChart().activate();\n\
};\n\
\n\
TestViewModel.prototype.onSelectedTabUpdated = function (value) {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    if (value == 'results') {\n\
        if (self.hasResults()) {\n\
            self.vmResults.activeChart().activate();\n\
        }\n\
    }\n\
};\n\
\n\
TestViewModel.prototype.showConfiguration = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    self.selectTab('configuration');\n\
};\n\
\n\
TestViewModel.prototype.showResults = function (closeLightbox) {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    if (self.hasResults()){\n\
        self.selectTab('results');\n\
        if (closeLightbox === true){\n\
            setTimeout(function(){util.lightbox.close();},2000);\n\
        }\n\
    }\n\
};\n\
\n\
TestViewModel.prototype.showDocumentation = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
    self.selectTab('documentation');\n\
};\n\
\n\
TestViewModel.prototype.ensureUnreservedOrFail = function(callback) {\n\
    var self = TestViewModel.typesafe(this),\n\
        handle_response = function(data,error){\n\
            if(error){\n\
                util.lightbox.openError(window.translate('Error'), window.translate('Unable to get reservation status.'));\n\
                window.logger.error(error);\n\
                return;\n\
            }\n\
\n\
\n\
            var reserved_info = data.reserved_remotely;\n\
            if(reserved_info.reserved === false){\n\
                callback();\n\
            }\n\
            else if(reserved_info.is_reserved_by_me === true){\n\
                self.lightboxText = translate('A test is already running.  Please wait for the current test to complete before loading a new test.');\n\
                util.lightbox.open({\n\
                    url : 'html/lightbox_tmpl',\n\
                    selector : '#lightbox-message-template',\n\
                    cancelSelector: '.ok-button',\n\
                    onOpenComplete: function(){\n\
                        ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                    }\n\
                });\n\
            } else {\n\
                self.lightboxText = translate('This Axon chassis is currently reserved.<br/><br/>' +\n\
                    'User: {user}<br/>From: {from}<br/>Since: {since}<br/><br/>' +\n\
                    'Please wait for the chassis to become available before loading a test.<br><br>', {\n\
                    user: reserved_info.reserved_by,\n\
                    from: reserved_info.reserved_addr,\n\
                    since: reserved_info.reserved_since\n\
                });\n\
                util.lightbox.open({\n\
                    url : 'html/lightbox_tmpl',\n\
                    selector : '#lightbox-reserved-template',\n\
                    cancelSelector: '.ok-button',\n\
                    onOpenComplete: function(){\n\
                        ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                    }\n\
                });\n\
            }\n\
        };\n\
\n\
\n\
    util.get_chassis_reservationa_status(handle_response);\n\
\n\
}\n\
\n\
/**\n\
 * Loads configuration from a selected test\n\
 *\n\
 * @param testConfiguration TestTemplateViewModel\n\
 * @param eventConfiguration TestTemplateViewModel\n\
 */\n\
TestViewModel.prototype.loadTest = function (testConfiguration, eventConfiguration) {\n\
    this.delegate.loadTest.apply(this.delegate, arguments);\n\
};\n\
\n\
TestViewModel.prototype.loadRecentTest = function (historyItem) {\n\
    var self = TestViewModel.typesafe(this);\n\
    self.ensureUnreservedOrFail(function() {\n\
        var matchedTest = ko.utils.arrayFirst(self.rootVm.allTests, function (item) {\n\
            return (item.id() === historyItem.test_id && !item.isFactoryTest());\n\
        });\n\
\n\
        if (matchedTest === null) {\n\
            self.rootVm.getAvailableTests({\"test_id\" : historyItem.test_id}, function() {\n\
                matchedTest = ko.utils.arrayFirst(self.rootVm.allTests, function (item) {\n\
                            return (item.id() === historyItem.test_id && !item.isFactoryTest());\n\
                        });\n\
                if (matchedTest !== null) {\n\
                    self.loadingTest(self, historyItem, matchedTest);\n\
                }\n\
            });\n\
        } else {\n\
            self.loadingTest(self, historyItem, matchedTest);\n\
        }\n\
    })\n\
};\n\
\n\
/**\n\
 * Loading test from a selected history results or axon test\n\
 * @param self TestViewModel\n\
 * @param historyItem TestHistoryViewModel\n\
 * @param matchedTest TestTemplateViewModel\n\
 */\n\
TestViewModel.prototype.loadingTest = function (self, historyItem, matchedTest) {\n\
    //self.showResults();\n\
    self.vmDocumentation.loadTest(matchedTest);\n\
    self.vmConfiguration.loadTest(matchedTest, function(){\n\
        self.vmResults.status(historyItem.endResult());\n\
        //self.vmResults.displayMessage(historyItem.displayMessage());\n\
        self.showResults();\n\
        self.hasResults(true);\n\
        self.loadChartsWithResults(historyItem);\n\
        self.refreshActiveChartOnVisible();\n\
        self.rootVm.selectTab('test');\n\
    }.bind(self));\n\
};\n\
\n\
TestViewModel.prototype.loadChartsWithResults = function(historyItem){\n\
    var self = TestViewModel.typesafe(this);\n\
    if(!historyItem.chartData && !historyItem.result_sets){\n\
        self.getTestResults(historyItem);\n\
    }\n\
    else if(historyItem.chartData && !historyItem.result_sets){\n\
        self.fillResultSetFromChartData(historyItem);\n\
    }\n\
\n\
    if(historyItem.result_sets){\n\
        var chartVms = [],\n\
            trafficTotalLabel = self.vmConfiguration.getTotalTrafficLabel(),\n\
            moduleName = self.vmConfiguration.module.split('.').pop(),\n\
            resultsTemplateRoute = \"test_module/test_results_tmpl/\" + moduleName,\n\
            resultsTemplateName = \"results-chart-tmpl-\" + moduleName;\n\
\n\
        self.vmConfiguration.result_types = self.getDynamicResultTypes();\n\
\n\
        for(var i = 0; i < 23; i++){\n\
            var resultType = self.vmConfiguration.result_types[i];\n\
            if (resultType == null || resultType == undefined) {\n\
                continue;\n\
            }\n\
\n\
            var chart = new Chart(resultType);\n\
            var table = new ResultsTable();\n\
            chartVms[i] = new ChartViewModel(self.vmResults, { chart : chart, table : table });\n\
            chartVms[i].label = trafficTotalLabel;\n\
        }\n\
\n\
        self.vmResults.hydrate(chartVms);\n\
        self.vmResults.getSavedDetailsTable(historyItem.detail_table);\n\
        self.vmResults.resultId(historyItem.result_id());\n\
\n\
        if (self.testResultsTemplateName() !== resultsTemplateName) {\n\
            util.lightbox.close();\n\
            util.lightbox.working(new LightboxWorkingViewModel(translate(\"Loading\"), translate(\"Loading\")));\n\
            util.getTemplate(resultsTemplateRoute, \"#\" + resultsTemplateName, function(template){\n\
                template.tmpl().appendTo($(\".results\").empty());\n\
                self.testResultsTemplateName(resultsTemplateName);\n\
                self.showResults(true);\n\
                util.lightbox.close();\n\
            }, true);\n\
        } else {\n\
            self.showResults(true);\n\
        }\n\
\n\
        for(var resultSetIndex = 0; resultSetIndex < historyItem.result_sets.length; resultSetIndex++){\n\
            for(var chartIndex = 0; chartIndex < 23; chartIndex++){\n\
                if(chartVms[chartIndex] && chartIndex == historyItem.result_sets[resultSetIndex].tab_id){\n\
                    chartVms[chartIndex].chart().update(historyItem.result_sets[resultSetIndex].series_list);\n\
                    break;\n\
                }\n\
            }\n\
        }\n\
    }\n\
};\n\
\n\
TestViewModel.prototype.fillResultSetFromChartData = function(historyItem){\n\
    var self = TestViewModel.typesafe(this);\n\
    historyItem.result_sets = new Array();\n\
\n\
    for(var i = 0; i < historyItem.chartData.length; i++){\n\
        var data = {name: historyItem.chartData[i].name};\n\
        for(var j = 0; j < historyItem.chartData[i].series.length; j++){\n\
            var graphSeries = historyItem.chartData[i].series[j];\n\
            data[graphSeries.label] = new Array();\n\
            for(var d = 0; d < graphSeries.data.length; d++){\n\
                data[graphSeries.label].push({ x: graphSeries.data[d][0], y: graphSeries.data[d][1] });\n\
            }\n\
        }\n\
        historyItem.result_sets.push(data);\n\
    }\n\
};\n\
\n\
TestViewModel.prototype.getTestResults = function(historyItem){\n\
    var self = TestViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Loading test results\"), translate(\"Loading test results...\")));\n\
    $.ajax({\n\
        type: \"GET\",\n\
        url: util.getConfigSetting(\"get_results\")+\"/\"+historyItem.result_id(),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            historyItem.result_sets = data.result_sets;\n\
            historyItem.detail_table = data.detail_table;\n\
            self.loadChartsWithResults(historyItem);\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            util.logData(textStatus);\n\
        }\n\
    });\n\
};\n\
\n\
TestViewModel.prototype.openTestCreationLightbox = function(){\n\
    this.delegate.openTestCreationLightbox();\n\
};\n\
\n\
TestViewModel.prototype.closeTestEditor = function () {\n\
    this.delegate.closeTestEditor();\n\
}\n\
\n\
TestViewModel.prototype.runTest = function () {\n\
    var self = TestViewModel.typesafe(this),\n\
        run_test = function(data,error){\n\
            if(error){\n\
                util.lightbox.openError(window.translate('Error'), window.translate('Unable to get reservation status.'));\n\
                window.logger.error(error);\n\
                return;\n\
            }\n\
\n\
            var reserved_info = data.reserved_remotely;\n\
            if(self.vmResults.status() !== 'running' && reserved_info.reserved === false){\n\
\n\
                var jsonConfiguration = self.getJsonConfiguration();\n\
                self.showConfiguration();\n\
                util.lightbox.working(new LightboxWorkingViewModel(translate(\"Start\"), translate(\"Validating Test...\")));\n\
                self.hasResults(false);\n\
                self.testResultsTemplateName(\"placeholder-template\");\n\
                self.vmResults.reset();\n\
\n\
                setTimeout(function () { self.vmConfiguration.validate(function() {\n\
                    self.vmConfiguration.runTest();\n\
                }) }, 1000);\n\
            }\n\
            else if(self.vmResults.status() === 'running' && reserved_info.is_reserved_by_me === true){ //double conditions make sure scheduling test is not running\n\
                self.vmResults.status('aborted');\n\
                util.lightbox.working(new LightboxWorkingViewModel(translate(\"Stop\"), translate(\"Stopping Test...\")));\n\
                util.applyFunction(self.vmResults.charts(), \"dispose\");\n\
                self.vmConfiguration.cancelTest(function() {\n\
                    self.isTestRunning(false);\n\
                    self.rootVm.getResultHistory();\n\
                    self.showResults();\n\
                });\n\
            } else {\n\
                self.lightboxText = translate('This Axon chassis is currently reserved.<br/><br/>' +\n\
                    'User: {user}<br/>From: {from}<br/>Since: {since}<br/><br/>' +\n\
                    'Please wait for the chassis to become available before loading a test.<br><br>', {\n\
                    user: reserved_info.reserved_by,\n\
                    from: reserved_info.reserved_addr,\n\
                    since: reserved_info.reserved_since\n\
                });\n\
                util.lightbox.open({\n\
                    url : 'html/lightbox_tmpl',\n\
                    selector : '#lightbox-reserved-template',\n\
                    cancelSelector: '.ok-button',\n\
                    onOpenComplete: function(){\n\
                        ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                    }\n\
                });\n\
            }\n\
        }\n\
        ;\n\
\n\
    util.get_chassis_reservationa_status(run_test);\n\
};\n\
\n\
TestViewModel.prototype.beginTesting = function () {\n\
    var self = this;\n\
    util.lightbox.close();\n\
    self.isTestRunning(true);\n\
    self.vmResults.status('running');\n\
    self.vmResults.testCompleted(false);\n\
    self.loadCharts();\n\
};\n\
\n\
TestViewModel.prototype.abortTestWithError = function (data) {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    self.vmResults.status('aborted');\n\
    util.applyFunction(self.vmResults.charts(), \"dispose\");\n\
    self.showResults();\n\
\n\
    util.lightbox.openError(data.messages[0].header, data.messages[0].content);\n\
};\n\
\n\
TestViewModel.prototype.validate = function(success, error){\n\
    var self = TestViewModel.typesafe(this),\n\
        result = new ValidationResultsViewModel(self.vmConfiguration);\n\
\n\
    success = success || $.noop;\n\
    error = error || $.noop;\n\
\n\
    result = self.delegate.validate(result);\n\
    result = self.vmConfiguration.validate(undefined, result);\n\
\n\
    if(result.is_valid){\n\
        success();\n\
    }else{\n\
        error(result);\n\
    }\n\
};\n\
\n\
TestViewModel.prototype.getPlayerLayers = function(){\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    return self.vmConfiguration.getPlayerLayers();\n\
};\n\
\n\
TestViewModel.prototype.getTrackResultTypes = function(){\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    return self.vmConfiguration.getTrackResultTypes();\n\
};\n\
\n\
TestViewModel.prototype.getDynamicResultTypes = function(){\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    var dynamicResultTypes = new Array();\n\
    var durationInMilliseconds = (self.vmConfiguration.duration()*60)*1000;\n\
    var resultTypes = [\n\
        null, // place holder so that array is now 1 based.\n\
        {\n\
            id: 1,\n\
            name: translate('Total Bandwidth'),\n\
            description: translate('Total Bandwidth'),\n\
            url: '/spirent/get_result_series/1/1',\n\
            frequency: 1000,\n\
            yAxisLabel: \"Mbps\",\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 2,\n\
            name: translate('Bandwidth'),\n\
            description: translate('Bandwidth for Transport Data'),\n\
            url: '/spirent/get_result_series/2/1',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Mbps\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 3,\n\
            name: translate('Packet Loss'),\n\
            description: translate('Packet Loss for Transport Data'),\n\
            url: '/spirent/get_result_series/2/2',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Packets\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 4,\n\
            name: translate('Latency'),\n\
            description: translate('Latency for Transport Data'),\n\
            url: '/spirent/get_result_series/2/3',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Latency\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 5,\n\
            name: translate('Jitter'),\n\
            description: translate('Jitter for Transport Data'),\n\
            url: '/spirent/get_result_series/2/4',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Jitter\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 6,\n\
            name: translate('Bandwidth'),\n\
            description: translate('Bandwidth for Application Data'),\n\
            url: '/spirent/get_result_series/3/1',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Mbps\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 7,\n\
            name: translate('Connections'),\n\
            description: translate('Connections for Application Data'),\n\
            url: '/spirent/get_result_series/3/2',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Connections per second\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 8,\n\
            name: translate('Transactions'),\n\
            description: translate('Transactions for Application Data'),\n\
            url: '/spirent/get_result_series/3/3',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Transactions per second\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 9,\n\
            name: translate('Response Time'),\n\
            description: translate('Response Time for Application Data'),\n\
            url: '/spirent/get_result_series/3/4',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Milliseconds\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 10,\n\
            name: translate('Bandwidth'),\n\
            description: translate('Bandwidth for Voice/Video Quality Data'),\n\
            url: '/spirent/get_result_series/4/1',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Bandwidth\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 11,\n\
            name: translate('Calls'),\n\
            description: translate('Calls for Voice/Video Quality Data'),\n\
            url: '/spirent/get_result_series/4/2',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Calls\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 12,\n\
            name: translate('Video Connections'),\n\
            description: translate('Video Connections for Voice/Video Quality Data'),\n\
            url: '/spirent/get_result_series/4/3',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Connections\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 13,\n\
            name: translate('Quality MOS Scores'),\n\
            description: translate('Quality MOS Scores for Voice/Video Quality Data'),\n\
            url: '/spirent/get_result_series/4/4',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"MOS Score\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 14,\n\
            name: translate('RTP Packet Loss'),\n\
            description: translate('RTP Packet Loss for Voice/Video Quality Data'),\n\
            url: '/spirent/get_result_series/4/5',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Packets\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 15,\n\
            name: translate('Calls per Second'),\n\
            description: translate('Calls per Second for Voice Quality Data'),\n\
            url: '/spirent/get_result_series/5/1',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Calls/sec\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 16,\n\
            name: translate('Total Calls'),\n\
            description: translate('Total Calls for Voice Quality Data'),\n\
            url: '/spirent/get_result_series/5/2',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Calls\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 17,\n\
            name: translate('Quality MOS Scores'),\n\
            description: translate('Quality MOS Scores for Voice Quality Data'),\n\
            url: '/spirent/get_result_series/5/3',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"MOS Score\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 18,\n\
            name: translate('RTP Packet Loss'),\n\
            description: translate('RTP Packet Loss for Voice Quality Data'),\n\
            url: '/spirent/get_result_series/5/4',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Packets\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 19,\n\
            name: translate('Video Connections'),\n\
            description: translate('Video Connections for Video Quality Data'),\n\
            url: '/spirent/get_result_series/6/1',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Connections\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 20,\n\
            name: translate('Transactions'),\n\
            description: translate('Transactions for Video Quality Data'),\n\
            url: '/spirent/get_result_series/6/2',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Transactions\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 21,\n\
            name: translate('Quality MOS Scores'),\n\
            description: translate('Quality MOS Scores for Video Quality Data'),\n\
            url: '/spirent/get_result_series/6/3',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"MOS Score\"),\n\
            duration: durationInMilliseconds\n\
        },\n\
        {\n\
            id: 22,\n\
            name: translate('RTP Packet Loss'),\n\
            description: translate('RTP Packet Loss for Video Quality Data'),\n\
            url: '/spirent/get_result_series/6/4',\n\
            frequency: 1000,\n\
            yAxisLabel: translate(\"Packets\"),\n\
            duration: durationInMilliseconds\n\
        }\n\
    ];\n\
\n\
    dynamicResultTypes[1] = resultTypes[1];\n\
\n\
    var trackTypes = self.vmConfiguration.getTrackResultTypes();\n\
\n\
    if (trackTypes.indexOf('DataTestResult') !== -1) { // if we *only* show data when a data specific player exists\n\
        dynamicResultTypes[2] = resultTypes[2];\n\
        dynamicResultTypes[3] = resultTypes[3];\n\
        dynamicResultTypes[4] = resultTypes[4];\n\
        dynamicResultTypes[5] = resultTypes[5];\n\
    }\n\
\n\
//    if (trackTypes.indexOf('VoiceTestResult') !== -1\n\
//        || trackTypes.indexOf('VideoTestResult') !== -1) { // if we *only* show voice/video when a voice/video layer specific player exists\n\
//        dynamicResultTypes[10] = resultTypes[10];\n\
//        dynamicResultTypes[11] = resultTypes[11];\n\
//        dynamicResultTypes[12] = resultTypes[12];\n\
//        dynamicResultTypes[13] = resultTypes[13];\n\
//        dynamicResultTypes[14] = resultTypes[14];\n\
//    }\n\
\n\
    if (trackTypes.indexOf('VoiceTestResult') !== -1) { // if we *only* show voice/video when a voice/video layer specific player exists\n\
        dynamicResultTypes[15] = resultTypes[15];\n\
        dynamicResultTypes[16] = resultTypes[16];\n\
        dynamicResultTypes[17] = resultTypes[17];\n\
        dynamicResultTypes[18] = resultTypes[18];\n\
    }\n\
\n\
    if (trackTypes.indexOf('VideoTestResult') !== -1) { // if we *only* show voice/video when a voice/video layer specific player exists\n\
        dynamicResultTypes[19] = resultTypes[19];\n\
        dynamicResultTypes[20] = resultTypes[20];\n\
        dynamicResultTypes[21] = resultTypes[21];\n\
        dynamicResultTypes[22] = resultTypes[22];\n\
    }\n\
\n\
    if (trackTypes.indexOf('ALPTestResult') !== -1\n\
        || trackTypes.indexOf('RawSocketTestResult') !== -1\n\
        || trackTypes.indexOf('DPGTestResult') !== -1) { // if we *only* show application when an application specific player exists\n\
        dynamicResultTypes[6] = resultTypes[6];\n\
        dynamicResultTypes[7] = resultTypes[7];\n\
        dynamicResultTypes[8] = resultTypes[8];\n\
\n\
        if (self.vmConfiguration.hasHTTPTrack()) {\n\
            dynamicResultTypes[9] = resultTypes[9]; // Show response time\n\
        }\n\
    }\n\
\n\
    return dynamicResultTypes;\n\
};\n\
\n\
TestViewModel.prototype.loadCharts = function () {\n\
    var self = TestViewModel.typesafe(this),\n\
        moduleName = self.vmConfiguration.module.split('.').pop(),\n\
        resultsTemplateName = \"results-chart-tmpl-\" + moduleName;\n\
\n\
    //TODO: Check Test Status and that polling Url exists.\n\
    var trafficTotalLabel = self.vmConfiguration.getTotalTrafficLabel();\n\
    self.vmConfiguration.result_types = self.getDynamicResultTypes();\n\
    self.selectTab(\"results\", function(){\n\
        //Here is where we will kick off the graphs\n\
        if(!self.vmConfiguration.result_types || self.vmConfiguration.result_types.length == 0)\n\
            util.logData(\"There were no result types configured for test: \" + self.vmConfiguration.name());\n\
        else{\n\
            var chartVms = new Array();\n\
            for(var i = 0; i < 23; i++){\n\
                var resultType = self.vmConfiguration.result_types[i];\n\
                if (resultType == null || resultType == undefined) {\n\
                    continue;\n\
                }\n\
\n\
//                var resultType = ko.utils.arrayFirst(self.rootVm.availableResultTypes, function(item){\n\
//                    return item.id == self.vmConfiguration.result_types[i];\n\
//                });\n\
\n\
                if(resultType){\n\
                    var chart = new Chart(resultType);\n\
                    var table = new ResultsTable();\n\
                    var chartPoller = new ChartPoller(\n\
                        chart,\n\
                        table,\n\
                        {\n\
                            pollDuration : (self.vmConfiguration.duration() * 60 * 1000),\n\
                            pollFrequency : resultType.frequency,\n\
                            url: resultType.url,\n\
                            onFinish : function () {\n\
                                self.isTestRunning(false);\n\
                                self.vmResults.logToHistory()\n\
                            }\n\
                        },\n\
                        self.vmResults);\n\
                    chartVms[i] = new ChartViewModel(self.vmResults, { chart : chart, chartPoller : chartPoller, table : table });\n\
                    chartVms[i].label(trafficTotalLabel);\n\
                }else{\n\
                    util.logData(\"Result Type for: \" + self.vmConfiguration.result_types[i] + \" was not found\");\n\
                }\n\
            }\n\
            self.vmResults.kickOffDisplayMessageRotation();\n\
            self.vmResults.hydrate(chartVms);\n\
        }\n\
\n\
        self.testResultsTemplateName(resultsTemplateName);\n\
    });\n\
};\n\
\n\
TestViewModel.prototype.getJsonConfiguration = function () {\n\
    var self = TestViewModel.typesafe(this);\n\
\n\
    return JSON.stringify(self.vmConfiguration.toJSON());\n\
};\n\
\n\
module.exports = TestViewModel;//@ sourceURL=test-view-model/index.js"
));
require.register("multicast-settings/view-model.js", Function("exports, require, module",
"/**\n\
 * View model for multicast settings\n\
 *\n\
 * @constructor\n\
 */\n\
function MulticastSettingsViewModel() {\n\
    var self = this;\n\
\n\
    self.strings = {\n\
        \"Select one\": window.translate(\"Select one\"),\n\
        \"IGMP v1\": window.translate(\"IGMP v1\"),\n\
        \"IGMP v2\": window.translate(\"IGMP v2\"),\n\
        \"IGMP v3\": window.translate(\"IGMP v3\"),\n\
        \"MLD v1\": window.translate(\"MLD v1\"),\n\
        \"MLD v2\": window.translate(\"MLD v2\")\n\
    };\n\
\n\
    self.available_protocols = {\n\
        \"IGMP_V1\": self.strings[\"IGMP v1\"],\n\
        \"IGMP_V2\": self.strings[\"IGMP v2\"],\n\
        \"IGMP_V3\": self.strings[\"IGMP v3\"],\n\
        \"MLD_V1\": self.strings[\"MLD v1\"],\n\
        \"MLD_V2\": self.strings[\"MLD v2\"]\n\
    };\n\
\n\
    self.protocolOptions = Object.keys(self.available_protocols).map(function (value) {\n\
        return {value: value, text: self.available_protocols[value]};\n\
    });\n\
\n\
    self.ip = ko.observable();\n\
    self.end_ip = ko.observable();\n\
    self.protocol = ko.observable();\n\
}\n\
\n\
MulticastSettingsViewModel.prototype.inflate = function (data) {\n\
    data = data || {};\n\
\n\
    this.ip(data.ip);\n\
    this.end_ip(data.end_ip);\n\
    this.protocol(data.protocol);\n\
};\n\
\n\
MulticastSettingsViewModel.prototype.clone = function () {\n\
    return new MulticastSettingsViewModel(this.rootVm, this.data);\n\
};\n\
\n\
MulticastSettingsViewModel.prototype.toFlatObject = function () {\n\
    return {\n\
        ip: this.ip(),\n\
        end_ip: this.end_ip(),\n\
        protocol: this.protocol()\n\
    };\n\
};\n\
\n\
module.exports = MulticastSettingsViewModel;//@ sourceURL=multicast-settings/view-model.js"
));
require.register("test-template-view-model/index.js", Function("exports, require, module",
"var MulticastSettingsViewModel = require('multicast-settings');\n\
\n\
/**\n\
 * Saved configuration for a single test\n\
 *\n\
 * @param rootVm SpirentEnterpriseViewModel\n\
 * @constructor\n\
 */\n\
function TestTemplateViewModel(rootVm) {\n\
    var self = this;\n\
    self.rootVm = rootVm;\n\
    self.vmDashboard = rootVm.vmDashboard;\n\
\n\
    self.id = ko.observable();\n\
    self.name = ko.observable();\n\
    self.description = ko.observable();\n\
    self.duration = ko.observable();\n\
    self.bandwidth = ko.observable();\n\
    self.isTemplate = ko.observable(false);\n\
    self.isFactoryTest = ko.observable(false);\n\
    self.categories = ko.observableArray();\n\
    self.template_name = ko.observable();\n\
    self.playlist_ids = ko.observableArray();\n\
    self.datapoint_ids = ko.observableArray();\n\
    self.spirent_test_id = ko.observable();\n\
\n\
    self.engine = null;\n\
    self.module = null;\n\
    self.diagram = null;\n\
    self.isUserSave = false;\n\
    self.recommendedTrackIds = null;\n\
\n\
    self.isMulticast = undefined;\n\
    self.multicast_settings = undefined;\n\
    self.supplementalConfiguration = null;\n\
\n\
    self.favorite = ko.observable();\n\
    self.customer = ko.observable();\n\
    self.location = ko.observable();\n\
    self.tags = ko.observableArray();\n\
    self.unqualifiedTags = ko.observable();\n\
\n\
    self.displayTags = ko.computed({\n\
        read: self.displayTagsRead.bind(self),\n\
        write: self.displayTagsWrite.bind(self)\n\
    });\n\
    self.attributes = undefined;\n\
}\n\
\n\
TestTemplateViewModel.typesafe = function (that) {\n\
    if (!(that instanceof TestTemplateViewModel)) {\n\
        throw 'This method must be executed on a TestTemplateViewModel';\n\
    }\n\
\n\
    return that;\n\
};\n\
\n\
TestTemplateViewModel.prototype.matchesSearch = function (searchString) {\n\
    var self = TestTemplateViewModel.typesafe(this);\n\
\n\
    var searchTerms = searchString.split(' ');\n\
\n\
    if (searchTerms.length == 0) {\n\
        return true;\n\
    }\n\
\n\
    var name = self.name().toUpperCase();\n\
\n\
    for (var i = 0; i < searchTerms.length; i++) {\n\
        if (searchTerms[i] == '' || searchTerms[i] == null) {\n\
            continue;\n\
        }\n\
\n\
        if (name.indexOf(searchTerms[i].toUpperCase()) == -1) {\n\
            return false;\n\
        }\n\
    }\n\
\n\
    return true;\n\
};\n\
\n\
TestTemplateViewModel.prototype.openSaveModal = function () {\n\
    var self = TestTemplateViewModel.typesafe(this),\n\
        refreshDraggables = false;\n\
\n\
    util.lightbox.open({\n\
        url : 'html/lightbox_tmpl',\n\
        selector : '#lightbox-save-test-alternate-template',\n\
        cancelSelector: '.cancel-button',\n\
        onOpenComplete: function(){\n\
            self.startState = {\n\
                name: self.name(),\n\
                tags: self.tags(),\n\
                favorite: self.favorite(),\n\
                customer: self.customer(),\n\
                location: self.location()\n\
            };\n\
            ko.applyBindings(self, document.getElementById('lightbox-save-test-alternate'));\n\
        },\n\
        onClose: function(){\n\
            if (self.name() === '') {\n\
                refreshDraggables = true;\n\
            }\n\
            self.name(self.startState.name);\n\
            self.tags(self.startState.tags);\n\
            self.favorite(self.startState.favorite);\n\
            self.customer(self.startState.customer);\n\
            self.location(self.startState.location);\n\
\n\
            if (refreshDraggables) {\n\
                self.rootVm.refreshTestDraggables();\n\
            }\n\
        }\n\
    });\n\
};\n\
\n\
TestTemplateViewModel.prototype.inflate = function (flatTest) {\n\
    var self = TestTemplateViewModel.typesafe(this);\n\
\n\
    self.id(flatTest.id);\n\
    self.name(flatTest.name);\n\
    self.description(flatTest.description);\n\
    self.duration(flatTest.duration);\n\
    self.bandwidth(flatTest.bandwidth);\n\
    self.isTemplate(flatTest.is_template)\n\
    self.isFactoryTest(flatTest.isFactoryTest);\n\
    self.spirent_test_id(flatTest.spirent_test_id);\n\
\n\
    self.engine = flatTest.engine;\n\
    self.module = flatTest.module;\n\
    if (flatTest.test_type) {\n\
        self.diagram = {\n\
            test_type: flatTest.test_type,\n\
            test_type_display_name: flatTest.test_type_display_name,\n\
            traffic_type: flatTest.traffic_type,\n\
            traffic_type_display_name: flatTest.traffic_type_display_name,\n\
            traffic_direction: flatTest.traffic_direction\n\
        };\n\
    } else {\n\
        // Make sure we initialize the diagram\n\
        if (self.diagram === null) {\n\
            var tmplTest = ko.utils.arrayFirst(self.vmDashboard.tmplTests(), function (item) {\n\
                return item.template_name() === flatTest.template_name;\n\
            });\n\
            if (tmplTest !== null && self.diagram === null) {\n\
                self.diagram = {\n\
                    test_type: tmplTest.diagram.test_type,\n\
                    test_type_display_name: tmplTest.diagram.test_type_display_name,\n\
                    traffic_type: tmplTest.diagram.traffic_type,\n\
                    traffic_type_display_name: tmplTest.diagram.traffic_type_display_name,\n\
                    traffic_direction: tmplTest.diagram.traffic_direction\n\
                }\n\
            }\n\
        }\n\
    }\n\
    self.isUserSave = flatTest.is_user_save;\n\
    self.recommendedTrackIds = flatTest.recommended_track_ids;\n\
    self.template_name(flatTest.template_name);\n\
\n\
    self.isMulticast = flatTest.default_player_type && flatTest.default_player_type === 'multicast';\n\
\n\
    self.supplementalConfiguration = new TestSupplementalConfigurationViewModel(self.rootVm);\n\
    self.supplementalConfiguration.inflate(flatTest.supplemental_configuration);\n\
\n\
    util.setObservableArray(self.categories, flatTest.categories);\n\
    util.setObservableArray(self.playlist_ids, flatTest.playlist_ids);\n\
    util.setObservableArray(self.datapoint_ids, []);\n\
\n\
    if(flatTest.traffic_players){\n\
        self.traffic_players = flatTest.traffic_players;\n\
    }\n\
    if(flatTest.result_types){\n\
        self.result_types = flatTest.result_types;\n\
    }\n\
\n\
    util.setTags(self, flatTest.tags);\n\
\n\
    self.attributes = flatTest.attributes;\n\
};\n\
\n\
TestTemplateViewModel.prototype.displayTagsRead = function () {\n\
    var self = TestTemplateViewModel.typesafe(this);\n\
\n\
    if (!self.unqualifiedTags()) {\n\
        self.unqualifiedTags(self.tags().join(', '));\n\
    }\n\
    return util.sanitizeUnqualifiedTagGroup(self.unqualifiedTags());\n\
};\n\
\n\
TestTemplateViewModel.prototype.displayTagsWrite = function (value) {\n\
    var self = TestTemplateViewModel.typesafe(this);\n\
\n\
    if (value == null) {\n\
        return;\n\
    }\n\
\n\
    var newArray = value.split(',');\n\
\n\
    self.tags.removeAll();\n\
    for (var i = 0; i < newArray.length; i++) {\n\
        var trimmedValue = util.trimTag(newArray[i]);\n\
\n\
        if (trimmedValue == '') {\n\
            continue;\n\
        }\n\
\n\
        if (self.tags().indexOf(trimmedValue) == -1) {\n\
            self.tags.push(trimmedValue);\n\
        }\n\
\n\
        if (self.rootVm.availableTags().indexOf(trimmedValue) == -1) {\n\
            self.rootVm.availableTags.push(trimmedValue);\n\
        }\n\
    }\n\
    self.unqualifiedTags(util.sanitizeUnqualifiedTagGroup(value));\n\
    self.unqualifiedTags.valueHasMutated();\n\
};\n\
\n\
TestTemplateViewModel.prototype.save = function (options) {\n\
    var self = TestTemplateViewModel.typesafe(this);\n\
    options.success = options.success || $.noop;\n\
    options.error = options.error || $.noop;\n\
\n\
    var name = self.name();\n\
    self.unqualifiedTags(self.tags().join(', '));\n\
\n\
    var foundExisting = ko.utils.arrayFirst(self.rootVm.availableTests(), function (item) {\n\
        return name == item.name();\n\
    });\n\
\n\
    if (foundExisting != null && foundExisting != self) {\n\
        var iteration = 0;\n\
\n\
        do {\n\
            self.name(name + ' [' + (iteration++) + ']');\n\
\n\
            foundExisting = ko.utils.arrayFirst(self.rootVm.availableTests(), function (item) {\n\
                return self.name() == item.name();\n\
            });\n\
        } while (foundExisting != null && foundExisting != self);\n\
    }\n\
\n\
    var data = self.toFlatObject();\n\
    data = ko.toJSON(data);\n\
\n\
    util.logData(data);\n\
\n\
    util.lightbox.close();\n\
\n\
    var workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'));\n\
    util.lightbox.working(workingVm);\n\
\n\
    $.ajax({\n\
        type: 'POST',\n\
        url: util.getConfigSetting('save_test_template'),\n\
        data: data,\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            if(data.result == \"SUCCESS\"){\n\
                //TODO: this shouldn't be necessary- the save method should eventually return items & the id.\n\
                if (data.items !== undefined\n\
                    && data.items !== null) {\n\
                    self.id(data.items[0].id);\n\
                }\n\
\n\
                options.success(self);\n\
                var completedPollingFunction = function(){\n\
                    util.lightbox.working(new LightboxWorkingViewModel(translate('Refreshing test list...'), translate('Refreshing test list...')));\n\
                    util.lightbox.close();\n\
                };\n\
                self.rootVm.getAvailableTests(completedPollingFunction);\n\
            }else{\n\
                options.error(textStatus);\n\
                workingVm.status('error');\n\
            }\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            options.error(textStatus);\n\
            logger.error(errorThrown);\n\
            workingVm.status('error');\n\
        }\n\
    });\n\
};\n\
\n\
TestTemplateViewModel.prototype.toFlatObject = function(){\n\
    var self = TestTemplateViewModel.typesafe(this);\n\
    var flatTemplate = {\n\
        id: self.id(),\n\
        default_player_type: self.isMulticast ? 'multicast' : 'unicast',\n\
        tags: {\n\
            favorite: self.favorite(),\n\
            company: self.customer(),\n\
            location: self.location(),\n\
            user_defined: self.tags()\n\
        },\n\
        engine: self.engine,\n\
        module: self.module,\n\
        is_template: self.isTemplate,\n\
        is_user_save: self.isUserSave,\n\
        spirent_test_id: self.spirent_test_id,\n\
        recommended_track_ids: self.recommendedTrackIds,\n\
        supplemental_configuration: self.supplementalConfiguration.toFlatObject()\n\
    };\n\
\n\
    return flatTemplate;\n\
};\n\
\n\
TestTemplateViewModel.prototype.clone = function(){\n\
    var self = TestTemplateViewModel.typesafe(this);\n\
\n\
    var newTest = new TestTemplateViewModel(self.rootVm);\n\
\n\
    newTest.name(self.name());\n\
    newTest.description(self.description());\n\
    newTest.duration(self.duration());\n\
    newTest.bandwidth(self.bandwidth());\n\
    newTest.spirent_test_id(self.spirent_test_id());\n\
\n\
    newTest.engine = self.engine;\n\
    newTest.module = self.module;\n\
    newTest.isTemplate = self.isTemplate;\n\
    newTest.isUserSave = self.isUserSave;\n\
    newTest.recommendedTrackIds = self.recommendedTrackIds;\n\
\n\
    newTest.categories(self.categories());\n\
    newTest.template_name(self.template_name());\n\
    newTest.playlist_ids(self.playlist_ids());\n\
    newTest.datapoint_ids(self.datapoint_ids());\n\
\n\
    if(self.traffic_players){\n\
        newTest.traffic_players = self.traffic_players;\n\
    }\n\
    if(self.result_types){\n\
        newTest.result_types = self.result_types;\n\
    }\n\
\n\
    newTest.supplementalConfiguration = new TestSupplementalConfigurationViewModel(self.rootVm);\n\
    newTest.supplementalConfiguration.inflate(self.supplementalConfiguration.toFlatObject());\n\
\n\
    newTest.tags(self.tags());\n\
\n\
    return newTest;\n\
};\n\
\n\
module.exports = TestTemplateViewModel;//@ sourceURL=test-template-view-model/index.js"
));
require.register("configured-test-view-model/index.js", Function("exports, require, module",
"var emitter = require('emitter'),\r\n\
    debounce = require('utility-functions').debounce,\r\n\
    AsyncPoller = require('async-poller'),\r\n\
    moment = require('moment'),\r\n\
    tz = window.jstz.determine();\r\n\
\r\n\
/**\r\n\
 * Instance of test configuration - managed by TestViewModel.\r\n\
 *\r\n\
 * @param testVm\r\n\
 * @constructor\r\n\
 */\r\n\
function ConfiguredTestViewModel(testVm) {\r\n\
    var self = this;\r\n\
\r\n\
    self.testVm = testVm;\r\n\
    self.rootVm = testVm.rootVm;\r\n\
\r\n\
    self.defaultDuration = 1;\r\n\
    self.id = ko.observable();\r\n\
    self.name = ko.observable();\r\n\
    self.description = ko.observable();\r\n\
    self.categories = ko.observableArray();\r\n\
    self.template_name = ko.observable();\r\n\
    self.spirent_test_id = ko.observable();\r\n\
    self.duration = ko.observable(self.defaultDuration);\r\n\
    self.formattedDuration =  ko.computed(self.computedDurationRead.bind(self));\r\n\
    self.validation_results = ko.observable();\r\n\
    self.validation_results_success = true;\r\n\
    self.bandwidth = ko.observable();\r\n\
    self.customer = ko.observable();\r\n\
    self.location = ko.observable();\r\n\
    self.favorite = ko.observable();\r\n\
    self.working = ko.observable(false);\r\n\
    self.traffic_players = ko.observableArray();\r\n\
    self.tags = ko.observableArray();\r\n\
    self.unqualifiedTags = ko.observable();\r\n\
    self.datapoint_ids = new Array();\r\n\
    self.polling = ko.observable(false);\r\n\
    self.poller = ko.observable();\r\n\
    self.isLoaded = ko.observable(false);\r\n\
    self.isDirty = false;\r\n\
    self.startState = null;\r\n\
    self.startingTest = false;\r\n\
\r\n\
    self.engine = null;\r\n\
    self.module = null;\r\n\
    self.isTemplate = false;\r\n\
    self.isUserSave = false;\r\n\
    self.recommendedTrackIds = ko.observable();\r\n\
    self.diagram = null;\r\n\
    self.isMulticast = undefined;\r\n\
    self.multicast_settings = undefined;\r\n\
    self.supplementalConfiguration = null;\r\n\
\r\n\
    self.defaultPlaylistId = null;\r\n\
\r\n\
    self.displayTags = ko.computed({\r\n\
        read: self.displayTagsRead.bind(self),\r\n\
        write: self.displayTagsWrite.bind(self)\r\n\
    });\r\n\
    self.preValidationResult = ko.observable();\r\n\
\r\n\
    self.devices_status_poller = new AsyncPoller(self.getDevicesStatus.bind(self));\r\n\
    self.timings_poller = new AsyncPoller(self.getTimingAccuracies.bind(self));\r\n\
    self.time_sync_poller = new AsyncPoller(self.getDeviceTimeSyncCapabilities.bind(self));\r\n\
\r\n\
    self.attributes = undefined;\r\n\
}\r\n\
\r\n\
emitter(ConfiguredTestViewModel.prototype);\r\n\
\r\n\
ConfiguredTestViewModel.typesafe = function (that) {\r\n\
    if (!(that instanceof ConfiguredTestViewModel)) {\r\n\
        throw 'This method must be executed on a ConfiguredTestViewModel';\r\n\
    }\r\n\
\r\n\
    return that;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.computedDurationRead = function () {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
    return translate('{value} MIN', {\r\n\
        value: self.duration()\r\n\
    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.getTotalTrafficLabel = function () {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    var trafficTotal = {};\r\n\
    var trafficPlayers = self.traffic_players();\r\n\
    for(var i = 0; i < trafficPlayers.length; i++)\r\n\
        trafficPlayers[i].aggregateTraffic(trafficTotal);\r\n\
\r\n\
    var trafficTotalLabel = '';\r\n\
    for (var key in trafficTotal) {\r\n\
        if (trafficTotal.hasOwnProperty(key)) {\r\n\
            trafficTotalLabel += (trafficTotalLabel.length > 0 ? \" - \" : \"\") + (isNaN(trafficTotal[key]) ? \"\" : trafficTotal[key] + \" \" + key);\r\n\
        }\r\n\
    }\r\n\
    return trafficTotalLabel;\r\n\
};\r\n\
\r\n\
// ... This should really be done in a data model, but we don't have any\r\n\
ConfiguredTestViewModel.prototype.get_device_ids = function () {\r\n\
    var ids = [],\r\n\
        traffic_players = this.traffic_players(),\r\n\
        source,\r\n\
        destination;\r\n\
\r\n\
    traffic_players.forEach(function (player) {\r\n\
        source = player.source();\r\n\
        destination = player.destination();\r\n\
\r\n\
        if (source && (source = source.get_device_id()) && -1 === ids.indexOf(source)) {\r\n\
            ids.push(source);\r\n\
        }\r\n\
\r\n\
        if (destination && (destination = destination.get_device_id())) {\r\n\
            if (destination instanceof Array) {\r\n\
                destination.forEach(function(item){\r\n\
                    if(-1 === ids.indexOf(item)){\r\n\
                        ids.push(item);\r\n\
                    }\r\n\
                });\r\n\
            } else {\r\n\
                if(-1 === ids.indexOf(destination)){\r\n\
                    ids.push(destination);\r\n\
                }\r\n\
            }\r\n\
        }\r\n\
    });\r\n\
\r\n\
    return ids;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.pollDevicesStatus = function () {\r\n\
    logger.info('Polling device status');\r\n\
\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    if (!self.get_device_ids().length) {\r\n\
        // Devices haven't been loaded\r\n\
        return; // Short-circuit\r\n\
    }\r\n\
\r\n\
    self.devices_status_poller.poll();\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.getDevicesStatus = function(callback, device_ids) {\r\n\
    logger.info('Getting devices status');\r\n\
\r\n\
    var update = this.setDevicesStatus.bind(this);\r\n\
\r\n\
    callback = callback || function () {};\r\n\
    device_ids = device_ids || this.get_device_ids(); // Get latest device ID's in case they've changed since last poll\r\n\
\r\n\
    $.ajax({\r\n\
        method: 'GET',\r\n\
        url: util.getConfigSetting(\"devices_status\"),\r\n\
        data: {\r\n\
            device_ids: device_ids\r\n\
        },\r\n\
        dataType: 'json'\r\n\
    }).always(function (data, status) {\r\n\
        if ('success' !== status || data.result && 'FAILURE' === data.result) {\r\n\
            logger.error('Failed to get device status. Result was: ' + JSON.stringify(data, undefined, 2));\r\n\
        } else {\r\n\
            update(data);\r\n\
        }\r\n\
        callback(data, status);\r\n\
    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.setDevicesStatus = function (devices_data) {\r\n\
    logger.info('Setting devices status', devices_data);\r\n\
\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    for (var i = 0; i < devices_data.length; i++) {\r\n\
        var device_data = devices_data[i];\r\n\
        var device = ko.utils.arrayFirst(self.testVm.availableDevices(), function (item) {\r\n\
            return item.id() == device_data.id;\r\n\
        });\r\n\
\r\n\
        device.inflate(device_data);\r\n\
    }\r\n\
};\r\n\
\r\n\
/**\r\n\
 * Returns a list of source device IDs to destination device IDs based on\r\n\
 * current test configuration.\r\n\
 *\r\n\
 * @returns {Array} paths\r\n\
 */\r\n\
ConfiguredTestViewModel.prototype.get_device_paths = function () {\r\n\
    var paths = [],\r\n\
        traffic_players = this.traffic_players(),\r\n\
        source,\r\n\
        destination;\r\n\
\r\n\
    traffic_players.forEach(function (player) {\r\n\
        source = player.source();\r\n\
        destination = player.destination();\r\n\
\r\n\
        if (source && (source = source.get_device_id())\r\n\
            && destination && (destination = destination.get_device_id())\r\n\
            ) {\r\n\
            if(destination instanceof Array){\r\n\
                destination.forEach(function(item){\r\n\
                    paths.push({\r\n\
                        \"source\": source,\r\n\
                        \"destination\": item\r\n\
                    });\r\n\
                })\r\n\
            }\r\n\
            else{\r\n\
                paths.push({\r\n\
                    \"source\": source,\r\n\
                    \"destination\": destination\r\n\
                });\r\n\
            }\r\n\
        }\r\n\
    });\r\n\
\r\n\
    return paths;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.pollTimingAccuracies = function () {\r\n\
    logger.info('Polling timing accuracies');\r\n\
\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    if (!self.get_device_paths().length) {\r\n\
        // Traffic players haven't been loaded\r\n\
        return; // Short-circuit\r\n\
    }\r\n\
\r\n\
    self.timings_poller.poll();\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.getTimingAccuracies = function (callback, paths) {\r\n\
    logger.info('Getting timing accuracies');\r\n\
\r\n\
    var update = this.setTimingAccuracies.bind(this);\r\n\
\r\n\
    callback = callback || function () {};\r\n\
    paths = paths || this.get_device_paths(); // Get latest paths in case they've changed since last poll\r\n\
\r\n\
    $.ajax({\r\n\
        type: \"POST\",\r\n\
        url: util.getConfigSetting(\"get_timing_accuracies\"),\r\n\
        data: JSON.stringify({paths: paths}),\r\n\
        dataType: 'json',\r\n\
        contentType: 'application/json',\r\n\
        processData: false\r\n\
    }).always(function (data, status) {\r\n\
        if ('success' !== status || data.result && 'FAILURE' === data.result) {\r\n\
            logger.error('Failed to get timing accuracies. Result was: ' + JSON.stringify(data, undefined, 2));\r\n\
        } else {\r\n\
            update(data);\r\n\
        }\r\n\
        callback(data, status);\r\n\
    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.setTimingAccuracies = function (data) {\r\n\
    logger.info('Setting timing accuracies', data);\r\n\
\r\n\
    var players = this.traffic_players() || [];\r\n\
\r\n\
    players.forEach(function (player) {\r\n\
        var source = player.source(),\r\n\
            destination = player.destination();\r\n\
\r\n\
            if (source && destination) {\r\n\
                if(destination.devices && destination.devices()){\r\n\
                    destination.devices().forEach(function(item){\r\n\
                        var path = data.paths.filter(function (path) {\r\n\
                            return path.source === source.get_device_id() && path.destination === item.device().id();\r\n\
                        })[0];\r\n\
\r\n\
                        if (path) {\r\n\
                            item.updateTimingAccuracy(path.accuracy);\r\n\
                        }\r\n\
                    });\r\n\
                }\r\n\
                else{\r\n\
                    var path = data.paths.filter(function (path) {\r\n\
                        return path.source === source.get_device_id() && path.destination === destination.get_device_id();\r\n\
                    })[0];\r\n\
\r\n\
                    if (path) {\r\n\
                        player.updateTimingAccuracy(path.accuracy);\r\n\
                    }\r\n\
                }\r\n\
            }\r\n\
    });\r\n\
\r\n\
\r\n\
//    players.forEach(function (player) {\r\n\
//        var path = data.paths.filter(function (path) {\r\n\
//            var source = player.source(),\r\n\
//                destination = player.destination();\r\n\
//\r\n\
//            if (source && destination) {\r\n\
//                return path.source === source.get_device_id() && path.destination === destination.get_device_id();\r\n\
//            }\r\n\
//\r\n\
//            return false;\r\n\
//        })[0];\r\n\
//\r\n\
//        if (path) {\r\n\
//            player.updateTimingAccuracy(path.accuracy);\r\n\
//        }\r\n\
//    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.pollDeviceTimeSyncCapabilities = function () {\r\n\
    logger.info('Polling time sync status');\r\n\
\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    if (!self.get_device_ids().length) {\r\n\
        // Traffic players haven't been loaded\r\n\
        return; // Short-circuit\r\n\
    }\r\n\
\r\n\
    self.time_sync_poller.poll();\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.getDeviceTimeSyncCapabilities = function (callback, device_ids) {\r\n\
    logger.info('Getting time sync status');\r\n\
\r\n\
    var update = this.setDeviceTimeSyncCapabilities.bind(this);\r\n\
\r\n\
    callback = callback || function () {};\r\n\
    device_ids = device_ids || this.get_device_ids(); // Get latest device ID's in case they've changed since last poll\r\n\
\r\n\
    $.ajax({\r\n\
        method: 'GET',\r\n\
        url: util.getConfigSetting(\"time_sync_status\"),\r\n\
        data: {\r\n\
            device_ids: device_ids\r\n\
        },\r\n\
        dataType: 'json'\r\n\
    }).always(function (data, status) {\r\n\
        if ('success' !== status || data.result && 'FAILURE' === data.result) {\r\n\
            logger.error('Failed to get time sync status. Result was: ' + JSON.stringify(data, undefined, 2));\r\n\
        } else {\r\n\
            update(data);\r\n\
        }\r\n\
        callback(data, status);\r\n\
    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.setDeviceTimeSyncCapabilities = function (data) {\r\n\
    logger.info('Setting time sync status', data);\r\n\
\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    self.rootVm.updateDeviceTimeSyncCapabilities(data);\r\n\
};\r\n\
\r\n\
/**\r\n\
 * Loads configuration from an existing test\r\n\
 *\r\n\
 * @param testConfiguration TestTemplateViewModel\r\n\
 * @param loadCompleted\r\n\
 */\r\n\
ConfiguredTestViewModel.prototype.loadTest = function (testConfiguration, loadCompleted) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    // Avoid errors by forcing Knockout to destroy bindings from previous test\r\n\
    self.testVm.testConfigurationTemplateName(undefined);\r\n\
\r\n\
    self.name(testConfiguration.name());\r\n\
    self.description(testConfiguration.description());\r\n\
    self.duration(testConfiguration.duration() || self.defaultDuration);\r\n\
    self.bandwidth(testConfiguration.bandwidth());\r\n\
    self.id(testConfiguration.id());\r\n\
    self.traffic_players.removeAll();\r\n\
    self.categories(testConfiguration.categories());\r\n\
    self.template_name(testConfiguration.template_name());\r\n\
    self.spirent_test_id(testConfiguration.spirent_test_id());\r\n\
\r\n\
    if(testConfiguration.attributes){\r\n\
        self.attributes = testConfiguration.attributes;\r\n\
    }\r\n\
\r\n\
    self.engine = testConfiguration.engine;\r\n\
    self.module = testConfiguration.module;\r\n\
    self.emit('changed:module', self.module)\r\n\
    //self.isTemplate = testConfiguration.isTemplate();\r\n\
    self.isTemplate = false;\r\n\
    self.isUserSave = testConfiguration.isUserSave;\r\n\
    self.recommendedTrackIds = testConfiguration.recommendedTrackIds;\r\n\
    self.diagram = testConfiguration.diagram;\r\n\
\r\n\
    self.isMulticast = testConfiguration.isMulticast;\r\n\
    if (testConfiguration.multicast_settings) {\r\n\
        self.multicast_settings = testConfiguration.multicast_settings;\r\n\
    }\r\n\
\r\n\
    self.supplementalConfiguration = new TestSupplementalConfigurationViewModel(self.rootVm);\r\n\
    self.supplementalConfiguration.inflate(testConfiguration.supplementalConfiguration.toFlatObject());\r\n\
\r\n\
    self.isDirty = false;\r\n\
\r\n\
    if (self.isUserSave === undefined\r\n\
        || self.isUserSave === null) {\r\n\
        self.isUserSave = false;\r\n\
    }\r\n\
\r\n\
    if (testConfiguration.isTemplate()) {\r\n\
        self.id(-1);\r\n\
        self.isDirty = true;\r\n\
    }\r\n\
\r\n\
    self.datapoint_ids.length = 0;\r\n\
\r\n\
    self.datapoint_ids = testConfiguration.datapoint_ids();\r\n\
\r\n\
    if(testConfiguration.traffic_players){\r\n\
        self.defaultPlaylistId = testConfiguration.traffic_players[0].playlist.id;\r\n\
        for(var i = 0; i < testConfiguration.traffic_players.length; i++){\r\n\
            self.addTrafficPlayer(testConfiguration.traffic_players[i], true);\r\n\
        }\r\n\
    } else {\r\n\
        var playlistIds = testConfiguration.playlist_ids();\r\n\
        self.defaultPlaylistId = playlistIds[0];\r\n\
\r\n\
        for (var i = 0; i < playlistIds.length; i++) {\r\n\
            var playlist = ko.utils.arrayFirst(self.testVm.availablePlaylists(), function (item) {\r\n\
                return item.id() == playlistIds[i];\r\n\
            });\r\n\
\r\n\
            if (playlist != null) {\r\n\
                var trafficPlayer = self.addTrafficPlayer();\r\n\
                trafficPlayer.playlist(playlist);\r\n\
            }\r\n\
        }\r\n\
    }\r\n\
\r\n\
    self.pollDevicesStatus();\r\n\
    self.pollTimingAccuracies();\r\n\
    self.pollDeviceTimeSyncCapabilities();\r\n\
\r\n\
    self.customer(testConfiguration.customer());\r\n\
    self.location(testConfiguration.location());\r\n\
    self.favorite(testConfiguration.favorite());\r\n\
\r\n\
    self.tags.removeAll();\r\n\
    var tags = testConfiguration.tags();\r\n\
    for (var i = 0; i < tags.length; i++) {\r\n\
        self.tags.push(tags[i]);\r\n\
    }\r\n\
    self.isLoaded(true);\r\n\
    if(testConfiguration.result_types)\r\n\
        self.result_types = testConfiguration.result_types;\r\n\
    else\r\n\
        self.result_types = [1];\r\n\
\r\n\
\r\n\
    self.setStartState();\r\n\
    //self.rootVm.getAvailableEndpoints();\r\n\
    //self.rootVm.getAvailableTracks();\r\n\
    //self.rootVm.getAvailablePlaylists();\r\n\
    //self.rootVm.getAvailableTests();\r\n\
\r\n\
    self.updateConfig(self.startState);\r\n\
\r\n\
    if(loadCompleted)\r\n\
        loadCompleted();\r\n\
    else\r\n\
        self.rootVm.showTest();\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.updateConfig = function (config) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    config = config || self.toFlatObject();\r\n\
\r\n\
    $.ajax({\r\n\
        type: util.getRequestMethod(\"config_test\"),\r\n\
        url: util.getConfigSetting(\"config_test\"),\r\n\
        data: util.formatRequestData(\"config_test\", config),\r\n\
        dataType: 'json',\r\n\
        cache: false,\r\n\
        success: function (data, textStatus, jqXhr) {\r\n\
            var device;\r\n\
            if (data.is_error) {\r\n\
                if (data.error_type === 'DEVICE_AUTH') {\r\n\
                    device = ko.utils.arrayFirst(self.rootVm.availableDevices(), function(item) {\r\n\
                        return data.device_id === item.id();\r\n\
                    });\r\n\
\r\n\
                    util.lightbox.openDeviceAuthError(self, device, data.messages[0].header, data.messages[0].content);\r\n\
                } else {\r\n\
                    util.lightbox.openError(data.messages[0].header, data.messages[0].content);\r\n\
                }\r\n\
            }\r\n\
        },\r\n\
        error: function (jqXhr, textStatus, errorThrown) { util.logData(\"config_test failed: \"+errorThrown); }\r\n\
    });\r\n\
}\r\n\
\r\n\
ConfiguredTestViewModel.prototype.setStartState = function () {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this),\r\n\
        trafficPlayers = self.traffic_players(),\r\n\
        i;\r\n\
\r\n\
    for (i = 0; i < trafficPlayers.length; i += 1) {\r\n\
        if (!trafficPlayers[i].loaded) {\r\n\
            setTimeout(self.setStartState.bind(self), 10);\r\n\
            return;\r\n\
        }\r\n\
    }\r\n\
\r\n\
    self.startState = self.toFlatObject();\r\n\
\r\n\
    self.startStateLessNameAndTags = self.getNormalizedFlatObject(self.toFlatObject());\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.getNormalizedFlatObject = function (flatObject) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    flatObject.name = null;\r\n\
    flatObject.description = null;\r\n\
    flatObject.customer = null;\r\n\
    flatObject.company = null;\r\n\
    flatObject.location = null;\r\n\
    flatObject.favorite = null;\r\n\
    flatObject.tags = null;\r\n\
\r\n\
    return flatObject;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.addTrafficPlayer = function (flatData) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this),\r\n\
        flatData = flatData || {},\r\n\
        trafficPlayer = new TrafficPlayerViewModel(self),\r\n\
        supplemental_config = self.supplementalConfiguration;\r\n\
\r\n\
    if (supplemental_config && supplemental_config.hasSupplementalConfiguration) {\r\n\
        var trafficPlayerSupplementalConfig = new TestSupplementalConfigurationViewModel(self.rootVm);\r\n\
        trafficPlayerSupplementalConfig.inflate(supplemental_config.toFlatObject());\r\n\
        trafficPlayer.supplementalConfiguration(trafficPlayerSupplementalConfig);\r\n\
        trafficPlayer.hasSupplementalConfiguration(true);\r\n\
    } else {\r\n\
        trafficPlayer.hasSupplementalConfiguration(false);\r\n\
    }\r\n\
\r\n\
    trafficPlayer.inflate(flatData, self.defaultPlaylistId, self.datapoint_ids, self.isMulticast);\r\n\
\r\n\
    self.traffic_players.push(trafficPlayer);\r\n\
\r\n\
    return trafficPlayer;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.getPlayerLayers = function () {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    var playerLayers = new Array();\r\n\
\r\n\
    var trafficPlayers = self.traffic_players();\r\n\
    for (var i = 0; i < trafficPlayers.length; i++) {\r\n\
        var playerLayer = trafficPlayers[i].getPlayerLayer();\r\n\
\r\n\
        if (playerLayer != null) {\r\n\
            playerLayers.push(playerLayer);\r\n\
        }\r\n\
    }\r\n\
\r\n\
    return playerLayers;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.getTrackResultTypes = function () {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this),\r\n\
        trackResultTypes = [],\r\n\
        trafficPlayers = self.traffic_players(),\r\n\
        i,\r\n\
        playerTrackResultTypes;\r\n\
\r\n\
    for (i = 0; i < trafficPlayers.length; i += 1) {\r\n\
        playerTrackResultTypes = trafficPlayers[i].getTrackResultTypes();\r\n\
\r\n\
        if (playerTrackResultTypes.length > 0) {\r\n\
            trackResultTypes = self.mergeTrackResultTypes(trackResultTypes, playerTrackResultTypes);\r\n\
        }\r\n\
    }\r\n\
\r\n\
    return trackResultTypes;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.hasHTTPTrack = function () {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this),\r\n\
        trafficPlayers = self.traffic_players();\r\n\
\r\n\
    return trafficPlayers.some(function (player) {\r\n\
        return player.hasHTTPTrack();\r\n\
    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.mergeTrackResultTypes = function (trackResultTypes, playerTrackResultTypes) {\r\n\
    var i;\r\n\
\r\n\
    for (i = 0; i < playerTrackResultTypes.length; i += 1) {\r\n\
        if (trackResultTypes.indexOf(playerTrackResultTypes[i]) === -1) {\r\n\
            trackResultTypes.push(playerTrackResultTypes[i]);\r\n\
        }\r\n\
    }\r\n\
\r\n\
    return trackResultTypes;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.validate = function(success, result){\r\n\
    var self = ConfiguredTestViewModel.typesafe(this),\r\n\
        result = result || new ValidationResultsViewModel(self),\r\n\
        success = success || function () {};\r\n\
\r\n\
    if(self.traffic_players().length > 0){\r\n\
        for(var i = 0; i < self.traffic_players().length; i++){\r\n\
            self.traffic_players()[i].validate(result, translate(\"Traffic Player {number}\", {\r\n\
                number: i + 1\r\n\
            }));\r\n\
        }\r\n\
\r\n\
        if (result.is_valid) {\r\n\
            if (!result.warnings.length) {\r\n\
                success();\r\n\
            } else {\r\n\
                // Show warnings, then try to run the test\r\n\
                util.lightbox.close();\r\n\
                util.lightbox.open({\r\n\
                    url: 'templates/lightbox.tmpl.html',\r\n\
                    selector: '#lightbox-run-test-validation-template',\r\n\
                    cancelSelector: '.cancel-button',\r\n\
                    isModal: false,\r\n\
                    onOpenComplete: function () {\r\n\
                        ko.applyBindings(result, document.getElementById('lightbox-run-test-validation'));\r\n\
                    },\r\n\
                    onClose: function () {\r\n\
                        if (result.ignore_warning) {\r\n\
                            setTimeout(function () {\r\n\
                                success();\r\n\
                            }, 500);\r\n\
                        }\r\n\
                    }\r\n\
                });\r\n\
            }\r\n\
\r\n\
        } else {\r\n\
            self.setValidationResults(result);\r\n\
        }\r\n\
\r\n\
    }else{\r\n\
        result.addCheckResults(translate(\"Test Configuration Error\"), false, translate(\"At least one traffic player is required\"));\r\n\
        self.setValidationResults(result);\r\n\
    }\r\n\
    return result;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.runTest = function(){\r\n\
    if (this.startingTest) {\r\n\
        return; // Short-circuit\r\n\
    }\r\n\
\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
    var currentConfig = self.toFlatObject();\r\n\
    var normalizedCurrentConfig = self.getNormalizedFlatObject(self.toFlatObject());\r\n\
    var formatRequestData = util.formatRequestData('run_test', currentConfig);\r\n\
    var run_handler = function(){\r\n\
        self.startingTest = true;\r\n\
        util.lightbox.working(new LightboxWorkingViewModel(translate(\"Start\"), translate(\"Validating Test...\")));\r\n\
        $.ajax({\r\n\
            type: util.getRequestMethod('run_test'),\r\n\
            url: util.getConfigSetting('run_test'),\r\n\
            data: formatRequestData,\r\n\
            dataType: 'json',\r\n\
            //async: false,\r\n\
            success: self.parseValidationResults.bind(self)\r\n\
        }).fail(function () {\r\n\
            logger.error('Validation failed due to HTTP error');\r\n\
            util.lightbox.error(translate(\"Validating test\"));\r\n\
            self.startingTest = false;\r\n\
        });\r\n\
    };\r\n\
\r\n\
    self.startingTest = true;\r\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Start\"), translate(\"Validating Test...\")));\r\n\
\r\n\
    if (self.isDirty || ko.toJSON(normalizedCurrentConfig) !== ko.toJSON(self.startStateLessNameAndTags)) {\r\n\
        currentConfig.is_dirty = true;\r\n\
        currentConfig.id = -1;\r\n\
        self.id(-1);\r\n\
    }\r\n\
\r\n\
    self.check_for_conflicts_with_upcoming(formatRequestData, run_handler);\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.check_for_conflicts_with_upcoming = function(formatRequestData,callback) {\r\n\
    var self = this;\r\n\
    $.ajax({\r\n\
        type: 'POST',\r\n\
        url: '/spirent/check_for_conflicts_with_upcoming',\r\n\
        data: formatRequestData,\r\n\
        dataType: 'json'\r\n\
    }).success(function(data, textStatus, jqXhr){\r\n\
        if(data.conflicts_found && data.conflicts_found === true){\r\n\
            self.startingTest = false;\r\n\
            util.lightbox.confirmation_dialog(self,self.get_conflict_message(data),callback)\r\n\
        }\r\n\
        else self.parseValidationResults.call(self, data, textStatus, jqXhr);\r\n\
    }).fail(function () {\r\n\
        logger.error('Validation failed due to HTTP error');\r\n\
        util.lightbox.error(translate(\"Validating test\"));\r\n\
        self.startingTest = false;\r\n\
    });\r\n\
}\r\n\
\r\n\
ConfiguredTestViewModel.prototype.get_conflict_message = function(res) {\r\n\
    if(res.device.name && res.conflicts.length > 0 && res.conflicts[0].name && res.conflicts[0].datetime && res.conflicts[0].event_info.duration){\r\n\
        var device_name = res.device.name;\r\n\
        if(device_name === \"Local Chassis\" && res.conflicts[0].event_info.attributes.type === \"remote_test_run\")\r\n\
        {\r\n\
            device_name = \"Remote Chassis\";\r\n\
        }\r\n\
        return window.translate(\"Starting this test will interrupt your scheduled test:<br />\\\"{name}\\\" on {devices} at {datetime} for {duration} minute(s).\", {\r\n\
            name: res.conflicts[0].name,\r\n\
            devices: device_name,\r\n\
            duration: res.conflicts[0].event_info.duration,\r\n\
            datetime:  moment.tz(res.conflicts[0].datetime, tz.name()).format('LLL')\r\n\
        });\r\n\
    }\r\n\
    else{\r\n\
        return window.translate(\"Starting this test will interrupt your scheduled test.\");\r\n\
    }\r\n\
}\r\n\
\r\n\
ConfiguredTestViewModel.prototype.parseValidationResults = function (data, textStatus, jqXhr) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
    if (data.items !== undefined) {\r\n\
        if (data.items.length > 0) {\r\n\
            self.id(data.items[0].id);\r\n\
            self.rootVm.insertUserTest(self)\r\n\
        }\r\n\
    }\r\n\
    var validation_results = new ValidationResultsViewModel(self);\r\n\
    validation_results.inflate(data);\r\n\
    self.setValidationResults(validation_results);\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.setValidationResults = function (data) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this),\r\n\
        $lb,\r\n\
        begin_testing = function () {\r\n\
            self.startingTest = false;\r\n\
            self.testVm.beginTesting();\r\n\
        },\r\n\
        show_invalid = function(result) {\r\n\
            $lb = document.getElementById('lightbox-run-test-validation');\r\n\
            ko.applyBindings(result, $lb);\r\n\
            self.startingTest = false;\r\n\
        };\r\n\
\r\n\
    if (data.is_ready && !data.is_valid) {\r\n\
        throw new ConfiguredTestViewModelException('Test is ready but invalid - only valid tests can be ready');\r\n\
    }\r\n\
\r\n\
    self.validation_results(data);\r\n\
\r\n\
    if (!data.is_ready && data.is_valid) {\r\n\
        // Show message until test is ready or validation fails\r\n\
\r\n\
        self.id(data.id);\r\n\
        self.startStateLessNameAndTags = self.getNormalizedFlatObject(self.toFlatObject());\r\n\
        self.isDirty = false;\r\n\
\r\n\
        var message = translate('Validating Test Configuration...');\r\n\
        if(data.messages && data.messages.length > 0)\r\n\
            message = data.messages[0];\r\n\
        if(message.header == \"randomize\"){\r\n\
            var testMessages = [translate(\"Allocating ports...\"),translate(\"Checking Connection...\"),translate(\"Sending test packets...\"),translate(\"Verifying link...\"),translate(\"Disambiguating systems...\"),translate(\"Generating protocols...\"),translate(\"Visualizing data...\"),translate(\"Initializing network...\")];\r\n\
            message.header = testMessages[Math.floor(Math.random()*testMessages.length)];\r\n\
        }\r\n\
        util.lightbox.working(new LightboxWorkingViewModel(translate('Validate'), message.header, null, message.content));\r\n\
\r\n\
        setTimeout(self.checkTestReady.bind(self), 1000);\r\n\
        return; // Short-circuit\r\n\
    }\r\n\
\r\n\
    // Test is ready or invalid\r\n\
    util.lightbox.close();\r\n\
    util.lightbox.open({\r\n\
        url : 'html/lightbox_tmpl',\r\n\
        selector : '#lightbox-run-test-validation-template',\r\n\
        cancelSelector: '.cancel-button',\r\n\
        isModal : data.is_valid,\r\n\
        onOpenComplete: data.is_ready ? begin_testing : show_invalid.bind(self, data),\r\n\
        onClose: self.cancelTest.bind(self)\r\n\
    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.checkTestReady = function (data, textStatus, jqXhr) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
    $.ajax({\r\n\
        type: 'GET',\r\n\
        url: util.getConfigSetting('get_istestready'),\r\n\
        dataType: 'json',\r\n\
        cache: false,\r\n\
        success: self.parseValidationResults.bind(self)\r\n\
    }).fail(function () {\r\n\
        util.lightbox.error(translate('Running test'));\r\n\
        self.startingTest = false;\r\n\
    });\r\n\
};\r\n\
\r\n\
\r\n\
ConfiguredTestViewModel.prototype.cancelTest = function (callback) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
    $.ajax({\r\n\
        type: util.getRequestMethod('cancel_test'),\r\n\
        url: util.getConfigSetting('cancel_test'),\r\n\
        dataType: 'json',\r\n\
        success: function(data, textStatus, jqXhr){\r\n\
            //if (data.result === \"FAILURE\") {\r\n\
            //self.rootVm.removeUserTest(self)\r\n\
            //}\r\n\
            if(util.lightbox.isOpen)\r\n\
                util.lightbox.close();\r\n\
\r\n\
            self.startingTest = false;\r\n\
\r\n\
            if ($.type(callback) == 'function') {\r\n\
                callback();\r\n\
            }\r\n\
        }\r\n\
    }).fail(function () {\r\n\
        util.lightbox.error(translate(\"Canceling test\"))\r\n\
    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.toJSON = function(){\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    var jsonTest = {\r\n\
        id: self.id(),\r\n\
        traffic_players : new Array(),\r\n\
        name : self.name(),\r\n\
        duration : self.duration(),\r\n\
        engine : self.engine,\r\n\
        spirent_test_id: self.spirent_test_id(),\r\n\
        module : self.module,\r\n\
        isTemplate : self.isTemplate,\r\n\
        is_user_save : self.isUserSave,\r\n\
        recommended_track_ids : self.recommendedTrackIds,\r\n\
        diagram: self.diagram\r\n\
    };\r\n\
\r\n\
    var traffic_players = self.traffic_players();\r\n\
    for(var i = 0; i < traffic_players.length; i++)\r\n\
        jsonTest.traffic_players.push(traffic_players[i].toFlatObject());\r\n\
\r\n\
    return jsonTest;\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.displayTagsRead = function () {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    if (!self.unqualifiedTags()) {\r\n\
        self.unqualifiedTags(self.tags().join(', '));\r\n\
    }\r\n\
    return util.sanitizeUnqualifiedTagGroup(self.unqualifiedTags());\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.displayTagsWrite = function (value) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    if (value == null) {\r\n\
        return;\r\n\
    }\r\n\
\r\n\
    var newArray = value.split(',');\r\n\
\r\n\
    self.tags.removeAll();\r\n\
    for (var i = 0; i < newArray.length; i++) {\r\n\
        var trimmedValue = util.trimTag(newArray[i]);\r\n\
\r\n\
        if (trimmedValue == '') {\r\n\
            continue;\r\n\
        }\r\n\
\r\n\
        if (self.tags().indexOf(trimmedValue) == -1) {\r\n\
            self.tags.push(trimmedValue);\r\n\
        }\r\n\
\r\n\
        if (self.rootVm.availableTags().indexOf(trimmedValue) == -1) {\r\n\
            self.rootVm.availableTags.push(trimmedValue);\r\n\
        }\r\n\
    }\r\n\
    self.unqualifiedTags(util.sanitizeUnqualifiedTagGroup(value));\r\n\
    self.unqualifiedTags.valueHasMutated();\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.preValidate = function(result, targetName){\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
    errors = [];\r\n\
\r\n\
    if(util.isNullOrEmpty(self.name())){\r\n\
        errors.push(translate('name'));\r\n\
    }\r\n\
\r\n\
    if(errors.length > 0){\r\n\
        result.addCheckResults(translate(\"Test Configuration\"), false, translate('Test is missing configuration for: {errors}', {\r\n\
            errors: errors.join(', ')\r\n\
        }));\r\n\
    }\r\n\
\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.save = function (obj, event) {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this);\r\n\
\r\n\
    var name = self.name();\r\n\
    self.unqualifiedTags(self.tags().join(', '));\r\n\
    var preValidationResult = new ValidationResultsViewModel(self);\r\n\
    self.preValidate(preValidationResult, name);\r\n\
    self.preValidationResult(preValidationResult);\r\n\
    if(!preValidationResult.is_valid){\r\n\
        return;\r\n\
    }\r\n\
\r\n\
    var dataLessNameAndTags = self.getNormalizedFlatObject(self.toFlatObject());\r\n\
\r\n\
    var start = JSON.stringify(self.startStateLessNameAndTags);\r\n\
    var finish = JSON.stringify(dataLessNameAndTags);\r\n\
    var testChanged = start !== finish;\r\n\
\r\n\
    if (testChanged) {\r\n\
        self.id(-1);\r\n\
    }\r\n\
\r\n\
    var name = self.name();\r\n\
    var id = self.id();\r\n\
\r\n\
    var newname = '';\r\n\
    var iteration = 0;\r\n\
\r\n\
    var foundExisting = ko.utils.arrayFirst(self.rootVm.availableTests(), function (item) {\r\n\
        return name === item.name() && id !== item.id();\r\n\
    });\r\n\
    while (foundExisting != null) {\r\n\
        newname = name + ' [' + (iteration++) + ']';\r\n\
\r\n\
        foundExisting = ko.utils.arrayFirst(self.rootVm.availableTests(), function (item) {\r\n\
            return newname == item.name();\r\n\
        });\r\n\
    }\r\n\
    if(newname != '') {\r\n\
        self.name(newname);\r\n\
    }\r\n\
\r\n\
    var data = self.toFlatObject();\r\n\
\r\n\
    util.lightbox.close();\r\n\
\r\n\
    var workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'));\r\n\
    util.lightbox.working(workingVm);\r\n\
    data.is_user_save = true;\r\n\
    $.ajax({\r\n\
        type: util.getRequestMethod('save_axon_test'),\r\n\
        url: util.getConfigSetting('save_axon_test'),\r\n\
        data: util.formatRequestData('save_axon_test', data),\r\n\
        dataType: 'json',\r\n\
        success: function (data, textStatus, jqXhr) {\r\n\
            if (data.result == \"SUCCESS\") {\r\n\
                self.id(data.items[0].id);\r\n\
                // We save test successfully, so current test is clean\r\n\
                self.isDirty = false;\r\n\
                logger.info('Updated axon user test id: ' + data.items[0].id);\r\n\
                self.isUserSave = true;\r\n\
                self.rootVm.fillFavoriteTests([self.toFlatObject()]);\r\n\
                self.rootVm.insertUserTest(self);\r\n\
                self.startState = self.toFlatObject();\r\n\
                self.startStateLessNameAndTags = self.getNormalizedFlatObject(self.toFlatObject());\r\n\
                var completedPollingFunction = function(){\r\n\
                    util.lightbox.working(new LightboxWorkingViewModel(translate('Refreshing test list...'), translate('Refreshing test list...')));\r\n\
                    util.lightbox.close();\r\n\
                };\r\n\
                // Already insertUserTest, so needn't refresh the tests here\r\n\
                //self.rootVm.getAvailableTests(completedPollingFunction);\r\n\
                completedPollingFunction()\r\n\
            } else {\r\n\
                workingVm.status('error');\r\n\
                logger.error({message: 'Failed to save test', data: data, textStatus: textStatus});\r\n\
            }\r\n\
        },\r\n\
        error: function (jqXhr, textStatus, errorThrown) {\r\n\
            workingVm.status('error');\r\n\
            logger.error(errorThrown);\r\n\
        }\r\n\
    });\r\n\
};\r\n\
\r\n\
ConfiguredTestViewModel.prototype.toFlatObject = function () {\r\n\
    var self = ConfiguredTestViewModel.typesafe(this),\r\n\
        testConfiguration = {},\r\n\
        categories = self.categories(),\r\n\
        datapointIds = self.datapoint_ids,\r\n\
        trafficPlayers = self.traffic_players(),\r\n\
        i,\r\n\
        trafficPlayer;\r\n\
\r\n\
    testConfiguration.id = self.id();\r\n\
    testConfiguration.default_player_type = self.isMulticast ? 'multicast' : 'unicast';\r\n\
    testConfiguration.name = self.name();\r\n\
    testConfiguration.description = self.description();\r\n\
    testConfiguration.duration = self.duration();\r\n\
    testConfiguration.bandwidth = self.bandwidth();\r\n\
    testConfiguration.tags = util.getTags(self);\r\n\
    testConfiguration.categories = [];\r\n\
    testConfiguration.template_name = self.template_name();\r\n\
    testConfiguration.playlist_ids = [];\r\n\
    testConfiguration.datapoint_ids = [];\r\n\
    testConfiguration.traffic_players = [];\r\n\
    testConfiguration.favorite = self.favorite();\r\n\
    testConfiguration.spirent_test_id = self.spirent_test_id();\r\n\
\r\n\
    testConfiguration.engine = self.engine;\r\n\
    testConfiguration.module = self.module;\r\n\
    testConfiguration.is_template = self.isTemplate;\r\n\
    testConfiguration.is_user_save = self.isUserSave;\r\n\
    testConfiguration.recommended_track_ids = self.recommendedTrackIds;\r\n\
    testConfiguration.diagram = self.diagram;\r\n\
    testConfiguration.supplemental_configuration = self.supplementalConfiguration.toFlatObject();\r\n\
\r\n\
    for (i = 0; i < categories.length; i++) {\r\n\
        testConfiguration.categories.push(categories[i]);\r\n\
    }\r\n\
\r\n\
    for (i = 0; i < datapointIds.length; i++) {\r\n\
        testConfiguration.datapoint_ids.push(datapointIds[i]);\r\n\
    }\r\n\
\r\n\
    for (i = 0; i < trafficPlayers.length; i++) {\r\n\
        trafficPlayer = trafficPlayers[i];\r\n\
        testConfiguration.playlist_ids.push(trafficPlayer.playlist().id());\r\n\
        testConfiguration.traffic_players.push(trafficPlayer.toFlatObject());\r\n\
    }\r\n\
\r\n\
    return testConfiguration;\r\n\
};\r\n\
\r\n\
function ConfiguredTestViewModelException(message) {\r\n\
    this.name = 'ConfiguredTestViewModelException';\r\n\
    this.message = message;\r\n\
}\r\n\
ConfiguredTestViewModelException.prototype = new Error();\r\n\
ConfiguredTestViewModelException.constructor = ConfiguredTestViewModelException;\r\n\
\r\n\
module.exports = ConfiguredTestViewModel;//@ sourceURL=configured-test-view-model/index.js"
));
require.register("administration-view-model/index.js", Function("exports, require, module",
"/*global ko:true, translate:true, $:true, appHistory:true, spirentEnterpriseVm:true, TestDeviceViewModel:true, EndpointViewModel:true, TestPlaylistViewModel:true, TestTrackViewModel:true, LightboxWorkingViewModel:true */\n\
\n\
var noop = function () {},\n\
    util = require('utility-functions'),\n\
    domify = require('domify'),\n\
    event = require('event'),\n\
    validate = require('validate-form');\n\
\n\
function AdministrationViewModel(rootVm) {\n\
    var self = this;\n\
\n\
    self.strings = {\n\
        'Field is required': translate('Field is required'),\n\
        \"SSID's must be 1 to 32 alphanumeric characters\": translate(\"SSID's must be 1 to 32 alphanumeric characters\"),\n\
        'WPA key must be at least 8 characters': translate('WPA key must be at least 8 characters')\n\
    };\n\
\n\
    self.rootVm = rootVm;\n\
    self.flowmonEnabled = ko.observable(false);\n\
    self.flowmonSupported = ko.observable(false);\n\
    self.pulseEnabled = ko.observable(false);\n\
    self.pulseSupported = ko.observable(false);\n\
    self.globalSettingsVm = rootVm.vmGlobalSettings;\n\
    self.selectedTab = ko.observable();\n\
    self.noTabSelected = ko.computed(self.calculateNoTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.devicesTabSelected = ko.computed(self.calculateDevicesTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.endpointsTabSelected = ko.computed(self.calculateEndpointsTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.tracksTabSelected = ko.computed(self.calculateTracksTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.playlistsTabSelected = ko.computed(self.calculatePlaylistsTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.netflowTabSelected = ko.computed(self.calculateNetflowTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.customersAndLocationsTabSelected = ko.computed(self.calculateCustomersAndLocationsTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.changePasswordTabSelected = ko.computed(self.calculateChangePasswordTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.upgradeLocationTabSelected = ko.computed(self.calculateUpgradeLocationTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.languageTabSelected = ko.computed(self.calculateLanguageTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.databaseTabSelected = ko.computed(self.calculateDatabaseTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.systemBackupRestoreTabSelected = ko.computed(self.calculateSystemBackupRestoreTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.wifiAdminTabSelected = ko.computed(self.calculateWifiAdminTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.systemSettingsTabSelected = ko.computed(self.calculateSystemSettingsTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.ntpServerTabSelected = ko.computed(self.calculateNtpServerTabSelected.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.devicesTabClass = ko.computed(self.calculateDevicesTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.endpointsTabClass = ko.computed(self.calculateEndpointsTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.tracksTabClass = ko.computed(self.calculateTracksTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.playlistsTabClass = ko.computed(self.calculatePlaylistsTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.netflowTabClass = ko.computed(self.calculateNetflowTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.pulseTabClass = ko.computed(self.calculatePulseTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.customersAndLocationsTabClass = ko.computed(self.calculateCustomersAndLocationsTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.changePasswordTabClass = ko.computed(self.calculateChangePasswordTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.upgradeLocationTabClass = ko.computed(self.calculateUpgradeLocationTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.languageTabClass = ko.computed(self.calculateLanguageTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.databaseTabClass = ko.computed(self.calculateDatabaseTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.systemBackupRestoreTabClass = ko.computed(self.calculateSystemBackupRestoreTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.wifiAdminTabClass = ko.computed(self.calculateWifiAdminTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.systemSettingsTabClass = ko.computed(self.calculateSystemSettingsTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.ntpServerTabClass = ko.computed(self.calculateNtpServerTabClass.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.getAvailablePlaylists = self.rootVm.getAvailablePlaylists;\n\
    self.getAvailableTracks = self.rootVm.getAvailableTracks;\n\
    self.getAvailableDevices = self.rootVm.getAvailableDevices;\n\
    self.getAvailableEndpoints = self.rootVm.getAvailableEndpoints;\n\
    self.validateOldPassword = ko.observable();\n\
    self.validateNewPassword = ko.observable();\n\
    self.upgradeFile = ko.observable();\n\
    self.fakeUpgrade = false;\n\
    self.fakeUpgradeStep = 0;\n\
    self.okFunction = ko.observable();\n\
    self.lightboxText = ko.observable();\n\
    self.availablePlaylists = ko.observableArray(self.rootVm.availablePlaylists());\n\
    self.availablePlaylistsSummary = ko.computed(function () {\n\
        return translate('Showing {number} Playlists', {\n\
            number: self.availablePlaylists().length\n\
        }, 'number');\n\
    });\n\
\n\
    self.language = ko.observable(self.rootVm.language());\n\
    self.languageDisplay = ko.observable();\n\
    self.availableTracks = ko.observableArray(self.rootVm.availableTracks());\n\
    self.availableTracksSummary = ko.computed(function () {\n\
        return translate('Showing {number} Tracks', {\n\
            number: self.availableTracks().length\n\
        }, 'number');\n\
    });\n\
    self.availableEndpoints = ko.observableArray(self.rootVm.availableEndpoints());\n\
    self.availableEndpointsSummary = ko.computed(function () {\n\
        return translate('Showing {number} Endpoints', {\n\
            number: self.availableEndpoints().length\n\
        }, 'number');\n\
    });\n\
    self.availableDevices = ko.observableArray(self.rootVm.availableDevices());\n\
    self.availableDevicesSummary = ko.computed(function () {\n\
        var length = self.availableDevices().length;\n\
        for (var i = 0; i < self.availableDevices().length; i++) {\n\
            if (self.availableDevices()[i].id() == 1) {\n\
                length -= 1;\n\
                break;\n\
            }\n\
        }\n\
\n\
        return translate('Showing {number} Devices', {\n\
            number: length\n\
        }, 'number');\n\
    });\n\
    self.selectedBackup = ko.observable();\n\
    self.selectedBackupExternal = ko.observable();\n\
    self.editDeviceVisible = ko.observable(false);\n\
    self.deviceListVisible = ko.observable(true);\n\
    self.currentDevice = ko.observable(new TestDeviceViewModel(self.rootVm));\n\
    self.editEndpointVisible = ko.observable(false);\n\
    self.endpointListVisible = ko.observable(true);\n\
    self.editPlaylistVisible = ko.observable(false);\n\
    self.playlistListVisible = ko.observable(true);\n\
    self.editTrackVisible = ko.observable(false);\n\
    self.trackListVisible = ko.observable(true);\n\
    self.displayCustomers = ko.computed({\n\
        read: self.displayCustomersRead.bind(self),\n\
        write: self.displayCustomersWrite.bind(self)\n\
    }, self).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.displayLocations = ko.computed({\n\
        read: self.displayLocationsRead.bind(self),\n\
        write: self.displayLocationsWrite.bind(self)\n\
    }, self).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.selectedCustomer = ko.observable();\n\
    self.selectedLocation = ko.observable();\n\
    self.filterLocations = ko.computed(function () {\n\
        var locations = [translate('All Locations')],\n\
            availableLocations = self.rootVm.availableLocations(),\n\
            i;\n\
\n\
        for (i = 0; i < availableLocations.length; i += 1) {\n\
            locations.push(availableLocations[i]);\n\
        }\n\
\n\
        return locations;\n\
    });\n\
\n\
    self.filterCustomers = ko.computed(function () {\n\
        var customers = [translate('All Customers')],\n\
            availableCustomers = self.rootVm.availableCustomers(),\n\
            i;\n\
\n\
        for (i = 0; i < availableCustomers.length; i += 1) {\n\
            customers.push(availableCustomers[i]);\n\
        }\n\
\n\
        return customers;\n\
    });\n\
\n\
    self.selectedTags = ko.observableArray();\n\
\n\
    self.searchString = ko.observable();\n\
\n\
    self.displaySelectedTags = ko.computed({\n\
        read: self.displaySelectedTagsRead,\n\
        write: self.displaySelectedTagsWrite\n\
    }, self).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.rootVm.availablePlaylists.subscribe(function (playlists) {\n\
        self.applyFilters(self.rootVm.availablePlaylists, ko.observableArray(playlists));\n\
        self.availablePlaylists(playlists);\n\
    });\n\
\n\
    self.rootVm.language.subscribe(function () {\n\
        self.language(self.rootVm.language());\n\
    });\n\
\n\
    self.language.subscribe(function (language) {\n\
        if (language === \"en\") {\n\
            self.languageDisplay(\"English\");\n\
        } else if (language === \"ru\") {\n\
            self.languageDisplay(\"Русский\");\n\
        } else if (language === \"zh\") {\n\
            self.languageDisplay(\"中文\");\n\
        } else if (language === \"ja\") {\n\
            self.languageDisplay(\"日本語\");\n\
        }\n\
    });\n\
\n\
    self.rootVm.availableTracks.subscribe(function (newTracks) {\n\
        self.applyFilters(self.rootVm.availableTracks, ko.observableArray(newTracks));\n\
        self.availableTracks(newTracks);\n\
    });\n\
\n\
    self.rootVm.availableEndpoints.subscribe(function (newEndpoints) {\n\
        self.applyFilters(self.rootVm.availableEndpoints, ko.observableArray(newEndpoints));\n\
        self.availableEndpoints(newEndpoints);\n\
    });\n\
\n\
    self.rootVm.availableDevices.subscribe(function (devices) {\n\
        self.applyFilters(self.rootVm.availableDevices,ko.observableArray(devices));\n\
        self.availableDevices(devices);\n\
        self.flowmonSupported(devices.length && devices[0].features() !== undefined && devices[0].features.indexOf('flowmon') !== -1);\n\
        self.pulseSupported(devices.length && devices[0].features() !== undefined && devices[0].features.indexOf('pulse') !== -1);\n\
    });\n\
\n\
    self.selectedBackup.subscribe(function (selectedBackup) {\n\
        if (selectedBackup === undefined) {\n\
            self.selectedBackupExternal(\"\");\n\
        } else if (selectedBackup.device === \"chassis\") {\n\
            self.selectedBackupExternal(\"False\");\n\
        } else {\n\
            self.selectedBackupExternal(\"True\");\n\
        }\n\
    }, self);\n\
\n\
    self.selectedCustomer.subscribe(function (value) {\n\
        self.applyFiltersForAll();\n\
    });\n\
\n\
    self.selectedLocation.subscribe(function (value) {\n\
        self.applyFiltersForAll();\n\
    });\n\
\n\
    self.selectedTags.subscribe(function (value) {\n\
        self.applyFiltersForAll();\n\
    });\n\
\n\
    self.searchString.subscribe(function (value) {\n\
        self.applyFiltersForAll();\n\
    });\n\
}\n\
\n\
module.exports = AdministrationViewModel;\n\
\n\
AdministrationViewModel.prototype.render = function ($parent, template) {\n\
    this.$el = domify(template);\n\
    $parent.appendChild(this.$el);\n\
    this.bind();\n\
    ko.applyBindings(this, this.$el);\n\
};\n\
\n\
AdministrationViewModel.prototype.bind = function () {\n\
    var self = this,\n\
        $check_offline = this.$el.querySelector('.check-offline');\n\
\n\
    event.bind($check_offline, 'click', this.checkForOfflineUpdates.bind(this));\n\
    self.bindWifiValidator();\n\
};\n\
\n\
AdministrationViewModel.prototype.checkForOfflineUpdates = function () {\n\
    var self = this,\n\
        workingVm;\n\
\n\
    util.lightbox.close();\n\
    workingVm = new LightboxWorkingViewModel(translate('Checking for offline updates'), translate('Checking for offline updates...'));\n\
    util.lightbox.working(workingVm);\n\
    $.ajax({\n\
        type: util.getRequestMethod('check_updates'),\n\
        url: util.getConfigSetting('check_updates') + '?offline=1',\n\
        dataType: 'json',\n\
        timeout: false,\n\
        success: function (data, textStatus, jqXhr) {\n\
            if ('success' !== textStatus || 'SUCCESS' !== data.result) {\n\
                workingVm.status('error');\n\
                return;\n\
            }\n\
\n\
            if (data.updates.available_updates) {\n\
                self.globalSettingsVm.availableUpdate(data.updates);\n\
                self.okFunction = self.beginUpgrade;\n\
                self.lightboxText = translate('Offline update found. Would you like to update to build {build} now?', {build: data.updates.newest_build});\n\
                util.lightbox.open({\n\
                    url: 'html/lightbox_tmpl',\n\
                    selector: '#lightbox-confirmation-template',\n\
                    cancelSelector: '.cancel-button',\n\
                    onOpenComplete: function () {\n\
                        ko.applyBindings(self, document.getElementById('lightbox-confirmation'));\n\
                    }\n\
                });\n\
            } else {\n\
                self.lightboxText = translate('No updates found.', {});\n\
                util.lightbox.open({\n\
                    url: 'html/lightbox_tmpl',\n\
                    selector: '#lightbox-message-template',\n\
                    cancelSelector: '.ok-button',\n\
                    onOpenComplete: function () {\n\
                        ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                    }\n\
                });\n\
\n\
            }\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            workingVm.status('error');\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.bindWifiValidator = function () {\n\
    var $form = this.$el.querySelector('.main.wifi'),\n\
        $save = $form.querySelector('.save-button'),\n\
        handle = this.validateWifiSettings.bind(this);\n\
\n\
    this.wifiValidator = validate($form)\n\
        .on('blur')\n\
        .field('ssid')\n\
            .is('required', this.strings['Field is required'])\n\
            .is(/^[a-z0-9\\.\\-\\_]{1,32}$/i, \"SSID's must be 1 to 32 alphanumeric characters\")\n\
        .field('key')\n\
            .is('required', this.strings['Field is required'])\n\
            .is('minimum', 8, 'WPA key must be at least 8 characters');\n\
\n\
    event.bind($save, 'click', handle);\n\
};\n\
\n\
AdministrationViewModel.prototype.validateWifiSettings = function (e) {\n\
    e.stopPropagation(); // Prevent click events from closing the lightbox\n\
\n\
    var confirm = this.confirmWifiSettings.bind(this);\n\
\n\
    if ('off' === this.globalSettingsVm.wifiEnabled()) {\n\
        confirm();\n\
    } else {\n\
        this.wifiValidator.validate(function (err, is_valid) {\n\
            if (is_valid) {\n\
                confirm();\n\
            }\n\
        });\n\
    }\n\
};\n\
\n\
AdministrationViewModel.prototype.confirmWifiSettings = function () {\n\
    var message = this.$el.querySelector('.main.wifi .confirmation-message').innerHTML,\n\
        save = this.saveWifiSettings.bind(this);\n\
\n\
    this.runLightboxWarning(message, save);\n\
};\n\
\n\
AdministrationViewModel.prototype.saveWifiSettings = function () {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        data = self.globalSettingsVm.wifiToFlatObject(),\n\
        workingVm;\n\
\n\
    util.lightbox.close();\n\
    workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'))\n\
    util.lightbox.working(workingVm);\n\
    $.ajax({\n\
        type: util.getRequestMethod('save_wifi_settings'),\n\
        url: util.getConfigSetting('save_wifi_settings'),\n\
        data: util.formatRequestData('save_wifi_settings', data),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            if (data.messages[0].is_error === true) {\n\
                workingVm.status('error');\n\
            } else {\n\
                self.lightboxText = translate('Success');\n\
                util.lightbox.open({\n\
                    url: 'html/lightbox_tmpl',\n\
                    selector: '#lightbox-message-template',\n\
                    cancelSelector: '.ok-button',\n\
                    onOpenComplete: function () {\n\
                        ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                    }\n\
                });\n\
            }\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            workingVm.status('error');\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.displaySelectedTagsRead = function () {\n\
    return this.selectedTags().join(', ');\n\
};\n\
\n\
AdministrationViewModel.prototype.displaySelectedTagsWrite = function (value) {\n\
    if (!value) {\n\
        return;\n\
    }\n\
\n\
    var newArray = value.split(','),\n\
        i,\n\
        trimmedValue;\n\
\n\
    this.selectedTags.removeAll();\n\
    for (i = 0; i < newArray.length; i += 1) {\n\
        trimmedValue = newArray[i];\n\
\n\
        if (trimmedValue !== '' && this.selectedTags().indexOf(trimmedValue) === -1) {\n\
            this.selectedTags.push(trimmedValue);\n\
        }\n\
    }\n\
};\n\
\n\
AdministrationViewModel.prototype.applyFilters = function (sourceCollection, observableFilteredCollection) {\n\
    var selectedCustomer = this.selectedCustomer(),\n\
        selectedLocation = this.selectedLocation(),\n\
        selectedTags = this.selectedTags(),\n\
        searchString = this.searchString(),\n\
        filteredCollection;\n\
\n\
    if ((selectedCustomer === translate('All Customers') || selectedCustomer === undefined)\n\
            && (selectedLocation === translate('All Locations') || selectedLocation === undefined)\n\
            && selectedTags.length === 0\n\
            && (searchString === undefined || searchString === '')) {\n\
        observableFilteredCollection(sourceCollection);\n\
        return;\n\
    }\n\
\n\
    filteredCollection = sourceCollection;\n\
    filteredCollection = this.applyCustomerFilter(selectedCustomer, filteredCollection);\n\
    filteredCollection = this.applyLocationFilter(selectedLocation, filteredCollection);\n\
    filteredCollection = this.applyTagsFilter(selectedTags, filteredCollection);\n\
    filteredCollection = this.applySearchFilter(searchString, filteredCollection);\n\
\n\
    observableFilteredCollection(filteredCollection);\n\
};\n\
\n\
AdministrationViewModel.prototype.applyCustomerFilter = function (selectedCustomer, sourceCollection) {\n\
    var i,\n\
        filteredCollection = [];\n\
\n\
    if (selectedCustomer === translate('All Customers') || selectedCustomer === undefined) {\n\
        return sourceCollection;\n\
    }\n\
\n\
    if (sourceCollection.length === 0) {\n\
        return sourceCollection;\n\
    }\n\
\n\
    for (i = 0; i < sourceCollection.length; i += 1) {\n\
        if (sourceCollection[i].customer() === selectedCustomer) {\n\
            filteredCollection.push(sourceCollection[i]);\n\
        }\n\
    }\n\
\n\
    return filteredCollection;\n\
};\n\
\n\
AdministrationViewModel.prototype.applyLocationFilter = function (selectedLocation, sourceCollection) {\n\
    var i,\n\
        filteredCollection = [];\n\
\n\
    if (selectedLocation === translate('All Locations') || selectedLocation === undefined) {\n\
        return sourceCollection;\n\
    }\n\
\n\
    if (sourceCollection.length === 0) {\n\
        return sourceCollection;\n\
    }\n\
\n\
    for (i = 0; i < sourceCollection.length; i += 1) {\n\
        if (sourceCollection[i].location() === selectedLocation) {\n\
            filteredCollection.push(sourceCollection[i]);\n\
        }\n\
    }\n\
\n\
    return filteredCollection;\n\
};\n\
\n\
AdministrationViewModel.prototype.applyTagsFilter = function (selectedTags, sourceCollection) {\n\
    var i,\n\
        filteredCollection = [],\n\
        tags,\n\
        hasSharedTag;\n\
\n\
    if (selectedTags.length === 0) {\n\
        return sourceCollection;\n\
    }\n\
\n\
    if (sourceCollection.length === 0) {\n\
        return sourceCollection;\n\
    }\n\
\n\
    for (i = 0; i < sourceCollection.length; i += 1) {\n\
        tags = [].concat(sourceCollection[i].tags());\n\
\n\
        hasSharedTag = util.arraysShareValue(tags, selectedTags, true);\n\
\n\
        if (hasSharedTag) {\n\
            filteredCollection.push(sourceCollection[i]);\n\
        }\n\
    }\n\
\n\
    return filteredCollection;\n\
};\n\
\n\
AdministrationViewModel.prototype.applySearchFilter = function (searchString, sourceCollection) {\n\
    var i,\n\
        filteredCollection = [];\n\
\n\
    if (searchString === undefined) {\n\
        return sourceCollection;\n\
    }\n\
\n\
    if (sourceCollection.length === 0) {\n\
        return sourceCollection;\n\
    }\n\
\n\
    for (i = 0; i < sourceCollection.length; i += 1) {\n\
        if (sourceCollection[i].matchesSearch(searchString)) {\n\
            filteredCollection.push(sourceCollection[i]);\n\
        }\n\
    }\n\
\n\
    return filteredCollection;\n\
};\n\
\n\
\n\
AdministrationViewModel.prototype.applyFiltersForAll = function () {\n\
    this.applyFilters(this.rootVm.availableEndpoints(), this.availableEndpoints);\n\
    this.applyFilters(this.rootVm.availablePlaylists(), this.availablePlaylists);\n\
    this.applyFilters(this.rootVm.availableTracks(), this.availableTracks);\n\
    this.applyFilters(this.rootVm.availableDevices(), this.availableDevices);\n\
};\n\
\n\
AdministrationViewModel.typesafe = function (that) {\n\
    if (!(that instanceof AdministrationViewModel)) {\n\
        throw 'This method must be executed on a AdministrationViewModel';\n\
    }\n\
\n\
    return that;\n\
};\n\
\n\
AdministrationViewModel.prototype.matchesSearch = function (searchString) {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        searchTerms = searchString.split(' '),\n\
        name,\n\
        i;\n\
\n\
    if (searchTerms.length === 0) {\n\
        return true;\n\
    }\n\
\n\
    name = self.name().toUpperCase();\n\
\n\
    for (i = 0; i < searchTerms.length; i += 1) {\n\
        if (searchTerms[i] && name.indexOf(searchTerms[i].toUpperCase()) === -1) {\n\
            return false;\n\
        }\n\
    }\n\
\n\
    return true;\n\
};\n\
\n\
AdministrationViewModel.prototype.refreshDevices = function (callback) {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        deviceIds,\n\
        i;\n\
\n\
    callback = callback || noop;\n\
\n\
    deviceIds = [];\n\
    for (i = 0; i < self.rootVm.availableDevices().length; i += 1) {\n\
        deviceIds.push(self.rootVm.availableDevices()[i].id());\n\
    }\n\
\n\
    self.selectTab(\"devices\");\n\
    callback();\n\
};\n\
\n\
AdministrationViewModel.prototype.selectTab = function (tabName) {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    if (tabName === self.selectedTab()) {\n\
        return;\n\
    }\n\
\n\
    $('input.shaded.search').val(\"\").change();\n\
    $('input.shaded.search').trigger('input');\n\
\n\
    self.selectedTab(tabName);\n\
    appHistory.push(spirentEnterpriseVm);\n\
};\n\
\n\
AdministrationViewModel.prototype.calculateNoTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return !self.selectedTab();\n\
};\n\
AdministrationViewModel.prototype.calculateDevicesTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"devices\";\n\
};\n\
AdministrationViewModel.prototype.calculateEndpointsTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"endpoints\";\n\
};\n\
AdministrationViewModel.prototype.calculateTracksTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"tracks\";\n\
};\n\
AdministrationViewModel.prototype.calculatePlaylistsTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"playlists\";\n\
};\n\
AdministrationViewModel.prototype.calculateNetflowTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"netflow\";\n\
};\n\
AdministrationViewModel.prototype.calculateCustomersAndLocationsTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"customers and locations\";\n\
};\n\
AdministrationViewModel.prototype.calculateChangePasswordTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"change password\";\n\
};\n\
AdministrationViewModel.prototype.calculateUpgradeLocationTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"upgrade location\";\n\
};\n\
AdministrationViewModel.prototype.calculateLanguageTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"language\";\n\
};\n\
AdministrationViewModel.prototype.calculateDatabaseTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"database\";\n\
};\n\
AdministrationViewModel.prototype.calculateSystemBackupRestoreTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"system backup restore\";\n\
};\n\
AdministrationViewModel.prototype.calculateWifiAdminTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"wifi admin\";\n\
};\n\
AdministrationViewModel.prototype.calculateSystemSettingsTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"system settings\";\n\
};\n\
AdministrationViewModel.prototype.calculateNtpServerTabSelected = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"ntp server\";\n\
};\n\
\n\
AdministrationViewModel.prototype.calculateDevicesTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"devices\" ? \"devices selected\" : \"devices\";\n\
};\n\
\n\
AdministrationViewModel.prototype.calculateEndpointsTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"endpoints\" ? \"endpoints selected\" : \"endpoints\";\n\
};\n\
AdministrationViewModel.prototype.calculateTracksTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"tracks\" ? \"tracks selected\" : \"tracks\";\n\
};\n\
AdministrationViewModel.prototype.calculatePlaylistsTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"playlists\" ? \"playlists selected\" : \"playlists\";\n\
};\n\
AdministrationViewModel.prototype.calculateNetflowTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    if (!self.flowmonEnabled() || !self.flowmonSupported()) {\n\
        return 'hidden';\n\
    }\n\
\n\
    return self.selectedTab() === \"netflow\" ? \"netflow selected\" : \"netflow\";\n\
};\n\
\n\
AdministrationViewModel.prototype.calculatePulseTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    if (!self.pulseEnabled() || !self.pulseSupported()) {\n\
        return 'hidden';\n\
    }\n\
    return self.selectedTab() === \"pulse\" ? \"pulse selected\" : \"pulse\";\n\
};\n\
\n\
AdministrationViewModel.prototype.calculateCustomersAndLocationsTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"customers and locations\" ? \"customers selected\" : \"customers\";\n\
};\n\
AdministrationViewModel.prototype.calculateChangePasswordTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"change password\" ? \"change-password selected\" : \"change-password\";\n\
};\n\
AdministrationViewModel.prototype.calculateUpgradeLocationTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"upgrade location\" ? \"update selected\" : \"update\";\n\
};\n\
AdministrationViewModel.prototype.calculateLanguageTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"language\" ? \"language selected\" : \"language\";\n\
};\n\
AdministrationViewModel.prototype.calculateDatabaseTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"database\" ? \"database selected\" : \"database\";\n\
};\n\
AdministrationViewModel.prototype.calculateSystemBackupRestoreTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"system backup restore\" ? \"backup-restore selected\" : \"backup-restore\";\n\
};\n\
AdministrationViewModel.prototype.calculateWifiAdminTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"wifi admin\" ? \"wifi selected\" : \"wifi\";\n\
};\n\
AdministrationViewModel.prototype.calculateSystemSettingsTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"system settings\" ? \"system selected\" : \"system\";\n\
};\n\
AdministrationViewModel.prototype.calculateNtpServerTabClass = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.selectedTab() === \"ntp server\" ? \"ntp selected\" : \"ntp\";\n\
};\n\
\n\
\n\
AdministrationViewModel.prototype.addDevice = function () {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        device = new TestDeviceViewModel(self.rootVm);\n\
\n\
    device.openSaveModal();\n\
};\n\
\n\
AdministrationViewModel.prototype.editDevice = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    // ??\n\
};\n\
\n\
AdministrationViewModel.prototype.showDeviceList = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    self.editDeviceVisible(false);\n\
    self.deviceListVisible(true);\n\
};\n\
\n\
AdministrationViewModel.prototype.addEndpoint = function () {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        endpoint = new EndpointViewModel(self.rootVm);\n\
\n\
    endpoint.openSaveModal();\n\
};\n\
AdministrationViewModel.prototype.showEndpointList = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    self.editEndpointVisible(false);\n\
    self.endpointListVisible(true);\n\
};\n\
\n\
AdministrationViewModel.prototype.addPlaylist = function () {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        playlist = new TestPlaylistViewModel(self.rootVm);\n\
\n\
    playlist.openSaveModal();\n\
};\n\
AdministrationViewModel.prototype.showPlaylistList = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    self.editPlaylistVisible(false);\n\
    self.playlistListVisible(true);\n\
};\n\
\n\
AdministrationViewModel.prototype.addTrack = function () {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        track = new TestTrackViewModel(self.rootVm);\n\
\n\
    track.openSaveModal();\n\
};\n\
AdministrationViewModel.prototype.showTrackList = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    self.editTrackVisible(false);\n\
    self.trackListVisible(true);\n\
};\n\
\n\
AdministrationViewModel.prototype.displayCustomersRead = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.rootVm.availableCustomers().join(', ');\n\
};\n\
\n\
AdministrationViewModel.prototype.displayCustomersWrite = function (value) {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        lookupArray = [],\n\
        newArray,\n\
        i,\n\
        trimmedValue,\n\
        loweredValue,\n\
        saveData;\n\
\n\
    if (value === undefined) {\n\
        return;\n\
    }\n\
\n\
    newArray = value.split(',');\n\
\n\
    self.rootVm.availableCustomers.removeAll();\n\
    for (i = 0; i < newArray.length; i += 1) {\n\
        trimmedValue = $.trim(newArray[i]);\n\
\n\
        if (trimmedValue) {\n\
            loweredValue = trimmedValue.toLowerCase();\n\
            if (lookupArray.indexOf(loweredValue) === -1) {\n\
                lookupArray.push(loweredValue);\n\
                self.rootVm.availableCustomers.push(trimmedValue);\n\
            }\n\
        }\n\
    }\n\
\n\
    saveData = self.rootVm.availableCustomers().join(', ');\n\
    $.ajax({\n\
        type: util.getRequestMethod('save_customers'),\n\
        url: util.getConfigSetting('save_customers'),\n\
        data: util.formatRequestData('save_customers', saveData),\n\
        dataType: 'json'\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.displayLocationsRead = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    return self.rootVm.availableLocations().join(', ');\n\
};\n\
\n\
AdministrationViewModel.prototype.displayLocationsWrite = function (value) {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        lookupArray = [],\n\
        newArray,\n\
        i,\n\
        trimmedValue,\n\
        loweredValue,\n\
        saveData;\n\
\n\
    if (!value) {\n\
        return;\n\
    }\n\
\n\
    newArray = value.split(',');\n\
\n\
    self.rootVm.availableLocations.removeAll();\n\
    for (i = 0; i < newArray.length; i += 1) {\n\
        trimmedValue = $.trim(newArray[i]);\n\
\n\
        if (trimmedValue) {\n\
            loweredValue = trimmedValue.toLowerCase();\n\
\n\
            if (lookupArray.indexOf(loweredValue) === -1) {\n\
                lookupArray.push(loweredValue);\n\
                self.rootVm.availableLocations.push(trimmedValue);\n\
            }\n\
        }\n\
    }\n\
\n\
    saveData = self.rootVm.availableLocations().join(', ');\n\
\n\
    $.ajax({\n\
        type: util.getRequestMethod('save_locations'),\n\
        url: util.getConfigSetting('save_locations'),\n\
        data: util.formatRequestData('save_locations', saveData),\n\
        dataType: 'json'\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.showTaskStatus = function (data, taskName, taskId, completedPollingFunction, currentStatusCode, previousStatusCode, expectError) {\n\
    var self = AdministrationViewModel.typesafe(this),\n\
        message,\n\
        progress,\n\
        statusComplete = function () {\n\
            var currentDate = new Date();\n\
            completedPollingFunction(taskName, data);\n\
        },\n\
        incomplete_codes = [\"404\", \"500\", \"502\", \"504\"];\n\
\n\
    util.lightbox.close();\n\
    if (data.messages[0].header || data.messages[0].content) {\n\
        message = data.messages[0];\n\
    } else {\n\
        message = translate('Running {task}...', {\n\
            task: taskName.toLowerCase()\n\
        });\n\
    }\n\
    if (data.messages[0].progress) {\n\
        progress = data.messages[0].progress;\n\
    }\n\
\n\
    if ((incomplete_codes.indexOf(previousStatusCode) !== -1 && currentStatusCode === \"200\") || data.status === \"complete\") {\n\
        util.lightbox.working(new LightboxWorkingViewModel(taskName, message.header, progress));\n\
\n\
        function pollAgain(numberOfPreviousPolls) {\n\
            util.lightbox.working(new LightboxWorkingViewModel(taskName, message.header, progress));\n\
            $.ajax({\n\
                type: \"POST\",\n\
                url: util.getConfigSetting('get_task_status'),\n\
                data: 'task_id=' + taskId,\n\
                dataType: 'json',\n\
                cache: false,\n\
                statusCode: {\n\
                    404: function (jqXhr, textStatus, errorThrown) {\n\
                        setTimeout(function () {\n\
                            self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"404\", currentStatusCode, expectError)\n\
                        }, 2000);\n\
                        update_user_session();\n\
                    },\n\
                    500: function (jqXhr, textStatus, errorThrown) {\n\
                        setTimeout(function () {\n\
                            self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"500\", currentStatusCode, expectError)\n\
                        }, 2000);\n\
                        update_user_session();\n\
                    },\n\
                    502: function (jqXhr, textStatus, errorThrown) {\n\
                        setTimeout(function () {\n\
                            self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"502\", currentStatusCode, expectError)\n\
                        }, 2000);\n\
                        update_user_session();\n\
                    },\n\
                    504: function (jqXhr, textStatus, errorThrown) {\n\
                        setTimeout(function () {\n\
                            self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"504\", currentStatusCode, expectError)\n\
                        }, 2000);\n\
                        update_user_session();\n\
                    },\n\
                    200: function (data) {\n\
                        if (numberOfPreviousPolls < 15) {\n\
                            numberOfPreviousPolls++;\n\
                            setTimeout(function () {\n\
                                pollAgain(numberOfPreviousPolls)\n\
                            }, 1000);\n\
                            update_user_session();\n\
                        } else {\n\
                            statusComplete();\n\
                        }\n\
                    }\n\
                },\n\
                /*success: function(data){\n\
                 self.showTaskStatus(data, taskName, taskId, completedPollingFunction);}, 1000);\n\
                 },*/\n\
                error: function (jqXhr, textStatus, errorThrown) {\n\
                    // danger: if we get *any* error, we're just assuming it's cool on account of the upgrade\n\
                    // & keep on rolling...\n\
                    if (jqXhr.status === 404 || jqXhr.status === 500 || jqXhr.status === 502 || jqXhr.status === 504) {\n\
                        noop();\n\
                    } else {\n\
                        setTimeout(function () {\n\
                            self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"500\", currentStatusCode, expectError)\n\
                        }, 2000);\n\
                        update_user_session();\n\
                    }\n\
                }\n\
            });\n\
        }\n\
\n\
        if (data.status === \"complete\") {\n\
            statusComplete();\n\
        } else {\n\
            setTimeout(function () {\n\
                pollAgain(1);\n\
            }, 1000);\n\
        }\n\
    } else {\n\
        if (!data.messages[0].is_error) {\n\
            util.lightbox.working(new LightboxWorkingViewModel(taskName, message.header, progress));\n\
            setTimeout(function () {\n\
                self.pollTaskProgress(taskId, taskName, completedPollingFunction, currentStatusCode, previousStatusCode, expectError)\n\
            }, 1000);\n\
            update_user_session();\n\
        } else {\n\
            var taskStatusVm = util.lightbox.working(new LightboxWorkingViewModel(taskName, message.header, progress));\n\
            taskStatusVm.status('error');\n\
        }\n\
    }\n\
};\n\
\n\
AdministrationViewModel.prototype.pollTaskProgress = function (taskId, taskName, completedPollingFunction, currentStatusCode, previousStatusCode, expectError) {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    $.ajax({\n\
        type: \"POST\",\n\
        url: util.getConfigSetting('get_task_status'),\n\
        data: 'task_id=' + taskId,\n\
        dataType: 'json',\n\
        cache: false,\n\
        statusCode: {\n\
            404: function (jqXhr, textStatus, errorThrown) {\n\
                setTimeout(function () {\n\
                    self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"404\", currentStatusCode, expectError)\n\
                }, 2000);\n\
            },\n\
            500: function (jqXhr, textStatus, errorThrown) {\n\
                setTimeout(function () {\n\
                    self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"500\", currentStatusCode, expectError)\n\
                }, 2000);\n\
            },\n\
            502: function (jqXhr, textStatus, errorThrown) {\n\
                setTimeout(function () {\n\
                    self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"502\", currentStatusCode, expectError)\n\
                }, 2000);\n\
            },\n\
            504: function (jqXhr, textStatus, errorThrown) {\n\
                setTimeout(function () {\n\
                    self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"504\", currentStatusCode, expectError)\n\
                }, 2000);\n\
            },\n\
            200: function (data) {\n\
                setTimeout(function () {\n\
                    self.showTaskStatus(data, taskName, taskId, completedPollingFunction, \"200\", currentStatusCode, expectError)\n\
                }, 1000);\n\
            }\n\
        },\n\
        /*success: function(data){\n\
         self.showTaskStatus(data, taskName, taskId, completedPollingFunction);}, 1000);\n\
         },*/\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            // danger: if we get *any* error, we're just assuming it's cool on account of the upgrade\n\
            // & keep on rolling...\n\
            if (expectError) {\n\
                completedPollingFunction(taskName);\n\
                return;\n\
            } else {\n\
                if (jqXhr.status === 404 || jqXhr.status === 500 || jqXhr.status === 502 || jqXhr.status === 504) {\n\
                    noop();\n\
                } else {\n\
                    setTimeout(function () {\n\
                        self.pollTaskProgress(taskId, taskName, completedPollingFunction, \"500\", currentStatusCode, null, expectError)\n\
                    }, 2000);\n\
                }\n\
            }\n\
\n\
        }\n\
    });\n\
};\n\
AdministrationViewModel.prototype.beginUpgrade = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Starting update\"), translate(\"Starting update...\")));\n\
    var currentDate = new Date();\n\
\n\
    completedPollingFunction = function (taskName) {\n\
        util.lightbox.working(new LightboxWorkingViewModel(taskName, translate('Reloading app...')));\n\
        setTimeout(function () {\n\
            util.lightbox.close();\n\
            window.location = '/logout';\n\
        }, 2000)\n\
    };\n\
\n\
    $.ajax({\n\
        url: util.getConfigSetting('upgrade_device'),\n\
        cache: false,\n\
        contentType: false,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('upgrade_device'),\n\
        success: function (data) {\n\
            self.showTaskStatus({ \"status\": \"running\", \"messages\": [\n\
                {\"header\": translate(\"Starting update\"), \"content\": translate(\"Starting update\")}\n\
            ]}, translate(\"Update\"), data.task_id, completedPollingFunction);\n\
        }\n\
    });\n\
};\n\
AdministrationViewModel.prototype.setLanguage = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    $.post(util.getConfigSetting('set_language'), JSON.stringify({language: self.language()}), function (response, textStatus) {\n\
        if (response.result == \"SUCCESS\") {\n\
            window.location.reload();\n\
        } else {\n\
            util.lightbox.close();\n\
            util.lightbox.openError(response.messages[0].header, response.messages[0].content);\n\
            logger.info(textStatus);\n\
            logger.info(response);\n\
        }\n\
    }, 'json');\n\
};\n\
AdministrationViewModel.prototype.rebootChassis = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Rebooting Axon\"), translate(\"Rebooting Axon...\")));\n\
    var currentDate = new Date();\n\
\n\
    completedPollingFunction = function (taskName) {\n\
        util.lightbox.working(new LightboxWorkingViewModel(taskName, translate('Axon rebooted.  Reloading app...')));\n\
        setTimeout(function () {\n\
            util.lightbox.close();\n\
            window.location = '/logout';\n\
        }, 2000)\n\
    };\n\
\n\
    $.ajax({\n\
        url: util.getConfigSetting('reboot_axon'),\n\
        cache: false,\n\
        contentType: false,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('reboot_axon'),\n\
        success: function (data) {\n\
            self.showTaskStatus({ \"status\": \"running\", \"messages\": [\n\
                {\"header\": translate(\"Rebooting Axon\"), \"content\": translate(\"Rebooting Axon\")}\n\
            ]}, translate(\"Reboot\"), data.task_id, completedPollingFunction);\n\
        }\n\
    });\n\
};\n\
AdministrationViewModel.prototype.shutdownChassis = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(\"Shutting down Axon\", \"Shutting down Axon...\"));\n\
    var currentDate = new Date();\n\
\n\
    completedPollingFunction = function (taskName) {\n\
        clearAllIntervals();\n\
        util.lightbox.close();\n\
        self.lightboxText = 'Axon successfully shutdown.';\n\
        util.lightbox.open({\n\
            url: 'templates/lightbox.tmpl.html',\n\
            selector: '#lightbox-message-template',\n\
            cancelSelector: '.ok-button',\n\
            onOpenComplete: function () {\n\
                ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
            }\n\
        });\n\
    };\n\
\n\
    $.ajax({\n\
        url: util.getConfigSetting('shutdown_axon'),\n\
        cache: false,\n\
        contentType: false,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('shutdown_axon'),\n\
        success: function (data) {\n\
            self.showTaskStatus({ \"status\": \"running\", \"messages\": [\n\
                {\"header\": \"Shutting down Axon\", \"content\": \"Shutting down Axon\"}\n\
            ]}, \"Shutdown\", data.task_id, completedPollingFunction, null, null, true);\n\
        }\n\
    });\n\
};\n\
AdministrationViewModel.prototype.changePassword = function (password) {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    var $oldPassword = $('#oldPassword');\n\
    if (self.validateOldPassword() === \"SUCCESS\" && $oldPassword.val()) {\n\
        if (self.validateNewPassword() === \"confirmed\") {\n\
            var workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'));\n\
            util.lightbox.close();\n\
            util.lightbox.working(workingVm);\n\
            $.ajax({\n\
                type: 'POST',\n\
                url: util.getConfigSetting('set_admin_password'),\n\
                data: '{\"password\": \"' + $('#newPassword').val() + '\"}',\n\
                dataType: 'json',\n\
                cache: false,\n\
                success: function (data, textStatus, jqXhr) {\n\
                    if (data.result === \"SUCCESS\") {\n\
                        workingVm.status('success');\n\
                        $('#newPassword, #newPasswordVerify, #oldPassword').val('');\n\
                        self.validateNewPassword(undefined);\n\
                        self.validateOldPassword(undefined);\n\
                    } else {\n\
                        workingVm.status('error');\n\
                        $('#newPassword, #newPasswordVerify, #oldPassword').val('');\n\
                        self.validateNewPassword(undefined);\n\
                        self.validateOldPassword(undefined);\n\
                    }\n\
                },\n\
                error: function (jqXhr, textStatus, errorThrown) {\n\
                    workingVm.status('error');\n\
                }\n\
            });\n\
        } else {\n\
            $('#newPassword').val('').focus();\n\
            $('#newPasswordVerify').val('');\n\
            self.validateNewPassword('error');\n\
        }\n\
    } else {\n\
        $oldPassword.val('').focus();\n\
        self.validateOldPassword('FAILURE');\n\
    }\n\
};\n\
\n\
AdministrationViewModel.prototype.showError = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
};\n\
\n\
AdministrationViewModel.prototype.saveGlobalSettings = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    var data = self.globalSettingsVm.toFlatObject();\n\
    var workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'));\n\
    util.lightbox.working(workingVm);\n\
    $.ajax({\n\
        type: util.getRequestMethod('save_global_settings'),\n\
        url: util.getConfigSetting('save_global_settings'),\n\
        data: util.formatRequestData('save_global_settings', data),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            if (data.messages[0].is_error === true) {\n\
                workingVm.status('error');\n\
            } else {\n\
                globalSettingsCallback = function () {\n\
                    self.lightboxText = translate('Success');\n\
                    util.lightbox.open({\n\
                        url: 'html/lightbox_tmpl',\n\
                        selector: '#lightbox-message-template',\n\
                        cancelSelector: '.ok-button',\n\
                        onOpenComplete: function () {\n\
                            ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                        }\n\
                    });\n\
                };\n\
                self.rootVm.getGlobalSettings(globalSettingsCallback);\n\
            }\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            workingVm.status('error');\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.beginBackupSystem = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Starting system backup\"), translate(\"Starting system backup...\")));\n\
    var currentDate = new Date();\n\
\n\
    getCompletedPollingFunction = function (task_id) {\n\
        return function () {\n\
            var data = {'task_id': task_id};\n\
\n\
            globalSettingsCallback = function () {\n\
                $.ajax({\n\
                    url: util.getConfigSetting('get_backup_status'),\n\
                    cache: false,\n\
                    contentType: false,\n\
                    dataType: 'json',\n\
                    data: JSON.stringify(data),\n\
                    type: 'POST',\n\
                    success: function (data) {\n\
                        if (data.result === 'SUCCESS') {\n\
                            self.lightboxText = translate('Backup complete');\n\
                            util.lightbox.open({\n\
                                url: 'html/lightbox_tmpl',\n\
                                selector: '#lightbox-message-template',\n\
                                cancelSelector: '.ok-button',\n\
                                onOpenComplete: function () {\n\
                                    ko.applyBindings(self, document.getElementById('lightbox-message'));\n\
                                }\n\
                            });\n\
                            window.location = data.link;\n\
                        } else {\n\
                            util.lightbox.openError(translate('Backup failed'), data.message ? data.message : 'Unknown failure');\n\
                        }\n\
                    }\n\
                });\n\
            };\n\
\n\
            util.lightbox.working(new LightboxWorkingViewModel(translate(\"Refreshing backup list\"), translate(\"Refreshing backup list\")));\n\
            self.rootVm.getGlobalSettings(globalSettingsCallback, true);\n\
        };\n\
    };\n\
    $.ajax({\n\
        url: util.getConfigSetting('backup'),\n\
        cache: false,\n\
        contentType: false,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('backup'),\n\
        success: function (data) {\n\
            if (data.result === 'SUCCESS') {\n\
                self.showTaskStatus({ \"status\": \"running\", \"messages\": [\n\
                        {\"header\": translate(\"Starting system backup...\"), \"content\": translate(\"Starting system backup...\")}\n\
                    ]}, translate(\"System backup\"), data.task_id,\n\
                    getCompletedPollingFunction(data.task_id));\n\
            } else {\n\
                util.lightbox.close();\n\
                util.lightbox.openError(translate('Request failed'), (data.messages && data.messages.length > 0) ? data.messages[0].content : 'Unknown failure');\n\
            }\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.beginRestoreSystem = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Starting system restore\"), translate(\"Starting system restore...\")));\n\
    var currentDate = new Date();\n\
\n\
    completedPollingFunction = function (taskName) {\n\
        util.lightbox.working(new LightboxWorkingViewModel(taskName, translate('Reloading app...')));\n\
        util.lightbox.close();\n\
        window.location = '/logout';\n\
    };\n\
    var ajaxRestoreData = JSON.stringify({\"file\": self.selectedBackup().filename, \"device\": self.selectedBackup().device});\n\
    $.ajax({\n\
        url: util.getConfigSetting('restore_backup'),\n\
        cache: false,\n\
        contentType: false,\n\
        data: ajaxRestoreData,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('restore_backup'),\n\
        success: function (data) {\n\
            if (data.result === 'SUCCESS') {\n\
                self.showTaskStatus({ \"status\": \"running\", \"messages\": [\n\
                    {\"header\": translate(\"Starting system restore...\"), \"content\": translate(\"Starting system restore...\")}\n\
                ]}, translate(\"System restore\"), data.task_id, completedPollingFunction);\n\
            } else {\n\
                util.lightbox.close();\n\
                util.lightbox.openError(translate('Request failed'), (data.messages && data.messages.length > 0) ? data.messages[0].content : 'Unknown failure');\n\
            }\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.deleteSystemBackup = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Deleting system backup\"), translate(\"Deleting system backup...\")));\n\
    var currentDate = new Date();\n\
\n\
    completedPollingFunction = function () {\n\
        util.lightbox.working(new LightboxWorkingViewModel(translate('Reloading backup list...'), translate('Reloading backup list...')));\n\
        self.rootVm.getGlobalSettings(function () {\n\
            util.lightbox.close();\n\
        }, true);\n\
    };\n\
    var ajaxDeleteData = JSON.stringify({\"file\": self.selectedBackup().filename, \"device\": self.selectedBackup().device});\n\
    $.ajax({\n\
        url: util.getConfigSetting('delete_backup'),\n\
        cache: false,\n\
        contentType: false,\n\
        data: ajaxDeleteData,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('delete_backup'),\n\
        success: function (data) {\n\
            self.showTaskStatus({ \"status\": \"running\", \"messages\": [\n\
                {\"header\": translate(\"Deleting system backup...\"), \"content\": translate(\"Deleting system backup...\")}\n\
            ]}, translate(\"Delete backup\"), data.task_id, completedPollingFunction);\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.archiveSystemBackup = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Archiving system backup\"), translate(\"Archiving system backup...\")));\n\
    var currentDate = new Date();\n\
\n\
    completedPollingFunction = function (taskName, data) {\n\
        if (data.messages[0].is_error === true) {\n\
            self.header = taskName;\n\
            self.message = data.messages[0].content;\n\
            util.lightbox.open({\n\
                url: 'html/lightbox_tmpl',\n\
                selector: '#lightbox-error-template',\n\
                cancelSelector: '.ok-button',\n\
                onOpenComplete: function () {\n\
                    ko.applyBindings(self, document.getElementById('lightbox-error'));\n\
                }\n\
            });\n\
        } else {\n\
            util.lightbox.working(new LightboxWorkingViewModel(taskName, translate('Reloading backup list...')));\n\
            util.lightbox.close();\n\
            self.rootVm.getGlobalSettings();\n\
        }\n\
    };\n\
    var ajaxArchiveData = JSON.stringify({\"file\": self.selectedBackup().filename});\n\
    $.ajax({\n\
        url: util.getConfigSetting('archive_backup'),\n\
        cache: false,\n\
        contentType: false,\n\
        data: ajaxArchiveData,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('archive_backup'),\n\
        success: function (data) {\n\
            self.showTaskStatus({ \"status\": \"running\", \"messages\": [\n\
                {\"header\": translate(\"Archiving system backup...\"), \"content\": translate(\"Archiving system backup...\")}\n\
            ]}, translate(\"Archive backup\"), data.task_id, completedPollingFunction);\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.importSystemBackup = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Importing system backup\"), translate(\"Importing system backup...\")));\n\
    var currentDate = new Date();\n\
\n\
    completedPollingFunction = function (taskName) {\n\
        util.lightbox.working(new LightboxWorkingViewModel(taskName, translate('Reloading backup list...')));\n\
        util.lightbox.close();\n\
        self.rootVm.getGlobalSettings();\n\
    };\n\
    var ajaxImportData = JSON.stringify({\"file\": self.selectedBackup().filename});\n\
    $.ajax({\n\
        url: util.getConfigSetting('import_backup'),\n\
        cache: false,\n\
        contentType: false,\n\
        data: ajaxImportData,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('import_backup'),\n\
        success: function (data) {\n\
            self.showTaskStatus({ \"status\": \"running\", \"messages\": [\n\
                {\"header\": translate(\"Importing system backup...\"), \"content\": translate(\"Importing system backup...\")}\n\
            ]}, translate(\"Import backup\"), data.task_id, completedPollingFunction);\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.runLightboxWarning = function (text, okFunction) {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
\n\
    self.okFunction = function() {\n\
        okFunction.call(self);\n\
    };\n\
    self.lightboxText = text;\n\
    util.lightbox.open({\n\
        url: 'html/lightbox_tmpl',\n\
        selector: '#lightbox-warning-template',\n\
        cancelSelector: '.cancel-button',\n\
        onOpenComplete: function () {\n\
            ko.applyBindings(self, document.getElementById('lightbox-warning'));\n\
        }\n\
    });\n\
};\n\
\n\
AdministrationViewModel.prototype.getSystemLogs = function () {\n\
    var self = AdministrationViewModel.typesafe(this);\n\
    util.lightbox.close();\n\
    util.lightbox.working(new LightboxWorkingViewModel(translate(\"Starting log compression...\"), translate(\"Starting log compression...\")));\n\
    $.ajax({\n\
        url: util.getConfigSetting('get_axon_logs'),\n\
        cache: false,\n\
        contentType: false,\n\
        dataType: 'json',\n\
        processData: false,\n\
        type: util.getRequestMethod('get_axon_logs'),\n\
        success: function (data) {\n\
            if (data.result === 'SUCCESS') {\n\
                util.lightbox.close();\n\
                window.location = data.messages[0].content.url;\n\
            } else {\n\
                util.lightbox.close();\n\
                util.lightbox.openError(translate('Request failed'), (data.messages && data.messages.length > 0) ? data.messages[0].content : 'Unknown failure');\n\
            }\n\
        }\n\
    });\n\
};//@ sourceURL=administration-view-model/index.js"
));
require.register("device-collection-view-model/index.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    emitter = require('emitter'),\n\
    $template = domify(require('./templates/index.js')),\n\
    events = require('event'),\n\
    DeviceVm = require('./views/device.js');\n\
\n\
/**\n\
 * Manages a collection of device view models - used on test configuration pane.\n\
 *\n\
 * @param testConfigVm\n\
 * @param if_multi\n\
 * @constructor\n\
 */\n\
function DeviceCollectionViewModel(testConfigVm, if_multi) {\n\
    var self = this;\n\
    self.testConfigVm = testConfigVm;\n\
    self.testVm = testConfigVm.testVm;\n\
    self.rootVm = testConfigVm.rootVm;\n\
\n\
    self.devices = ko.observableArray([]);\n\
    self.device_cached = [];\n\
\n\
    self.$el =  undefined;\n\
\n\
    self.trafficPlayer = null;\n\
\n\
    self.strings = {\n\
        'Checking port status ...': translate('Checking port status ...')\n\
    };\n\
\n\
    self.if_multi = false;\n\
\n\
    if(if_multi){\n\
        self.if_multi = if_multi;\n\
    }\n\
\n\
    self.txRxLabel = ko.observable();\n\
    self.txRxLabelFormatted = ko.computed(function() {\n\
        return translate(self.txRxLabel());\n\
    });\n\
\n\
    self.devicekotrigger = ko.observable('');\n\
\n\
    self.another_device_available = ko.computed(function() {\n\
        self.devicekotrigger();\n\
        return self.rootVm.availableDevices().length > self.devices().length ;\n\
    });\n\
}\n\
\n\
emitter(DeviceCollectionViewModel.prototype);\n\
\n\
DeviceCollectionViewModel.prototype.render = function () {\n\
    var self = this,\n\
        $devices = undefined;\n\
\n\
    self.$el =  $template.cloneNode(true);\n\
    $devices = self.$el.querySelector('.devices');\n\
\n\
    self.bind();\n\
\n\
    self.devices().forEach(function(device){\n\
        $devices.appendChild(device.render());\n\
    });\n\
\n\
    return self.$el;\n\
}\n\
\n\
\n\
DeviceCollectionViewModel.prototype.bind = function () {\n\
    var self = this,\n\
        $add_device = self.$el.querySelector(\".add-button\");\n\
\n\
    ko.applyBindings(self, self.$el);\n\
\n\
    self.devices.subscribe(function(){\n\
        self.devices_change_trigger.apply(self)\n\
    });\n\
}\n\
\n\
/**\n\
 * @param result ValidationResultsViewModel\n\
 * @param targetName context used in validation lightbox. e.g. \"Tx ...\"\n\
 * @returns ValidationResultsViewModel\n\
 */\n\
DeviceCollectionViewModel.prototype.validate = function (result, targetName) {\n\
    var devices = this.devices();\n\
\n\
    devices.forEach(function (device) {\n\
        device.validate(result, targetName);\n\
    });\n\
\n\
    return result;\n\
};\n\
\n\
DeviceCollectionViewModel.prototype.add_device_handler = function () {\n\
    var self = this,\n\
        $devices = self.$el.querySelector('.devices'),\n\
        deviceVm = self.add_device();\n\
\n\
    $devices.appendChild(deviceVm.render());\n\
}\n\
\n\
DeviceCollectionViewModel.prototype.add_device = function (device_data) {\n\
    var self = this,\n\
        deviceVm;\n\
\n\
    if(!device_data){\n\
        // Look for an unused device\n\
\n\
        var existing_ids = self.devices().map(function (device) { return device.id(); });\n\
\n\
        var unused = self.rootVm.availableDevices().filter(function (device) {\n\
            return existing_ids.indexOf(device.id()) === -1;\n\
        });\n\
\n\
        if (unused.length === 0) {\n\
            // All devices are already in the list, so don't let them add another\n\
            return; // Short-circuit\n\
        }\n\
\n\
        device_data = {\n\
            device: {id: unused[0].id()},\n\
            endpoints: undefined\n\
        };\n\
    }\n\
\n\
    if (device_data.device.id in self.device_cached){\n\
        deviceVm = self.device_cached[device_data.device.id];\n\
    } else {\n\
        deviceVm = DeviceVm.factory(device_data, self);\n\
    }\n\
\n\
    self.devices.push(deviceVm);\n\
    self.device_cached[deviceVm.device().id()] = deviceVm;\n\
\n\
    return deviceVm;\n\
};\n\
\n\
DeviceCollectionViewModel.prototype.inflate = function (data) {\n\
    var self = this,\n\
        devices;\n\
\n\
    data = data || {};\n\
    devices = data.devices || [];\n\
\n\
    if (!devices || !devices.length) {\n\
        // Add a default device\n\
        self.add_device();\n\
        return;\n\
    }\n\
\n\
    devices.map(function (device_data) {\n\
        self.add_device(device_data);\n\
    });\n\
};\n\
\n\
DeviceCollectionViewModel.prototype.get_device_id = function(){\n\
    var self = this;\n\
\n\
    return self.devices().map(function(item){\n\
            return item.device().id();\n\
        });\n\
};\n\
\n\
DeviceCollectionViewModel.prototype.devices_change_trigger = function(){\n\
    var self = this;\n\
\n\
    if(self.devicekotrigger() === ''){\n\
        self.devicekotrigger(' ');\n\
    }\n\
    else{\n\
        self.devicekotrigger('');\n\
    }\n\
\n\
    self.emit('changed:device', null);\n\
}\n\
\n\
DeviceCollectionViewModel.prototype.toFlatObject = function(){\n\
    var self = this;\n\
\n\
    var flat_object = {};\n\
\n\
    flat_object.devices = [];\n\
    self.devices().forEach(function(device){\n\
        var device_flat = device.toFlatObject();\n\
        if(device_flat){\n\
            flat_object.devices.push(device_flat);\n\
        }\n\
    });\n\
\n\
    return flat_object;\n\
};\n\
\n\
module.exports = DeviceCollectionViewModel;//@ sourceURL=device-collection-view-model/index.js"
));
require.register("device-collection-view-model/views/device.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    $template = domify(require('../templates/device.js')),\n\
    classes = require('classes'),\n\
    EndpointVm = require('./endpoint.js');\n\
\n\
function PlayerDeviceViewModel() {\n\
    var self = this;\n\
\n\
    self.$el = undefined;\n\
\n\
    self.endpoints = ko.observableArray([]);\n\
\n\
    self.device = ko.observable();\n\
    self.devicetogo = ko.observable();\n\
    self.devicetogo.subscribe(self.onDeviceChange.bind(self));\n\
\n\
    self.networks = ko.observableArray();\n\
\n\
    self.selectedPort = ko.observable();\n\
\n\
    self.expended = ko.observable(true);\n\
\n\
    self.transmit_receive = undefined;\n\
\n\
    self.strings = {\n\
        'Checking port status ...': window.translate('Checking port status ...'),\n\
        'Confirm for delete the device': window.translate('Confirm for delete the device'),\n\
    };\n\
\n\
    self.timingAccuracy = ko.observable();\n\
    self.computed_container = [];\n\
}\n\
\n\
PlayerDeviceViewModel.factory = function (device_data, parent) {\n\
    var view = new PlayerDeviceViewModel();\n\
\n\
    view.set_parent(parent);\n\
    view.set_device(device_data);\n\
\n\
    return view;\n\
};\n\
\n\
PlayerDeviceViewModel.prototype.id = function () {\n\
    if (!this.device()) {\n\
        return undefined;\n\
    }\n\
\n\
    return this.device().id();\n\
};\n\
\n\
PlayerDeviceViewModel.prototype.set_parent = function (parent) {\n\
    var self = this;\n\
    self.transmit_receive = parent;\n\
\n\
    self.not_last_device = ko.computed(function () {\n\
//        self.transmit_receive.devicekotrigger();\n\
        return self.transmit_receive.devices().length > 1 ;\n\
    });\n\
}\n\
\n\
PlayerDeviceViewModel.prototype.render = function(){\n\
    var self = this,\n\
        $endpoint_container = undefined;\n\
\n\
    self.$el =  $template.cloneNode(true);\n\
\n\
    $endpoint_container = self.$el.querySelector('.endpoint-container');\n\
\n\
    self.bind();\n\
\n\
    self.endpoints().forEach(function(endpoint){\n\
         $endpoint_container.appendChild(endpoint.render());\n\
    });\n\
\n\
    return self.$el;\n\
}\n\
\n\
PlayerDeviceViewModel.prototype.bind = function(){\n\
    var self = this;\n\
\n\
\n\
\n\
    ko.applyBindings(self, self.$el);\n\
}\n\
\n\
PlayerDeviceViewModel.prototype.set_device = function(device_data){\n\
    var self = this,\n\
        device = ko.utils.arrayFirst(self.transmit_receive.rootVm.availableDevices(), function (item) { return item.id() == device_data.device.id; });\n\
\n\
    self.device(device);\n\
    self.devicetogo(device);\n\
\n\
    device.ports().forEach(function(port, i){\n\
        var endpointVm = EndpointVm.factory(port.id(), self);\n\
\n\
        if (device_data.endpoints && device_data.endpoints.length) {\n\
            endpointVm.inflate(device_data.endpoints[i]);\n\
        }\n\
\n\
        self.endpoints.push(endpointVm);\n\
    });\n\
\n\
    if(device_data.endpoints){\n\
        //inflate endpoints\n\
    }\n\
}\n\
\n\
/**\n\
 * @param results ValidationResultsViewModel\n\
 * @param targetName context used in validation lightbox. e.g. \"Tx ...\"\n\
 * @returns ValidationResultsViewModel\n\
 */\n\
PlayerDeviceViewModel.prototype.validate = function (results, targetName) {\n\
    return results;\n\
};\n\
\n\
PlayerDeviceViewModel.prototype.onDeviceChange = function (device) {\n\
    if(device === this.device()){\n\
        return;\n\
    }\n\
\n\
    var self = this,\n\
        device_data = {\n\
            device: {id: device.id()},\n\
            endpoints: undefined\n\
        },\n\
        deviceVm = self.transmit_receive.add_device(device_data),\n\
        $parent = self.transmit_receive.$el.querySelector('.devices');\n\
\n\
    $parent.insertBefore(deviceVm.render(), self.$el);\n\
\n\
    self.devicetogo(self.device());\n\
    self.remove();\n\
\n\
//        $endpoint_container = self.$el.querySelector('.endpoint-container');\n\
//\n\
//    self.transmit_receive.devices_change_trigger.apply(self.transmit_receive);\n\
//\n\
//    while ($endpoint_container.firstChild) {\n\
//        $endpoint_container.removeChild($endpoint_container.firstChild);\n\
//    }\n\
//\n\
//    self.endpoints.removeAll();\n\
//\n\
//    device.ports().forEach(function(port){\n\
//        var endpointVm = EndpointVm.factory(port.id(), self);\n\
//        self.endpoints.push(endpointVm);\n\
//        $endpoint_container.appendChild(endpointVm.render());\n\
//    });\n\
};\n\
\n\
PlayerDeviceViewModel.prototype.selectPort = function (portIndex) {\n\
    var self = this;\n\
\n\
    self.selectedPort(portIndex);\n\
};\n\
\n\
PlayerDeviceViewModel.prototype.isPortSelected = function (id) {\n\
    var self = this;\n\
\n\
    if(!('isPortSelected_' + id in self.computed_container)){\n\
        self.computed_container['isPortSelected_' + id] = ko.computed(function () {\n\
            return self.selectedPort() === id;\n\
        });\n\
    }\n\
\n\
    return self.computed_container['isPortSelected_' + id];\n\
};\n\
\n\
PlayerDeviceViewModel.prototype.isPortEnabled = function (id) {\n\
    var self = this;\n\
\n\
    if(!('isPortEnabled_' + id in self.computed_container)){\n\
        var endpoint;\n\
        self.endpoints().forEach(function(item){\n\
            if(item.port() == id){\n\
                endpoint = item;\n\
            }\n\
        });\n\
\n\
        self.computed_container['isPortEnabled_' + id] = ko.computed(function () {\n\
            return endpoint.enabled();\n\
        });\n\
    }\n\
\n\
    return self.computed_container['isPortEnabled_' + id];\n\
};\n\
\n\
\n\
PlayerDeviceViewModel.prototype.isPortAvailable = function (port) {\n\
    var self = this;\n\
\n\
    if(!('isPortAvailable_' + port.id() in self.computed_container)){\n\
        self.computed_container['isPortAvailable_' + port.id()] = ko.computed(function () {\n\
            return port.available() && self.selectedPort() !== port.id();\n\
        });\n\
    }\n\
\n\
    return self.computed_container['isPortAvailable_' + port.id()];\n\
};\n\
\n\
\n\
PlayerDeviceViewModel.prototype.isPortUnavailable = function (port) {\n\
    var self = this;\n\
\n\
    if(!('isPortUnavailable_' + port.id() in self.computed_container)){\n\
        self.computed_container['isPortUnavailable_' + port.id()] = ko.computed(function () {\n\
            return !port.available() && self.selectedPort() !== port.id();\n\
        });\n\
    }\n\
\n\
    return self.computed_container['isPortUnavailable_' + port.id()];\n\
};\n\
\n\
PlayerDeviceViewModel.prototype.is_device_selectable = function (id) {\n\
    var self = this;\n\
\n\
    if(!('is_device_selectable_' + id in self.computed_container)){\n\
        self.computed_container['is_device_selectable_' + id] = ko.computed(function () {\n\
            var res = true;\n\
            for(var i=0 ; i<self.transmit_receive.devices().length; i++){\n\
                res = res && (self.transmit_receive.devices()[i].device().id() !== id)\n\
            }\n\
\n\
            res = res || (self.device().id() === id);\n\
    //        return self.device().id() === id || self.transmit_receive.devices().every(function(item){\n\
    //            return id !== item.device().id();\n\
    //        });\n\
            return res\n\
        });\n\
    }\n\
\n\
    return self.computed_container['is_device_selectable_' + id];\n\
};\n\
\n\
\n\
PlayerDeviceViewModel.prototype.toFlatObject = function(){\n\
    var self = this;\n\
\n\
    var flat_object = {\n\
        device : self.device() ? self.device().toFlatObject() : {}\n\
    };\n\
\n\
    flat_object.endpoints = [];\n\
    self.endpoints().forEach(function(endpoint){\n\
        var endpoint_flat = endpoint.toFlatObject();\n\
        if(endpoint_flat){\n\
            flat_object.endpoints.push(endpoint_flat);\n\
        }\n\
    });\n\
\n\
    flat_object.devicePorts = [];\n\
    if (self.device()) {\n\
        var devicePorts = self.device().ports();\n\
        for (var i = 0; i < devicePorts.length; i++) {\n\
            flat_object.devicePorts.push(devicePorts[i].toFlatObject());\n\
        }\n\
    }\n\
\n\
    flat_object.networks = [];\n\
    for (var i = 0; i < self.networks().length; i++) {\n\
        flat_object.networks.push(self.networks()[i]);\n\
    }\n\
    return flat_object;\n\
};\n\
\n\
PlayerDeviceViewModel.prototype.remove_device = function () {\n\
    var self = this;\n\
//    util.lightbox.confirmation_dialog(self,self.strings[\"Confirm for delete the device\"],self.remove); //not necessary, cause we will recover the old setting.\n\
    self.remove();\n\
}\n\
\n\
PlayerDeviceViewModel.prototype.expand_collapse = function () {\n\
    var self = this;\n\
\n\
    self.expended(!self.expended());\n\
}\n\
\n\
PlayerDeviceViewModel.prototype.remove = function () {\n\
    var self = this;\n\
\n\
    if(self.$el.parentNode){\n\
        self.$el.parentNode.removeChild(self.$el);\n\
    }\n\
\n\
    self.transmit_receive.devices.remove(self);\n\
}\n\
\n\
//PlayerDeviceViewModel.prototype.confirm_change_device = function (data, event) {\n\
//    //event.preventDefault(); if we want to support this we need to support confirmation dialog cancel callback.\n\
//}\n\
\n\
PlayerDeviceViewModel.prototype.updateTimingAccuracy = function (accuracy) {\n\
    var str = window.translate(\"±{accuracy}ms accuracy\", {\n\
        accuracy: Math.abs(accuracy).toFixed(3)\n\
    });\n\
    this.timingAccuracy(str);\n\
};\n\
\n\
\n\
module.exports = PlayerDeviceViewModel;//@ sourceURL=device-collection-view-model/views/device.js"
));
require.register("device-collection-view-model/views/endpoint.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    $template = domify(require('../templates/endpoint.js'));\n\
\n\
function PlayerEndpointViewModel(port) {\n\
    var self = this;\n\
\n\
    self.$el = undefined;\n\
\n\
    self.device = undefined;\n\
\n\
    self.enabled = ko.observable(false);\n\
\n\
    self.port = ko.observable(port);\n\
\n\
    self.id = ko.observable(0);\n\
    self.name = ko.observable('');\n\
    self.tagged = ko.observable(false);\n\
    self.use_dhcp = ko.observable(\"false\");\n\
    self.dhcp_hosts = ko.observable(20);\n\
\n\
    self.vlan_id = ko.observable('');\n\
    self.ip = ko.observable('');\n\
    self.end_ip = ko.observable('');\n\
    self.prefix = ko.observable('');\n\
    self.gateway = ko.observable('');\n\
\n\
    self.customer = ko.observable();\n\
    self.location = ko.observable();\n\
    self.tags = ko.observableArray();\n\
    self.unqualifiedTags = ko.observable();\n\
    self.favorite = ko.observable();\n\
}\n\
\n\
PlayerEndpointViewModel.factory = function(port, parent){\n\
    var view = new PlayerEndpointViewModel(port);\n\
\n\
    view.set_parent(parent);\n\
\n\
    return view;\n\
}\n\
\n\
PlayerEndpointViewModel.prototype.set_parent = function(parent) {\n\
    var self = this;\n\
    self.device = parent;\n\
    self.is_selected = ko.computed(function () {\n\
        return self.port() === self.device.selectedPort();\n\
    });\n\
}\n\
\n\
PlayerEndpointViewModel.prototype.render = function(){\n\
    var self = this;\n\
\n\
    self.$el =  $template.cloneNode(true);\n\
\n\
    self.bind();\n\
\n\
    return self.$el;\n\
}\n\
\n\
PlayerEndpointViewModel.prototype.inflate = function(data){\n\
    var self = this;\n\
\n\
    Object.keys(data).forEach(function (prop) {\n\
        var val = data[prop];\n\
\n\
        if (!self.hasOwnProperty(prop)) {\n\
            return; // Short-circuit\n\
        }\n\
\n\
        if (self[prop].constructor === ko.observable().constructor || self[prop].constructor === ko.observableArray().constructor) {\n\
            self[prop](val);\n\
        } else {\n\
            self[prop] = val;\n\
        }\n\
    });\n\
};\n\
\n\
PlayerEndpointViewModel.prototype.bind = function(){\n\
    var self = this;\n\
    ko.applyBindings(self, self.$el);\n\
}\n\
\n\
PlayerEndpointViewModel.prototype.toFlatObject = function(){\n\
    var self = this;\n\
\n\
//    if(!self.enabled()){\n\
//        return null;\n\
//    }\n\
\n\
    var flat_object = {\n\
        port: self.port(),\n\
        enabled: self.enabled(),\n\
        id: self.id(),\n\
        name: self.name() || \"\",\n\
        use_dhcp: self.use_dhcp(),\n\
        dhcp_hosts: +self.dhcp_hosts() || 20,\n\
        vlan_id: self.vlan_id() || \"\",\n\
        ip: self.ip() || \"\",\n\
        end_ip: self.end_ip() || \"\",\n\
        prefix: self.prefix() || \"\",\n\
        gateway: self.gateway() || \"\",\n\
        tags: window.util.getTags(self)\n\
    };\n\
\n\
    return flat_object;\n\
};\n\
\n\
module.exports = PlayerEndpointViewModel;//@ sourceURL=device-collection-view-model/views/endpoint.js"
));
require.register("device-collection-view-model/templates/index.js", Function("exports, require, module",
"module.exports = '<div class=\"device-collection\">\\n\
    <ul class=\"devices\"></ul>\\n\
    <button class=\"add-button button dark\" type=\"button\" data-bind=\"click: add_device_handler, enable: another_device_available\">+ Add another device</button>\\n\
</div>';//@ sourceURL=device-collection-view-model/templates/index.js"
));
require.register("device-collection-view-model/templates/device.js", Function("exports, require, module",
"module.exports = '<li class=\"device transmit-receive-container box\">\\n\
    <div class=\"transmit-receive\">\\n\
        <div data-bind=\"visible: expended\">\\n\
            <!--<a href=\"#\" data-bind=\"click: expand_collapse\"><img src=\"images/up-expander.png\" alt=\"close\" title=\"close\"></a>-->\\n\
            <ul>\\n\
                <li class=\"device-container\">\\n\
                    <div class=\"aluminum-select\">\\n\
                        <span data-bind=\"text: device().name\"></span>\\n\
                        <select data-bind=\"foreach: transmit_receive.rootVm.availableDevices, value: devicetogo\">\\n\
                            <option data-bind=\"value: $data, text: name, enable: $parent.is_device_selectable(id())\"></option>\\n\
                        </select>\\n\
                    </div>\\n\
                    <span class=\"tx-rx-label\" data-bind=\"text: transmit_receive.txRxLabelFormatted\"></span>\\n\
                </li>\\n\
\\n\
                <li class=\"timing\">\\n\
                    <p data-bind=\"attr: { \\'class\\' : \\'sync \\' + device().timeSyncClass() }, text: device().displayTimeSyncResolution\"></p>\\n\
                    <p class=\"accuracy\" data-bind=\"text: timingAccuracy\"></p>\\n\
                </li>\\n\
\\n\
                <li class=\"port-container\">\\n\
                    <span data-bind=\"visible: device().updating_port_status\" class=\"loading\">Checking port status ...</span>\\n\
                    <ul data-bind=\"foreach: device().ports()\" class=\"ports\">\\n\
                        <li class=\"port-and-status\">\\n\
                            <div class=\"port-status\" data-bind=\"attr: { \\'data-title\\': portLightTooltips }, tooltip: portLightTooltips\">\\n\
                                <span class=\"tooltip\" style=\"display: none;\" data-bind=\"text: portLightTooltips\"></span>\\n\
                                <div data-bind=\"attr: { \\'class\\': portLight1StatusClass }\"></div>\\n\
                                <div data-bind=\"attr: { \\'class\\': portLight2StatusClass }\"></div>\\n\
                            </div>\\n\
                            <div data-bind=\"visible: $parent.isPortSelected(id())\" class=\"selected-port\"></div>\\n\
\\n\
                            <div data-bind=\"visible: $parent.isPortAvailable($data), click: function(data, event) { $parent.selectPort(id()); }, css: { enable: $parent.isPortEnabled(id()) }\" class=\"available-port\"></div>\\n\
\\n\
                            <div data-bind=\"visible: $parent.isPortUnavailable($data), attr: {\\'class\\': allocated_to}, css: {\\'unavailable-port\\': true}\" class=\"unavailable-port\"></div>\\n\
                        </li>\\n\
                    </ul>\\n\
                    <div class=\"clear\"></div>\\n\
                </li>\\n\
                <li class=\"endpoint-container\" data-bind=\"visible: selectedPort\"></li>\\n\
            </ul>\\n\
            <a href=\"#\" class=\"delete-button\" data-bind=\"click: remove_device, enable: not_last_device\" type=\"button\">Delete</a>\\n\
        </div>\\n\
        <div data-bind=\"visible: !expended()\">\\n\
            <a href=\"#\" data-bind=\"click: expand_collapse\"><img src=\"images/down-expander.png\" alt=\"open\" title=\"open\"></a>\\n\
            <ul>\\n\
                <li class=\"device-container\">\\n\
                     <span data-bind=\"text: device().name\"></span>\\n\
                </li>\\n\
\\n\
                <li class=\"port-container\">\\n\
                    <span data-bind=\"visible: device().updating_port_status\" class=\"loading\">Checking port status ...</span>\\n\
                    <ul data-bind=\"foreach: device().ports()\" class=\"ports\">\\n\
                        <li class=\"port-and-status\">\\n\
                            <div class=\"port-status\" data-bind=\"attr: { \\'data-title\\': portLightTooltips }, tooltip: portLightTooltips\">\\n\
                                <span class=\"tooltip\" style=\"display: none;\" data-bind=\"text: portLightTooltips\"></span>\\n\
                                <div data-bind=\"attr: { \\'class\\': portLight1StatusClass }\"></div>\\n\
                                <div data-bind=\"attr: { \\'class\\': portLight2StatusClass }\"></div>\\n\
                            </div>\\n\
                            <div data-bind=\"visible: !$parent.isPortUnavailable($data)(), css: { enable: $parent.isPortEnabled(id()) }\" class=\"available-port\"></div>\\n\
\\n\
                            <div data-bind=\"visible: $parent.isPortUnavailable($data), attr: {\\'class\\': allocated_to}, css: {\\'unavailable-port\\': true}\" class=\"unavailable-port\"></div>\\n\
                        </li>\\n\
                    </ul>\\n\
                    <div class=\"clear\"></div>\\n\
                </li>\\n\
\\n\
                <li>\\n\
                    <ul data-bind=\"foreach: endpoints()\" class=\"endpoints\">\\n\
                        <li data-bind=\"text: port() + \\': \\' + (enabled()?\\'Enabled \\':\\'Disabled \\') + ip()\"></li>\\n\
                    </ul>\\n\
                </li>\\n\
            </ul>\\n\
        </div>\\n\
    </div>\\n\
</li>\\n\
';//@ sourceURL=device-collection-view-model/templates/device.js"
));
require.register("device-collection-view-model/templates/endpoint.js", Function("exports, require, module",
"module.exports = '<div class=\"endpoint-pane\" data-bind=\"visible: is_selected\">\\n\
    <section>\\n\
        <ul class=\"form\">\\n\
            <li class=\"enable\"><label><input type=\"checkbox\" id=\"enable\" data-bind=\"checked: enabled\"> Enable this port</label></li>\\n\
            <!-- ko if: enabled -->\\n\
            <li>\\n\
                <label class=\"vlan\">VLAN ID</label>\\n\
                <input type=\"text\" name=\"vlan_id\" class=\"vlan\" data-bind=\"value: vlan_id\" placeholder=\"1 to 4096\">\\n\
                <span class=\"save small-round-button-outer\"><a class=\"small-round-button\"><img src=\"images/save.png\" title=\"Save\" alt=\"Save\"></a></span>\\n\
            </li>\\n\
            <li class=\"selector dhcpContainer\">\\n\
                <input type=\"radio\" value=\"false\" data-bind=\"checked: use_dhcp\">\\n\
                <label class=\"dhcp\"> No DHCP</label>\\n\
\\n\
                <input type=\"radio\" value=\"v4\" data-bind=\"checked: use_dhcp\">\\n\
                <label class=\"dhcp normalCase\"> DHCPv4</label>\\n\
\\n\
                <input type=\"radio\" value=\"v6\" data-bind=\"checked: use_dhcp\">\\n\
                <label class=\"dhcp normalCase\"> DHCPv6</label>\\n\
            </li>\\n\
            <li data-bind=\"visible: use_dhcp() != \\'false\\'\" class=\"dhcp dhcp-hosts\">\\n\
                <ul>\\n\
                    <label class=\"dhcpHosts\">Number of hosts</label>\\n\
                    <input type=\"text\" name=\"dhcp_hosts\">\\n\
                </ul>\\n\
            </li>\\n\
            <li data-bind=\"visible: use_dhcp() == \\'false\\'\">\\n\
                <ul>\\n\
                    <li class=\"static ip\">\\n\
                        <label class=\"startingIpAddress\">Starting IP</label>\\n\
                        <input type=\"text\" name=\"starting_ip\" placeholder=\"IPv4 or IPv6\" data-bind=\"value: ip\">\\n\
                    </li>\\n\
                    <li class=\"static end_ip\">\\n\
                        <label>Ending IP</label>\\n\
                        <input type=\"text\" name=\"ending_ip\" placeholder=\"IPv4 or IPv6\" data-bind=\"value: end_ip\">\\n\
                    </li>\\n\
                    <li class=\"static prefix\">\\n\
                        <label>Prefix</label>\\n\
                        <input type=\"text\" name=\"prefix\" placeholder=\"1 to 128\" data-bind=\"value: prefix\">\\n\
                    </li>\\n\
                    <li class=\"static gateway\">\\n\
                        <label>Gateway</label>\\n\
                        <input type=\"text\" name=\"gateway\" placeholder=\"IPv4 or IPv6\" data-bind=\"value: gateway\">\\n\
                    </li>\\n\
                </ul>\\n\
            </li>\\n\
            <!-- /ko -->\\n\
        </ul>\\n\
    </section>\\n\
</div>';//@ sourceURL=device-collection-view-model/templates/endpoint.js"
));
require.register("traffic-player-view-model/index.js", Function("exports, require, module",
"/*global ko:true, TestPlaylistViewModel:true, TestTrafficSettingViewModel:true, DatapointViewModel:true, TestSupplementalConfigurationViewModel:true */\n\
var UnicastDelegate = require('./delegates/unicast.js'),\n\
    MulticastDelegate = require('./delegates/multicast.js');\n\
\n\
/**\n\
 * Manages data for unicast and multicast traffic player views - uses delegates.\n\
 *\n\
 * @param testConfigVm\n\
 * @constructor\n\
 */\n\
function TrafficPlayerViewModel(testConfigVm) {\n\
    var self = this;\n\
    self.delegate = undefined;\n\
    self.testConfigVm = testConfigVm;\n\
    self.testVm = testConfigVm.testVm;\n\
    self.rootVm = testConfigVm.rootVm;\n\
\n\
    self.source = ko.observable();\n\
    self.destination = ko.observable();\n\
    self.playlist = ko.observable();\n\
    self.sharedConfig = ko.observable();\n\
    self.traffic_setting = ko.observable();\n\
\n\
    self.timingAccuracy = ko.observable();\n\
\n\
    self.datapoints = ko.observableArray();\n\
\n\
    self.currentPlaylist = null;\n\
    self.currentPlaylistEditable = false;\n\
    self.currentPlaylistNumTracks = 0;\n\
\n\
    self.supplementalConfiguration = ko.observable();\n\
    self.hasSupplementalConfiguration = ko.observable(false);\n\
\n\
    self.isExpanded = ko.observable(true);\n\
    self.playlistIsEdit = ko.observable(false);\n\
    self.showCollapsed = ko.computed(self.computeShowCollapsed.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.additionalConfigurationVisible = ko.computed(self.computeAdditionalConfigurationVisible.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.openPlaylistVisible = ko.computed(self.computeOpenPlaylistVisible.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.closePlaylistVisible = ko.computed(self.computeClosePlaylistVisible.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.trackContainerVisible = ko.computed(self.computeTrackContainerVisible.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.applicationTrackContainerVisible = ko.computed(self.computeApplicationTrackContainerVisible.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.playlist.subscribe(self.onPlaylistChange.bind(self));\n\
    self.strings = {\n\
        \"Source endpoint is invalid\": translate(\"Source endpoint is invalid\"),\n\
        \"Destination endpoint is invalid\": translate(\"Destination endpoint is invalid\"),\n\
        \"[Custom]\": translate(\"[Custom]\")\n\
    };\n\
\n\
    /**\n\
     *\n\
     * @param transmit_receive TestTransmitReceiveConfigViewModel\n\
     */\n\
    function notify_parent(transmit_receive) {\n\
        if (!transmit_receive) {\n\
            return; // Short-circuit\n\
        }\n\
\n\
        transmit_receive.on('changed:device', function () {\n\
            self.testConfigVm.pollDevicesStatus();\n\
            self.testConfigVm.pollTimingAccuracies();\n\
            self.testConfigVm.pollDeviceTimeSyncCapabilities();\n\
            self.testConfigVm.updateConfig();\n\
        });\n\
    }\n\
\n\
    self.source.subscribe(notify_parent);\n\
    self.destination.subscribe(notify_parent);\n\
}\n\
\n\
module.exports = TrafficPlayerViewModel;\n\
\n\
TrafficPlayerViewModel.typesafe = function (that) {\n\
    if (!(that instanceof TrafficPlayerViewModel)) {\n\
        throw 'This method must be executed on a TrafficPlayerViewModel';\n\
    }\n\
\n\
    return that;\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.inflate = function (data, default_playlist_id, datapoint_ids, is_multicast) {\n\
    var self = TrafficPlayerViewModel.typesafe(this),\n\
        supplementalConfig,\n\
        source,\n\
        playlist,\n\
        i,\n\
        datapoint;\n\
\n\
    // Delegate unicast-/multicast-specific behavior\n\
    self.delegate = is_multicast ? new MulticastDelegate(this) : new UnicastDelegate(this);\n\
    self.delegate.inflate(data);\n\
\n\
\n\
    // Source and destination - delegated (see above)\n\
\n\
\n\
    // Playlist\n\
\n\
    if (data.playlist) {\n\
        playlist = new TestPlaylistViewModel(self.rootVm);\n\
        if (data.playlist) {\n\
            playlist.inflate(data.playlist);\n\
        } else {\n\
            playlist.inflate(self.playlist().toFlatObject());\n\
        }\n\
    } else {\n\
        playlist = ko.utils.arrayFirst(self.testVm.availablePlaylists(), function (item) {\n\
            return item.id() === default_playlist_id;\n\
        });\n\
\n\
        if (playlist === null) {\n\
            playlist = self.testVm.availablePlaylists()[0];\n\
        }\n\
    }\n\
\n\
    self.playlist(playlist);\n\
\n\
\n\
    // Datapoints\n\
\n\
    for (i = 0; i < datapoint_ids.length; i++) {\n\
        datapoint = new DatapointViewModel(self.rootVm);\n\
        datapoint.inflate(self.testVm.availableDatapointsMap()[datapoint_ids[i]]);\n\
        self.datapoints.push(datapoint);\n\
    }\n\
\n\
    // Traffic setting\n\
\n\
    self.traffic_setting(new TestTrafficSettingViewModel(self.testConfigVm, self));\n\
    if (data.traffic_settings && data.traffic_settings.length > 0) {\n\
        self.traffic_setting().inflate(data.traffic_settings[0]);\n\
    }\n\
    self.source().lineRate.subscribe(self.changeLineRate.bind(self));\n\
\n\
    // Multicast settings - delegated (see above)\n\
\n\
\n\
    // Supplemental config\n\
\n\
    if (data.supplemental_configuration) {\n\
        supplementalConfig = new TestSupplementalConfigurationViewModel(self.rootVm);\n\
        supplementalConfig.inflate(data.supplemental_configuration);\n\
        self.supplementalConfiguration(supplementalConfig);\n\
        self.hasSupplementalConfiguration(true);\n\
    }\n\
\n\
\n\
    self.loaded = true;\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.changeLineRate = function (rate) {\n\
    if (this.traffic_setting() && this.traffic_setting().lineRateVm.line_speed === rate) {\n\
        // Line rate hasn't actually changed\n\
        return; // Short-circuit\n\
    }\n\
\n\
    logger.info('Line rate changed: ' + rate);\n\
\n\
    this.traffic_setting().changeLineRate(rate);\n\
    if (this.hasSupplementalConfiguration()) {\n\
        this.supplementalConfiguration().changeLineRate(rate);\n\
    }\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.aggregateTraffic = function (trafficTotal) {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    var setting = self.traffic_setting();\n\
    if(!trafficTotal[setting.unit()])\n\
        trafficTotal[setting.unit()] = 0;\n\
    trafficTotal[setting.unit()] += parseInt(setting.value());\n\
\n\
//    var traffic_settings = self.traffic_settings();\n\
//    for(var i = 0; i < traffic_settings.length; i++){\n\
//        if(!trafficTotal[traffic_settings[i].unit()])\n\
//            trafficTotal[traffic_settings[i].unit()] = 0;\n\
//        trafficTotal[traffic_settings[i].unit()] += parseInt(traffic_settings[i].value());\n\
//    }\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.toFlatObject = function(){\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    var flatTrafficPlayer = {\n\
        source: self.source().toFlatObject(),\n\
        destination: self.destination().toFlatObject(),\n\
        playlist: self.playlist().toFlatObject(),\n\
        traffic_settings: new Array(),\n\
        datapoints: new Array()\n\
    };\n\
\n\
    var datapoints = self.datapoints();\n\
    for (var i = 0; i < datapoints.length; i++) {\n\
        flatTrafficPlayer.datapoints.push(datapoints[i].toFlatObject());\n\
    }\n\
\n\
    flatTrafficPlayer.traffic_settings.push(self.traffic_setting().toFlatObject());\n\
\n\
    if (self.hasSupplementalConfiguration()) {\n\
        flatTrafficPlayer.supplemental_configuration = self.supplementalConfiguration().toFlatObject();\n\
    }\n\
\n\
    flatTrafficPlayer = self.delegate.toFlatObject(flatTrafficPlayer);\n\
\n\
    return flatTrafficPlayer;\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.onPlaylistChange = function (newValue) {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
    if(self.playlistIsEdit()){\n\
        self.playlistIsEdit(false);\n\
\n\
        var playlists = self.testConfigVm.testVm.availablePlaylists();\n\
        for(var i = 0; i < playlists.length; i++){\n\
            if(playlists[i].isEdit())\n\
                playlists[i].isEdit(false);\n\
        }\n\
    }\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.updateTimingAccuracy = function (accuracy) {\n\
    this.timingAccuracy(Math.abs(accuracy).toFixed(3));\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.launchTimingHelp = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    util.lightbox.open({\n\
        url : 'html/lightbox_tmpl',\n\
        selector : '#lightbox-timing-help-template',\n\
        cancelSelector: '.cancel-button'\n\
    });\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.getPlayerLayer = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    return self.playlist().getTrackLayer();\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.getTrackResultTypes = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    return self.playlist().getTrackResultTypes();\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.hasHTTPTrack = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    return self.playlist().hasHTTPTrack();\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.computeOpenPlaylistVisible = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    if (self.playlist() == null) {\n\
        return false;\n\
    }\n\
\n\
    return !self.playlist().isEdit() && !self.playlistIsEdit();\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.computeClosePlaylistVisible = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    if (self.playlist() == null) {\n\
        return false;\n\
    }\n\
\n\
    return self.playlist().isEdit() && self.playlistIsEdit();\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.computeTrackContainerVisible = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    if (self.playlist() == null) {\n\
        return false;\n\
    }\n\
\n\
    return self.playlist().isEdit() && self.playlistIsEdit() && self.getPlayerLayer() < 4;\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.computeApplicationTrackContainerVisible = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    if (self.playlist() == null) {\n\
        return false;\n\
    }\n\
\n\
    return self.playlist().isEdit() && self.playlistIsEdit() && self.getPlayerLayer() >= 4;\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.computeAdditionalConfigurationVisible = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    return self.datapoints().length > 0\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.computeShowCollapsed = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    return !self.isExpanded();\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.portIdInUse = function (id) {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    return self.source().selectedPort() == id\n\
        || self.destination().selectedPort() == id;\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.usingSameDevice = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
\n\
    return self.source().device() == self.destination().device();\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.getDeviceIds = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
    var deviceIds = new Array();\n\
\n\
    var transmitConfig = self.source();\n\
    var receiveConfig = self.destination();\n\
\n\
    if (transmitConfig != null) {\n\
        var transmitDevice = transmitConfig.device();\n\
\n\
        if (transmitDevice != null) {\n\
            deviceIds.push(transmitDevice.id);\n\
        }\n\
    }\n\
\n\
    if (receiveConfig != null) {\n\
        var receiveDevice = receiveConfig.device();\n\
\n\
        if (receiveDevice != null) {\n\
            deviceIds.push(receiveDevice.id);\n\
        }\n\
    }\n\
\n\
    return deviceIds;\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.removeTrack = function (playlist, track) {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
    var trackId = track.id();\n\
    var tracks = playlist().tracks();\n\
    for (i = 0; i < tracks.length; i++) {\n\
        if (tracks[i]().id() == trackId) {\n\
            playlist().tracks.splice(i, 1);\n\
        }\n\
    }\n\
    if(playlist().isReadOnly && playlist().name().indexOf(self.strings[\"[Custom]\"]) == -1){\n\
        playlist().name(self.strings[\"[Custom]\"] + \" \" + playlist().name());\n\
        playlist().isNameChanged = true;\n\
    }\n\
};\n\
TrafficPlayerViewModel.prototype.deleteTrafficPlayer = function (playerId) {\n\
    var self = TrafficPlayerViewModel.typesafe(this),\n\
        id = playerId(),\n\
        newTrafficPlayers = [];\n\
\n\
    logger.info('Deleting traffic player ' + id);\n\
\n\
    self.testConfigVm.traffic_players().splice(id, 1);\n\
\n\
    for (var i = 0; i < self.testConfigVm.traffic_players().length; i++) {\n\
        newTrafficPlayers.push(self.testConfigVm.traffic_players()[i]);\n\
    }\n\
\n\
    self.testConfigVm.traffic_players.removeAll();\n\
    for (var i = 0; i < newTrafficPlayers.length; i++) {\n\
        self.testConfigVm.traffic_players.push(newTrafficPlayers[i]);\n\
    }\n\
\n\
    logger.info('Deleted traffic player ' + id);\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.editPlaylist = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
//    if (self.playlist().editable()) {\n\
//        self.playlistIsEdit(true);\n\
//        self.playlist().isEdit(true);\n\
//        return;\n\
//    }\n\
\n\
    var clonedPlaylist = self.playlist().clone(self);\n\
    self.playlist(clonedPlaylist);\n\
    self.playlistIsEdit(true);\n\
    self.playlist().isEdit(true);\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.closePlaylist = function () {\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
    self.playlistIsEdit(false);\n\
    self.playlist().isEdit(false);\n\
};\n\
\n\
/**\n\
 * @param result ValidationResultsViewModel\n\
 * @param targetName context used in validation lightbox. e.g. \"Tx ...\"\n\
 * @returns ValidationResultsViewModel\n\
 */\n\
TrafficPlayerViewModel.prototype.validate = function (result, targetName){\n\
    var self = TrafficPlayerViewModel.typesafe(this);\n\
    var isValidSrcDes = true;\n\
    var source = self.source();\n\
    var destination = self.destination();\n\
    if(source != null){\n\
        source.validate(result, translate(\"{name} Source\", {\n\
            name: targetName\n\
        }));\n\
    }else{\n\
        result.addCheckResults(translate(\"Test Configuration Error\"), false, translate(\"{name} source is missing\", {\n\
            name: targetName\n\
        }));\n\
        isValidSrcDes = false;\n\
    }\n\
\n\
    if(destination != null){\n\
        destination.validate(result, translate(\"{name} Destination\", {\n\
            name: targetName\n\
        }));\n\
    }else{\n\
        result.addCheckResults(translate(\"Test Configuration Error\"), false, translate(\"{name} destination is missing\", {\n\
            name: targetName\n\
        }));\n\
        isValidSrcDes = false;\n\
    }\n\
\n\
    // Check if src and des use same device, port, and vlan_id\n\
    if (isValidSrcDes && source.device_id() && source.selectedPort() && source.vlanLabel()) {\n\
        if (destination.devices && destination.devices()) {\n\
            // Destination is a collection of devices\n\
\n\
            destination.devices().some(function (device) {\n\
                if (self.same_device_port_and_vlans(source, device)) {\n\
                    var message = translate(\"{name} servers and clients cannot use the same combination of device, port, and VLAN ID ({device}, port {port}, VLAN {vlan}.\", {\n\
                        name: targetName,\n\
                        device: source.deviceName(),\n\
                        port: source.selectedPort(),\n\
                        vlan: source.vlanLabel()\n\
                    });\n\
\n\
                    result.addCheckResults(translate(\"Test Configuration Error\"), false, message);\n\
                }\n\
            });\n\
            return result; //short-circuit\n\
        } else if (self.same_device_port_and_vlans(source, destination)) {\n\
            result.addCheckResults(translate(\"Test Configuration Error\"), false,\n\
                translate(\"{name} source and destination VLAN ID must be different when choosing same port on same device.\", {\n\
                    name: targetName\n\
                }));\n\
            return result; //short-circuit\n\
        }\n\
    }\n\
\n\
    if(self.playlist() != null){\n\
//        if(!self.canAcceptPlaylist(self.playlist())){\n\
//            var layers = self.playlist().getTrackLayers();\n\
//            var message = translate('The \"{playlistName}\" playlist contains tracks with layer(s) {givenLayers}, but this test only supports layer(s): {acceptableLayers}. Please use a different playlist.', {\n\
//                playlistName: self.playlist().name(),\n\
//                givenLayers: layers.join(', '),\n\
//                acceptableLayers: \"axon.testcases.spirent.network_stress\" === self.testConfigVm.module ? '1, 2' : '1, 2, 3'\n\
//            });\n\
//\n\
//            result.addCheckResults(translate(\"Test Configuration Error\"), false, message);\n\
//        }\n\
        self.playlist().validate(result, targetName);\n\
    }else{\n\
        result.addCheckResults(translate(\"Test Configuration Error\"), false, translate(\"{name} is missing a Playlist\", {\n\
            name: targetName\n\
        }));\n\
    }\n\
\n\
    if(self.traffic_setting() != null){\n\
        self.traffic_setting().validate(result, targetName);\n\
    }else{\n\
        result.addCheckResults(translate(\"Test Configuration Error\"), false, translate(\"{name} is missing its traffic settings\", {\n\
            name: targetName\n\
        }));\n\
    }\n\
\n\
    var datapoints = self.datapoints();\n\
    if(datapoints.length > 0){\n\
        for(var i = 0; i < datapoints.length; i++)\n\
            datapoints[i].validate(result, targetName);\n\
    }\n\
\n\
    if(self.supplementalConfiguration() != null){\n\
        self.supplementalConfiguration().validate(result, targetName);\n\
    }\n\
\n\
    return result;\n\
};\n\
\n\
\n\
TrafficPlayerViewModel.prototype.canAcceptPlaylist = function (playlist) {\n\
    return this.delegate.canAcceptPlaylist(playlist);\n\
};\n\
\n\
\n\
\n\
\n\
TrafficPlayerViewModel.prototype.canAcceptTrack = function (track) {\n\
    return this.delegate.canAcceptTrack(track);\n\
};\n\
\n\
/**\n\
 * @param src TestTransmitReceiveConfigViewModel\n\
 * @param dst TestTransmitReceiveConfigViewModel\n\
 * @return {boolean}\n\
 */\n\
TrafficPlayerViewModel.prototype.same_device_port_and_vlans = function (src, dst) {\n\
    return src.device_id() == dst.device_id()\n\
        && src.selectedPort() == dst.selectedPort()\n\
        && src.vlanLabel() == dst.vlanLabel();\n\
};\n\
\n\
TrafficPlayerViewModel.prototype.get_supported_layers = function () {\n\
    var self = this;\n\
\n\
    if(self.testConfigVm && self.testConfigVm.attributes && self.testConfigVm.attributes.supported_layers){\n\
        return self.testConfigVm.attributes.supported_layers;\n\
    }\n\
    else{\n\
        return [2,7];\n\
    }\n\
};//@ sourceURL=traffic-player-view-model/index.js"
));
require.register("traffic-player-view-model/delegates/unicast.js", Function("exports, require, module",
"function UnicastTrafficPlayerDelegate(parent) {\n\
    this.parent = parent;\n\
}\n\
\n\
UnicastTrafficPlayerDelegate.prototype.inflate = function (data) {\n\
    var parent = this.parent,\n\
        source = new window.TestTransmitReceiveConfigViewModel(parent.testConfigVm),\n\
        destination = new window.TestTransmitReceiveConfigViewModel(parent.testConfigVm);\n\
\n\
    // Source\n\
    source.trafficPlayer = parent;\n\
    source.txRxLabel('Tx');\n\
    parent.source(source);\n\
    parent.source().inflate(data.source);\n\
\n\
    // Destination\n\
    destination.txRxLabel('Rx');\n\
    destination.trafficPlayer = parent;\n\
    parent.destination(destination);\n\
    parent.destination().inflate(data.destination);\n\
};\n\
\n\
UnicastTrafficPlayerDelegate.prototype.toFlatObject = function (obj) {\n\
    return obj;\n\
};\n\
UnicastTrafficPlayerDelegate.prototype.validate = function () {};\n\
\n\
UnicastTrafficPlayerDelegate.prototype.canAcceptPlaylist = function (playlist) {\n\
    var self = this,\n\
        supported_layers = self.parent.get_supported_layers();\n\
\n\
    return playlist.tracks().every(function (track) {\n\
        var accapted_player_types = track().attributes.player_types || ['unicast'];\n\
        return supported_layers.indexOf(track().layer()) > -1 && accapted_player_types.indexOf('unicast') > -1;\n\
    });\n\
};\n\
\n\
UnicastTrafficPlayerDelegate.prototype.canAcceptTrack = function (track) {\n\
    return track.attributes.player_types.indexOf('unicast') > -1;\n\
};\n\
\n\
module.exports = UnicastTrafficPlayerDelegate;//@ sourceURL=traffic-player-view-model/delegates/unicast.js"
));
require.register("traffic-player-view-model/delegates/multicast.js", Function("exports, require, module",
"var DeviceCollectionViewModel = require('device-collection-view-model'),\n\
    MulticastSettingsViewModel = require('multicast-settings');\n\
\n\
function MulticastTrafficPlayerDelegate(parent) {\n\
    this.parent = parent;\n\
    this.multicast_settings = undefined;\n\
}\n\
\n\
MulticastTrafficPlayerDelegate.prototype.inflate = function (data) {\n\
    var parent = this.parent,\n\
        source = new window.TestTransmitReceiveConfigViewModel(parent.testConfigVm),\n\
        destination = new DeviceCollectionViewModel(parent.testConfigVm, true);\n\
\n\
    // Source\n\
    source.trafficPlayer = parent;\n\
    source.txRxLabel('Tx');\n\
    parent.source(source);\n\
\n\
    // Destination\n\
    destination.txRxLabel('Rx');\n\
    destination.trafficPlayer = parent;\n\
    parent.destination(destination);\n\
    parent.source().inflate(data.source);\n\
    parent.destination().inflate(data.destination);\n\
\n\
    // Settings\n\
    this.multicast_settings = new MulticastSettingsViewModel(data.multicast_settings);\n\
    this.multicast_settings.inflate(data.multicast_settings);\n\
    parent.multicast_settings = this.multicast_settings;\n\
};\n\
\n\
MulticastTrafficPlayerDelegate.prototype.toFlatObject = function (obj) {\n\
    obj.supplemental_configuration = obj.supplemental_configuration || {};\n\
    obj.supplemental_configuration.multicast_settings = this.multicast_settings.toFlatObject();\n\
\n\
    return obj;\n\
};\n\
\n\
MulticastTrafficPlayerDelegate.prototype.validate = function () {};\n\
\n\
MulticastTrafficPlayerDelegate.prototype.canAcceptPlaylist = function (playlist) {\n\
    var self = this,\n\
        supported_layers = self.parent.get_supported_layers();\n\
\n\
    return playlist.tracks().every(function (track) {\n\
        var accapted_player_types = track().attributes.player_types || ['unicast'];\n\
        return supported_layers.indexOf(track().layer()) > -1 && accapted_player_types.indexOf('multicast') > -1;\n\
    });\n\
};\n\
\n\
MulticastTrafficPlayerDelegate.prototype.canAcceptTrack = function (track) {\n\
    return track.attributes.player_types.indexOf('multicast') > -1;\n\
};\n\
\n\
module.exports = MulticastTrafficPlayerDelegate;//@ sourceURL=traffic-player-view-model/delegates/multicast.js"
));
require.register("transmit-receive-view-model/index.js", Function("exports, require, module",
"/*global ko:true, EndpointViewModel:true */\n\
\n\
var noop = function () {},\n\
    util = require('utility-functions'),\n\
    domify = require('domify'),\n\
    template = domify(require('./template.js')),\n\
    EndpointViewModel = require('endpoint-view-model'),\n\
    mobile = {\n\
        isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|windows phone/i.test(navigator.userAgent)\n\
    },\n\
    emitter = require('emitter');\n\
\n\
/**\n\
 * Manages Tx or Rx configuration for a traffic player when only a single device\n\
 * is supported. When Tx or Rx supports multiple devices,\n\
 * DeviceCollectionViewModel is used (e.g. clients list of multicast player).\n\
 *\n\
 * @param testConfigVm\n\
 * @constructor\n\
 */\n\
function TestTransmitReceiveConfigViewModel(testConfigVm) {\n\
    var self = this;\n\
    self.testConfigVm = testConfigVm;\n\
    self.testVm = testConfigVm.testVm;\n\
    self.rootVm = testConfigVm.rootVm;\n\
\n\
    self.previousDevice = undefined;\n\
    self.device = ko.observable();\n\
    self.device_id = ko.computed(function () {\n\
        if (self.device() === undefined) {\n\
            return undefined;\n\
        }\n\
\n\
        return self.device().id();\n\
    });\n\
\n\
    self.device.subscribe(self.onDeviceChange.bind(self));\n\
\n\
    self.selectedPort = ko.observable();\n\
    self.devicePorts = ko.observableArray();\n\
\n\
    self.vlan = ko.observable();\n\
    self.networks = ko.observableArray();\n\
\n\
    self.endpoint = ko.observable(new EndpointViewModel(testConfigVm.rootVm));\n\
\n\
    self.trafficPlayer = null;\n\
\n\
    self.deviceName = ko.computed(self.computeDeviceName.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.showNoIpInfo = ko.computed(self.computeShowNoIpInfo.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.showIpInfo = ko.computed(self.computeShowIpInfo.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.showSelectAPort = ko.computed(self.computeShowSelectAPort.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.showEndpointConfiguration = ko.computed(self.computeShowEndpointConfiguration.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.portLabel = ko.computed(self.computePortLabel.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.endpointLabel = ko.computed(self.computeEndpointLabel.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.vlanLabel = ko.computed(self.computeVlanLabel.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.ipLabel = ko.computed(self.computeIpLabel.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.ipDetails = ko.computed(self.computeIpDetails.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
    self.lineRate = ko.computed(self.computeLineRate.bind(self));\n\
\n\
    self.txRxLabel = ko.observable();\n\
    self.txRxLabelFormatted = ko.computed(function() {\n\
        return translate(self.txRxLabel());\n\
    });\n\
\n\
    self.strings = {\n\
        'Checking port status ...': translate('Checking port status ...')\n\
    };\n\
}\n\
\n\
emitter(TestTransmitReceiveConfigViewModel.prototype);\n\
\n\
module.exports = TestTransmitReceiveConfigViewModel;\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.render = function () {\n\
    var render_endpoint = this.render_endpoint.bind(this),\n\
        endpoint_changed = function(endpoint) {\n\
            if (endpoint) {\n\
                render_endpoint(endpoint);\n\
            }\n\
        };\n\
\n\
    this.$el = template.cloneNode(true);\n\
\n\
    this.$el.querySelector('.port-container .loading').innerHTML = this.strings['Checking port status ...'];\n\
\n\
    this.bind();\n\
\n\
    if (this.endpoint()) {\n\
        render_endpoint(this.endpoint());\n\
    }\n\
\n\
    this.endpoint.subscribe(endpoint_changed);\n\
\n\
    window.view1 = this;\n\
\n\
    return this.$el;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.render_endpoint = function (endpoint) {\n\
    var $endpoint,\n\
        $endpoint_container = this.$el.querySelector('.endpoint-container');\n\
\n\
    $endpoint_container.innerHTML = '';\n\
    $endpoint = endpoint.render();\n\
    $endpoint_container.appendChild($endpoint);\n\
    endpoint.bind();\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.bind = function () {\n\
    ko.applyBindings(this, this.$el);\n\
    this.makeDroppable();\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.get_device_id = function () {\n\
    var device = this.device();\n\
\n\
    if (device && device.id()) {\n\
        return device.id();\n\
    }\n\
\n\
    return null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.makeDroppable = function () {\n\
    var set_endpoint = this.endpoint;\n\
    var draggableClass = mobile.isMobile ? 'draggableIcon' : 'endpoint';\n\
\n\
    $(this.$el).droppable({\n\
        drop: function (event, ui) {\n\
            if (ui.draggable.hasClass(draggableClass)) {\n\
                var endpoint = ui.helper.data('endpoint');\n\
\n\
                if (endpoint) {\n\
                    endpoint = endpoint.clone();\n\
                    set_endpoint(endpoint);\n\
                }\n\
\n\
            }\n\
        },\n\
        accept: '.' + draggableClass\n\
    });\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.typesafe = function (that) {\n\
    if (!(that instanceof TestTransmitReceiveConfigViewModel)) {\n\
        throw 'This method must be executed on a TestTransmitReceiveConfigViewModel';\n\
    }\n\
\n\
    return that;\n\
};\n\
TestTransmitReceiveConfigViewModel.prototype.inflate = function (data) {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this),\n\
        device;\n\
\n\
    if (!data) {\n\
        // Use first device as default\n\
        device = self.rootVm.availableDevices()[0];\n\
        self.device(device);\n\
        return; // Short circuit\n\
    }\n\
\n\
    device = ko.utils.arrayFirst(self.rootVm.availableDevices(), function (item) { return item.id() == data.device.id; });\n\
\n\
    self.device(device);\n\
\n\
    self.selectPort(data.port, true);\n\
\n\
    if (!self.endpoint()) {\n\
        self.endpoint(new EndpointViewModel(data.endpoint));\n\
    }\n\
    self.endpoint().inflate(data.endpoint);\n\
    self.vlan(data.vlan);\n\
};\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowSelectAPort = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.selectedPort() == null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowEndpointConfiguration = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.selectedPort() != null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeDeviceName = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    if (self.device() == null) {\n\
        return null;\n\
    }\n\
\n\
    return self.device().name();\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowVlan = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    if (self.endpoint() == null) {\n\
        return false;\n\
    }\n\
\n\
    return self.endpoint().vlan_id() != null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowNoIpInfo = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.endpoint() == null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowIpInfo = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.endpoint() != null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowNoVlan = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    if (self.endpoint() == null) {\n\
        return false;\n\
    }\n\
\n\
    return self.endpoint().vlan_id() == null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowEndpoint = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.endpoint() != null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowNoEndpoint = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.endpoint() == null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computePortLabel = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    var port = self.selectedPort();\n\
    if (port == null) {\n\
        return translate('No Port');\n\
    }\n\
\n\
    return translate('Port {port}', {\n\
        port: port\n\
    });\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeEndpointLabel = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    var endpoint = self.endpoint();\n\
    if (endpoint == null) {\n\
        return translate('No Endpoint');\n\
    }\n\
\n\
    return endpoint.name();\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeVlanLabel = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    var endpoint = self.endpoint();\n\
    if (endpoint == null) {\n\
        return translate('No Vlan');\n\
    }\n\
\n\
    var vlan = endpoint.vlan_id();\n\
    if (vlan == null) {\n\
        return translate('No Vlan');\n\
    }\n\
\n\
    return vlan;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeIpLabel = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    var endpoint = self.endpoint();\n\
    if (endpoint == null) {\n\
        return translate('No IP Info');\n\
    }\n\
\n\
    return translate('IP Details');\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeIpDetails = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    var endpoint = self.endpoint();\n\
    if (endpoint == null) {\n\
        return translate('No IP Details');\n\
    }\n\
\n\
    return translate('Starting IP: {startingIp}, Ending IP: {endingIp}', {\n\
        startingIp: endpoint.ip(),\n\
        endingIp: endpoint.end_ip()\n\
    });\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeLineRate = function () {\n\
    var index = this.selectedPort(),\n\
        device = this.device();\n\
\n\
    if (null == index || undefined === device) {\n\
        // No device loaded or port is not selected, so line rate is undefined\n\
        return null; // Short-circuit\n\
    }\n\
\n\
    return device.lineRate(index);\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowPort = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.selectedPort() != null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeShowNoPort = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.selectedPort() == null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeHasDevice = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.device() != null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.computeNoDevice = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return self.device() == null;\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.portIdInUse = function (id) {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    if (self.trafficPlayer == null) {\n\
        return false;\n\
    }\n\
\n\
    if (self.selectedPort() == id) {\n\
        return true;\n\
    } else {\n\
        return false\n\
    }\n\
\n\
    //return self.trafficPlayer.portIdInUse(id);\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.networkMapUsingSameDevice = function () {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    if (self.trafficPlayer == null) {\n\
        return false;\n\
    }\n\
\n\
    return self.trafficPlayer.usingSameDevice();\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.onDeviceChange = function (device) {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this),\n\
        ports = self.device().ports();\n\
\n\
    if (device.id) {\n\
        logger.debug('Device changed to ' + device.id());\n\
    }\n\
\n\
    self.selectedPort(null);\n\
    self.endpoint(null);\n\
    self.devicePorts(ports);\n\
\n\
    // Emit an event only if device is has changed\n\
    if (device.id && self.previousDevice !== device.id()) {\n\
        self.previousDevice = self.device().id();\n\
        self.emit('changed:device', device);\n\
    }\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.selectPort = function (portIndex, initialInflate) {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this),\n\
        endpoint = new EndpointViewModel(self.rootVm);\n\
\n\
    if (initialInflate) {\n\
        self.selectedPort(portIndex);\n\
        self.endpoint(endpoint);\n\
    } else {\n\
        self.selectedPort(portIndex);\n\
        if (!self.endpoint()) {\n\
            self.endpoint(endpoint);\n\
        } else {\n\
            self.endpoint(self.endpoint());\n\
        }\n\
    }\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.isPortSelected = function (id) {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return ko.computed(function () {\n\
        return self.selectedPort() === id;\n\
    });\n\
};\n\
\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.isPortAvailable = function (port) {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return ko.computed(function () {\n\
        return port.available() && self.selectedPort() !== port.id();\n\
    });\n\
};\n\
\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.isPortUnavailable = function (port) {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    return ko.computed(function () {\n\
        return !port.available() && self.selectedPort() !== port.id();\n\
    });\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.validate = function (result, targetName) {\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    if (self.selectedPort() == null) {\n\
        result.addCheckResults(translate(\"Test Configuration Error\"), false, translate(\"{name} is missing a port selection\", {\n\
            name: targetName\n\
        }));\n\
    } else { // if port is selected, make sure the end point is configured\n\
        var reqestedBandwidth = parseInt(self.trafficPlayer.traffic_setting().value());\n\
        var ports = self.device().ports();\n\
        var selected_port;\n\
        ports.forEach(function(port) {\n\
            if (port.id() === self.selectedPort()) {\n\
                selected_port = port;\n\
            }\n\
        });\n\
        var portLineSpeed = selected_port.line_speed();\n\
        if (!isNaN(reqestedBandwidth) && portLineSpeed != null) {\n\
            if (reqestedBandwidth > portLineSpeed) {\n\
                result.addCheckResults(translate(\"Test Configuration Error\"), false,\n\
                    translate(\"{name} bandwidth '{bandwidth} Mbps' exceeds link capacity '{capacity} Mbps' on port {port}\", {\n\
                        name: targetName,\n\
                        bandwidth: reqestedBandwidth,\n\
                        capacity: portLineSpeed,\n\
                        port: self.selectedPort().toString()\n\
                    }));\n\
            }\n\
        }\n\
        if (self.endpoint() != null) {\n\
            self.endpoint().validate(result, targetName);\n\
            currentTrack = self.trafficPlayer.currentPlaylist.tracks();\n\
            if (self.endpoint().use_dhcp() == \"v6\" && currentTrack.length > 0) {\n\
                for (var i = 0; i < currentTrack.length; i++) {\n\
                    if (currentTrack[i]().trackTypeId == 1 || currentTrack[i]().trackObject == \"FixedFrameLengthTrack\") {\n\
                        engineCount = currentTrack[i]().trackProperties().length;\n\
                        for (var j = 0; j < engineCount; j++) {\n\
                            if (currentTrack[i]().trackProperties()[j].engine_model().name == \"frame_length\") {\n\
                                if (currentTrack[i]().trackProperties()[j].engine_model().value[0] == 64) {\n\
                                    result.addCheckResults(translate(\"Test Configuration Error\"), false,\n\
                                        translate(\"{name} endpoint does not support 64 Byte Frames on DHCPv6\", {\n\
                                            name: targetName\n\
                                        }));\n\
                                }\n\
                            }\n\
                        }\n\
                    }\n\
                }\n\
            }\n\
        } else {\n\
            result.addCheckResults(translate(\"Test Configuration Error\"), false,\n\
                translate(\"{name} endpoint has not been configured\", {\n\
                    name: targetName\n\
                }));\n\
        }\n\
    }\n\
};\n\
\n\
TestTransmitReceiveConfigViewModel.prototype.toFlatObject = function(){\n\
    var self = TestTransmitReceiveConfigViewModel.typesafe(this);\n\
\n\
    var flatConfig = {\n\
        device : self.device() ? self.device().toFlatObject() : {},\n\
        vlan : self.vlan(),\n\
        networks : self.networks(),\n\
        endpoint : self.endpoint() ? self.endpoint().toFlatObject() : {},\n\
        port: self.selectedPort()\n\
    };\n\
\n\
    flatConfig.devicePorts = new Array();\n\
    if (self.device()) {\n\
        var devicePorts = self.device().ports();\n\
        for (var i = 0; i < devicePorts.length; i++) {\n\
            flatConfig.devicePorts.push(devicePorts[i].toFlatObject());\n\
        }\n\
    }\n\
\n\
    var networks = self.networks();\n\
    for (var i = 0; i < networks.length; i++) {\n\
        flatConfig.networks.push(networks[i]);\n\
    }\n\
    return flatConfig;\n\
};//@ sourceURL=transmit-receive-view-model/index.js"
));
require.register("transmit-receive-view-model/template.js", Function("exports, require, module",
"module.exports = '<ul class=\"transmit-receive\">\\n\
    <li class=\"device-container\">\\n\
        <div class=\"aluminum-select\">\\n\
            <span data-bind=\"text: deviceName\"></span>\\n\
            <select data-bind=\"options: rootVm.availableDevices, value: device, optionsText: \\'name\\'\"></select>\\n\
        </div>\\n\
        <span class=\"tx-rx-label\" data-bind=\"text: txRxLabelFormatted\"></span>\\n\
    </li>\\n\
\\n\
    <li class=\"timing\">\\n\
        <p data-bind=\"attr: { \\'class\\' : \\'sync \\' + device().timeSyncClass() }, text: device().displayTimeSyncResolution\"></p>\\n\
    </li>\\n\
\\n\
    <li class=\"port-container\">\\n\
        <span data-bind=\"visible: device().updating_port_status\" class=\"loading\">Checking port status ...</span>\\n\
        <ul data-bind=\"foreach: device().ports()\" class=\"ports\">\\n\
            <li class=\"port-and-status\">\\n\
                <div class=\"port-status\" data-bind=\"attr: { \\'data-title\\': portLightTooltips }, tooltip: portLightTooltips\">\\n\
                    <span class=\"tooltip\" style=\"display: none;\" data-bind=\"text: portLightTooltips\"></span>\\n\
                    <div data-bind=\"attr: { \\'class\\': portLight1StatusClass }\"></div>\\n\
                    <div data-bind=\"attr: { \\'class\\': portLight2StatusClass }\"></div>\\n\
                </div>\\n\
                <div data-bind=\"visible: $parent.isPortSelected(id())\" class=\"selected-port\"></div>\\n\
\\n\
                <div data-bind=\"visible: $parent.isPortAvailable($data), click: function(data, event) { $parent.selectPort(id()); }\" class=\"available-port\"></div>\\n\
\\n\
                <div data-bind=\"visible: $parent.isPortUnavailable($data), attr: {\\'class\\': allocated_to}, css: {\\'unavailable-port\\': true}\" class=\"unavailable-port\"></div>\\n\
            </li>\\n\
        </ul>\\n\
        <div class=\"clear\"></div>\\n\
    </li>\\n\
\\n\
    <!--<li data-bind=\"visible: showSelectAPort\" class=\"instructions\">-->\\n\
    <!--Select a port to start configuring <span data-bind=\"text: txRxLabel\"></span> on this device-->\\n\
    <!--</li>-->\\n\
\\n\
    <li class=\"endpoint-container\" data-bind=\"visible: showEndpointConfiguration\"></li>\\n\
</ul>';//@ sourceURL=transmit-receive-view-model/template.js"
));
require.register("endpoint-view-model/index.js", Function("exports, require, module",
"/*global ko:true, translate:true */\n\
\n\
var noop = function () {},\n\
    util = require('utility-functions'),\n\
    domify = require('domify'),\n\
    event = require('event'),\n\
    validate = require('validate-form'),\n\
    is_ip = require('is-ip-address'),\n\
    classes = require('classes');\n\
\n\
// Validation functions\n\
function greater_than(limit) {\n\
    return function (subject) { return subject > limit; };\n\
}\n\
\n\
function less_than(limit) {\n\
    return function (subject) { return subject < limit; };\n\
}\n\
\n\
function less_than_or_equal(limit) {\n\
    return function (subject) { return subject <= limit; };\n\
}\n\
\n\
function EndpointViewModel(rootVm) {\n\
    var self = this;\n\
\n\
    self.rootVm = rootVm;\n\
\n\
    self.id = ko.observable(0);\n\
    self.name = ko.observable();\n\
    self.tagged = ko.observable(false);\n\
    self.use_dhcp = ko.observable(false);\n\
    self.dhcp_hosts = ko.observable(20);\n\
\n\
    self.vlan_id = ko.observable();\n\
    self.ip = ko.observable();\n\
    self.end_ip = ko.observable();\n\
    self.prefix = ko.observable();\n\
    self.gateway = ko.observable();\n\
\n\
    self.customer = ko.observable();\n\
    self.location = ko.observable();\n\
    self.tags = ko.observableArray();\n\
    self.unqualifiedTags = ko.observable();\n\
    self.favorite = ko.observable();\n\
\n\
    self.displayTags = ko.computed({\n\
        read: self.displayTagsRead.bind(self),\n\
        write: self.displayTagsWrite.bind(self)\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.useDhcpOrDhcpV6Text = ko.computed(function () {\n\
        if (self.use_dhcp()) {\n\
            return translate('Yes');\n\
        }\n\
\n\
        return translate('No');\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.taggedText = ko.computed(function () {\n\
        if (self.tagged()) {\n\
            return translate('Yes');\n\
        }\n\
\n\
        return translate('No');\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.basicTabClass = ko.computed(function () {\n\
        return self.tagged() ? null : 'selected';\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.taggedTabClass = ko.computed(function () {\n\
        return self.tagged() ? 'selected' : null;\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.showDhcpHosts = ko.computed(self.computeShowDhcpHosts.bind(self)).extend({ throttle: self.rootVm.defaultThrottleDuration });\n\
\n\
    self.strings = {\n\
        \"Field is required\": translate(\"Field is required\"),\n\
        \"Must be less than 4,096\": translate(\"Must be less than 4,096\"),\n\
        \"Must be an IP address\": translate(\"Must be an IP address\"),\n\
        \"Must be greater than 0\": translate(\"Must be greater than 0\"),\n\
        \"Must be less than 128\": translate(\"Must be less than 128\"),\n\
        \"Must be less than or equal to 512\": translate(\"Must be less than or equal to 512\"),\n\
        \"Must be an integer\": translate(\"Must be an integer\"),\n\
        \"An endpoint already exists with this name\": translate(\"An endpoint already exists with this name\"),\n\
        \"Save\": translate(\"Save\"),\n\
        \"Update\": translate(\"Update\")\n\
    };\n\
}\n\
\n\
module.exports = EndpointViewModel;\n\
\n\
EndpointViewModel.prototype.is_new = function () {\n\
    return !this.id();\n\
};\n\
\n\
EndpointViewModel.prototype.render = function () {\n\
    var template = document.querySelector('#endpoint-template').innerHTML;\n\
\n\
    this.$el = domify(template);\n\
    this.renderForm(this.$el);\n\
\n\
    return this.$el;\n\
};\n\
\n\
EndpointViewModel.prototype.bind = function () {\n\
    var $save = this.$el.querySelector('.save a'),\n\
        show_save_dialog = this.openSaveModal.bind(this),\n\
        $form = this.$el.querySelector('.form');\n\
\n\
    ko.applyBindings(this, this.$el);\n\
\n\
    event.bind($save, 'click', show_save_dialog);\n\
\n\
    this.bindForm($form);\n\
};\n\
\n\
EndpointViewModel.prototype.renderForm = function ($form) {\n\
    var static_ip_fields = ['ip', 'end_ip', 'prefix', 'gateway'],\n\
        $el,\n\
        observable,\n\
        $save_header = $form.querySelector('.save-header'),\n\
        $save_button;\n\
\n\
    // Set static IP values\n\
    static_ip_fields.forEach(function (field) {\n\
        $el = $form.querySelector('.' + field + ' input');\n\
        observable = this[field];\n\
        $el.value = observable() || '';\n\
    }, this);\n\
\n\
    this.setAddressingScheme($form, this.use_dhcp());\n\
\n\
    if ($save_header) {\n\
        $save_button = $save_header.querySelector('.save');\n\
\n\
        classes($save_header).remove('update');\n\
\n\
        $save_button.innerHTML = this.strings[\"Save\"];\n\
        if (!this.is_new()) {\n\
            classes($save_header).add('update');\n\
        }\n\
    }\n\
};\n\
\n\
EndpointViewModel.prototype.bindForm = function ($form) {\n\
    var $radios = $form.querySelectorAll('.selector > input[type=\"radio\"]'),\n\
        scheme,\n\
        set_scheme = this.use_dhcp,\n\
        scheme_changed = function (scheme) {\n\
            scheme = scheme === 'false' ? false : scheme;\n\
            set_scheme(scheme);\n\
        };\n\
\n\
    // DOM -> data\n\
    [].forEach.call($radios, function ($radio) {\n\
        scheme = $radio.value;\n\
        event.bind($radio, 'change', scheme_changed.bind(this, scheme));\n\
    }, this);\n\
\n\
    // Data -> DOM\n\
    set_scheme.subscribe(this.setAddressingScheme.bind(this, $form));\n\
\n\
    this.bindStaticIPHandlers($form);\n\
    this.bindDHCPHandlers($form);\n\
};\n\
\n\
EndpointViewModel.prototype.bindModal = function ($el) {\n\
    var $save = $el.querySelector('.save'),\n\
        save = this.save.bind(this),\n\
        save_if_valid = function (err, valid, msg) {\n\
            if (valid) {\n\
                save();\n\
            }\n\
        },\n\
        validate = this.validate.bind(this, save_if_valid),\n\
        validate_name = this.validateName.bind(this, validate);\n\
\n\
    event.bind($save, 'click', validate_name);\n\
};\n\
\n\
EndpointViewModel.prototype.bindStaticIPHandlers = function ($form) {\n\
    var view = this,\n\
        fields = ['ip', 'end_ip', 'prefix', 'gateway'],\n\
        selector,\n\
        observable,\n\
        $field,\n\
        value,\n\
        update_observable = function (field, e) {\n\
            value = e.target.value;\n\
            field(value);\n\
        },\n\
        update_dom = function ($field, value) {\n\
            $field.value = value;\n\
        };\n\
\n\
    fields.forEach(function (field) {\n\
        observable = view[field];\n\
        selector = '.' + field + ' input';\n\
        $field = $form.querySelector('.' + field + ' input');\n\
\n\
        // DOM -> Data\n\
        event.bind($field, 'change', update_observable.bind(view, observable));\n\
\n\
        // Data -> DOM\n\
        observable.subscribe(update_dom.bind(view, $field));\n\
    });\n\
};\n\
\n\
EndpointViewModel.prototype.bindDHCPHandlers = function ($form) {\n\
    var $hosts = $form.querySelector('li.dhcp-hosts input'),\n\
        hosts = this.dhcp_hosts;\n\
\n\
    // DOM -> Data\n\
    event.bind($hosts, 'change', function () {\n\
        hosts(+this.value);\n\
    });\n\
    // Data -> DOM\n\
    $hosts.value = (this.dhcp_hosts() !== undefined && this.dhcp_hosts() !== '') ? this.dhcp_hosts() : 20;\n\
};\n\
\n\
EndpointViewModel.prototype.setAddressingScheme = function ($form, scheme) {\n\
    // Note: A scheme of 'false' denotes static IP addressing - this is historical\n\
    $form = $form || this.$el.querySelector('.form');\n\
\n\
    var hidden_selector = scheme === false ? 'li.dhcp' : 'li.static',\n\
        visible_selector = scheme === false ? 'li.static' : 'li.dhcp',\n\
        $inputs = $form.querySelectorAll('.selector > input[type=\"radio\"]'),\n\
        $hidden = $form.querySelectorAll(hidden_selector),\n\
        $visible = $form.querySelectorAll(visible_selector);\n\
\n\
    this.bindValidator($form, scheme);\n\
\n\
    [].forEach.call($inputs, function ($el) {\n\
        if ($el.value === 'false' && !scheme) {\n\
            $el.checked = true;\n\
        } else if ($el.value === scheme) {\n\
            $el.checked = true;\n\
        } else {\n\
            $el.checked = false;\n\
        }\n\
    });\n\
\n\
    [].forEach.call($hidden, function ($el) {\n\
        classes($el).add('hidden');\n\
    });\n\
\n\
    [].forEach.call($visible, function ($el) {\n\
        classes($el).remove('hidden');\n\
    });\n\
};\n\
\n\
EndpointViewModel.prototype.bindValidator = function ($form, scheme) {\n\
    if ('v4' === scheme || 'v6' === scheme) {\n\
        this.bindDHCPValidator($form);\n\
    } else {\n\
        this.bindStaticIPValidator($form);\n\
    }\n\
};\n\
\n\
EndpointViewModel.prototype.bindStaticIPValidator = function ($form) {\n\
    this.validator = validate($form)\n\
        .use(is_ip)\n\
        .on('blur')\n\
        .field('vlan_id')\n\
            .is(/^\\d+$/, this.strings[\"Must be an integer\"])\n\
            .is(greater_than(0), this.strings[\"Must be greater than 0\"])\n\
            .is(less_than(Math.pow(2, 12)), this.strings[\"Must be less than 4,096\"])\n\
        .field('starting_ip')\n\
            .is('required', this.strings[\"Field is required\"])\n\
            .is('ip', this.strings[\"Must be an IP address\"])\n\
        .field('ending_ip')\n\
            .is('ip', this.strings[\"Must be an IP address\"])\n\
        .field('prefix')\n\
            .is('required', this.strings[\"Field is required\"])\n\
            .is(greater_than(0), this.strings[\"Must be greater than 0\"])\n\
            .is(less_than(128), this.strings[\"Must be less than 128\"])\n\
        .field('gateway')\n\
            .is('required', this.strings[\"Field is required\"])\n\
            .is('ip', this.strings[\"Must be an IP address\"]);\n\
};\n\
\n\
EndpointViewModel.prototype.bindDHCPValidator = function ($form) {\n\
    this.validator = validate($form)\n\
        .use(is_ip)\n\
        .on('blur')\n\
        .field('vlan_id')\n\
            .is(/^\\d+$/, this.strings[\"Must be an integer\"])\n\
            .is(greater_than(0), this.strings[\"Must be greater than 0\"])\n\
            .is(less_than(Math.pow(2, 12)), this.strings[\"Must be less than 4,096\"])\n\
        .field('dhcp_hosts')\n\
            .is('required', this.strings[\"Field is required\"])\n\
            .is(/^\\d+$/, this.strings[\"Must be an integer\"])\n\
            .is(greater_than(0), this.strings[\"Must be greater than 0\"])\n\
            .is(less_than_or_equal(512), this.strings[\"Must be less than or equal to 512\"]);\n\
};\n\
\n\
EndpointViewModel.typesafe = function (that) {\n\
    if (!(that instanceof EndpointViewModel)) {\n\
        throw 'This method must be executed on a EndpointViewModel';\n\
    }\n\
\n\
    return that;\n\
};\n\
\n\
EndpointViewModel.prototype.matchesSearch = function (searchString) {\n\
    var self = EndpointViewModel.typesafe(this);\n\
\n\
    var searchTerms = searchString.split(' ');\n\
\n\
    if (searchTerms.length == 0) {\n\
        return true;\n\
    }\n\
\n\
    var name = self.name().toUpperCase();\n\
    var customer ='';\n\
    var location ='';\n\
    if (!self.location() == '' || !self.location() == null) {\n\
        location = self.location().toUpperCase();\n\
    }\n\
    if (!self.customer() == '' || !self.customer() == null) {\n\
        customer = self.customer().toUpperCase();\n\
    }\n\
\n\
    for (var i = 0; i < searchTerms.length; i++) {\n\
        if (searchTerms[i] == '' || searchTerms[i] == null) {\n\
            continue;\n\
        }\n\
\n\
        if (name.indexOf(searchTerms[i].toUpperCase()) == -1\n\
            && customer.indexOf(searchTerms[i].toUpperCase()) == -1\n\
            && location.indexOf(searchTerms[i].toUpperCase()) == -1) {\n\
            return false;\n\
        }\n\
    }\n\
\n\
    return true;\n\
};\n\
\n\
/**\n\
 *\n\
 * @param result {ValidationResultsViewModel|callback}\n\
 * @param targetName optional if using callback for first parameter\n\
 */\n\
EndpointViewModel.prototype.validate = function (result, targetName) {\n\
    var callback;\n\
\n\
    if (result instanceof ValidationResultsViewModel) {\n\
        this.validator.validate(function (err, valid) {\n\
            var message = translate('{name} endpoint is invalid', {name: targetName});\n\
\n\
            if (!valid) {\n\
                result.addCheckResults(message, false, message);\n\
            }\n\
        });\n\
    } else {\n\
        callback = result;\n\
        this.validator.validate(callback);\n\
    }\n\
}\n\
\n\
EndpointViewModel.prototype.validateName = function (callback) {\n\
    var self = EndpointViewModel.typesafe(this),\n\
        $form = document.querySelector('#lightbox-save-endpoint'),\n\
        existing,\n\
        is_unique = function (name) {\n\
            // Check if an endpoint with same name exists (and is not self)\n\
            existing = ko.utils.arrayFirst(self.rootVm.availableEndpoints(), function (item) {\n\
                return name == item.name() && self.id() != item.id();\n\
            });\n\
\n\
            return existing === null || existing.id() === self.id(); //existing === null --> create, existing.id() === self.id()--> update\n\
        },\n\
        validation_handler = function(err, valid, msg) {\n\
            if (valid) {\n\
                callback();\n\
            }\n\
        };\n\
\n\
    validate($form).on('blur')\n\
        .field('name')\n\
            .is('required', self.strings['Field is required'])\n\
            .is(is_unique, self.strings['An endpoint already exists with this name'])\n\
        .validate(validation_handler);\n\
};\n\
\n\
EndpointViewModel.prototype.computeShowDhcpHosts = function () {\n\
    return !!this.use_dhcp();\n\
};\n\
\n\
EndpointViewModel.prototype.inflate = function (endpoint) {\n\
    var self = EndpointViewModel.typesafe(this);\n\
\n\
    if(endpoint.id)\n\
        self.id(endpoint.id);\n\
\n\
    if(endpoint.name)\n\
        self.name(endpoint.name);\n\
    else if (!util.isNullOrEmpty(endpoint.vlan_id))\n\
        self.name(endpoint.vlan_id);\n\
    else if (!endpoint.use_dhcp)\n\
        self.name(endpoint.ip);\n\
    else\n\
        self.name(translate(\"DHCP\"));\n\
\n\
    self.tagged(endpoint.tagged);\n\
    self.use_dhcp(endpoint.use_dhcp === 'false' ? false : endpoint.use_dhcp);\n\
    self.dhcp_hosts(+endpoint.dhcp_hosts);\n\
    if (typeof(endpoint.vlan_id) != \"undefined\" && endpoint.vlan_id != null) {\n\
        self.vlan_id(endpoint.vlan_id.toString());\n\
    }\n\
    self.ip(endpoint.ip);\n\
    self.end_ip(endpoint.end_ip);\n\
    self.prefix(endpoint.prefix);\n\
    self.gateway(endpoint.gateway);\n\
\n\
    util.setTags(self, endpoint.tags);\n\
\n\
    return self;\n\
};\n\
\n\
EndpointViewModel.prototype.clone = function() {\n\
    var data = this.toFlatObject(),\n\
        endpoint;\n\
\n\
    data.id = undefined;\n\
    endpoint = new EndpointViewModel(this.rootVm);\n\
    return endpoint.inflate(data);\n\
};\n\
\n\
EndpointViewModel.prototype.deleteEndpoint = function(){\n\
    var self = EndpointViewModel.typesafe(this);\n\
\n\
    util.lightbox.close();\n\
\n\
    var workingVm = new LightboxWorkingViewModel(translate('Delete'), translate('Deleting...'));\n\
    util.lightbox.working(workingVm);\n\
    var id = self.id();\n\
\n\
    var data = {\n\
        id : id\n\
    };\n\
\n\
    $.ajax({\n\
        type : util.getRequestMethod('delete_endpoint'),\n\
        url : util.getConfigSetting('delete_endpoint'),\n\
        data : JSON.stringify(data),\n\
        dataType : \"json\",\n\
        success: function (data, textStatus, jqXhr) {\n\
            var message = data.messages[0];\n\
            if(!message.is_error && message.header == \"Success\"){\n\
                var callbackFunction = function(){workingVm.status(\"success\");};\n\
                self.rootVm.getAvailableEndpoints(callbackFunction);\n\
            }else{\n\
                workingVm.status(\"error\");\n\
                workingVm.close(util.lightbox.close.bind(util.lightbox));\n\
            }\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            workingVm.status('error');\n\
        }\n\
    });\n\
};\n\
\n\
EndpointViewModel.prototype.toFlatObject = function () {\n\
    var self = EndpointViewModel.typesafe(this);\n\
\n\
    var flatEndpoint = {\n\
        id: self.id(),\n\
        name: self.name() || \"\",\n\
        use_dhcp: self.use_dhcp(),\n\
        dhcp_hosts: +self.dhcp_hosts() || 20,\n\
        vlan_id: self.vlan_id() || \"\",\n\
        ip: self.ip() || \"\",\n\
        end_ip: self.end_ip() || \"\",\n\
        prefix: self.prefix() || \"\",\n\
        gateway: self.gateway() || \"\",\n\
        tags: util.getTags(self)\n\
    };\n\
\n\
    return flatEndpoint;\n\
};\n\
\n\
EndpointViewModel.prototype.save = function () {\n\
    var self = EndpointViewModel.typesafe(this);\n\
    var name = self.name();\n\
    var workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'));\n\
\n\
    self.unqualifiedTags(self.tags().join(', '));\n\
\n\
    //loop availableEndpoints[] to check if new- added endpoint exists or not\n\
    var foundExisting = ko.utils.arrayFirst(self.rootVm.availableEndpoints(), function (item) {\n\
        return name == item.name();\n\
    });\n\
    util.lightbox.close();\n\
    if(foundExisting){\n\
        workingVm = new LightboxWorkingViewModel(translate('Update'), translate('Updating...'));\n\
    }\n\
    util.lightbox.working(workingVm);\n\
    var data = self.toFlatObject();\n\
    $.ajax({\n\
        type: util.getRequestMethod('save_endpoint'),\n\
        url: util.getConfigSetting('save_endpoint'),\n\
        data: util.formatRequestData('save_endpoint', data),\n\
        dataType: 'json',\n\
        success: function (data, textStatus, jqXhr) {\n\
            if (data.result == \"SUCCESS\") {\n\
                self.id(data.items[0].id);\n\
                logger.info('Updated endpoint id: ' + data.items[0].id);\n\
                workingVm.status('success');\n\
\n\
                if (foundExisting === null) {\n\
                    self.rootVm.availableEndpoints.push(self);\n\
                }\n\
\n\
                //sort endpoints by name after adding- HungTran\n\
                self.rootVm.availableEndpoints.sort(function(a,b) {return (a.name() > b.name()) ? 1 : ((b.name() > a.name()) ? -1 : 0);} );\n\
            } else {\n\
                workingVm.status('error');\n\
                logger.error({message: 'Failed to save endpoint', data: data, textStatus: textStatus});\n\
            }\n\
        },\n\
        error: function (jqXhr, textStatus, errorThrown) {\n\
            workingVm.status('error');\n\
            logger.error(errorThrown);\n\
        }\n\
    });\n\
\n\
};\n\
\n\
EndpointViewModel.prototype.openSaveModal = function (e) {\n\
    var self = EndpointViewModel.typesafe(this),\n\
        refreshDraggables = false,\n\
        $form;\n\
\n\
    if (e && e.preventDefault !== undefined) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    util.lightbox.close();\n\
    util.lightbox.open({\n\
        url : 'html/lightbox_tmpl',\n\
        selector : '#lightbox-save-endpoint-template',\n\
        cancelSelector: '.cancel-button',\n\
        onOpenComplete: function(){\n\
            $form = document.getElementById('lightbox-save-endpoint');\n\
\n\
            if(self.id() == 0){\n\
                if(!self.use_dhcp()){\n\
                if(util.isNullOrEmpty(self.vlan_id()) && util.isNullOrEmpty(self.ip())){\n\
                   self.name('');\n\
                }\n\
                if(!util.isNullOrEmpty(self.vlan_id())){\n\
                   self.name(self.vlan_id());\n\
                }else if(!util.isNullOrEmpty(self.ip())){\n\
                   self.name(self.ip());\n\
                }\n\
                }else if(self.use_dhcp()){\n\
                    if(!util.isNullOrEmpty(self.vlan_id())){\n\
                       self.name(self.vlan_id());\n\
                    }else\n\
                       self.name(translate(\"DHCP\"));\n\
                }\n\
            }\n\
\n\
            self.startState = self.toFlatObject();\n\
            ko.applyBindings(self, $form);\n\
            self.renderForm($form);\n\
            self.bindForm($form);\n\
            self.bindModal($form);\n\
            self.inflate(self.startState); // Update modal with current state\n\
        },\n\
        onClose: function(){\n\
            if (self.name() === '') {\n\
                refreshDraggables = true;\n\
            }\n\
            self.inflate(self.startState);\n\
\n\
            if (refreshDraggables) {\n\
                self.rootVm.refreshTestDraggables();\n\
            }\n\
        }\n\
    });\n\
};\n\
\n\
EndpointViewModel.prototype.displayTagsRead = function () {\n\
    var self = EndpointViewModel.typesafe(this);\n\
    if (!self.unqualifiedTags()) {\n\
        self.unqualifiedTags(self.tags().join(', '));\n\
    }\n\
    return util.sanitizeUnqualifiedTagGroup(self.unqualifiedTags());\n\
};\n\
\n\
EndpointViewModel.prototype.displayTagsWrite = function (value) {\n\
    var self = EndpointViewModel.typesafe(this);\n\
\n\
    if (value == null) {\n\
        return;\n\
    }\n\
\n\
    var newArray = value.split(',');\n\
\n\
    self.tags.removeAll();\n\
    for (var i = 0; i < newArray.length; i++) {\n\
        var trimmedValue = util.trimTag(newArray[i]);\n\
\n\
        if (trimmedValue == '') {\n\
            continue;\n\
        }\n\
\n\
        if (self.tags().indexOf(trimmedValue) == -1) {\n\
            self.tags.push(trimmedValue);\n\
        }\n\
\n\
        if (self.rootVm.availableTags().indexOf(trimmedValue) == -1) {\n\
            self.rootVm.availableTags.push(trimmedValue);\n\
        }\n\
    }\n\
    self.unqualifiedTags(util.sanitizeUnqualifiedTagGroup(value));\n\
    self.unqualifiedTags.valueHasMutated();\n\
};//@ sourceURL=endpoint-view-model/index.js"
));
require.register("test-device-view-model/index.js", Function("exports, require, module",
"\"use strict\";\r\n\
\r\n\
var is_host = require('is-host');\r\n\
\r\n\
/**\r\n\
 * Represents a device (as a copy) in the traffic player\r\n\
 *\r\n\
 * @param rootVm SpirentEnterpriseViewModel\r\n\
 * @constructor\r\n\
 */\r\n\
function TestDeviceViewModel (rootVm) {\r\n\
    var self = this;\r\n\
    self.rootVm = rootVm;\r\n\
\r\n\
    self.id = ko.observable();\r\n\
    self.name = ko.observable();\r\n\
    self.displayNameCssId = ko.observable();\r\n\
    self.ports = ko.observableArray();\r\n\
    self.device_type_id = ko.observable();\r\n\
    self.supports_flowmon = null;\r\n\
    self.updating_port_status = ko.computed(function () {\r\n\
        if (!self.ports().length) {\r\n\
            return true; // Short-circuit\r\n\
        }\r\n\
\r\n\
        var updating = false;\r\n\
\r\n\
        self.ports().forEach(function (port) {\r\n\
            if (undefined === port.link_status()) {\r\n\
                updating = true;\r\n\
            }\r\n\
        });\r\n\
\r\n\
        return updating;\r\n\
    });\r\n\
\r\n\
    self.host = ko.observable();\r\n\
    self.hasTimeSync = ko.observable();\r\n\
    self.timeSyncResolution = ko.observable();\r\n\
\r\n\
    self.username = ko.observable();\r\n\
    self.password = ko.observable();\r\n\
\r\n\
    self.customer = ko.observable();\r\n\
    self.location = ko.observable();\r\n\
    self.tags = ko.observableArray();\r\n\
    self.unqualifiedTags = ko.observable();\r\n\
    self.favorite = ko.observable();\r\n\
    self.validationResult = ko.observable();\r\n\
\r\n\
    self.active = ko.observable(true);\r\n\
\r\n\
    self.displayTimeSyncResolution = ko.computed(function () {\r\n\
        return self.hasTimeSync() ? translate('NTP Sync OK') : translate('No NTP Sync');\r\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\r\n\
\r\n\
    self.timeSyncLabel = ko.computed(function (){\r\n\
        return self.hasTimeSync() ? translate(\"Time Sync Resolution\") : translate(\"Has Time Sync\");\r\n\
    });\r\n\
    self.timeSyncValue = ko.computed(function (){\r\n\
        return self.hasTimeSync() && self.timeSyncResolution() ? self.timeSyncResolution().toFixed(3) + translate(\"ms\") : translate(\"No\");\r\n\
    });\r\n\
\r\n\
    self.displayTags = ko.computed({\r\n\
        read: self.displayTagsRead.bind(self),\r\n\
        write: self.displayTagsWrite.bind(self)\r\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\r\n\
\r\n\
    self.name.subscribe(function () {\r\n\
        var realName = self.name();\r\n\
        realName = realName.replace(/ /g,'');\r\n\
        self.displayNameCssId(realName);\r\n\
    });\r\n\
\r\n\
    self.timeSyncClass = ko.computed(function () {\r\n\
        return self.hasTimeSync() ? 'available' : 'unavailable';\r\n\
    }).extend({ throttle: self.rootVm.defaultThrottleDuration });\r\n\
\r\n\
    self.features = ko.observableArray();\r\n\
}\r\n\
\r\n\
module.exports = TestDeviceViewModel;\r\n\
\r\n\
TestDeviceViewModel.typesafe = function (that) {\r\n\
    if (!(that instanceof TestDeviceViewModel)) {\r\n\
        throw 'This method must be executed on a TestDeviceViewModel';\r\n\
    }\r\n\
\r\n\
    return that;\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.matchesSearch = function (searchString) {\r\n\
    var self = TestDeviceViewModel.typesafe(this);\r\n\
\r\n\
    var searchTerms = searchString.split(' ');\r\n\
\r\n\
    if (searchTerms.length == 0) {\r\n\
        return true;\r\n\
    }\r\n\
\r\n\
    var name = self.name().toUpperCase();\r\n\
\r\n\
    if(name == \"LOCAL CHASSIS\"){\r\n\
        return true;\r\n\
    }\r\n\
\r\n\
    var host = self.host().toUpperCase();\r\n\
    var customer ='';\r\n\
    var location ='';\r\n\
    if (!self.location() == '' || !self.location() == null) {\r\n\
        location = self.location().toUpperCase();\r\n\
  }\r\n\
    if (!self.customer() == '' || !self.customer() == null) {\r\n\
        customer = self.customer().toUpperCase();\r\n\
  }\r\n\
\r\n\
    for (var i = 0; i < searchTerms.length; i++) {\r\n\
        if (searchTerms[i] == '' || searchTerms[i] == null) {\r\n\
            continue;\r\n\
        }\r\n\
\r\n\
        if (name.indexOf(searchTerms[i].toUpperCase()) == -1\r\n\
            && host.indexOf(searchTerms[i].toUpperCase()) == -1\r\n\
            && customer.indexOf(searchTerms[i].toUpperCase()) == -1\r\n\
            && location.indexOf(searchTerms[i].toUpperCase()) == -1) {\r\n\
            return false;\r\n\
        }\r\n\
    }\r\n\
\r\n\
    return true;\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.inflate = function (data) {\r\n\
    var self = TestDeviceViewModel.typesafe(this),\r\n\
        map = {\r\n\
            name: 'name',\r\n\
            device_type_id: 'device_type_id',\r\n\
            auth_id: 'username',\r\n\
            password: 'password',\r\n\
            has_time_sync: 'hasTimeSync',\r\n\
            time_sync_resolution: 'timeSyncResolution'\r\n\
        },\r\n\
        key,\r\n\
        observable,\r\n\
        ports = self.ports(),\r\n\
        port,\r\n\
        found;\r\n\
\r\n\
    self.id(data.id);\r\n\
\tself.host(data.host || '');\r\n\
    if (undefined !== data.supports_flowmon) {\r\n\
        self.supports_flowmon = data.supports_flowmon;\r\n\
    }\r\n\
\r\n\
    // Update properties (observables) using map\r\n\
    for (key in map) {\r\n\
        if (data[key]) {\r\n\
            observable = map[key];\r\n\
            self[observable](data[key])\r\n\
        }\r\n\
    }\r\n\
\r\n\
    if (data.tags) {\r\n\
        util.setTags(self, data.tags);\r\n\
    }\r\n\
\r\n\
    if (!self.ports().length && undefined !== data.num_ports) {\r\n\
        // Stub out ports until we have real data\r\n\
        for (var i = 0; i < data.num_ports; i++) {\r\n\
            port = new TestDevicePortViewModel(self.rootVm);\r\n\
            port.id(i+1);\r\n\
            ports.push(port);\r\n\
        }\r\n\
    } else if (undefined !== data.ports && data.ports instanceof Array) {\r\n\
        // Use real data\r\n\
        data.ports.forEach(function (port_data) {\r\n\
            found = false;\r\n\
\r\n\
            ports.forEach(function(port) {\r\n\
                if (port.id() === port_data.port) {\r\n\
                    found = true;\r\n\
                    port.inflate(port_data);\r\n\
                }\r\n\
            });\r\n\
\r\n\
            if (!found) {\r\n\
                port = new TestDevicePortViewModel(self.rootVm);\r\n\
                port.inflate(port_data);\r\n\
                ports.push(port);\r\n\
            }\r\n\
        });\r\n\
    }\r\n\
\r\n\
    // Order by port ID\r\n\
    ports.sort(function(a, b) {\r\n\
        return a.id() - b.id();\r\n\
    });\r\n\
\r\n\
    self.ports(ports);\r\n\
\r\n\
    // ENT-4739 the devices status endpoint is not consistent with device info\r\n\
    // loaded during initial page-load, and supported features should rarely\r\n\
    // change, so only update features if this data is include and truthy.\r\n\
    if (data.features) {\r\n\
        self.features(data.features);\r\n\
    }\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.toFlatObject = function () {\r\n\
    var self = TestDeviceViewModel.typesafe(this);\r\n\
    var flatDevice = {\r\n\
        id: self.id(),\r\n\
        name: self.name(),\r\n\
        device_type_id: self.device_type_id(),\r\n\
        ports: self.ports().length,\r\n\
        host: self.host(),\r\n\
        tags: util.getTags(self),\r\n\
        auth_id: self.username(),\r\n\
        password: self.password(),\r\n\
        active: self.active()\r\n\
    };\r\n\
\r\n\
    return flatDevice;\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.lineRate = function (port_index) {\r\n\
    var port;\r\n\
\r\n\
    // Get port by port_index\r\n\
    this.ports().some(function (p) {\r\n\
        if (p.id() === port_index) {\r\n\
            port = p;\r\n\
            return true; // Stop the loop\r\n\
        }\r\n\
\r\n\
        return false; // Continue\r\n\
    });\r\n\
\r\n\
    if (!port) {\r\n\
        return; // Short-circuit\r\n\
    }\r\n\
\r\n\
    return port.line_speed();\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.updateTimeSyncCapability = function (timeSyncCapabilities) {\r\n\
    var self = TestDeviceViewModel.typesafe(this);\r\n\
\r\n\
    if (timeSyncCapabilities === null\r\n\
        || timeSyncCapabilities === undefined) {\r\n\
        return;\r\n\
    }\r\n\
\r\n\
    var id = self.id();\r\n\
\r\n\
    for (var i = 0; i < timeSyncCapabilities.length; i++) {\r\n\
        if (id == timeSyncCapabilities[i].device_id) {\r\n\
            self.hasTimeSync(timeSyncCapabilities[i].has_time_sync_capability);\r\n\
            self.timeSyncResolution(timeSyncCapabilities[i].resolution);\r\n\
            return;\r\n\
        }\r\n\
    }\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.displayTagsRead = function () {\r\n\
    var self = TestDeviceViewModel.typesafe(this);\r\n\
\r\n\
    if (!self.unqualifiedTags()) {\r\n\
        self.unqualifiedTags(self.tags().join(', '));\r\n\
    }\r\n\
    return util.sanitizeUnqualifiedTagGroup(self.unqualifiedTags());\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.displayTagsWrite = function (value) {\r\n\
    var self = TestDeviceViewModel.typesafe(this);\r\n\
\r\n\
    if (value == null) {\r\n\
        return;\r\n\
    }\r\n\
\r\n\
    var newArray = value.split(',');\r\n\
\r\n\
    self.tags.removeAll();\r\n\
    for (var i = 0; i < newArray.length; i++) {\r\n\
        var trimmedValue = util.trimTag(newArray[i]);\r\n\
\r\n\
        if (trimmedValue == '') {\r\n\
            continue;\r\n\
        }\r\n\
\r\n\
        if (self.tags().indexOf(trimmedValue) == -1) {\r\n\
            self.tags.push(trimmedValue);\r\n\
        }\r\n\
\r\n\
        if (self.rootVm.availableTags().indexOf(trimmedValue) == -1) {\r\n\
            self.rootVm.availableTags.push(trimmedValue);\r\n\
        }\r\n\
    }\r\n\
    self.unqualifiedTags(util.sanitizeUnqualifiedTagGroup(value));\r\n\
    self.unqualifiedTags.valueHasMutated();\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.openSaveModal = function () {\r\n\
    var self = TestDeviceViewModel.typesafe(this);\r\n\
\r\n\
    util.lightbox.open({\r\n\
        url : 'html/lightbox_tmpl',\r\n\
        selector : '#lightbox-save-device-template',\r\n\
        cancelSelector: '.cancel-button',\r\n\
        onOpenComplete: function(){\r\n\
            self.startState = self.toFlatObject();\r\n\
            ko.applyBindings(self, document.getElementById('lightbox-save-device'));\r\n\
        },\r\n\
        onClose: function(){\r\n\
            self.inflate(self.startState);\r\n\
        }\r\n\
    });\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.validate = function (result, targetName) {\r\n\
    var self = TestDeviceViewModel.typesafe(this),\r\n\
        errors = [];\r\n\
\r\n\
    if(util.isNullOrEmpty(self.name())){\r\n\
        errors.push(translate('name'));\r\n\
    }\r\n\
    if(util.isNullOrEmpty(self.host())){\r\n\
        errors.push(translate('host'));\r\n\
    }else{\r\n\
        if(!is_host.validate(self.host())){\r\n\
            result.addCheckResults(translate(\"Device Settings\"), false, translate('{host} is not a valid hostname, IPv4, or IPv6 address', {\r\n\
                host: self.host()\r\n\
            }));\r\n\
        }\r\n\
    }\r\n\
\r\n\
    if(util.isNullOrEmpty(self.username())){\r\n\
        errors.push(translate('username'));\r\n\
    }\r\n\
\r\n\
    if(util.isNullOrEmpty(self.password())){\r\n\
        errors.push(translate('password'));\r\n\
    }\r\n\
\r\n\
    if(errors.length > 0) {\r\n\
        result.addCheckResults(translate(\"Device Settings\"), false, translate('{name} is missing configuration for: {errors}', {\r\n\
            name: targetName ? targetName + translate(\" device\"): translate(\"Device \"),\r\n\
            errors: errors.join(', ')\r\n\
        }));\r\n\
    }\r\n\
\r\n\
\r\n\
    self.rootVm.availableDevices().forEach(function(device) {\r\n\
        if (self.host() === device.host() && self.id() !== device.id()) {\r\n\
            result.addCheckResults(translate(\"Device Settings\"), false, translate('A device {name} already exists for {host}', {\r\n\
                name: device.name(),\r\n\
                host: device.host()\r\n\
            }));\r\n\
        }\r\n\
    });\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.clone = function (source) {\r\n\
    var destination = new TestDeviceViewModel(this.rootVm),\r\n\
        cloned_properties = [\r\n\
            'is_aonic',\r\n\
            'supports_flowmon'\r\n\
        ],\r\n\
        cloned_observable_properties = [\r\n\
            'id',\r\n\
            'name',\r\n\
            'ports',\r\n\
            'device_type_id',\r\n\
            'host',\r\n\
            'hasTimeSync',\r\n\
            'timeSyncResolution',\r\n\
            'username',\r\n\
            'password',\r\n\
            'customer',\r\n\
            'location',\r\n\
            'tags',\r\n\
            'unqualifiedTags',\r\n\
            'favorite',\r\n\
            'validationResult'\r\n\
        ];\r\n\
\r\n\
    source = source || this;\r\n\
\r\n\
    cloned_properties.forEach(function(property) {\r\n\
        destination[property] = source[property];\r\n\
    });\r\n\
\r\n\
    cloned_observable_properties.forEach(function(observable) {\r\n\
        destination[observable](source[observable]());\r\n\
    });\r\n\
\r\n\
    return destination;\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.save = function () {\r\n\
    var self = TestDeviceViewModel.typesafe(this),\r\n\
        previous = self.clone(),\r\n\
        validationResult,\r\n\
        foundExisting,\r\n\
        show_error = function(errorData){\r\n\
            util.lightbox.close();\r\n\
            util.lightbox.openError(errorData.messages[0].header, errorData.messages[0].content);\r\n\
        };\r\n\
\r\n\
    self.tags().length > 0 ? self.unqualifiedTags(self.tags().join(', ')) : self.unqualifiedTags(\"\");\r\n\
\r\n\
    // Validate\r\n\
    validationResult = new ValidationResultsViewModel(self);\r\n\
    self.validate(validationResult, self.name());\r\n\
    self.validationResult(validationResult);\r\n\
    if(!validationResult.is_valid){\r\n\
        return;\r\n\
    }\r\n\
\r\n\
    // Prevent duplicates\r\n\
    foundExisting = ko.utils.arrayFirst(self.rootVm.availableDevices(), function (item) {\r\n\
        return self.name() == item.name();\r\n\
    });\r\n\
    if (foundExisting && foundExisting != self) {\r\n\
        var iteration = 0;\r\n\
\r\n\
        do {\r\n\
            self.name(self.name() + ' [' + (iteration++) + ']');\r\n\
\r\n\
            foundExisting = ko.utils.arrayFirst(self.rootVm.availableDevices(), function (item) {\r\n\
                return self.name() == item.name();\r\n\
            });\r\n\
        } while (foundExisting != null && foundExisting != self);\r\n\
    }\r\n\
\r\n\
    util.lightbox.close();\r\n\
    var workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'));\r\n\
    util.lightbox.working(workingVm);\r\n\
    $.ajax({\r\n\
        type: util.getRequestMethod('save_device'),\r\n\
        url: util.getConfigSetting('save_device'),\r\n\
        data: util.formatRequestData('save_device', self.toFlatObject()),\r\n\
        dataType: 'json',\r\n\
        success: function (data, textStatus, jqXhr) {\r\n\
            if (data.result !== \"SUCCESS\" || undefined === data.items || undefined === data.items[0] || undefined === data.items[0].id) {\r\n\
                show_error(data);\r\n\
                self.name(previous.name());\r\n\
                logger.error({message: 'Failed to save device', data: data, textStatus: textStatus});\r\n\
                return;\r\n\
            }\r\n\
\r\n\
            self.id(data.items[0].id);\r\n\
\r\n\
            foundExisting = ko.utils.arrayFirst(self.rootVm.availableDevices(), function (item) {\r\n\
                return self.name() == item.name();\r\n\
            });\r\n\
            var devices = self.rootVm.availableDevices();\r\n\
            if (foundExisting === null) {\r\n\
                devices.push(self);\r\n\
                devices = util.sort_devices(devices);\r\n\
                self.rootVm.availableDevices(devices);\r\n\
            } else {\r\n\
                self.rootVm.availableDevices.remove(foundExisting);\r\n\
                devices = self.rootVm.availableDevices();\r\n\
                devices.push(self);\r\n\
                devices = util.sort_devices(devices);\r\n\
                self.rootVm.availableDevices(devices);\r\n\
            }\r\n\
\r\n\
            if (data.messages[0].header.toUpperCase() === \"WARNING\") {\r\n\
                // Show user a warning\r\n\
                show_error(data);\r\n\
            } else {\r\n\
                util.lightbox.close();\r\n\
            }\r\n\
        },\r\n\
        error: function (jqXhr, textStatus, errorThrown) {\r\n\
            self.name(previous.name());\r\n\
            workingVm.status('error');\r\n\
            logger.error(errorThrown);\r\n\
        }\r\n\
    });\r\n\
};\r\n\
\r\n\
TestDeviceViewModel.prototype.deleteDevice = function(){\r\n\
\tvar self = TestDeviceViewModel.typesafe(this);\r\n\
\r\n\
\tutil.lightbox.close();\r\n\
\r\n\
\tvar workingVm = new LightboxWorkingViewModel(translate('Delete'), translate('Deleting...'));\r\n\
    util.lightbox.working(workingVm);\r\n\
\tvar id = self.id();\r\n\
\r\n\
\tvar payload = {\r\n\
\t\tid : id\r\n\
\t};\r\n\
\r\n\
\t$.ajax({\r\n\
\t\ttype : util.getRequestMethod('delete_device'),\r\n\
\t\turl : util.getConfigSetting('delete_device'),\r\n\
\t\tdata : JSON.stringify(payload),\r\n\
\t\tdataType : \"json\",\r\n\
\t\tsuccess: function (data, textStatus, jqXhr) {\r\n\
\t\t\tvar message = data.messages[0];\r\n\
\t\t\tif(!message.is_error && message.header == \"Success\"){\r\n\
                self.rootVm.availableDevices.remove(function(item) {\r\n\
                    return item.id() === payload.id;\r\n\
                })\r\n\
                workingVm.status(\"success\");\r\n\
\t\t\t}else{\r\n\
\t\t\t\tworkingVm.status(\"error\");\r\n\
\t\t\t\tworkingVm.close(util.lightbox.close.bind(util.lightbox));\r\n\
\t\t\t}\r\n\
        },\r\n\
\t\terror: function (jqXhr, textStatus, errorThrown) {\r\n\
            workingVm.status('error');\r\n\
        }\r\n\
\t});\r\n\
};\r\n\
//@ sourceURL=test-device-view-model/index.js"
));
require.register("line-rate-message-view-model/index.js", Function("exports, require, module",
"/*global ko:true */\n\
\n\
/**\n\
 * Used to show a clickable icon informing the user Axon may be unstable when\n\
 * bandwidth is near line rate of Tx port\n\
 */\n\
function LineRateMessageViewModel() {\n\
    this.source = undefined;\n\
    this.line_speed = undefined;\n\
    this.bandwidth = undefined;\n\
    this.strings = {\n\
        \"Running a test at speeds near line-rate can result in unexpected or errant latency in the test results\": 'Running a test at speeds near line-rate can result in unexpected or errant latency in the test results. To learn more about what causes this, read <a href=\"https://support.spirentforbusiness.com/support/solutions/articles/1000060929-line-rate\" target=\"_blank\">line rate latency</a>.'\n\
    };\n\
    this.show_icon = ko.observable(false);\n\
    this.show_message = ko.observable(false);\n\
    this.message = this.strings[\"Running a test at speeds near line-rate can result in unexpected or errant latency in the test results\"];\n\
}\n\
\n\
LineRateMessageViewModel.prototype.update = function () {\n\
    var max_stable_line_rate;\n\
\n\
    if (this.line_speed && this.bandwidth) {\n\
        max_stable_line_rate = this.line_speed * 0.995; // 99.5% of line rate\n\
        if (this.bandwidth >= max_stable_line_rate) {\n\
            this.show_icon(true);\n\
            return; // Short-circuit\n\
        }\n\
    }\n\
\n\
    // Hide icon and message by default\n\
    this.show_icon(false);\n\
    this.show_message(false);\n\
};\n\
\n\
/**\n\
 * Event handler for showing/hiding line rate message tooltip\n\
 *\n\
 * @param data TestSupplementalConfigurationFieldViewModel|TestTrafficSettingViewModel\n\
 * @param e MouseEvent\n\
 * @returns {boolean}\n\
 */\n\
LineRateMessageViewModel.prototype.toggle = function (data, e) {\n\
    var self = data.lineRateVm;\n\
\n\
    if (e.target.tagName === 'A') {\n\
        // Allow hyperlinks to be followed\n\
        return true;\n\
    }\n\
\n\
    self.show_message(!self.show_message());\n\
};\n\
\n\
module.exports = LineRateMessageViewModel;\n\
//@ sourceURL=line-rate-message-view-model/index.js"
));
require.register("pulse/index.js", Function("exports, require, module",
"var domify = require('domify'),\n\
    $template = domify(require('./templates/index.js')),\n\
    classes = require('classes'),\n\
    Model = require('./models/pulse.js'),\n\
    AsyncPoller = require('async-poller'),\n\
    LoadingState = require('loading-state'),\n\
    InterfaceSelector = require('interface-selector'),\n\
    NetworkSettingsView = require('network-settings-view'),\n\
    events = require('event'),\n\
    task_status_url = util.getConfigSetting('get_task_status'),\n\
    lightbox = window.util.lightbox,\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    $license = domify(require('./templates/license.js')),\n\
    results_status_observable = window.spirentEnterpriseVm.vmTest.vmResults.status;\n\
\n\
\n\
function PulseViewModel() {\n\
    this.$orgtemp = $template.cloneNode(true);\n\
    this.$el = this.$orgtemp;\n\
    this.poller = undefined;\n\
    this.loading_state = new LoadingState(this.$el);\n\
    this.interface_selector = undefined;\n\
    this.network_settings = new NetworkSettingsView();\n\
    this.ports_observable = spirentEnterpriseVm.availableDevices()[0].ports;\n\
    this.validator = undefined;\n\
    this.port_selected = false;\n\
    this.strings = {\n\
        \"Saving\": window.translate(\"Saving\"),\n\
        \"Saving...\": window.translate('Saving...'),\n\
        \"Select a port\": window.translate(\"Select a port\"),\n\
        \"Please wait for test to finish\": window.translate(\"Please wait for test to finish\"),\n\
        \"AxonPoint desc\": window.translate(\"If you have AxonPoint devices on your network, you can enable and configure this AxonCore to participate as an AxonPulse Endpoint for TCP throughput tests. From the AxonCloud Control portal, configure your AxonPoint devices to use this AxonPulse Endpoint.\"),\n\
        \"pulse save confirmation\": window.translate(\"Saving will interrupt any tests that are currently running.\"),\n\
        \"pulse port overwrite confirmation\": window.translate(\"Reallocating this port to Pulse will stop exporting Netflow data on this port.\")\n\
    };\n\
    this.event_handlers = [];\n\
    this.$interface_selector = undefined;\n\
    this.$network_settings = undefined;\n\
//    this.init_render = true;\n\
}\n\
\n\
PulseViewModel.factory = function (done) {\n\
    var view = new PulseViewModel(),\n\
        poll = function (next) {\n\
            Model.get(function (err, model) {\n\
                if (err) {\n\
                    return done(err);\n\
                }\n\
\n\
                if (model.status() === 'loading') {\n\
                    // Continue polling\n\
                    return next();\n\
                }\n\
\n\
                view.poller.stop();\n\
                view.set_model(model);\n\
                view.render();\n\
                done(null, view);\n\
            });\n\
        };\n\
\n\
    // Poll for pulse until it's done loading\n\
    view.poller = new AsyncPoller(poll, 500);\n\
    view.poller.poll();\n\
\n\
    return view;\n\
};\n\
\n\
PulseViewModel.prototype.set_model = function (model) {\n\
    if(this.model){\n\
        this.unbind();\n\
    }\n\
\n\
    this.model = model;\n\
\n\
    if(this.interface_selector){\n\
        this.interface_selector = undefined;\n\
//        this.interface_selector.unbind();\n\
//        //this.model.interfaces(model.interfaces());\n\
//        this.interface_selector.set_models(this.model.interfaces());\n\
//         this.network_settings.hide();\n\
//        return;\n\
    }\n\
\n\
    this.interface_selector = new InterfaceSelector(model.interfaces(), this.render_interface.bind(this));\n\
};\n\
\n\
PulseViewModel.prototype.render = function () {\n\
    if (!this.model || this.model.status() === 'loading') {\n\
        this.render_loading();\n\
        return this.$el; // Short-circuit\n\
    }\n\
\n\
    if (this.model.license_status() === 'invalid') {\n\
        $lict = $license.cloneNode(true);\n\
        this.$el.parentNode.replaceChild($lict, this.$el);\n\
        this.$el = $lict;\n\
        this.loading_state.hide();\n\
        return; // Short-circuit\n\
    }\n\
\n\
//    if(!this.init_render){\n\
//        this.loading_state.hide();\n\
//        return; // Short-circuit for show()\n\
//    }\n\
\n\
//    this.init_render = false;\n\
    this.$el.parentNode.replaceChild(this.$orgtemp,this.$el);\n\
    this.$el = this.$orgtemp;\n\
\n\
    this.$el.querySelector('.desc ul li').textContent = this.strings[\"AxonPoint desc\"];\n\
\n\
    this.transitionTo(results_status_observable());\n\
    results_status_observable.subscribe(this.transitionTo.bind(this));\n\
\n\
    var $settings = this.$el.querySelector('.settings');\n\
\n\
    //this.loading_state.hide();\n\
\n\
    this.interface_selector.render();\n\
    this.network_settings.render();\n\
    this.network_settings.hide();\n\
\n\
    if(this.$interface_selector){\n\
        this.$interface_selector.parentNode.removeChild(this.$interface_selector);\n\
    }\n\
    if(this.$network_settings){\n\
        this.$network_settings.parentNode.removeChild(this.$network_settings);\n\
    }\n\
\n\
    this.$interface_selector = this.interface_selector.$el;\n\
    this.$network_settings = this.network_settings.$el;\n\
\n\
    $settings.appendChild(this.$interface_selector);\n\
    $settings.appendChild(this.$network_settings);\n\
\n\
    this.bind();\n\
    this.network_settings.bind();\n\
//    this.init_render = false;\n\
\n\
    return this.$el;\n\
};\n\
\n\
PulseViewModel.prototype.render_loading = function () {\n\
    var message = 'Loading...';\n\
    this.loading_state.set_el(this.$el);\n\
\n\
    this.loading_state.show(message);\n\
\n\
    return this.$el;\n\
};\n\
\n\
PulseViewModel.prototype.show = function () {\n\
    //after uploaded valid license, not necessary anymore, cause it poll every time when show()\n\
//    if(this.model.license_status() === 'invalid')\n\
//    {\n\
//        this.render_loading();\n\
//        this.reload();\n\
//    }\n\
\n\
    //this.syncPortsFrom();\n\
    this.render_loading();\n\
    this.reload();\n\
    //regular\n\
    classes(this.$el).remove('hidden');\n\
};\n\
\n\
PulseViewModel.prototype.reload = function () {\n\
    //try to fetch a valid licence\n\
    this.poller.poll()\n\
};\n\
\n\
PulseViewModel.prototype.hide = function () {\n\
    classes(this.$el).add('hidden');\n\
    if (this.poller.stop) {\n\
        this.poller.stop();\n\
    }\n\
};\n\
\n\
PulseViewModel.prototype.bind = function () {\n\
    var $el = this.$el,\n\
        model = this.model,\n\
        $enable = $el.querySelector('.status .enable'),\n\
        enable = model.status.bind(this.model, 'enabled'),\n\
        $disable = $el.querySelector('.status .disable'),\n\
        disable = model.status.bind(this.model, 'disabled'),\n\
        $save = $el.querySelector('.save'),\n\
        validate = this.validate.bind(this),\n\
        $settings = $el.querySelector('.settings'),\n\
        toggle_state = function () {\n\
            if (model.enabled()) {\n\
                $enable.checked = true;\n\
                $disable.checked = false;\n\
                classes($settings).remove('hidden');\n\
            } else {\n\
                $enable.checked = false;\n\
                $disable.checked = true;\n\
                classes($settings).add('hidden');\n\
            }\n\
        };\n\
\n\
    // UI -> UI\n\
    this.interface_selector.on('select', this.select_port.bind(this));\n\
\n\
\n\
    // UI -> model\n\
    this.event_handlers = [\n\
        [$enable, 'change', enable],\n\
        [$disable, 'change', disable],\n\
        [$save, 'click', validate]\n\
    ];\n\
\n\
    this.event_handlers.forEach(function (handler) {\n\
        events.bind(handler[0], handler[1], handler[2]);\n\
    });\n\
//    events.bind($enable, 'change', enable);\n\
//    events.bind($disable, 'change', disable);\n\
//    events.bind($save, 'click', validate);\n\
\n\
    // Model -> UI\n\
    model.on('change status', toggle_state);\n\
    toggle_state();\n\
};\n\
\n\
PulseViewModel.prototype.unbind = function () {\n\
    this.event_handlers.forEach(function (handler) {\n\
        events.unbind(handler[0], handler[1], handler[2]);\n\
    });\n\
};\n\
\n\
PulseViewModel.prototype.select_port = function (model) {\n\
    var self = this,\n\
        select_port_action = function () {\n\
            this.model.interfaces().forEach(function (iface) {\n\
                if (model.physical_port() === iface.physical_port()) {\n\
                    iface.enabled(true);\n\
                    iface.allocated_to('streetwise');\n\
                } else if (iface.allocated_to() === 'streetwise') {\n\
                    iface.enabled(false);\n\
                    iface.allocated_to('stc');\n\
                }\n\
            });\n\
\n\
            this.port_selected = true;\n\
            this.network_settings.unbind();\n\
            this.network_settings.set_model(model);\n\
            this.network_settings.render();\n\
            this.network_settings.bind();\n\
            this.network_settings.show();\n\
        };\n\
\n\
    if(model.allocated_to() !== 'stc' && model.allocated_to() !== 'streetwise'){\n\
        lightbox.confirmation_dialog(self,self.strings[\"pulse port overwrite confirmation\"],select_port_action);\n\
//            this.port_overwrite_confirmation(select_port_action);\n\
        return;\n\
    }\n\
\n\
    select_port_action.call(self);\n\
\n\
};\n\
\n\
PulseViewModel.prototype.render_interface = function (model, $el) {\n\
    var classed = classes($el);\n\
\n\
    classed.remove('streetwise');\n\
\n\
\n\
    if (model.allocated_to()) {\n\
        classed.add(model.allocated_to());\n\
    }\n\
\n\
    if (model.available()) {\n\
        classed.add('available');\n\
    } else {\n\
        classed.remove('available');\n\
    }\n\
\n\
    return $el;\n\
};\n\
\n\
PulseViewModel.prototype.validate = function (e) {\n\
    if (e && e.preventDefault) {\n\
        e.preventDefault();\n\
    }\n\
\n\
    // Make sure a port is selected\n\
    this.hide_select_a_port();\n\
    if(this.model.enabled()){\n\
        if (!this.port_selected) {\n\
            // Show validation error\n\
            this.show_select_a_port();\n\
            return;\n\
        }\n\
\n\
        this.network_settings.validate(this.confirm_save.bind(this));\n\
    }\n\
    else\n\
    {\n\
        this.confirm_save();\n\
    }\n\
\n\
};\n\
\n\
PulseViewModel.prototype.confirm_save = function () {\n\
    lightbox.confirmation_dialog(this,this.strings[\"pulse save confirmation\"],this.save);\n\
}\n\
\n\
PulseViewModel.prototype.save = function () {\n\
    var poll = this.pollTask.bind(this),\n\
        start_task_poller = function (nothing, response) {\n\
            poll(response.body.task_id);\n\
        },\n\
        model;\n\
\n\
    /*ignore jslint start*/\n\
    if (typeof LightboxWorkingViewModel !== 'undefined' && typeof translate === 'function') {\n\
    /*ignore jslint end*/\n\
        model = new LightboxWorkingViewModel(translate(\"Saving\"), translate('Saving...'));\n\
        lightbox.working(model);\n\
    }\n\
\n\
    this.model.save(start_task_poller);\n\
};\n\
\n\
PulseViewModel.prototype.pollTask = function (task_id) {\n\
    var self = this,\n\
        url = task_status_url + '?task_id=' + task_id,\n\
        poll = self.pollTask.bind(self, task_id),\n\
        workingVm;\n\
\n\
    request.get(url)\n\
        .use(no_cache)\n\
        .end(function (res) {\n\
            if ('running' === res.body.status) {\n\
                // Keep polling\n\
                setTimeout(poll, 500);\n\
                return;\n\
            }\n\
\n\
            workingVm = new LightboxWorkingViewModel(translate('Save'), translate('Saving...'));\n\
            if (res.error) {\n\
                // Show failure\n\
                workingVm.status('error');\n\
                lightbox.working(workingVm);\n\
                return;\n\
            }\n\
\n\
            self.syncPortsTo();\n\
\n\
            workingVm.status('success');\n\
            lightbox.working(workingVm);\n\
\n\
        });\n\
};\n\
\n\
//sync to global port observable, not currently used\n\
PulseViewModel.prototype.syncPortsTo = function(){\n\
    var interfaces = this.model.interfaces(),\n\
        ports_observable = this.ports_observable,\n\
        pulse_enable = this.model.status();\n\
\n\
    ports_observable().forEach(function (port_glob) {\n\
        if(port_glob.allocated_to() === 'streetwise')\n\
        {\n\
            port_glob.allocated_to('');\n\
        }\n\
        else if (port_glob.allocated_to() === ''){\n\
            port_glob.allocated_to(undefined);\n\
        }\n\
        interfaces.forEach(function (port_local) {\n\
            if ( pulse_enable === \"enabled\" && port_local.physical_port() === port_glob.id() && port_local.allocated_to() === 'streetwise') {\n\
                port_glob.allocated_to('streetwise');\n\
                //old_port.available(!new_port.enabled());\n\
            }\n\
        });\n\
    });\n\
}\n\
\n\
//sync from global port observable, not currently used\n\
PulseViewModel.prototype.syncPortsFrom = function(){\n\
    var interfaces = this.model.interfaces(),\n\
        ports_observable = this.ports_observable;\n\
\n\
    ports_observable().forEach(function (port_glob) {\n\
        interfaces.forEach(function (port_local) {\n\
            if (port_local.physical_port() === port_glob.id()) {\n\
                if(port_glob.allocated_to() !== 'streetwise' && port_glob.allocated_to() !== undefined){\n\
                    port_local.allocated_to(port_glob.allocated_to() === '' ? 'stc': port_glob.allocated_to());\n\
                }\n\
            }\n\
        });\n\
    });\n\
}\n\
\n\
\n\
PulseViewModel.prototype.show_select_a_port = function() {\n\
    var el = this.interface_selector.$el,\n\
        message = domify('<label class=\"validator-message\">');\n\
\n\
    message.textContent = this.strings[\"Select a port\"];\n\
\n\
    classes(el).add('invalid');\n\
    if (el.parentNode) {\n\
        el.parentNode.insertBefore(message, el.nextSibling);\n\
    }\n\
};\n\
\n\
PulseViewModel.prototype.hide_select_a_port = function() {\n\
    window.util.clear_validation_messages(this.interface_selector.$el);\n\
};\n\
\n\
PulseViewModel.prototype.unblock = function () {\n\
    this.loading_state.hide();\n\
};\n\
\n\
PulseViewModel.prototype.transitionTo = function (state) {\n\
    if ('running' === state) {\n\
        this.blockForTesting();\n\
    } else {\n\
        this.unblock();\n\
    }\n\
};\n\
\n\
PulseViewModel.prototype.blockForTesting = function () {\n\
    var message = this.strings[\"Please wait for test to finish\"];\n\
    this.loading_state.show(message);\n\
};\n\
\n\
module.exports = PulseViewModel;//@ sourceURL=pulse/index.js"
));
require.register("pulse/templates/index.js", Function("exports, require, module",
"module.exports = '<div class=\"pulse main\">\\n\
    <div>\\n\
        <h3>Pulse</h3>\\n\
        <button class=\"save-button save\">Save</button>\\n\
    </div>\\n\
    <div class=\"desc\">\\n\
        <ul>\\n\
            <li></li>\\n\
        </ul>\\n\
    </div>\\n\
    <div class=\"single-pane no-padding global\">\\n\
        <h4>Endpoint Configuration</h4>\\n\
        <ul>\\n\
            <li class=\"status\">\\n\
                <label for=\"pulse-on\">Enable</label>\\n\
                <input type=\"radio\" class=\"enable\" id=\"pulse-on\" name=\"status\">\\n\
                <label for=\"pulse-off\">Disable</label>\\n\
                <input type=\"radio\" class=\"disable\" id=\"pulse-off\" name=\"status\">\\n\
            </li>\\n\
            <li class=\"settings hidden\">\\n\
\\n\
            </li>\\n\
        </ul>\\n\
    </div>\\n\
</div>';//@ sourceURL=pulse/templates/index.js"
));
require.register("pulse/models/pulse.js", Function("exports, require, module",
"var model = require('model'),\n\
    request = require('superagent'),\n\
    no_cache = require('superagent-no-cache'),\n\
    PulseInterfaceModel = require('./interface.js');\n\
\n\
var PulseModel = model('PulseModel')\n\
    .route('/spirent/pulse')\n\
    .attr(\"status\")\n\
    .attr(\"license_status\")\n\
    .attr(\"interfaces\");\n\
\n\
PulseModel.get = function (done) {\n\
    var model = new PulseModel();\n\
\n\
    request.get(this.url())\n\
        .use(no_cache)\n\
        .end(function (error, response) {\n\
            var data;\n\
\n\
            if (error || !response.ok || response.body.result === 'FAILURE') {\n\
                return done(error || response.error.message || response.response.body.messages);\n\
            }\n\
\n\
            data = response.body;\n\
\n\
            // Inflate interface models\n\
            data.interfaces.forEach(function (iface, i) {\n\
                data.interfaces[i] = new PulseInterfaceModel(iface);\n\
            });\n\
\n\
            // Safely update the model with properties from REST API\n\
            for (var key in data) {\n\
                if (typeof model[key] === 'function') {\n\
                    model[key](data[key]);\n\
                }\n\
            }\n\
\n\
            return done(null, model);\n\
        });\n\
\n\
    return model;\n\
};\n\
\n\
PulseModel.prototype.enabled = function() {\n\
    return 'enabled' === this.status();\n\
};\n\
\n\
PulseModel.prototype.disabled = function() {\n\
    return 'disabled' === this.status();\n\
};\n\
\n\
module.exports = PulseModel;//@ sourceURL=pulse/models/pulse.js"
));
require.register("pulse/models/interface.js", Function("exports, require, module",
"var InterfaceModel = require('interface-model'),\n\
    PulseInterfaceModel = InterfaceModel;\n\
\n\
PulseInterfaceModel\n\
    .attr('enabled')\n\
    .attr('vlan')\n\
    .attr('dhcp')\n\
    .attr('ip')\n\
    .attr('netmask')\n\
    .attr('gateway');\n\
\n\
module.exports = PulseInterfaceModel;//@ sourceURL=pulse/models/interface.js"
));
require.register("pulse/templates/license.js", Function("exports, require, module",
"module.exports = '<div class=\"pulse main license\">\\n\
    <div>\\n\
        <h3>Pulse</h3>\\n\
    </div>\\n\
    <div class=\"single-pane no-padding global\">\\n\
        <h4>Pulse Endpoint license invalid</h4>\\n\
        <ul>\\n\
            <li>\\n\
                <div>This Axon does not have a license for the Pulse Endpoint feature. If you have already purchased a license, ensure this Axon is connected to the Internet.</div>\\n\
                <div>If no Internet connection can be obtained, <a href=\"mailto:axonsupport@spirent.com\">contact support</a> for a downloadable license.</div>\\n\
            </li>\\n\
        </ul>\\n\
\\n\
    </div>\\n\
</div>';//@ sourceURL=pulse/templates/license.js"
));
require.register("boot/index.js", Function("exports, require, module",
"/*global $: true, LightboxWorkingViewModel: true */\n\
\n\
var Logger = require('logger'),\n\
    log_ajax = require('logger-jquery-ajax'),\n\
    AssetManager = require('asset-manager'),\n\
    Translator = require('translator'),\n\
    DictionaryProvider = require('dictionary-provider'),\n\
    Util = require('utility-functions'),\n\
    promise = require('promise'),\n\
    manager = new AssetManager(),\n\
    lightbox = Util.lightbox,\n\
    event = require('event'),\n\
    classes = require('classes'),\n\
\n\
    // Load modules that will be available to plain-JS scripts (non-component)\n\
    DeviceModel = require('device-model'),\n\
    SpirentViewModel = require('spirent-view-model'),\n\
    TestViewModel = require('test-view-model'),\n\
    TestTemplateViewModel = require('test-template-view-model'),\n\
    ConfiguredTestViewModel = require('configured-test-view-model'),\n\
    AdministrationViewModel = require('administration-view-model'),\n\
    TrafficPlayerViewModel = require('traffic-player-view-model'),\n\
    TestTransmitReceiveConfigViewModel = require('transmit-receive-view-model'),\n\
    EndpointViewModel = require('endpoint-view-model'),\n\
    TestDeviceViewModel = require('test-device-view-model'),\n\
    LineRateMessageViewModel = require('line-rate-message-view-model'),\n\
    TrafficRecorder = require('traffic-recorder');\n\
\n\
\n\
function translatorInitializer(language) {\n\
    return promise(function getTranslator(resolve) {\n\
        DictionaryProvider(language, function (dict) {\n\
            window.translate = new Translator(dict);\n\
            resolve();\n\
        });\n\
    });\n\
}\n\
\n\
function openLoadingLightbox() {\n\
    return promise(function (resolve) {\n\
        manager.queueDownload(\"images/spinner.gif\");\n\
        manager.downloadAll(function () {\n\
            lightbox.open({\n\
                url: 'html/lightbox_tmpl',\n\
                selector: '#lightbox-working-template',\n\
                isModal: true,\n\
                onOpenComplete: resolve\n\
            });\n\
        });\n\
    });\n\
}\n\
\n\
function loadingLightboxOpenComplete() {\n\
    return promise(function (resolve) {\n\
        var model = new LightboxWorkingViewModel(translate(\"Loading\"), translate('Loading app...'), 10);\n\
        lightbox.working(model);\n\
        resolve();\n\
    });\n\
}\n\
\n\
function getImageUrls() {\n\
    return promise(function (resolve, reject) {\n\
        $.ajax({\n\
            type: \"get\",\n\
            url: \"/spirent/get_images\",\n\
            dataType: 'json',\n\
            success: resolve,\n\
            error: function (jqXhr, textStatus, errorThrown) {\n\
                reject(errorThrown);\n\
            }\n\
        });\n\
    });\n\
}\n\
\n\
function queueImages(build_number, data) {\n\
    return promise(function (resolve) {\n\
        var model = new LightboxWorkingViewModel(translate(\"Loading\"), translate('Loading images...'), 20),\n\
            imageFiles = data.files,\n\
            i,\n\
            x,\n\
            subfolderImages;\n\
\n\
        lightbox.working(model);\n\
        for (i = 0; i < imageFiles.length; i++) {\n\
            if (imageFiles[i].directory === true) {\n\
                subfolderImages = imageFiles[i].children;\n\
                for (x = 0; x < subfolderImages.length; x += 1) {\n\
                    manager.queueDownload(\"/images/\" + imageFiles[i].name + \"/\" + subfolderImages[x] + '?' + build_number);\n\
                }\n\
            } else {\n\
                manager.queueDownload(\"/images/\" + imageFiles[i].name + '?' + build_number);\n\
            }\n\
        }\n\
        manager.downloadAll(resolve);\n\
    });\n\
}\n\
\n\
function loadRootViewModel(settings) {\n\
    return promise(function (resolve) {\n\
        var model = new LightboxWorkingViewModel(translate(\"Loading\"), translate('Loading data...'), 30);\n\
        lightbox.working(model);\n\
        var root_vm = new SpirentViewModel(settings);\n\
        root_vm.setUser('Administrator');\n\
        root_vm.init().done(resolve.bind(this, root_vm)).fail(function(e) { window.logger.error(e + ' trace: ' + e.stack); });\n\
        ko.applyBindings(root_vm, document.getElementById('main'));\n\
        window.spirentEnterpriseVm = root_vm;\n\
    });\n\
}\n\
\n\
function closeLoadingLightbox(spirentEnterpriseVm) {\n\
    return promise(function (resolve) {\n\
        var model = new LightboxWorkingViewModel(translate(\"Loading\"), translate('App loaded.'), 100);\n\
        lightbox.working(model);\n\
        setTimeout(function () {\n\
            Util.lightbox.close();\n\
        }, 166); // 1/10 of a second delay.\n\
        resolve(spirentEnterpriseVm);\n\
    });\n\
}\n\
\n\
function showTrafficRecorder(spirentEnterpriseVm) {\n\
    return promise(function (resolve) {\n\
        var $main = document.querySelector('#main'),\n\
            $player_body = $main.querySelector('.test'),\n\
            $tabs = document.querySelector('.navigation .tabs'),\n\
            $player_tab = $tabs.querySelector('.player'),\n\
            $recorder_tab = document.createElement('li'),\n\
            chassis = spirentEnterpriseVm.availableDevices()[0],\n\
            recorder,\n\
            show = function () {\n\
                if (!recorder) {\n\
                    recorder = TrafficRecorder.factory(chassis.ports);\n\
                    $main.insertBefore(recorder.$el, $player_body.nextSibling);\n\
                }\n\
\n\
                spirentEnterpriseVm.selectedTab('recorder');\n\
                classes($recorder_tab).add('selected');\n\
                recorder.show();\n\
            };\n\
\n\
        // Inject main navigation tab\n\
        $recorder_tab.innerHTML = translate('RECORDER');\n\
        $recorder_tab.className = 'recorder';\n\
        $tabs.insertBefore($recorder_tab, $player_tab.nextSibling);\n\
\n\
        // Bind tab click handler\n\
        event.bind($recorder_tab, 'click', show);\n\
\n\
        // Hide recorder when another tab is selected\n\
        spirentEnterpriseVm.selectedTab.subscribe(function (tab) {\n\
            if (recorder && 'recorder' !== tab) {\n\
                classes($recorder_tab).remove('selected');\n\
                recorder.hide();\n\
            }\n\
        });\n\
\n\
        resolve(spirentEnterpriseVm);\n\
    });\n\
}\n\
\n\
function bindNetflowSettingsHandler(spirentEnterpriseVm) {\n\
    return promise(function (resolve) {\n\
        var admin = spirentEnterpriseVm.vmAdministration,\n\
            admin_tab = admin.selectedTab,\n\
            view,\n\
            chassis = spirentEnterpriseVm.availableDevices()[0];\n\
\n\
        admin.flowmonEnabled(true);\n\
\n\
        if (!chassis.supports_flowmon) {\n\
            resolve(spirentEnterpriseVm);\n\
        }\n\
\n\
        admin_tab.subscribe(function (name) {\n\
            if ('netflow' !== name) {\n\
                return; // Short-circuit\n\
            }\n\
\n\
            if (view) {\n\
                if(view.$el.parentNode){\n\
                    view.$el.parentNode.removeChild(view.$el);\n\
                }\n\
                view = undefined;\n\
                //view.show();\n\
                //return; // Short-circuit\n\
            }\n\
\n\
            // Create new Netflow view\n\
            var Settings = require('netflow-settings'),\n\
                $admin = document.querySelector('.administration .container');\n\
\n\
            view = Settings.factory(function (err) {\n\
                if (err) {\n\
                    window.logger.error('Could not load netflow', err);\n\
                    view.hide();\n\
                    lightbox.openError(window.translate('Error'), window.translate('Unable to load Netflow'));\n\
                    return; // Short-circuit\n\
                }\n\
\n\
                view.render();\n\
            });\n\
\n\
            // Append to administration section\n\
            $admin.appendChild(view.$el);\n\
        });\n\
\n\
        admin_tab.subscribe(function (prev) {\n\
            if ('netflow' === prev && view) {\n\
                view.hide();\n\
            }\n\
        }, null, \"beforeChange\");\n\
\n\
        resolve(spirentEnterpriseVm);\n\
    });\n\
}\n\
\n\
function bindScheduler(spirentEnterpriseVm) {\n\
    return promise(function(resolve) {\n\
        try {\n\
            spirentEnterpriseVm.selectedTab.subscribe(function(name) {\n\
                if ('calendar' == name) {\n\
                    var scheduler = require('scheduler').create(spirentEnterpriseVm);\n\
                    window.calendar = scheduler;\n\
                    scheduler.render();\n\
                }\n\
            })\n\
            resolve(spirentEnterpriseVm)\n\
        } catch(e) { window.logger.error( e + ' trace: ' + e.stack().toString()); }\n\
    })\n\
}\n\
\n\
function bindPulse(spirentEnterpriseVm) {\n\
    return promise(function (resolve) {\n\
        var view,\n\
            selected_tab = spirentEnterpriseVm.vmAdministration.selectedTab;\n\
\n\
        spirentEnterpriseVm.vmAdministration.pulseEnabled(true);\n\
\n\
        selected_tab.subscribe(function (tab) {\n\
            if (tab !== 'pulse') {\n\
                return; // Short-circuit\n\
            }\n\
\n\
            if (view) {\n\
                if(view.$el.parentNode){\n\
                    view.$el.parentNode.removeChild(view.$el);\n\
                }\n\
                view = undefined;\n\
                //view.show();\n\
                //return; // Short-circuit\n\
            }\n\
\n\
            var $admin = document.querySelector('.administration .container'),\n\
                PulseViewModel = require('pulse');\n\
\n\
            view = PulseViewModel.factory(function (err) {\n\
                if (err) {\n\
                    window.logger.error('Could not load Pulse', err);\n\
                    view.hide();\n\
                    lightbox.openError(window.translate('Error'), window.translate('Unable to load Pulse'));\n\
                }\n\
            });\n\
            view.render();\n\
            $admin.appendChild(view.$el);\n\
        });\n\
\n\
        selected_tab.subscribe(function (prev) {\n\
            if ('pulse' === prev && view) {\n\
                view.hide();\n\
            }\n\
        }, null, \"beforeChange\");\n\
\n\
        resolve();\n\
    });\n\
}\n\
\n\
module.exports = function (settings, callback) {\n\
    var level = settings.log_level.toLowerCase(),\n\
        logger,\n\
        load;\n\
\n\
    // Allow plain-JS (non-component) scripts to use various components by\n\
    // including them as global objects until we can iron out the dependencies\n\
    // and lazy-load these only when required\n\
\n\
    window.Translator = Translator;\n\
    window.TestViewModel = TestViewModel;\n\
    window.TestTemplateViewModel = TestTemplateViewModel;\n\
    window.ConfiguredTestViewModel = ConfiguredTestViewModel;\n\
    window.AdministrationViewModel = AdministrationViewModel;\n\
    window.TrafficPlayerViewModel = TrafficPlayerViewModel;\n\
    window.TestTransmitReceiveConfigViewModel = TestTransmitReceiveConfigViewModel;\n\
    window.EndpointViewModel = EndpointViewModel;\n\
    window.TestDeviceViewModel = TestDeviceViewModel;\n\
    window.DeviceModel = DeviceModel;\n\
    window.LineRateMessageViewModel = LineRateMessageViewModel;\n\
\n\
    window.appHistory = {\n\
        push : function (vm) {\n\
            var state = vm.getState();\n\
            if (history.pushState) {\n\
                history.pushState(state, \"Axon\");\n\
            }\n\
        }\n\
    };\n\
\n\
    // Setup logging\n\
\n\
    level = Logger.levels[level];\n\
    logger = new Logger(level, settings, '/spirent/log_js.json');\n\
\n\
    if (window) {\n\
        window.logger = logger;\n\
        logger.attachWindowErrorHandler();\n\
    }\n\
\n\
    if ($) {\n\
        logger.use(log_ajax);\n\
    }\n\
\n\
    ko.setTemplateEngine(new ko.nativeTemplateEngine())\n\
\n\
    // Load assets\n\
\n\
    load = translatorInitializer(settings.language)\n\
        .then(openLoadingLightbox)\n\
        .then(loadingLightboxOpenComplete)\n\
        .then(getImageUrls)\n\
        .then(queueImages.bind(this, settings.build_number))\n\
        .then(loadRootViewModel.bind(this, settings))\n\
        .then(bindNetflowSettingsHandler);\n\
\n\
    if (-1 !== settings.features.indexOf('traffic-recorder')) {\n\
        load.then(showTrafficRecorder);\n\
    }\n\
\n\
    if (-1 !== settings.features.indexOf('scheduler')) {\n\
        load.then(bindScheduler);\n\
    }\n\
\n\
    if (-1 !== settings.features.indexOf('pulse')) {\n\
        load.then(bindPulse);\n\
    }\n\
\n\
    load.then(closeLoadingLightbox)\n\
        .then(callback, function (err) {\n\
            logger.error(err);\n\
        });\n\
};//@ sourceURL=boot/index.js"
));


















































require.register("johntron-moment-timezone/data/packed/latest.json", Function("exports, require, module",
"module.exports = {\n\
\t\"version\": \"2014e\",\n\
\t\"zones\": [\n\
\t\t\"Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q\",\n\
\t\t\"Africa/Accra|LMT GMT GHST|.Q 0 -k|0121212121212121|-26BbX.8 JrbX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE\",\n\
\t\t\"Africa/Addis_Ababa|ADMT EAT|-2z.k -30|01|-1lVCz.k\",\n\
\t\t\"Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0\",\n\
\t\t\"Africa/Bamako|LMT GMT WAT|w 0 10|0121|-2ldXs RULs 144p0\",\n\
\t\t\"Africa/Bangui|LMT WAT|-1e.k -10|01|-2le1e.k\",\n\
\t\t\"Africa/Banjul|LMT BMT WAT GMT|16.A 16.A 10 0|0123|-2ldWR.o U0o0 1aALR.o\",\n\
\t\t\"Africa/Bissau|LMT WAT GMT|12.k 10 0|012|-2mFWV.E 2yQnV.E\",\n\
\t\t\"Africa/Blantyre|LMT CAT|-2k -20|01|-2GJek\",\n\
\t\t\"Africa/Brazzaville|LMT WAT|-11.8 -10|01|-2le11.8\",\n\
\t\t\"Africa/Bujumbura|CAT|-20|0|\",\n\
\t\t\"Africa/Cairo|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0 1o10 jz0 gN0 pb0 1qN0 dX0 e10 xz0 1o10 bb0 e10 An0 1o10 5z0 e10 FX0 1o10 2L0 e10 IL0 1C10 Lz0 1wp0 TX0 1qN0 WL0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0\",\n\
\t\t\"Africa/Casablanca|LMT WET WEST CET|u.k 0 -10 -10|012121212121212121312121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uo0 e00 DA0 11A0 rA0 e00 Jc0 WM0 m00 gM0 M00 WM0 jc0 e00 RA0 11A0 dA0 e00 Uo0 11A0 800 gM0 Xc0 11A0 5c0 e00 17A0 WM0 2o0 e00 1ao0 19A0 1g00 16M0 1iM0 1400 1lA0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qo0 1200 1kM0 14M0 1i00\",\n\
\t\t\"Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18o0 3I00 17c0 1fA0 1a00 1io0 1a00 1y7p0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Africa/Conakry|LMT GMT WAT|S.Q 0 10|0121|-2ldX5.8 RUL5.8 12U10\",\n\
\t\t\"Africa/Dakar|LMT WAT GMT|19.I 10 0|012|-2ldWO.g 1bBzO.g\",\n\
\t\t\"Africa/Dar_es_Salaam|LMT EAT BEAUT|-2B.8 -30 -2J|0121|-1yW2B.8 FnzB.8 vDAf\",\n\
\t\t\"Africa/Djibouti|LMT EAT|-2Q.A -30|01|-2mrCQ.A\",\n\
\t\t\"Africa/Douala|LMT WAT|-C.M -10|01|-2le0C.M\",\n\
\t\t\"Africa/El_Aaiun|LMT WAT WET WEST|Q.M 10 0 -10|0123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uo0 e00 DA0 11A0 rA0 e00 Jc0 WM0 m00 gM0 M00 WM0 jc0 e00 RA0 11A0 dA0 e00 Uo0 11A0 800 gM0 Xc0 11A0 5c0 e00 17A0 WM0 2o0 e00 1ao0 19A0 1g00 16M0 1iM0 1400 1lA0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qo0 1200 1kM0 14M0 1i00\",\n\
\t\t\"Africa/Freetown|FMT WAT SLST WAT SLST GMT|R 10 k 0 -10 0|0121212121212121213454545454545|-2hLb7 Ry07 MLk 1BAE MLk 1BcE MLk 1BcE MLk 1BcE MLk 1BAE MLk 1BcE MLk 1BcE MLk yGoE 10n0 AL0 1Nd0 AL0 1Nd0 AL0 1NB0 AL0 1Nd0 AL0 1Nd0 AL0\",\n\
\t\t\"Africa/Gaborone|SAST CAT CAST|-1u -20 -30|0121|-2GJdu 1CINu 1cL0\",\n\
\t\t\"Africa/Harare|LMT CAT|-24.c -20|01|-2GJe4.c\",\n\
\t\t\"Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0\",\n\
\t\t\"Africa/Juba|LMT CAT CAST EAT|-2a.8 -20 -30 -30|01212121212121212121212121212121213|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0\",\n\
\t\t\"Africa/Kampala|LMT EAT BEAT BEAUT|-29.E -30 -2u -2J|01231|-1F3C9.E 3Dz9.E HNAu lTbJ\",\n\
\t\t\"Africa/Kigali|LMT CAT|-20.g -20|01|-1ode0.g\",\n\
\t\t\"Africa/Kinshasa|WAT|-10|0|\",\n\
\t\t\"Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A\",\n\
\t\t\"Africa/Libreville|LMT WAT|-B.M -10|01|-2le0B.M\",\n\
\t\t\"Africa/Lome|GMT|0|0|\",\n\
\t\t\"Africa/Luanda|AOT WAT|-Q.4 -10|01|-2mG0Q.4\",\n\
\t\t\"Africa/Lusaka|LMT CAT|-1R.8 -20|01|-2GJdR.8\",\n\
\t\t\"Africa/Malabo|LMT GMT WAT|-z.8 0 -10|012|-2le0z.8 26uoz.8\",\n\
\t\t\"Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k\",\n\
\t\t\"Africa/Maseru|LMT SAST SAST|-1O -20 -30|0121|-2GJdO 1CINO 1cL0\",\n\
\t\t\"Africa/Mbabane|LMT SAST|-24.o -20|01|-2GJe4.o\",\n\
\t\t\"Africa/Mogadishu|EAT BEAT|-30 -2u|010|-1yW30 13iMu\",\n\
\t\t\"Africa/Monrovia|MMT LRT GMT|H.8 I.u 0|012|-23Lzg.Q 29s01.m\",\n\
\t\t\"Africa/Nairobi|LMT EAT BEAT BEAUT|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ\",\n\
\t\t\"Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0\",\n\
\t\t\"Africa/Niamey|LMT WAT GMT WAT|-8.s 10 0 -10|0123|-2le08.s RUN8.s 12TX0\",\n\
\t\t\"Africa/Nouakchott|LMT GMT WAT|13.M 0 10|0121|-2ldWU.c RUKU.c 158N0\",\n\
\t\t\"Africa/Ouagadougou|LMT GMT|6.4 0|01|-2ldXR.U\",\n\
\t\t\"Africa/Porto-Novo|LMT GMT WAT|-a.s 0 -10|012|-2le0a.s RUMa.s\",\n\
\t\t\"Africa/Sao_Tome|LMT GMT|A.w 0|01|-2ldXn.s\",\n\
\t\t\"Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00\",\n\
\t\t\"Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00\",\n\
\t\t\"Africa/Windhoek|SWAT SAST SAST CAT WAT WAST|-1u -20 -30 -20 -10 -20|012134545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2GJdu 1Ajdu 1cL0 1SqL0 9NA0 11D0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0\",\n\
\t\t\"America/Adak|NST NWT NPT BST BDT AHST HAST HADT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Anchorage|CAT CAWT CAPT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Anguilla|LMT AST|46.4 40|01|-2kNvR.U\",\n\
\t\t\"America/Antigua|LMT EST AST|47.c 50 40|012|-2kNvQ.M 1yxAQ.M\",\n\
\t\t\"America/Araguaina|LMT BRT BRST|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0\",\n\
\t\t\"America/Argentina/Buenos_Aires|CMT ART ARST ART ARST|4g.M 40 30 30 20|0121212121212121212121212121212121212121213434343434343234343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 g0p0 10M0 j3c0 uL0 1qN0 WL0\",\n\
\t\t\"America/Argentina/Catamarca|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|0121212121212121212121212121212121212121213434343454343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 g0p0 10M0 ako0 7B0 8zb0 uL0\",\n\
\t\t\"America/Argentina/Cordoba|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|0121212121212121212121212121212121212121213434343454343234343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 g0p0 10M0 j3c0 uL0 1qN0 WL0\",\n\
\t\t\"America/Argentina/Jujuy|CMT ART ARST ART ARST WART WARST|4g.M 40 30 30 20 40 30|01212121212121212121212121212121212121212134343456543432343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 g0p0 10M0 j3c0 uL0\",\n\
\t\t\"America/Argentina/La_Rioja|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|01212121212121212121212121212121212121212134343434534343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 g0p0 10M0 ako0 7B0 8zb0 uL0\",\n\
\t\t\"America/Argentina/Mendoza|CMT ART ARST ART ARST WART WARST|4g.M 40 30 30 20 40 30|0121212121212121212121212121212121212121213434345656543235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 g0p0 10M0 agM0 Op0 7TX0 uL0\",\n\
\t\t\"America/Argentina/Rio_Gallegos|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|0121212121212121212121212121212121212121213434343434343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 g0p0 10M0 ako0 7B0 8zb0 uL0\",\n\
\t\t\"America/Argentina/Salta|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|01212121212121212121212121212121212121212134343434543432343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 g0p0 10M0 j3c0 uL0\",\n\
\t\t\"America/Argentina/San_Juan|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|01212121212121212121212121212121212121212134343434534343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 g0p0 10M0 ak00 m10 8lb0 uL0\",\n\
\t\t\"America/Argentina/San_Luis|CMT ART ARST ART ARST WART WARST|4g.M 40 30 30 20 40 30|01212121212121212121212121212121212121212134343456536353465653|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 kin0 10M0 ak00 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0\",\n\
\t\t\"America/Argentina/Tucuman|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|012121212121212121212121212121212121212121343434345434323534343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 g0p0 10M0 ako0 4N0 8BX0 uL0 1qN0 WL0\",\n\
\t\t\"America/Argentina/Ushuaia|CMT ART ARST ART ARST WART|4g.M 40 30 30 20 40|0121212121212121212121212121212121212121213434343434343235343|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 g0p0 10M0 ajA0 8p0 8zb0 uL0\",\n\
\t\t\"America/Aruba|LMT ANT AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d\",\n\
\t\t\"America/Asuncion|AMT PYT PYT PYST|3O.E 40 30 30|012131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0\",\n\
\t\t\"America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0\",\n\
\t\t\"America/Bahia|LMT BRT BRST|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0\",\n\
\t\t\"America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0\",\n\
\t\t\"America/Belem|LMT BRT BRST|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0\",\n\
\t\t\"America/Belize|LMT CST CHDT CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0\",\n\
\t\t\"America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0\",\n\
\t\t\"America/Boa_Vista|LMT AMT AMST|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0\",\n\
\t\t\"America/Bogota|BMT COT COST|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0\",\n\
\t\t\"America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Cambridge_Bay|zzz MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Campo_Grande|LMT AMT AMST|3C.s 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0\",\n\
\t\t\"America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Caracas|CMT VET VET|4r.E 4u 40|0121|-2kV7w.k 28KM2.k 1IwOu\",\n\
\t\t\"America/Cayenne|LMT GFT GFT|3t.k 40 30|012|-2mrwu.E 2gWou.E\",\n\
\t\t\"America/Cayman|KMT EST|57.b 50|01|-2l1uQ.N\",\n\
\t\t\"America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0\",\n\
\t\t\"America/Creston|MST PST|70 80|010|-29DR0 43B0\",\n\
\t\t\"America/Cuiaba|LMT AMT AMST|3I.k 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0\",\n\
\t\t\"America/Danmarkshavn|LMT WGT WGST GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0\",\n\
\t\t\"America/Dawson|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0\",\n\
\t\t\"America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|01234252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 Jy10 SL0 dnB0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|01212121212121341212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 LFB0 1cL0 3Cp0 1cL0 66N0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Eirunepe|LMT ACT ACST AMT|4D.s 50 40 40|0121212121212121212121212121212131|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0\",\n\
\t\t\"America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0\",\n\
\t\t\"America/Ensenada|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOP0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Fortaleza|LMT BRT BRST|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0\",\n\
\t\t\"America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Godthab|LMT WGT WGST|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Grand_Turk|KMT EST EDT|57.b 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2l1uQ.N 2HHBQ.N 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0\",\n\
\t\t\"America/Guayaquil|QMT ECT|5e 50|01|-1yVSK\",\n\
\t\t\"America/Guyana|LMT GBGT GYT GYT GYT|3Q.E 3J 3J 30 40|01234|-2dvU7.k 24JzQ.k mlc0 Bxbf\",\n\
\t\t\"America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0\",\n\
\t\t\"America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Inuvik|zzz PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Iqaluit|zzz EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Jamaica|KMT EST EDT|57.b 50 40|0121212121212121212121|-2l1uQ.N 2vwNQ.N 1cL0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0\",\n\
\t\t\"America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 Bb0 10N0 2bB0 8in0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/La_Paz|CMT BOST BOT|4w.A 3w.A 40|012|-1x37r.o 13b0\",\n\
\t\t\"America/Lima|LMT PET PEST|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0\",\n\
\t\t\"America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp0 1Vb0 3dB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Maceio|LMT BRT BRST|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0\",\n\
\t\t\"America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0\",\n\
\t\t\"America/Manaus|LMT AMT AMST|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0\",\n\
\t\t\"America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0\",\n\
\t\t\"America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Metlakatla|PST PWT PPT PDT MeST|80 70 70 70 80|0120303030303030303030303030303034|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0\",\n\
\t\t\"America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Miquelon|LMT AST PMST PMDT|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Montevideo|MMT UYT UYHST UYST UYT UYHST|3I.I 3u 30 20 30 2u|012121212121212121212121213434343434345454543453434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-20UIf.g 8jzJ.g 1cLu 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1qMu WLu 1qMu 11zu 1o0u 11zu NAu 11bu 2iMu zWu Dq10 19X0 pd0 jz0 cm10 19X0 1fB0 1on0 11d0 1oL0 1nB0 1fzu 1aou 1fzu 1aou 1fzu 3nAu Jb0 3MN0 1SLu 4jzu 2PB0 Lb0 3Dd0 1pb0 ixd0 An0 1MN0 An0 1wp0 On0 1wp0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10\",\n\
\t\t\"America/Montreal|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-28tR0 bV0 2m30 1in0 121u 1nb0 1g10 11z0 1o0u 11zu 1o0u 11zu 3VAu Rzu 1qMu WLu 1qMu WLu 1qKu WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kO0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Noronha|LMT FNT FNST|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0\",\n\
\t\t\"America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Panama|CMT EST|5j.A 50|01|-2uduE.o\",\n\
\t\t\"America/Pangnirtung|zzz AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Paramaribo|LMT PMT PMT NEGT SRT SRT|3E.E 3E.Q 3E.A 3u 3u 30|012345|-2nDUj.k Wqo0.c qanX.I 1dmLN.o lzc0\",\n\
\t\t\"America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0\",\n\
\t\t\"America/Port-au-Prince|PPMT EST EDT|4N 50 40|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Porto_Acre|LMT ACT ACST AMT|4v.c 50 40 40|01212121212121212121212121212131|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0\",\n\
\t\t\"America/Porto_Velho|LMT AMT AMST|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0\",\n\
\t\t\"America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0\",\n\
\t\t\"America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Rankin_Inlet|zzz CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Recife|LMT BRT BRST|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0\",\n\
\t\t\"America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0\",\n\
\t\t\"America/Resolute|zzz CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Santa_Isabel|LMT MST PST PDT PWT PPT|7D.s 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOP0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0\",\n\
\t\t\"America/Santarem|LMT AMT AMST BRT|3C.M 40 30 30|0121212121212121212121212121213|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0\",\n\
\t\t\"America/Santiago|SMT CLT CLT CLST CLST|4G.K 50 40 40 30|010203131313131313124242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424|-2q5Th.e fNch.e 5gLG.K 21bh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9UK0 1Je0 Qen0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1ld0 14n0 1qN0 11z0 1cN0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0\",\n\
\t\t\"America/Santo_Domingo|SDMT EST EDT EHDT AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00\",\n\
\t\t\"America/Sao_Paulo|LMT BRT BRST|36.s 30 20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10 Lz0 1C10 On0 1zd0 Rb0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0\",\n\
\t\t\"America/Scoresbysund|LMT CGT CGST EGST EGT|1r.Q 20 10 0 10|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0\",\n\
\t\t\"America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0\",\n\
\t\t\"America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Whitehorse|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 1Be0 xDz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"America/Yellowknife|zzz MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"Antarctica/Casey|zzz WST CAST|0 -80 -b0|012121|-2q00 1DjS0 T90 40P0 KL0\",\n\
\t\t\"Antarctica/Davis|zzz DAVT DAVT|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0\",\n\
\t\t\"Antarctica/DumontDUrville|zzz PMT DDUT|0 -a0 -a0|0102|-U0o0 cfq0 bFm0\",\n\
\t\t\"Antarctica/Macquarie|EST EST zzz MIST|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0\",\n\
\t\t\"Antarctica/Mawson|zzz MAWT MAWT|0 -60 -50|012|-CEo0 2fyk0\",\n\
\t\t\"Antarctica/McMurdo|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00\",\n\
\t\t\"Antarctica/Palmer|zzz ARST ART ART ARST CLT CLST|0 30 40 30 20 40 30|012121212123435656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1ld0 14n0 1qN0 11z0 1cN0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0\",\n\
\t\t\"Antarctica/Rothera|zzz ROTT|0 30|01|gOo0\",\n\
\t\t\"Antarctica/Syowa|zzz SYOT|0 -30|01|-vs00\",\n\
\t\t\"Antarctica/Troll|zzz UTC CEST|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Antarctica/Vostok|zzz VOST|0 -60|01|-tjA0\",\n\
\t\t\"Arctic/Longyearbyen|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Asia/Aden|LMT AST|-2X.S -30|01|-MG2X.S\",\n\
\t\t\"Asia/Almaty|LMT ALMT ALMT ALMST|-57.M -50 -60 -70|0123232323232323232323232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3Cl0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0\",\n\
\t\t\"Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0\",\n\
\t\t\"Asia/Anadyr|LMT ANAT ANAT ANAST ANAST ANAST ANAT|-bN.U -c0 -d0 -e0 -d0 -c0 -b0|01232414141414141414141561414141414141414141414141414141414141561|-1PcbN.U eUnN.U 23CL0 1db0 1cN0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qN0 WM0\",\n\
\t\t\"Asia/Aqtau|LMT FORT FORT SHET SHET SHEST AQTT AQTST AQTST AQTT|-3l.4 -40 -50 -50 -60 -60 -50 -60 -50 -40|012345353535353535353536767676898989898989898989896|-1Pc3l.4 eUnl.4 1jcL0 JDc0 1cL0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2UK0 Fz0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cN0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 RW0\",\n\
\t\t\"Asia/Aqtobe|LMT AKTT AKTT AKTST AKTT AQTT AQTST|-3M.E -40 -50 -60 -60 -50 -60|01234323232323232323232565656565656565656565656565|-1Pc3M.E eUnM.E 23CL0 1db0 1cM0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2UK0 Fz0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0\",\n\
\t\t\"Asia/Ashgabat|LMT ASHT ASHT ASHST ASHST TMT TMT|-3R.w -40 -50 -60 -50 -40 -50|012323232323232323232324156|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 ba0 xC0\",\n\
\t\t\"Asia/Baghdad|BMT AST ADT|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0\",\n\
\t\t\"Asia/Bahrain|LMT GST AST|-3m.k -40 -30|012|-21Jfm.k 27BXm.k\",\n\
\t\t\"Asia/Baku|LMT BAKT BAKT BAKST BAKST AZST AZT AZT AZST|-3j.o -30 -40 -50 -40 -40 -30 -40 -50|0123232323232323232323245657878787878787878787878787878787878787878787878787878787878787878787878787878787878787|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 10K0 c30 1cJ0 1cL0 8wu0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Asia/Bangkok|BMT ICT|-6G.4 -70|01|-218SG.4\",\n\
\t\t\"Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0\",\n\
\t\t\"Asia/Bishkek|LMT FRUT FRUT FRUST FRUST KGT KGST KGT|-4W.o -50 -60 -70 -60 -50 -60 -60|01232323232323232323232456565656565656565656565656567|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 11c0 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 T8u\",\n\
\t\t\"Asia/Brunei|LMT BNT BNT|-7D.E -7u -80|012|-1KITD.E gDc9.E\",\n\
\t\t\"Asia/Calcutta|HMT BURT IST IST|-5R.k -6u -5u -6u|01232|-18LFR.k 1unn.k HB0 7zX0\",\n\
\t\t\"Asia/Choibalsan|LMT ULAT ULAT CHOST CHOT CHOT|-7C -70 -80 -a0 -90 -80|012343434343434343434343434343434343434343434345|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0\",\n\
\t\t\"Asia/Chongqing|LMT LONT CST CDT|-76.k -70 -80 -90|012323232323232|-1Ggv6.k 27pA6.k eBz0 Rb0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0\",\n\
\t\t\"Asia/Colombo|MMT IST IHST IST LKT LKT|-5j.w -5u -60 -6u -6u -60|01231451|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu\",\n\
\t\t\"Asia/Dacca|HMT BURT IST DACT BDT BDST|-5R.k -6u -5u -60 -60 -70|01213454|-18LFR.k 1unn.k HB0 m6n0 LqMu 1x6n0 1hXX\",\n\
\t\t\"Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0\",\n\
\t\t\"Asia/Dili|LMT TLT JST TLT WITA|-8m.k -80 -90 -90 -80|012343|-2le8m.k 1dnXm.k 8HA0 1ew00 Xld0\",\n\
\t\t\"Asia/Dubai|LMT GST|-3F.c -40|01|-21JfF.c\",\n\
\t\t\"Asia/Dushanbe|LMT DUST DUST DUSST DUSST TJT|-4z.c -50 -60 -70 -60 -50|0123232323232323232323245|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 14N0\",\n\
\t\t\"Asia/Gaza|EET EET EEST IST IDT|-20 -30 -30 -20 -30|010101010102020202020202020202023434343434343434343434343430202020202020202020202020202020202020202020202020202020202020202020202020202020202020|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 npB0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0\",\n\
\t\t\"Asia/Harbin|LMT CHAT CST CHAT CDT|-8q.I -8u -80 -90 -90|012312424242424242|-1Ggwq.I a8nU.I j4Mu 146L0 y5Au eBAu Rb0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0\",\n\
\t\t\"Asia/Hebron|EET EET EEST IST IDT|-20 -30 -30 -20 -30|01010101010202020202020202020202343434343434343434343434343020202020202020202020202020202020202020202020202020202020202020202020202020202020202020|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 npB0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0\",\n\
\t\t\"Asia/Ho_Chi_Minh|LMT SMT ICT ICT|-76.E -76.k -70 -80|01232|-2yKT6.E byo1.k 2KM5.k Kfz0\",\n\
\t\t\"Asia/Hong_Kong|LMT HKT HKST JST|-7A.G -80 -90 -90|0121312121212121212121212121212121212121212121212121212121212121212121|-2CFHA.G 1sEP6.G 1cL0 ylu 93X0 1qQu 1tX0 Rd0 1In0 NB0 1cL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1kL0 14N0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0\",\n\
\t\t\"Asia/Hovd|LMT HOVT HOVT HOVST|-66.A -60 -70 -80|01232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0\",\n\
\t\t\"Asia/Irkutsk|IMT IRKT IRKT IRKST IRKST IRKT|-6V.k -70 -80 -90 -80 -90|01232323232323232323232412323232323232323232323232323232323232325|-21zGV.k pjXV.k 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Istanbul|IMT EET EEST TRST TRT|-1U.U -20 -30 -40 -30|012121212121212121212121212121212121212121212121212121234343434342121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSp0 CL0 mN0 1Vz0 1gN0 1pz0 5Rd0 1fz0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1jB0 18L0 1ip0 17z0 qdd0 xX0 3S10 Tz0 dA10 11z0 1o10 11z0 1qN0 11z0 1ze0 11B0 WM0 1qO0 WI0 1nX0 1rB0 10L0 11B0 1in0 17d0 1in0 2pX0 19E0 1fU0 16Q0 1iI0 16Q0 1iI0 1Vd0 pb0 3Kp0 14o0 1df0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Asia/Jakarta|BMT JAVT WIB JST WIB WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu\",\n\
\t\t\"Asia/Jayapura|LMT WIT CST|-9m.M -90 -9u|0121|-1uu9m.M sMMm.M L4nu\",\n\
\t\t\"Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|01212121212132121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 npB0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0\",\n\
\t\t\"Asia/Kabul|AFT AFT|-40 -4u|01|-10Qs0\",\n\
\t\t\"Asia/Kamchatka|LMT PETT PETT PETST PETST|-ay.A -b0 -c0 -d0 -c0|01232323232323232323232412323232323232323232323232323232323232412|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qN0 WM0\",\n\
\t\t\"Asia/Karachi|LMT IST IST KART PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy01 1cL0 dK0X 11b0 1610 1jX0\",\n\
\t\t\"Asia/Kashgar|LMT KAST KAST CST CDT|-53.U -5u -50 -80 -90|0123434343434343|-1Ggt3.U tdbx.U 1Ccou eBx0 Rb0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0\",\n\
\t\t\"Asia/Kathmandu|LMT IST NPT|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g\",\n\
\t\t\"Asia/Khandyga|LMT YAKT YAKT YAKST YAKST VLAT VLAST VLAT YAKT|-92.d -80 -90 -a0 -90 -a0 -b0 -b0 -a0|0123232323232323232323241232323232323232323232323256565656565656578|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0\",\n\
\t\t\"Asia/Krasnoyarsk|LMT KRAT KRAT KRAST KRAST KRAT|-6b.k -60 -70 -80 -70 -80|01232323232323232323232412323232323232323232323232323232323232325|-21Hib.k prAb.k 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Kuala_Lumpur|SMT MALT MALST MALT MALT JST MYT|-6T.p -70 -7k -7k -7u -90 -80|01234546|-2Bg6T.p 17anT.p 7hXE dM00 17bO 8Fyu 1so1u\",\n\
\t\t\"Asia/Kuching|LMT BORT BORT BORTST JST MYT|-7l.k -7u -80 -8k -90 -80|01232323232323232425|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0 1so10\",\n\
\t\t\"Asia/Kuwait|LMT AST|-3b.U -30|01|-MG3b.U\",\n\
\t\t\"Asia/Macao|LMT MOT MOST CST|-7y.k -80 -90 -80|0121212121212121212121212121212121212121213|-2le7y.k 1XO34.k 1wn0 Rd0 1wn0 R9u 1wqu U10 1tz0 TVu 1tz0 17gu 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cJu 1cL0 1cN0 1fz0 1cN0 1cOu 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cJu 1cL0 1cN0 1fz0 1cN0 1cL0 KEp0\",\n\
\t\t\"Asia/Magadan|LMT MAGT MAGT MAGST MAGST MAGT|-a3.c -a0 -b0 -c0 -b0 -c0|01232323232323232323232412323232323232323232323232323232323232325|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Makassar|LMT MMT WITA JST|-7V.A -7V.A -80 -90|01232|-21JjV.A vfc0 myLV.A 8ML0\",\n\
\t\t\"Asia/Manila|PHT PHST JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0\",\n\
\t\t\"Asia/Muscat|LMT GST|-3S.o -40|01|-21JfS.o\",\n\
\t\t\"Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Asia/Novokuznetsk|NMT KRAT KRAT KRAST KRAST NOVST NOVT NOVT|-5M.M -60 -70 -80 -70 -70 -60 -70|01232323232323232323232412323232323232323232323232323232323232567|-21HhM.M przM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qN0 WM0\",\n\
\t\t\"Asia/Novosibirsk|LMT NOVT NOVT NOVST NOVST|-5v.E -60 -70 -80 -70|012323232323232323232324123234141414141414141414141414141414141412|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Omsk|LMT OMST OMST OMSST OMSST OMST|-4R.A -50 -60 -70 -60 -70|01232323232323232323232412323232323232323232323232323232323232325|-224sR.A pMLR.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Oral|LMT URAT URAT URAST URAT URAST ORAT ORAST ORAT|-3p.o -40 -50 -60 -60 -50 -40 -50 -50|012343232323232323251516767676767676767676767676768|-1Pc3p.o eUnp.o 23CL0 1db0 1cM0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 2UK0 Fz0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 RW0\",\n\
\t\t\"Asia/Phnom_Penh|LMT SMT ICT ICT|-6X.E -76.k -70 -80|01232|-2yKSX.E bynS.k 2KM5.k Kfz0\",\n\
\t\t\"Asia/Pontianak|LMT PMT WIB JST WIB WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu\",\n\
\t\t\"Asia/Pyongyang|KST KST KST|-8u -90 -80|010121|-2CsUu Ucnu 9Iou S5Xu hXB0\",\n\
\t\t\"Asia/Qatar|LMT GST AST|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8\",\n\
\t\t\"Asia/Qyzylorda|LMT KIZT KIZT KIZST KIZT QYZT QYZT QYZST|-4l.Q -40 -50 -60 -60 -50 -60 -70|012343232323232323232325676767676767676767676767676|-1Pc4l.Q eUol.Q 23CL0 1db0 1cM0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2UK0 dC0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0\",\n\
\t\t\"Asia/Rangoon|RMT BURT JST MMT|-6o.E -6u -90 -6u|0123|-21Jio.E SmnS.E 7j9u\",\n\
\t\t\"Asia/Riyadh|LMT AST|-36.Q -30|01|-MG36.Q\",\n\
\t\t\"Asia/Sakhalin|LMT CJT JST SAKT SAKST SAKST SAKT|-9u.M -90 -90 -b0 -c0 -b0 -a0|012343434343434343434343563434343434356565656565656565656565656563|-2AGVu.M 1iLAu.M iBc0 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o10 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Samarkand|LMT SAMT SAMT SAMST TAST UZST UZT|-4r.c -40 -50 -60 -60 -60 -50|01234323232323232323232356|-1Pc4r.c eUor.c 23CL0 1db0 1cM0 1dc0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 11x0 bf0\",\n\
\t\t\"Asia/Seoul|KST KST KST KDT KDT|-8u -90 -80 -90 -a0|0101232014141|-2CsUu Ucnu 9Iou S5Xu eWN0 Mn0 2cp0 hnzu JhXu 11z0 1o10 11z0\",\n\
\t\t\"Asia/Shanghai|LMT CST CDT|-85.V -80 -90|012121212121212121|-1Ggw5.V ueM5.V LX0 16p0 1jz0 1Myp0 Rb0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0\",\n\
\t\t\"Asia/Singapore|SMT MALT MALST MALT MALT JST SGT SGT|-6T.p -70 -7k -7k -7u -90 -7u -80|012345467|-2Bg6T.p 17anT.p 7hXE dM00 17bO 8Fyu Mspu DTA0\",\n\
\t\t\"Asia/Taipei|CST CDT|-80 -90|01010101010101010101010101010101010101010|-104w0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97d0 AL0\",\n\
\t\t\"Asia/Tashkent|LMT TAST TAST TASST TASST UZST UZT|-4B.c -50 -60 -70 -60 -60 -50|01232323232323232323232456|-1Pc4B.c eUnB.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 11y0 bf0\",\n\
\t\t\"Asia/Tbilisi|TBMT TBIT TBIT TBIST TBIST GEST GET GET GEST|-2X.g -30 -40 -50 -40 -40 -30 -40 -50|0123232323232323232323245656565787878787878787878567|-1Pc2X.g 1jUnX.g WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 3y0 19f0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cM0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0\",\n\
\t\t\"Asia/Tehran|LMT TMT IRST IRST IRDT IRDT|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0\",\n\
\t\t\"Asia/Thimbu|LMT IST BTT|-5W.A -5u -60|012|-Su5W.A 1BGMs.A\",\n\
\t\t\"Asia/Tokyo|CJT JST JDT|-90 -90 -a0|0121212121|-1hTl0 p9C0 QL0 1lB0 13X0 1zB0 NX0 1zB0 NX0\",\n\
\t\t\"Asia/Ulaanbaatar|LMT ULAT ULAT ULAST|-77.w -70 -80 -90|01232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0\",\n\
\t\t\"Asia/Urumqi|LMT URUT CST CDT|-5O.k -60 -80 -90|012323232323232|-1GgtO.k 27pzO.k eBy0 Rb0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0\",\n\
\t\t\"Asia/Ust-Nera|LMT YAKT YAKT MAGST MAGT MAGST MAGT MAGT VLAT|-9w.S -80 -90 -c0 -b0 -b0 -a0 -c0 -b0|012343434343434343434345643434343434343434343434343434343434343478|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0\",\n\
\t\t\"Asia/Vientiane|LMT SMT ICT ICT|-6O.o -76.k -70 -80|01232|-2yKSO.o bynJ.4 2KM5.k Kfz0\",\n\
\t\t\"Asia/Vladivostok|LMT VLAT VLAT VLAST VLAST VLAT|-8L.I -90 -a0 -b0 -a0 -b0|01232323232323232323232412323232323232323232323232323232323232325|-1SJIL.I itXL.I 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Yakutsk|LMT YAKT YAKT YAKST YAKST YAKT|-8C.E -80 -90 -a0 -90 -a0|01232323232323232323232412323232323232323232323232323232323232325|-21Q8C.E pAoC.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Yekaterinburg|LMT SVET SVET SVEST SVEST YEKT YEKST YEKT|-42.o -40 -50 -60 -50 -50 -60 -60|01232323232323232323232415656565656565656565656565656565656565657|-22Rc2.o qBw2.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Asia/Yerevan|LMT YERT YERT YERST YERST AMST AMT AMT AMST|-2W -30 -40 -50 -40 -40 -30 -40 -50|0123232323232323232323245656565657878787878787878787878787878787|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1am0 2r0 1cJ0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fb0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0\",\n\
\t\t\"Atlantic/Azores|HMT AZOT AZOST AZOMT AZOT AZOST WET|1S.w 20 10 0 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545456545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2mGK5.s ckL5.s Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"Atlantic/Canary|LMT CANT WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Atlantic/Cape_Verde|LMT CVT CVST CVT|1y.4 20 10 10|01213|-2xomp.U 1qOMp.U 7zX0 1djf0\",\n\
\t\t\"Atlantic/Faeroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Atlantic/Madeira|FMT MADT MADST MADMT WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2mGKQ.o ckKQ.o Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Atlantic/Reykjavik|RMT IST ISST GMT|1r.M 10 0 0|01212121212121212121212121212121212121212121212121212121212121213|-2uWmw.c mfaw.c 1Bd0 ML0 1LB0 NLX0 1pe0 zd0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0\",\n\
\t\t\"Atlantic/South_Georgia|GST|20|0|\",\n\
\t\t\"Atlantic/St_Helena|JMT GMT|m.M 0|01|-KfXB.c\",\n\
\t\t\"Atlantic/Stanley|SMT FKT FKST FKT FKST|3P.o 40 30 30 20|0121212121212134343212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 U10 1qM0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10\",\n\
\t\t\"Australia/ACT|EST EST|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0\",\n\
\t\t\"Australia/Adelaide|CST CST|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0\",\n\
\t\t\"Australia/Brisbane|EST EST|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0\",\n\
\t\t\"Australia/Broken_Hill|CST CST|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0\",\n\
\t\t\"Australia/Currie|EST EST|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0\",\n\
\t\t\"Australia/Darwin|CST CST|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0\",\n\
\t\t\"Australia/Eucla|CWST CWST|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0\",\n\
\t\t\"Australia/Hobart|EST EST|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0\",\n\
\t\t\"Australia/LHI|EST LHST LHST LHST|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu\",\n\
\t\t\"Australia/Lindeman|EST EST|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0\",\n\
\t\t\"Australia/Melbourne|EST EST|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0\",\n\
\t\t\"Australia/Perth|WST WST|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0\",\n\
\t\t\"CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"Chile/EasterIsland|EMT EASST EAST EAST EASST|7h.s 60 70 60 50|012121212121212121212121212121213434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-1uSgG.w nHUG.w op0 9UK0 RXB0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1ld0 14n0 1qN0 11z0 1cN0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1wn0 Rd0 1zb0 Op0 1zb0 Rd0 1wn0 Rd0\",\n\
\t\t\"EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"EST|EST|50|0|\",\n\
\t\t\"EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"Eire|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g5X0 14p0 1wn0 17d0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Etc/GMT+1|GMT+1|10|0|\",\n\
\t\t\"Etc/GMT+10|GMT+10|a0|0|\",\n\
\t\t\"Etc/GMT+11|GMT+11|b0|0|\",\n\
\t\t\"Etc/GMT+12|GMT+12|c0|0|\",\n\
\t\t\"Etc/GMT+2|GMT+2|20|0|\",\n\
\t\t\"Etc/GMT+3|GMT+3|30|0|\",\n\
\t\t\"Etc/GMT+4|GMT+4|40|0|\",\n\
\t\t\"Etc/GMT+5|GMT+5|50|0|\",\n\
\t\t\"Etc/GMT+6|GMT+6|60|0|\",\n\
\t\t\"Etc/GMT+7|GMT+7|70|0|\",\n\
\t\t\"Etc/GMT+8|GMT+8|80|0|\",\n\
\t\t\"Etc/GMT+9|GMT+9|90|0|\",\n\
\t\t\"Etc/GMT-1|GMT-1|-10|0|\",\n\
\t\t\"Etc/GMT-10|GMT-10|-a0|0|\",\n\
\t\t\"Etc/GMT-11|GMT-11|-b0|0|\",\n\
\t\t\"Etc/GMT-12|GMT-12|-c0|0|\",\n\
\t\t\"Etc/GMT-13|GMT-13|-d0|0|\",\n\
\t\t\"Etc/GMT-14|GMT-14|-e0|0|\",\n\
\t\t\"Etc/GMT-2|GMT-2|-20|0|\",\n\
\t\t\"Etc/GMT-3|GMT-3|-30|0|\",\n\
\t\t\"Etc/GMT-4|GMT-4|-40|0|\",\n\
\t\t\"Etc/GMT-5|GMT-5|-50|0|\",\n\
\t\t\"Etc/GMT-6|GMT-6|-60|0|\",\n\
\t\t\"Etc/GMT-7|GMT-7|-70|0|\",\n\
\t\t\"Etc/GMT-8|GMT-8|-80|0|\",\n\
\t\t\"Etc/GMT-9|GMT-9|-90|0|\",\n\
\t\t\"Etc/UCT|UCT|0|0|\",\n\
\t\t\"Etc/UTC|UTC|0|0|\",\n\
\t\t\"Europe/Amsterdam|AMT NST NEST NET CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Belfast|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Bratislava|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 16M0 1lc0 1tA0 17A0 11c0 1io0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Budapest|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 1cn0 1jd0 11b0 1ld0 1bb0 NVc0 3O00 WM0 1fA0 1cM0 1cM0 1oJ0 1e00 Xf0 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Busingen|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|0123232323232323232345454676767676767676767623232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1ty0 2bD0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Helsinki|HMT EET EEST|-1D.Q -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.Q OULD.Q 1db0 1xGP0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Kaliningrad|CET CEST CET CEST MSK MSD EEST EET FET|-10 -20 -20 -30 -30 -40 -30 -20 -30|010101010101023245454545454545454545467676767676767676767676767676767676767678|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 Am0 Lb0 1en0 op0 1pNz0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1cJ0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.w 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ldXn.s aPWn.s Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|01010101010101010101010121212121234343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-28dd0 11A0 1go0 19A0 1co0 1dA0 b1A0 18o0 3I00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 iyo0 Rc0 18o0 1hc0 1io0 1a00 14o0 5aL0 MM0 1vc0 17A0 1i00 1bc0 1eo0 17d0 1in0 17A0 6hA0 10N0 XIL0 1a10 1in0 17d0 19X0 1cN0 1fz0 1a10 1fX0 1cp0 1cO0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2as10 M00 1cM0 1cM0 14o0 1o00 WM0 1qM0 17c0 1cM0 M3A0 5M20 WM0 1fA0 1cM0 1cM0 1cM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 Lz0 1C10 Lz0 1EN0 Lz0 1C10 Lz0 1zd0 Oo0 1C00 On0 1cp0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Minsk|MMT EET MSK CEST CET MSD EEST FET|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cK0 1cM0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Moscow|MMT MMT MST MDST MSD MSK MSM EET EEST MSK|-2u -2u.M -3u.M -4u.M -40 -30 -50 -20 -30 -40|01213234546457545454545454545454545875454545454545454545454545454545454545459|-2ag2u 2pyX.c 1bA0 11X0 GN0 1Hb0 c20 imu.M 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rU0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.o -2A.o -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.o 11A0 1iM0 ko0 gWm0 yDXA.o 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2as10 M00 1cM0 1cM0 14o0 1o00 WM0 1qM0 17c0 1cM0 M3A0 5M20 WM0 1fA0 1cM0 16K0 1iO0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 Lz0 1C10 Lz0 1EN0 Lz0 1C10 Lz0 1zd0 Oo0 1C00 On0 1C10 Lz0 1zd0 On0 1C10 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Samara|LMT SAMT SAMT KUYT KUYST KUYST KUYT KUYST SAMST SAMST|-3k.A -30 -40 -40 -50 -40 -30 -30 -50 -40|012343434343434343435656762828282828282828282828282828282828282912|-22WNk.A qHak.A bcn0 1Qqo0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cN0 8o0 14j0 1cL0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qN0 WM0\",\n\
\t\t\"Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|01234343252525252525252525216161652525261616161616161616161616161616161617|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0\",\n\
\t\t\"Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1a00 1cM0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646464647373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Volgograd|LMT TSAT STAT STAT VOLT VOLST VOLST VOLT|-2V.E -30 -30 -40 -40 -50 -40 -30|01234545454545454545467674676767676767676767676767676767676767674|-21IqV.E cLXV.E cEM0 1gqn0 Lco0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 2pz0 1cJ0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0\",\n\
\t\t\"Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"Europe/Zaporozhye|CUT EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"HST|HST|a0|0|\",\n\
\t\t\"Indian/Antananarivo|LMT EAT EAST|-3a.4 -30 -40|0121|-2mrDa.4 1HRba.4 Ao0\",\n\
\t\t\"Indian/Chagos|LMT IOT IOT|-4N.E -50 -60|012|-2xosN.E 3AGLN.E\",\n\
\t\t\"Indian/Christmas|CXT|-70|0|\",\n\
\t\t\"Indian/Cocos|CCT|-6u|0|\",\n\
\t\t\"Indian/Comoro|LMT EAT|-2R.4 -30|01|-2mrCR.4\",\n\
\t\t\"Indian/Kerguelen|zzz TFT|0 -50|01|-MG00\",\n\
\t\t\"Indian/Mahe|LMT SCT|-3F.M -40|01|-2yO3F.M\",\n\
\t\t\"Indian/Maldives|MMT MVT|-4S -50|01|-olgS\",\n\
\t\t\"Indian/Mauritius|LMT MUT MUST|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0\",\n\
\t\t\"Indian/Mayotte|LMT EAT|-30.U -30|01|-2mrD0.U\",\n\
\t\t\"Indian/Reunion|LMT RET|-3F.Q -40|01|-2mDDF.Q\",\n\
\t\t\"Kwajalein|MHT KWAT MHT|-b0 c0 -c0|012|-AX0 W9X0\",\n\
\t\t\"MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\
\t\t\"MST|MST|70|0|\",\n\
\t\t\"MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"NZ-CHAT|LMT CHAST CHADT|-cd.M -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-vDod.M Hq2d.M IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00\",\n\
\t\t\"PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\
\t\t\"Pacific/Apia|LMT SAMT WST WSDT WSDT WST|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00\",\n\
\t\t\"Pacific/Chuuk|CHUT|-a0|0|\",\n\
\t\t\"Pacific/Efate|LMT VUT VUST|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0\",\n\
\t\t\"Pacific/Enderbury|PHOT PHOT PHOT|c0 b0 -d0|012|nIc0 B8n0\",\n\
\t\t\"Pacific/Fakaofo|TKT TKT|b0 -d0|01|1Gfn0\",\n\
\t\t\"Pacific/Fiji|LMT FJT FJST|-bT.I -c0 -d0|012121212121212121212121212121212121212121212121212121212121212|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1Q10 xz0 1Q10 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Q10 xz0 1Q10 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Q10 xz0 1Q10 xz0 1Q10 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Q10 xz0 1Q10 xz0 1Q10 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Q10 xz0 1Q10\",\n\
\t\t\"Pacific/Funafuti|TVT|-c0|0|\",\n\
\t\t\"Pacific/Galapagos|LMT ECT GALT|5W.o 50 60|012|-1yVS1.A 2dTz1.A\",\n\
\t\t\"Pacific/Gambier|LMT GAMT|8X.M 90|01|-2jof0.c\",\n\
\t\t\"Pacific/Guadalcanal|LMT SBT|-aD.M -b0|01|-2joyD.M\",\n\
\t\t\"Pacific/Guam|GST ChST|-a0 -a0|01|1fpq0\",\n\
\t\t\"Pacific/Honolulu|HST HDT HST|au 9u a0|010102|-1thLu 8x0 lef0 8Pz0 46p0\",\n\
\t\t\"Pacific/Kiritimati|LINT LINT LINT|aE a0 -e0|012|nIaE B8nk\",\n\
\t\t\"Pacific/Kosrae|KOST KOST|-b0 -c0|010|-AX0 1bdz0\",\n\
\t\t\"Pacific/Majuro|MHT MHT|-b0 -c0|01|-AX0\",\n\
\t\t\"Pacific/Marquesas|LMT MART|9i 9u|01|-2joeG\",\n\
\t\t\"Pacific/Midway|NST NDT BST SST|b0 a0 b0 b0|01023|-x3N0 An0 pJd0 EyM0\",\n\
\t\t\"Pacific/Nauru|LMT NRT JST NRT|-b7.E -bu -90 -c0|01213|-1Xdn7.E PvzB.E 5RCu 1ouJu\",\n\
\t\t\"Pacific/Niue|NUT NUT NUT|bk bu b0|012|-KfME 17y0a\",\n\
\t\t\"Pacific/Norfolk|NMT NFT|-bc -bu|01|-Kgbc\",\n\
\t\t\"Pacific/Noumea|LMT NCT NCST|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0\",\n\
\t\t\"Pacific/Pago_Pago|LMT SAMT NST BST SST|bm.M bu b0 b0 b0|01234|-2nDMB.c 1yW07.c FXzu EyM0\",\n\
\t\t\"Pacific/Palau|PWT|-90|0|\",\n\
\t\t\"Pacific/Pitcairn|PNT PST|8u 80|01|18Vku\",\n\
\t\t\"Pacific/Pohnpei|PONT|-b0|0|\",\n\
\t\t\"Pacific/Port_Moresby|PGT|-a0|0|\",\n\
\t\t\"Pacific/Rarotonga|CKT CKHST CKT|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu\",\n\
\t\t\"Pacific/Saipan|MPT MPT ChST|-90 -a0 -a0|012|-AV0 1g2n0\",\n\
\t\t\"Pacific/Tahiti|LMT TAHT|9W.g a0|01|-2joe1.I\",\n\
\t\t\"Pacific/Tarawa|GILT|-c0|0|\",\n\
\t\t\"Pacific/Tongatapu|TOT TOT TOST|-ck -d0 -e0|01212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0\",\n\
\t\t\"Pacific/Wake|WAKT|-c0|0|\",\n\
\t\t\"Pacific/Wallis|WFT|-c0|0|\",\n\
\t\t\"WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\"\n\
\t],\n\
\t\"links\": [\n\
\t\t\"Africa/Addis_Ababa|Africa/Asmara\",\n\
\t\t\"Africa/Addis_Ababa|Africa/Asmera\",\n\
\t\t\"Africa/Bamako|Africa/Timbuktu\",\n\
\t\t\"Africa/Bujumbura|Africa/Lubumbashi\",\n\
\t\t\"Africa/Cairo|Egypt\",\n\
\t\t\"Africa/Juba|Africa/Khartoum\",\n\
\t\t\"Africa/Lome|Etc/GMT\",\n\
\t\t\"Africa/Lome|Etc/GMT+0\",\n\
\t\t\"Africa/Lome|Etc/GMT-0\",\n\
\t\t\"Africa/Lome|Etc/GMT0\",\n\
\t\t\"Africa/Lome|Etc/Greenwich\",\n\
\t\t\"Africa/Lome|GMT\",\n\
\t\t\"Africa/Lome|GMT+0\",\n\
\t\t\"Africa/Lome|GMT-0\",\n\
\t\t\"Africa/Lome|GMT0\",\n\
\t\t\"Africa/Lome|Greenwich\",\n\
\t\t\"Africa/Tripoli|Libya\",\n\
\t\t\"America/Adak|America/Atka\",\n\
\t\t\"America/Adak|US/Aleutian\",\n\
\t\t\"America/Anchorage|US/Alaska\",\n\
\t\t\"America/Anguilla|America/Dominica\",\n\
\t\t\"America/Anguilla|America/Grenada\",\n\
\t\t\"America/Anguilla|America/Guadeloupe\",\n\
\t\t\"America/Anguilla|America/Marigot\",\n\
\t\t\"America/Anguilla|America/Montserrat\",\n\
\t\t\"America/Anguilla|America/Port_of_Spain\",\n\
\t\t\"America/Anguilla|America/St_Barthelemy\",\n\
\t\t\"America/Anguilla|America/St_Kitts\",\n\
\t\t\"America/Anguilla|America/St_Lucia\",\n\
\t\t\"America/Anguilla|America/St_Thomas\",\n\
\t\t\"America/Anguilla|America/St_Vincent\",\n\
\t\t\"America/Anguilla|America/Tortola\",\n\
\t\t\"America/Anguilla|America/Virgin\",\n\
\t\t\"America/Argentina/Buenos_Aires|America/Buenos_Aires\",\n\
\t\t\"America/Argentina/Catamarca|America/Argentina/ComodRivadavia\",\n\
\t\t\"America/Argentina/Catamarca|America/Catamarca\",\n\
\t\t\"America/Argentina/Cordoba|America/Cordoba\",\n\
\t\t\"America/Argentina/Cordoba|America/Rosario\",\n\
\t\t\"America/Argentina/Jujuy|America/Jujuy\",\n\
\t\t\"America/Argentina/Mendoza|America/Mendoza\",\n\
\t\t\"America/Aruba|America/Curacao\",\n\
\t\t\"America/Aruba|America/Kralendijk\",\n\
\t\t\"America/Aruba|America/Lower_Princes\",\n\
\t\t\"America/Atikokan|America/Coral_Harbour\",\n\
\t\t\"America/Chicago|US/Central\",\n\
\t\t\"America/Denver|America/Shiprock\",\n\
\t\t\"America/Denver|Navajo\",\n\
\t\t\"America/Denver|US/Mountain\",\n\
\t\t\"America/Detroit|US/Michigan\",\n\
\t\t\"America/Edmonton|Canada/Mountain\",\n\
\t\t\"America/Ensenada|America/Tijuana\",\n\
\t\t\"America/Ensenada|Mexico/BajaNorte\",\n\
\t\t\"America/Fort_Wayne|America/Indiana/Indianapolis\",\n\
\t\t\"America/Fort_Wayne|America/Indianapolis\",\n\
\t\t\"America/Fort_Wayne|US/East-Indiana\",\n\
\t\t\"America/Halifax|Canada/Atlantic\",\n\
\t\t\"America/Havana|Cuba\",\n\
\t\t\"America/Indiana/Knox|America/Knox_IN\",\n\
\t\t\"America/Indiana/Knox|US/Indiana-Starke\",\n\
\t\t\"America/Jamaica|Jamaica\",\n\
\t\t\"America/Kentucky/Louisville|America/Louisville\",\n\
\t\t\"America/Los_Angeles|US/Pacific\",\n\
\t\t\"America/Los_Angeles|US/Pacific-New\",\n\
\t\t\"America/Manaus|Brazil/West\",\n\
\t\t\"America/Mazatlan|Mexico/BajaSur\",\n\
\t\t\"America/Mexico_City|Mexico/General\",\n\
\t\t\"America/New_York|US/Eastern\",\n\
\t\t\"America/Noronha|Brazil/DeNoronha\",\n\
\t\t\"America/Phoenix|US/Arizona\",\n\
\t\t\"America/Porto_Acre|America/Rio_Branco\",\n\
\t\t\"America/Porto_Acre|Brazil/Acre\",\n\
\t\t\"America/Regina|Canada/East-Saskatchewan\",\n\
\t\t\"America/Regina|Canada/Saskatchewan\",\n\
\t\t\"America/Santiago|Chile/Continental\",\n\
\t\t\"America/Sao_Paulo|Brazil/East\",\n\
\t\t\"America/St_Johns|Canada/Newfoundland\",\n\
\t\t\"America/Toronto|Canada/Eastern\",\n\
\t\t\"America/Vancouver|Canada/Pacific\",\n\
\t\t\"America/Whitehorse|Canada/Yukon\",\n\
\t\t\"America/Winnipeg|Canada/Central\",\n\
\t\t\"Antarctica/McMurdo|Antarctica/South_Pole\",\n\
\t\t\"Antarctica/McMurdo|NZ\",\n\
\t\t\"Antarctica/McMurdo|Pacific/Auckland\",\n\
\t\t\"Arctic/Longyearbyen|Atlantic/Jan_Mayen\",\n\
\t\t\"Arctic/Longyearbyen|Europe/Oslo\",\n\
\t\t\"Asia/Ashgabat|Asia/Ashkhabad\",\n\
\t\t\"Asia/Calcutta|Asia/Kolkata\",\n\
\t\t\"Asia/Chongqing|Asia/Chungking\",\n\
\t\t\"Asia/Dacca|Asia/Dhaka\",\n\
\t\t\"Asia/Ho_Chi_Minh|Asia/Saigon\",\n\
\t\t\"Asia/Hong_Kong|Hongkong\",\n\
\t\t\"Asia/Istanbul|Europe/Istanbul\",\n\
\t\t\"Asia/Istanbul|Turkey\",\n\
\t\t\"Asia/Jerusalem|Asia/Tel_Aviv\",\n\
\t\t\"Asia/Jerusalem|Israel\",\n\
\t\t\"Asia/Kathmandu|Asia/Katmandu\",\n\
\t\t\"Asia/Macao|Asia/Macau\",\n\
\t\t\"Asia/Makassar|Asia/Ujung_Pandang\",\n\
\t\t\"Asia/Nicosia|Europe/Nicosia\",\n\
\t\t\"Asia/Seoul|ROK\",\n\
\t\t\"Asia/Shanghai|PRC\",\n\
\t\t\"Asia/Singapore|Singapore\",\n\
\t\t\"Asia/Taipei|ROC\",\n\
\t\t\"Asia/Tehran|Iran\",\n\
\t\t\"Asia/Thimbu|Asia/Thimphu\",\n\
\t\t\"Asia/Tokyo|Japan\",\n\
\t\t\"Asia/Ulaanbaatar|Asia/Ulan_Bator\",\n\
\t\t\"Atlantic/Faeroe|Atlantic/Faroe\",\n\
\t\t\"Atlantic/Reykjavik|Iceland\",\n\
\t\t\"Australia/ACT|Australia/Canberra\",\n\
\t\t\"Australia/ACT|Australia/NSW\",\n\
\t\t\"Australia/ACT|Australia/Sydney\",\n\
\t\t\"Australia/Adelaide|Australia/South\",\n\
\t\t\"Australia/Brisbane|Australia/Queensland\",\n\
\t\t\"Australia/Broken_Hill|Australia/Yancowinna\",\n\
\t\t\"Australia/Darwin|Australia/North\",\n\
\t\t\"Australia/Hobart|Australia/Tasmania\",\n\
\t\t\"Australia/LHI|Australia/Lord_Howe\",\n\
\t\t\"Australia/Melbourne|Australia/Victoria\",\n\
\t\t\"Australia/Perth|Australia/West\",\n\
\t\t\"Chile/EasterIsland|Pacific/Easter\",\n\
\t\t\"Eire|Europe/Dublin\",\n\
\t\t\"Etc/UCT|UCT\",\n\
\t\t\"Etc/UTC|Etc/Universal\",\n\
\t\t\"Etc/UTC|Etc/Zulu\",\n\
\t\t\"Etc/UTC|UTC\",\n\
\t\t\"Etc/UTC|Universal\",\n\
\t\t\"Etc/UTC|Zulu\",\n\
\t\t\"Europe/Belfast|Europe/Guernsey\",\n\
\t\t\"Europe/Belfast|Europe/Isle_of_Man\",\n\
\t\t\"Europe/Belfast|Europe/Jersey\",\n\
\t\t\"Europe/Belfast|Europe/London\",\n\
\t\t\"Europe/Belfast|GB\",\n\
\t\t\"Europe/Belfast|GB-Eire\",\n\
\t\t\"Europe/Belgrade|Europe/Ljubljana\",\n\
\t\t\"Europe/Belgrade|Europe/Podgorica\",\n\
\t\t\"Europe/Belgrade|Europe/Sarajevo\",\n\
\t\t\"Europe/Belgrade|Europe/Skopje\",\n\
\t\t\"Europe/Belgrade|Europe/Zagreb\",\n\
\t\t\"Europe/Bratislava|Europe/Prague\",\n\
\t\t\"Europe/Busingen|Europe/Vaduz\",\n\
\t\t\"Europe/Busingen|Europe/Zurich\",\n\
\t\t\"Europe/Chisinau|Europe/Tiraspol\",\n\
\t\t\"Europe/Helsinki|Europe/Mariehamn\",\n\
\t\t\"Europe/Lisbon|Portugal\",\n\
\t\t\"Europe/Moscow|W-SU\",\n\
\t\t\"Europe/Rome|Europe/San_Marino\",\n\
\t\t\"Europe/Rome|Europe/Vatican\",\n\
\t\t\"Europe/Warsaw|Poland\",\n\
\t\t\"Kwajalein|Pacific/Kwajalein\",\n\
\t\t\"NZ-CHAT|Pacific/Chatham\",\n\
\t\t\"Pacific/Chuuk|Pacific/Truk\",\n\
\t\t\"Pacific/Chuuk|Pacific/Yap\",\n\
\t\t\"Pacific/Honolulu|Pacific/Johnston\",\n\
\t\t\"Pacific/Honolulu|US/Hawaii\",\n\
\t\t\"Pacific/Pago_Pago|Pacific/Samoa\",\n\
\t\t\"Pacific/Pago_Pago|US/Samoa\",\n\
\t\t\"Pacific/Pohnpei|Pacific/Ponape\"\n\
\t]\n\
}//@ sourceURL=johntron-moment-timezone/data/packed/latest.json"
));





















































































require.alias("visionmedia-mocha/mocha.js", "axon/deps/mocha/mocha.js");
require.alias("visionmedia-mocha/mocha.js", "axon/deps/mocha/index.js");
require.alias("visionmedia-mocha/mocha.js", "mocha/index.js");
require.alias("visionmedia-mocha/mocha.js", "visionmedia-mocha/index.js");
require.alias("johntron-superagent/lib/client.js", "axon/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "axon/deps/superagent/index.js");
require.alias("johntron-superagent/lib/client.js", "superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-sinon/lib/sinon.js", "axon/deps/sinon/lib/sinon.js");
require.alias("johntron-sinon/lib/sinon/spy.js", "axon/deps/sinon/lib/sinon/spy.js");
require.alias("johntron-sinon/lib/sinon/call.js", "axon/deps/sinon/lib/sinon/call.js");
require.alias("johntron-sinon/lib/sinon/stub.js", "axon/deps/sinon/lib/sinon/stub.js");
require.alias("johntron-sinon/lib/sinon/mock.js", "axon/deps/sinon/lib/sinon/mock.js");
require.alias("johntron-sinon/lib/sinon/collection.js", "axon/deps/sinon/lib/sinon/collection.js");
require.alias("johntron-sinon/lib/sinon/assert.js", "axon/deps/sinon/lib/sinon/assert.js");
require.alias("johntron-sinon/lib/sinon/sandbox.js", "axon/deps/sinon/lib/sinon/sandbox.js");
require.alias("johntron-sinon/lib/sinon/test.js", "axon/deps/sinon/lib/sinon/test.js");
require.alias("johntron-sinon/lib/sinon/test_case.js", "axon/deps/sinon/lib/sinon/test_case.js");
require.alias("johntron-sinon/lib/sinon/assert.js", "axon/deps/sinon/lib/sinon/assert.js");
require.alias("johntron-sinon/lib/sinon/match.js", "axon/deps/sinon/lib/sinon/match.js");
require.alias("johntron-sinon/lib/sinon/util/event.js", "axon/deps/sinon/lib/sinon/util/event.js");
require.alias("johntron-sinon/lib/sinon/util/fake_server.js", "axon/deps/sinon/lib/sinon/util/fake_server.js");
require.alias("johntron-sinon/lib/sinon/util/fake_server_with_clock.js", "axon/deps/sinon/lib/sinon/util/fake_server_with_clock.js");
require.alias("johntron-sinon/lib/sinon/util/fake_timers.js", "axon/deps/sinon/lib/sinon/util/fake_timers.js");
require.alias("johntron-sinon/lib/sinon/util/fake_xml_http_request.js", "axon/deps/sinon/lib/sinon/util/fake_xml_http_request.js");
require.alias("johntron-sinon/lib/sinon/util/timers_ie.js", "axon/deps/sinon/lib/sinon/util/timers_ie.js");
require.alias("johntron-sinon/lib/sinon/util/xhr_ie.js", "axon/deps/sinon/lib/sinon/util/xhr_ie.js");
require.alias("johntron-sinon/lib/sinon.js", "axon/deps/sinon/index.js");
require.alias("johntron-sinon/lib/sinon.js", "sinon/index.js");
require.alias("johntron-sinon/lib/sinon.js", "johntron-sinon/index.js");
require.alias("chaijs-chai/index.js", "axon/deps/chai/index.js");
require.alias("chaijs-chai/lib/chai.js", "axon/deps/chai/lib/chai.js");
require.alias("chaijs-chai/lib/chai/assertion.js", "axon/deps/chai/lib/chai/assertion.js");
require.alias("chaijs-chai/lib/chai/core/assertions.js", "axon/deps/chai/lib/chai/core/assertions.js");
require.alias("chaijs-chai/lib/chai/interface/assert.js", "axon/deps/chai/lib/chai/interface/assert.js");
require.alias("chaijs-chai/lib/chai/interface/expect.js", "axon/deps/chai/lib/chai/interface/expect.js");
require.alias("chaijs-chai/lib/chai/interface/should.js", "axon/deps/chai/lib/chai/interface/should.js");
require.alias("chaijs-chai/lib/chai/utils/addChainableMethod.js", "axon/deps/chai/lib/chai/utils/addChainableMethod.js");
require.alias("chaijs-chai/lib/chai/utils/addMethod.js", "axon/deps/chai/lib/chai/utils/addMethod.js");
require.alias("chaijs-chai/lib/chai/utils/addProperty.js", "axon/deps/chai/lib/chai/utils/addProperty.js");
require.alias("chaijs-chai/lib/chai/utils/flag.js", "axon/deps/chai/lib/chai/utils/flag.js");
require.alias("chaijs-chai/lib/chai/utils/getActual.js", "axon/deps/chai/lib/chai/utils/getActual.js");
require.alias("chaijs-chai/lib/chai/utils/getEnumerableProperties.js", "axon/deps/chai/lib/chai/utils/getEnumerableProperties.js");
require.alias("chaijs-chai/lib/chai/utils/getMessage.js", "axon/deps/chai/lib/chai/utils/getMessage.js");
require.alias("chaijs-chai/lib/chai/utils/getName.js", "axon/deps/chai/lib/chai/utils/getName.js");
require.alias("chaijs-chai/lib/chai/utils/getPathValue.js", "axon/deps/chai/lib/chai/utils/getPathValue.js");
require.alias("chaijs-chai/lib/chai/utils/getProperties.js", "axon/deps/chai/lib/chai/utils/getProperties.js");
require.alias("chaijs-chai/lib/chai/utils/index.js", "axon/deps/chai/lib/chai/utils/index.js");
require.alias("chaijs-chai/lib/chai/utils/inspect.js", "axon/deps/chai/lib/chai/utils/inspect.js");
require.alias("chaijs-chai/lib/chai/utils/objDisplay.js", "axon/deps/chai/lib/chai/utils/objDisplay.js");
require.alias("chaijs-chai/lib/chai/utils/overwriteMethod.js", "axon/deps/chai/lib/chai/utils/overwriteMethod.js");
require.alias("chaijs-chai/lib/chai/utils/overwriteProperty.js", "axon/deps/chai/lib/chai/utils/overwriteProperty.js");
require.alias("chaijs-chai/lib/chai/utils/overwriteChainableMethod.js", "axon/deps/chai/lib/chai/utils/overwriteChainableMethod.js");
require.alias("chaijs-chai/lib/chai/utils/test.js", "axon/deps/chai/lib/chai/utils/test.js");
require.alias("chaijs-chai/lib/chai/utils/transferFlags.js", "axon/deps/chai/lib/chai/utils/transferFlags.js");
require.alias("chaijs-chai/lib/chai/utils/type.js", "axon/deps/chai/lib/chai/utils/type.js");
require.alias("chaijs-chai/index.js", "axon/deps/chai/index.js");
require.alias("chaijs-chai/index.js", "chai/index.js");
require.alias("chaijs-assertion-error/index.js", "chaijs-chai/deps/assertion-error/index.js");
require.alias("chaijs-assertion-error/index.js", "chaijs-chai/deps/assertion-error/index.js");
require.alias("chaijs-assertion-error/index.js", "chaijs-assertion-error/index.js");
require.alias("chaijs-deep-eql/lib/eql.js", "chaijs-chai/deps/deep-eql/lib/eql.js");
require.alias("chaijs-deep-eql/lib/eql.js", "chaijs-chai/deps/deep-eql/index.js");
require.alias("chaijs-type-detect/lib/type.js", "chaijs-deep-eql/deps/type-detect/lib/type.js");
require.alias("chaijs-type-detect/lib/type.js", "chaijs-deep-eql/deps/type-detect/index.js");
require.alias("chaijs-type-detect/lib/type.js", "chaijs-type-detect/index.js");
require.alias("chaijs-deep-eql/lib/eql.js", "chaijs-deep-eql/index.js");
require.alias("chaijs-chai/index.js", "chaijs-chai/index.js");
require.alias("boot/index.js", "axon/deps/boot/index.js");
require.alias("boot/index.js", "axon/deps/boot/index.js");
require.alias("boot/index.js", "boot/index.js");
require.alias("johntron-promise/index.js", "boot/deps/promise/index.js");
require.alias("johntron-promise/core.js", "boot/deps/promise/core.js");
require.alias("johntron-asap/asap.js", "johntron-promise/deps/asap/asap.js");
require.alias("johntron-asap/asap.js", "johntron-promise/deps/asap/index.js");
require.alias("johntron-asap/asap.js", "johntron-asap/index.js");
require.alias("visionmedia-page.js/index.js", "boot/deps/page/index.js");


require.alias("component-event/index.js", "boot/deps/event/index.js");

require.alias("component-classes/index.js", "boot/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("logger/index.js", "boot/deps/logger/index.js");
require.alias("logger/index.js", "boot/deps/logger/index.js");
require.alias("johntron-superagent/lib/client.js", "logger/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "logger/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "logger/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "logger/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("logger/index.js", "logger/index.js");
require.alias("logger-jquery-ajax/index.js", "boot/deps/logger-jquery-ajax/index.js");
require.alias("logger-jquery-ajax/index.js", "boot/deps/logger-jquery-ajax/index.js");
require.alias("logger-jquery-ajax/index.js", "logger-jquery-ajax/index.js");
require.alias("asset-manager/index.js", "boot/deps/asset-manager/index.js");
require.alias("asset-manager/index.js", "boot/deps/asset-manager/index.js");
require.alias("asset-manager/index.js", "asset-manager/index.js");
require.alias("utility-functions/index.js", "boot/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "boot/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("translator/index.js", "boot/deps/translator/index.js");
require.alias("translator/index.js", "boot/deps/translator/index.js");
require.alias("translator/index.js", "translator/index.js");
require.alias("dictionary-provider/index.js", "boot/deps/dictionary-provider/index.js");
require.alias("dictionary-provider/index.js", "boot/deps/dictionary-provider/index.js");
require.alias("johntron-superagent/lib/client.js", "dictionary-provider/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "dictionary-provider/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "dictionary-provider/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "dictionary-provider/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("dictionary-provider/index.js", "dictionary-provider/index.js");
require.alias("spirent-view-model/index.js", "boot/deps/spirent-view-model/index.js");
require.alias("spirent-view-model/test-configurations-adapter.js", "boot/deps/spirent-view-model/test-configurations-adapter.js");
require.alias("spirent-view-model/index.js", "boot/deps/spirent-view-model/index.js");
require.alias("spirent-view-model/index.js", "spirent-view-model/index.js");
require.alias("device-model/index.js", "boot/deps/device-model/index.js");
require.alias("device-model/error.js", "boot/deps/device-model/error.js");
require.alias("device-model/index.js", "boot/deps/device-model/index.js");
require.alias("johntron-model/lib/index.js", "device-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "device-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "device-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "device-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "device-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("johntron-superagent/lib/client.js", "device-model/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "device-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "device-model/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "device-model/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("utility-functions/index.js", "device-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "device-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("device-model/index.js", "device-model/index.js");
require.alias("capture-filter-chooser/index.js", "boot/deps/capture-filter-chooser/index.js");
require.alias("capture-filter-chooser/template.js", "boot/deps/capture-filter-chooser/template.js");
require.alias("capture-filter-chooser/index.js", "boot/deps/capture-filter-chooser/index.js");
require.alias("component-domify/index.js", "capture-filter-chooser/deps/domify/index.js");

require.alias("component-event/index.js", "capture-filter-chooser/deps/event/index.js");

require.alias("component-emitter/index.js", "capture-filter-chooser/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-classes/index.js", "capture-filter-chooser/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("capture-filter-chooser/index.js", "capture-filter-chooser/index.js");
require.alias("netflow-settings/views/netflow-settings.js", "boot/deps/netflow-settings/views/netflow-settings.js");
require.alias("netflow-settings/models/netflow-settings.js", "boot/deps/netflow-settings/models/netflow-settings.js");
require.alias("netflow-settings/templates/netflow-settings.js", "boot/deps/netflow-settings/templates/netflow-settings.js");
require.alias("netflow-settings/views/global-settings.js", "boot/deps/netflow-settings/views/global-settings.js");
require.alias("netflow-settings/templates/global-settings.js", "boot/deps/netflow-settings/templates/global-settings.js");
require.alias("netflow-settings/views/interfaces.js", "boot/deps/netflow-settings/views/interfaces.js");
require.alias("netflow-settings/templates/interfaces.js", "boot/deps/netflow-settings/templates/interfaces.js");
require.alias("netflow-settings/views/interface-settings.js", "boot/deps/netflow-settings/views/interface-settings.js");
require.alias("netflow-settings/templates/interface/settings.js", "boot/deps/netflow-settings/templates/interface/settings.js");
require.alias("netflow-settings/views/collector-list.js", "boot/deps/netflow-settings/views/collector-list.js");
require.alias("netflow-settings/templates/collector-list.js", "boot/deps/netflow-settings/templates/collector-list.js");
require.alias("netflow-settings/views/collector.js", "boot/deps/netflow-settings/views/collector.js");
require.alias("netflow-settings/models/collector.js", "boot/deps/netflow-settings/models/collector.js");
require.alias("netflow-settings/templates/collector.js", "boot/deps/netflow-settings/templates/collector.js");
require.alias("netflow-settings/templates/collector-editor.js", "boot/deps/netflow-settings/templates/collector-editor.js");
require.alias("netflow-settings/views/netflow-settings.js", "boot/deps/netflow-settings/index.js");
require.alias("component-domify/index.js", "netflow-settings/deps/domify/index.js");

require.alias("component-event/index.js", "netflow-settings/deps/event/index.js");

require.alias("johntron-trigger-event/index.js", "netflow-settings/deps/trigger-event/index.js");

require.alias("component-classes/index.js", "netflow-settings/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-emitter/index.js", "netflow-settings/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("johntron-model/lib/index.js", "netflow-settings/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "netflow-settings/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "netflow-settings/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "netflow-settings/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "netflow-settings/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("matthewmueller-debounce/index.js", "netflow-settings/deps/debounce/index.js");

require.alias("segmentio-validate-form/lib/adapter.js", "netflow-settings/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "netflow-settings/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "netflow-settings/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "netflow-settings/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "netflow-settings/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("johntron-is-host/index.js", "netflow-settings/deps/is-host/index.js");
require.alias("johntron-is-ip-address/index.js", "johntron-is-host/deps/is-ip-address/index.js");

require.alias("johntron-superagent/lib/client.js", "netflow-settings/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "netflow-settings/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "netflow-settings/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "netflow-settings/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("translator/index.js", "netflow-settings/deps/translator/index.js");
require.alias("translator/index.js", "netflow-settings/deps/translator/index.js");
require.alias("translator/index.js", "translator/index.js");
require.alias("utility-functions/index.js", "netflow-settings/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "netflow-settings/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");


require.alias("interface-selector/index.js", "netflow-settings/deps/interface-selector/index.js");
require.alias("interface-selector/templates/interface.js", "netflow-settings/deps/interface-selector/templates/interface.js");
require.alias("interface-selector/templates/template.js", "netflow-settings/deps/interface-selector/templates/template.js");
require.alias("interface-selector/index.js", "netflow-settings/deps/interface-selector/index.js");
require.alias("component-domify/index.js", "interface-selector/deps/domify/index.js");

require.alias("component-emitter/index.js", "interface-selector/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-classes/index.js", "interface-selector/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-event/index.js", "interface-selector/deps/event/index.js");

require.alias("interface-model/index.js", "interface-selector/deps/interface-model/index.js");
require.alias("interface-model/index.js", "interface-selector/deps/interface-model/index.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "interface-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "interface-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "interface-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("interface-model/index.js", "interface-model/index.js");
require.alias("interface-selector/index.js", "interface-selector/index.js");
require.alias("interface-model/index.js", "netflow-settings/deps/interface-model/index.js");
require.alias("interface-model/index.js", "netflow-settings/deps/interface-model/index.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "interface-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "interface-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "interface-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("interface-model/index.js", "interface-model/index.js");
require.alias("loading-state/index.js", "netflow-settings/deps/loading-state/index.js");
require.alias("loading-state/template.js", "netflow-settings/deps/loading-state/template.js");
require.alias("loading-state/index.js", "netflow-settings/deps/loading-state/index.js");
require.alias("component-domify/index.js", "loading-state/deps/domify/index.js");

require.alias("loading-state/index.js", "loading-state/index.js");
require.alias("netflow-settings/views/netflow-settings.js", "netflow-settings/index.js");
require.alias("scheduler/tz.js", "boot/deps/scheduler/tz.js");
require.alias("scheduler/dhtmlxscheduler.js", "boot/deps/scheduler/dhtmlxscheduler.js");
require.alias("scheduler/dhtmlxscheduler_container_autoresize.js", "boot/deps/scheduler/dhtmlxscheduler_container_autoresize.js");
require.alias("scheduler/index.js", "boot/deps/scheduler/index.js");
require.alias("scheduler/test-event.js", "boot/deps/scheduler/test-event.js");
require.alias("scheduler/calendar-item.js", "boot/deps/scheduler/calendar-item.js");
require.alias("scheduler/balloon.js", "boot/deps/scheduler/balloon.js");
require.alias("scheduler/event-list.js", "boot/deps/scheduler/event-list.js");
require.alias("scheduler/templates/index.js", "boot/deps/scheduler/templates/index.js");
require.alias("scheduler/templates/balloon.js", "boot/deps/scheduler/templates/balloon.js");
require.alias("scheduler/templates/event-list.js", "boot/deps/scheduler/templates/event-list.js");
require.alias("scheduler/templates/traffic-player-header.js", "boot/deps/scheduler/templates/traffic-player-header.js");
require.alias("scheduler/delegates/test-view-model.js", "boot/deps/scheduler/delegates/test-view-model.js");
require.alias("scheduler/index.js", "boot/deps/scheduler/index.js");
require.alias("component-domify/index.js", "scheduler/deps/domify/index.js");

require.alias("component-event/index.js", "scheduler/deps/event/index.js");

require.alias("component-classes/index.js", "scheduler/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("johntron-model/lib/index.js", "scheduler/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "scheduler/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "scheduler/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "scheduler/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "scheduler/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("johntron-superagent/lib/client.js", "scheduler/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "scheduler/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "scheduler/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "scheduler/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("samsonjs-strftime/strftime.js", "scheduler/deps/strftime/strftime.js");
require.alias("samsonjs-strftime/strftime.js", "scheduler/deps/strftime/index.js");
require.alias("samsonjs-strftime/strftime.js", "samsonjs-strftime/index.js");
require.alias("johntron-moment/moment.js", "scheduler/deps/moment/moment.js");
require.alias("johntron-moment/locale/af.js", "scheduler/deps/moment/locale/af.js");
require.alias("johntron-moment/locale/ar-ma.js", "scheduler/deps/moment/locale/ar-ma.js");
require.alias("johntron-moment/locale/ar-sa.js", "scheduler/deps/moment/locale/ar-sa.js");
require.alias("johntron-moment/locale/ar.js", "scheduler/deps/moment/locale/ar.js");
require.alias("johntron-moment/locale/az.js", "scheduler/deps/moment/locale/az.js");
require.alias("johntron-moment/locale/be.js", "scheduler/deps/moment/locale/be.js");
require.alias("johntron-moment/locale/bg.js", "scheduler/deps/moment/locale/bg.js");
require.alias("johntron-moment/locale/bn.js", "scheduler/deps/moment/locale/bn.js");
require.alias("johntron-moment/locale/bo.js", "scheduler/deps/moment/locale/bo.js");
require.alias("johntron-moment/locale/br.js", "scheduler/deps/moment/locale/br.js");
require.alias("johntron-moment/locale/bs.js", "scheduler/deps/moment/locale/bs.js");
require.alias("johntron-moment/locale/ca.js", "scheduler/deps/moment/locale/ca.js");
require.alias("johntron-moment/locale/cs.js", "scheduler/deps/moment/locale/cs.js");
require.alias("johntron-moment/locale/cv.js", "scheduler/deps/moment/locale/cv.js");
require.alias("johntron-moment/locale/cy.js", "scheduler/deps/moment/locale/cy.js");
require.alias("johntron-moment/locale/da.js", "scheduler/deps/moment/locale/da.js");
require.alias("johntron-moment/locale/de-at.js", "scheduler/deps/moment/locale/de-at.js");
require.alias("johntron-moment/locale/de.js", "scheduler/deps/moment/locale/de.js");
require.alias("johntron-moment/locale/el.js", "scheduler/deps/moment/locale/el.js");
require.alias("johntron-moment/locale/en-au.js", "scheduler/deps/moment/locale/en-au.js");
require.alias("johntron-moment/locale/en-ca.js", "scheduler/deps/moment/locale/en-ca.js");
require.alias("johntron-moment/locale/en-gb.js", "scheduler/deps/moment/locale/en-gb.js");
require.alias("johntron-moment/locale/eo.js", "scheduler/deps/moment/locale/eo.js");
require.alias("johntron-moment/locale/es.js", "scheduler/deps/moment/locale/es.js");
require.alias("johntron-moment/locale/et.js", "scheduler/deps/moment/locale/et.js");
require.alias("johntron-moment/locale/eu.js", "scheduler/deps/moment/locale/eu.js");
require.alias("johntron-moment/locale/fa.js", "scheduler/deps/moment/locale/fa.js");
require.alias("johntron-moment/locale/fi.js", "scheduler/deps/moment/locale/fi.js");
require.alias("johntron-moment/locale/fo.js", "scheduler/deps/moment/locale/fo.js");
require.alias("johntron-moment/locale/fr-ca.js", "scheduler/deps/moment/locale/fr-ca.js");
require.alias("johntron-moment/locale/fr.js", "scheduler/deps/moment/locale/fr.js");
require.alias("johntron-moment/locale/gl.js", "scheduler/deps/moment/locale/gl.js");
require.alias("johntron-moment/locale/he.js", "scheduler/deps/moment/locale/he.js");
require.alias("johntron-moment/locale/hi.js", "scheduler/deps/moment/locale/hi.js");
require.alias("johntron-moment/locale/hr.js", "scheduler/deps/moment/locale/hr.js");
require.alias("johntron-moment/locale/hu.js", "scheduler/deps/moment/locale/hu.js");
require.alias("johntron-moment/locale/hy-am.js", "scheduler/deps/moment/locale/hy-am.js");
require.alias("johntron-moment/locale/id.js", "scheduler/deps/moment/locale/id.js");
require.alias("johntron-moment/locale/is.js", "scheduler/deps/moment/locale/is.js");
require.alias("johntron-moment/locale/it.js", "scheduler/deps/moment/locale/it.js");
require.alias("johntron-moment/locale/ja.js", "scheduler/deps/moment/locale/ja.js");
require.alias("johntron-moment/locale/ka.js", "scheduler/deps/moment/locale/ka.js");
require.alias("johntron-moment/locale/km.js", "scheduler/deps/moment/locale/km.js");
require.alias("johntron-moment/locale/ko.js", "scheduler/deps/moment/locale/ko.js");
require.alias("johntron-moment/locale/lb.js", "scheduler/deps/moment/locale/lb.js");
require.alias("johntron-moment/locale/lt.js", "scheduler/deps/moment/locale/lt.js");
require.alias("johntron-moment/locale/lv.js", "scheduler/deps/moment/locale/lv.js");
require.alias("johntron-moment/locale/mk.js", "scheduler/deps/moment/locale/mk.js");
require.alias("johntron-moment/locale/ml.js", "scheduler/deps/moment/locale/ml.js");
require.alias("johntron-moment/locale/mr.js", "scheduler/deps/moment/locale/mr.js");
require.alias("johntron-moment/locale/ms-my.js", "scheduler/deps/moment/locale/ms-my.js");
require.alias("johntron-moment/locale/my.js", "scheduler/deps/moment/locale/my.js");
require.alias("johntron-moment/locale/nb.js", "scheduler/deps/moment/locale/nb.js");
require.alias("johntron-moment/locale/ne.js", "scheduler/deps/moment/locale/ne.js");
require.alias("johntron-moment/locale/nl.js", "scheduler/deps/moment/locale/nl.js");
require.alias("johntron-moment/locale/nn.js", "scheduler/deps/moment/locale/nn.js");
require.alias("johntron-moment/locale/pl.js", "scheduler/deps/moment/locale/pl.js");
require.alias("johntron-moment/locale/pt-br.js", "scheduler/deps/moment/locale/pt-br.js");
require.alias("johntron-moment/locale/pt.js", "scheduler/deps/moment/locale/pt.js");
require.alias("johntron-moment/locale/ro.js", "scheduler/deps/moment/locale/ro.js");
require.alias("johntron-moment/locale/ru.js", "scheduler/deps/moment/locale/ru.js");
require.alias("johntron-moment/locale/sk.js", "scheduler/deps/moment/locale/sk.js");
require.alias("johntron-moment/locale/sl.js", "scheduler/deps/moment/locale/sl.js");
require.alias("johntron-moment/locale/sq.js", "scheduler/deps/moment/locale/sq.js");
require.alias("johntron-moment/locale/sr-cyrl.js", "scheduler/deps/moment/locale/sr-cyrl.js");
require.alias("johntron-moment/locale/sr.js", "scheduler/deps/moment/locale/sr.js");
require.alias("johntron-moment/locale/sv.js", "scheduler/deps/moment/locale/sv.js");
require.alias("johntron-moment/locale/ta.js", "scheduler/deps/moment/locale/ta.js");
require.alias("johntron-moment/locale/th.js", "scheduler/deps/moment/locale/th.js");
require.alias("johntron-moment/locale/tl-ph.js", "scheduler/deps/moment/locale/tl-ph.js");
require.alias("johntron-moment/locale/tr.js", "scheduler/deps/moment/locale/tr.js");
require.alias("johntron-moment/locale/tzm-latn.js", "scheduler/deps/moment/locale/tzm-latn.js");
require.alias("johntron-moment/locale/tzm.js", "scheduler/deps/moment/locale/tzm.js");
require.alias("johntron-moment/locale/uk.js", "scheduler/deps/moment/locale/uk.js");
require.alias("johntron-moment/locale/uz.js", "scheduler/deps/moment/locale/uz.js");
require.alias("johntron-moment/locale/vi.js", "scheduler/deps/moment/locale/vi.js");
require.alias("johntron-moment/locale/zh-cn.js", "scheduler/deps/moment/locale/zh-cn.js");
require.alias("johntron-moment/locale/zh-tw.js", "scheduler/deps/moment/locale/zh-tw.js");
require.alias("johntron-moment/moment.js", "scheduler/deps/moment/index.js");
require.alias("johntron-moment/moment.js", "johntron-moment/index.js");
require.alias("johntron-moment-timezone/index.js", "scheduler/deps/moment-timezone/index.js");
require.alias("johntron-moment-timezone/moment-timezone.js", "scheduler/deps/moment-timezone/moment-timezone.js");
require.alias("johntron-moment-timezone/index.js", "scheduler/deps/moment-timezone/index.js");
require.alias("johntron-moment/moment.js", "johntron-moment-timezone/deps/moment/moment.js");
require.alias("johntron-moment/locale/af.js", "johntron-moment-timezone/deps/moment/locale/af.js");
require.alias("johntron-moment/locale/ar-ma.js", "johntron-moment-timezone/deps/moment/locale/ar-ma.js");
require.alias("johntron-moment/locale/ar-sa.js", "johntron-moment-timezone/deps/moment/locale/ar-sa.js");
require.alias("johntron-moment/locale/ar.js", "johntron-moment-timezone/deps/moment/locale/ar.js");
require.alias("johntron-moment/locale/az.js", "johntron-moment-timezone/deps/moment/locale/az.js");
require.alias("johntron-moment/locale/be.js", "johntron-moment-timezone/deps/moment/locale/be.js");
require.alias("johntron-moment/locale/bg.js", "johntron-moment-timezone/deps/moment/locale/bg.js");
require.alias("johntron-moment/locale/bn.js", "johntron-moment-timezone/deps/moment/locale/bn.js");
require.alias("johntron-moment/locale/bo.js", "johntron-moment-timezone/deps/moment/locale/bo.js");
require.alias("johntron-moment/locale/br.js", "johntron-moment-timezone/deps/moment/locale/br.js");
require.alias("johntron-moment/locale/bs.js", "johntron-moment-timezone/deps/moment/locale/bs.js");
require.alias("johntron-moment/locale/ca.js", "johntron-moment-timezone/deps/moment/locale/ca.js");
require.alias("johntron-moment/locale/cs.js", "johntron-moment-timezone/deps/moment/locale/cs.js");
require.alias("johntron-moment/locale/cv.js", "johntron-moment-timezone/deps/moment/locale/cv.js");
require.alias("johntron-moment/locale/cy.js", "johntron-moment-timezone/deps/moment/locale/cy.js");
require.alias("johntron-moment/locale/da.js", "johntron-moment-timezone/deps/moment/locale/da.js");
require.alias("johntron-moment/locale/de-at.js", "johntron-moment-timezone/deps/moment/locale/de-at.js");
require.alias("johntron-moment/locale/de.js", "johntron-moment-timezone/deps/moment/locale/de.js");
require.alias("johntron-moment/locale/el.js", "johntron-moment-timezone/deps/moment/locale/el.js");
require.alias("johntron-moment/locale/en-au.js", "johntron-moment-timezone/deps/moment/locale/en-au.js");
require.alias("johntron-moment/locale/en-ca.js", "johntron-moment-timezone/deps/moment/locale/en-ca.js");
require.alias("johntron-moment/locale/en-gb.js", "johntron-moment-timezone/deps/moment/locale/en-gb.js");
require.alias("johntron-moment/locale/eo.js", "johntron-moment-timezone/deps/moment/locale/eo.js");
require.alias("johntron-moment/locale/es.js", "johntron-moment-timezone/deps/moment/locale/es.js");
require.alias("johntron-moment/locale/et.js", "johntron-moment-timezone/deps/moment/locale/et.js");
require.alias("johntron-moment/locale/eu.js", "johntron-moment-timezone/deps/moment/locale/eu.js");
require.alias("johntron-moment/locale/fa.js", "johntron-moment-timezone/deps/moment/locale/fa.js");
require.alias("johntron-moment/locale/fi.js", "johntron-moment-timezone/deps/moment/locale/fi.js");
require.alias("johntron-moment/locale/fo.js", "johntron-moment-timezone/deps/moment/locale/fo.js");
require.alias("johntron-moment/locale/fr-ca.js", "johntron-moment-timezone/deps/moment/locale/fr-ca.js");
require.alias("johntron-moment/locale/fr.js", "johntron-moment-timezone/deps/moment/locale/fr.js");
require.alias("johntron-moment/locale/gl.js", "johntron-moment-timezone/deps/moment/locale/gl.js");
require.alias("johntron-moment/locale/he.js", "johntron-moment-timezone/deps/moment/locale/he.js");
require.alias("johntron-moment/locale/hi.js", "johntron-moment-timezone/deps/moment/locale/hi.js");
require.alias("johntron-moment/locale/hr.js", "johntron-moment-timezone/deps/moment/locale/hr.js");
require.alias("johntron-moment/locale/hu.js", "johntron-moment-timezone/deps/moment/locale/hu.js");
require.alias("johntron-moment/locale/hy-am.js", "johntron-moment-timezone/deps/moment/locale/hy-am.js");
require.alias("johntron-moment/locale/id.js", "johntron-moment-timezone/deps/moment/locale/id.js");
require.alias("johntron-moment/locale/is.js", "johntron-moment-timezone/deps/moment/locale/is.js");
require.alias("johntron-moment/locale/it.js", "johntron-moment-timezone/deps/moment/locale/it.js");
require.alias("johntron-moment/locale/ja.js", "johntron-moment-timezone/deps/moment/locale/ja.js");
require.alias("johntron-moment/locale/ka.js", "johntron-moment-timezone/deps/moment/locale/ka.js");
require.alias("johntron-moment/locale/km.js", "johntron-moment-timezone/deps/moment/locale/km.js");
require.alias("johntron-moment/locale/ko.js", "johntron-moment-timezone/deps/moment/locale/ko.js");
require.alias("johntron-moment/locale/lb.js", "johntron-moment-timezone/deps/moment/locale/lb.js");
require.alias("johntron-moment/locale/lt.js", "johntron-moment-timezone/deps/moment/locale/lt.js");
require.alias("johntron-moment/locale/lv.js", "johntron-moment-timezone/deps/moment/locale/lv.js");
require.alias("johntron-moment/locale/mk.js", "johntron-moment-timezone/deps/moment/locale/mk.js");
require.alias("johntron-moment/locale/ml.js", "johntron-moment-timezone/deps/moment/locale/ml.js");
require.alias("johntron-moment/locale/mr.js", "johntron-moment-timezone/deps/moment/locale/mr.js");
require.alias("johntron-moment/locale/ms-my.js", "johntron-moment-timezone/deps/moment/locale/ms-my.js");
require.alias("johntron-moment/locale/my.js", "johntron-moment-timezone/deps/moment/locale/my.js");
require.alias("johntron-moment/locale/nb.js", "johntron-moment-timezone/deps/moment/locale/nb.js");
require.alias("johntron-moment/locale/ne.js", "johntron-moment-timezone/deps/moment/locale/ne.js");
require.alias("johntron-moment/locale/nl.js", "johntron-moment-timezone/deps/moment/locale/nl.js");
require.alias("johntron-moment/locale/nn.js", "johntron-moment-timezone/deps/moment/locale/nn.js");
require.alias("johntron-moment/locale/pl.js", "johntron-moment-timezone/deps/moment/locale/pl.js");
require.alias("johntron-moment/locale/pt-br.js", "johntron-moment-timezone/deps/moment/locale/pt-br.js");
require.alias("johntron-moment/locale/pt.js", "johntron-moment-timezone/deps/moment/locale/pt.js");
require.alias("johntron-moment/locale/ro.js", "johntron-moment-timezone/deps/moment/locale/ro.js");
require.alias("johntron-moment/locale/ru.js", "johntron-moment-timezone/deps/moment/locale/ru.js");
require.alias("johntron-moment/locale/sk.js", "johntron-moment-timezone/deps/moment/locale/sk.js");
require.alias("johntron-moment/locale/sl.js", "johntron-moment-timezone/deps/moment/locale/sl.js");
require.alias("johntron-moment/locale/sq.js", "johntron-moment-timezone/deps/moment/locale/sq.js");
require.alias("johntron-moment/locale/sr-cyrl.js", "johntron-moment-timezone/deps/moment/locale/sr-cyrl.js");
require.alias("johntron-moment/locale/sr.js", "johntron-moment-timezone/deps/moment/locale/sr.js");
require.alias("johntron-moment/locale/sv.js", "johntron-moment-timezone/deps/moment/locale/sv.js");
require.alias("johntron-moment/locale/ta.js", "johntron-moment-timezone/deps/moment/locale/ta.js");
require.alias("johntron-moment/locale/th.js", "johntron-moment-timezone/deps/moment/locale/th.js");
require.alias("johntron-moment/locale/tl-ph.js", "johntron-moment-timezone/deps/moment/locale/tl-ph.js");
require.alias("johntron-moment/locale/tr.js", "johntron-moment-timezone/deps/moment/locale/tr.js");
require.alias("johntron-moment/locale/tzm-latn.js", "johntron-moment-timezone/deps/moment/locale/tzm-latn.js");
require.alias("johntron-moment/locale/tzm.js", "johntron-moment-timezone/deps/moment/locale/tzm.js");
require.alias("johntron-moment/locale/uk.js", "johntron-moment-timezone/deps/moment/locale/uk.js");
require.alias("johntron-moment/locale/uz.js", "johntron-moment-timezone/deps/moment/locale/uz.js");
require.alias("johntron-moment/locale/vi.js", "johntron-moment-timezone/deps/moment/locale/vi.js");
require.alias("johntron-moment/locale/zh-cn.js", "johntron-moment-timezone/deps/moment/locale/zh-cn.js");
require.alias("johntron-moment/locale/zh-tw.js", "johntron-moment-timezone/deps/moment/locale/zh-tw.js");
require.alias("johntron-moment/moment.js", "johntron-moment-timezone/deps/moment/index.js");
require.alias("johntron-moment/moment.js", "johntron-moment/index.js");
require.alias("johntron-moment-timezone/index.js", "johntron-moment-timezone/index.js");
require.alias("jashkenas-underscore/underscore.js", "scheduler/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "scheduler/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("segmentio-validate-form/lib/adapter.js", "scheduler/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "scheduler/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "scheduler/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "scheduler/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "scheduler/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("test-view-model/index.js", "scheduler/deps/test-view-model/index.js");
require.alias("test-view-model/index.js", "scheduler/deps/test-view-model/index.js");
require.alias("player/index.js", "test-view-model/deps/player/index.js");
require.alias("player/delegates/test-view-model.js", "test-view-model/deps/player/delegates/test-view-model.js");
require.alias("player/templates/header.js", "test-view-model/deps/player/templates/header.js");
require.alias("player/index.js", "test-view-model/deps/player/index.js");
require.alias("component-domify/index.js", "player/deps/domify/index.js");

require.alias("utility-functions/index.js", "player/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "player/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("player/index.js", "player/index.js");
require.alias("utility-functions/index.js", "test-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "test-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("test-view-model/index.js", "test-view-model/index.js");
require.alias("utility-functions/index.js", "scheduler/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "scheduler/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("agenda/index.js", "scheduler/deps/agenda/index.js");
require.alias("agenda/views/agenda-event.js", "scheduler/deps/agenda/views/agenda-event.js");
require.alias("agenda/views/agenda-date.js", "scheduler/deps/agenda/views/agenda-date.js");
require.alias("agenda/models/agenda.js", "scheduler/deps/agenda/models/agenda.js");
require.alias("agenda/models/agenda-event.js", "scheduler/deps/agenda/models/agenda-event.js");
require.alias("agenda/templates/index.js", "scheduler/deps/agenda/templates/index.js");
require.alias("agenda/templates/agenda-event.js", "scheduler/deps/agenda/templates/agenda-event.js");
require.alias("agenda/templates/agenda-date.js", "scheduler/deps/agenda/templates/agenda-date.js");
require.alias("agenda/templates/loading-more.js", "scheduler/deps/agenda/templates/loading-more.js");
require.alias("agenda/index.js", "scheduler/deps/agenda/index.js");
require.alias("component-domify/index.js", "agenda/deps/domify/index.js");

require.alias("component-classes/index.js", "agenda/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("johntron-model/lib/index.js", "agenda/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "agenda/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "agenda/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "agenda/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("component-event/index.js", "agenda/deps/event/index.js");

require.alias("johntron-superagent/lib/client.js", "agenda/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "agenda/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-moment/moment.js", "agenda/deps/moment/moment.js");
require.alias("johntron-moment/locale/af.js", "agenda/deps/moment/locale/af.js");
require.alias("johntron-moment/locale/ar-ma.js", "agenda/deps/moment/locale/ar-ma.js");
require.alias("johntron-moment/locale/ar-sa.js", "agenda/deps/moment/locale/ar-sa.js");
require.alias("johntron-moment/locale/ar.js", "agenda/deps/moment/locale/ar.js");
require.alias("johntron-moment/locale/az.js", "agenda/deps/moment/locale/az.js");
require.alias("johntron-moment/locale/be.js", "agenda/deps/moment/locale/be.js");
require.alias("johntron-moment/locale/bg.js", "agenda/deps/moment/locale/bg.js");
require.alias("johntron-moment/locale/bn.js", "agenda/deps/moment/locale/bn.js");
require.alias("johntron-moment/locale/bo.js", "agenda/deps/moment/locale/bo.js");
require.alias("johntron-moment/locale/br.js", "agenda/deps/moment/locale/br.js");
require.alias("johntron-moment/locale/bs.js", "agenda/deps/moment/locale/bs.js");
require.alias("johntron-moment/locale/ca.js", "agenda/deps/moment/locale/ca.js");
require.alias("johntron-moment/locale/cs.js", "agenda/deps/moment/locale/cs.js");
require.alias("johntron-moment/locale/cv.js", "agenda/deps/moment/locale/cv.js");
require.alias("johntron-moment/locale/cy.js", "agenda/deps/moment/locale/cy.js");
require.alias("johntron-moment/locale/da.js", "agenda/deps/moment/locale/da.js");
require.alias("johntron-moment/locale/de-at.js", "agenda/deps/moment/locale/de-at.js");
require.alias("johntron-moment/locale/de.js", "agenda/deps/moment/locale/de.js");
require.alias("johntron-moment/locale/el.js", "agenda/deps/moment/locale/el.js");
require.alias("johntron-moment/locale/en-au.js", "agenda/deps/moment/locale/en-au.js");
require.alias("johntron-moment/locale/en-ca.js", "agenda/deps/moment/locale/en-ca.js");
require.alias("johntron-moment/locale/en-gb.js", "agenda/deps/moment/locale/en-gb.js");
require.alias("johntron-moment/locale/eo.js", "agenda/deps/moment/locale/eo.js");
require.alias("johntron-moment/locale/es.js", "agenda/deps/moment/locale/es.js");
require.alias("johntron-moment/locale/et.js", "agenda/deps/moment/locale/et.js");
require.alias("johntron-moment/locale/eu.js", "agenda/deps/moment/locale/eu.js");
require.alias("johntron-moment/locale/fa.js", "agenda/deps/moment/locale/fa.js");
require.alias("johntron-moment/locale/fi.js", "agenda/deps/moment/locale/fi.js");
require.alias("johntron-moment/locale/fo.js", "agenda/deps/moment/locale/fo.js");
require.alias("johntron-moment/locale/fr-ca.js", "agenda/deps/moment/locale/fr-ca.js");
require.alias("johntron-moment/locale/fr.js", "agenda/deps/moment/locale/fr.js");
require.alias("johntron-moment/locale/gl.js", "agenda/deps/moment/locale/gl.js");
require.alias("johntron-moment/locale/he.js", "agenda/deps/moment/locale/he.js");
require.alias("johntron-moment/locale/hi.js", "agenda/deps/moment/locale/hi.js");
require.alias("johntron-moment/locale/hr.js", "agenda/deps/moment/locale/hr.js");
require.alias("johntron-moment/locale/hu.js", "agenda/deps/moment/locale/hu.js");
require.alias("johntron-moment/locale/hy-am.js", "agenda/deps/moment/locale/hy-am.js");
require.alias("johntron-moment/locale/id.js", "agenda/deps/moment/locale/id.js");
require.alias("johntron-moment/locale/is.js", "agenda/deps/moment/locale/is.js");
require.alias("johntron-moment/locale/it.js", "agenda/deps/moment/locale/it.js");
require.alias("johntron-moment/locale/ja.js", "agenda/deps/moment/locale/ja.js");
require.alias("johntron-moment/locale/ka.js", "agenda/deps/moment/locale/ka.js");
require.alias("johntron-moment/locale/km.js", "agenda/deps/moment/locale/km.js");
require.alias("johntron-moment/locale/ko.js", "agenda/deps/moment/locale/ko.js");
require.alias("johntron-moment/locale/lb.js", "agenda/deps/moment/locale/lb.js");
require.alias("johntron-moment/locale/lt.js", "agenda/deps/moment/locale/lt.js");
require.alias("johntron-moment/locale/lv.js", "agenda/deps/moment/locale/lv.js");
require.alias("johntron-moment/locale/mk.js", "agenda/deps/moment/locale/mk.js");
require.alias("johntron-moment/locale/ml.js", "agenda/deps/moment/locale/ml.js");
require.alias("johntron-moment/locale/mr.js", "agenda/deps/moment/locale/mr.js");
require.alias("johntron-moment/locale/ms-my.js", "agenda/deps/moment/locale/ms-my.js");
require.alias("johntron-moment/locale/my.js", "agenda/deps/moment/locale/my.js");
require.alias("johntron-moment/locale/nb.js", "agenda/deps/moment/locale/nb.js");
require.alias("johntron-moment/locale/ne.js", "agenda/deps/moment/locale/ne.js");
require.alias("johntron-moment/locale/nl.js", "agenda/deps/moment/locale/nl.js");
require.alias("johntron-moment/locale/nn.js", "agenda/deps/moment/locale/nn.js");
require.alias("johntron-moment/locale/pl.js", "agenda/deps/moment/locale/pl.js");
require.alias("johntron-moment/locale/pt-br.js", "agenda/deps/moment/locale/pt-br.js");
require.alias("johntron-moment/locale/pt.js", "agenda/deps/moment/locale/pt.js");
require.alias("johntron-moment/locale/ro.js", "agenda/deps/moment/locale/ro.js");
require.alias("johntron-moment/locale/ru.js", "agenda/deps/moment/locale/ru.js");
require.alias("johntron-moment/locale/sk.js", "agenda/deps/moment/locale/sk.js");
require.alias("johntron-moment/locale/sl.js", "agenda/deps/moment/locale/sl.js");
require.alias("johntron-moment/locale/sq.js", "agenda/deps/moment/locale/sq.js");
require.alias("johntron-moment/locale/sr-cyrl.js", "agenda/deps/moment/locale/sr-cyrl.js");
require.alias("johntron-moment/locale/sr.js", "agenda/deps/moment/locale/sr.js");
require.alias("johntron-moment/locale/sv.js", "agenda/deps/moment/locale/sv.js");
require.alias("johntron-moment/locale/ta.js", "agenda/deps/moment/locale/ta.js");
require.alias("johntron-moment/locale/th.js", "agenda/deps/moment/locale/th.js");
require.alias("johntron-moment/locale/tl-ph.js", "agenda/deps/moment/locale/tl-ph.js");
require.alias("johntron-moment/locale/tr.js", "agenda/deps/moment/locale/tr.js");
require.alias("johntron-moment/locale/tzm-latn.js", "agenda/deps/moment/locale/tzm-latn.js");
require.alias("johntron-moment/locale/tzm.js", "agenda/deps/moment/locale/tzm.js");
require.alias("johntron-moment/locale/uk.js", "agenda/deps/moment/locale/uk.js");
require.alias("johntron-moment/locale/uz.js", "agenda/deps/moment/locale/uz.js");
require.alias("johntron-moment/locale/vi.js", "agenda/deps/moment/locale/vi.js");
require.alias("johntron-moment/locale/zh-cn.js", "agenda/deps/moment/locale/zh-cn.js");
require.alias("johntron-moment/locale/zh-tw.js", "agenda/deps/moment/locale/zh-tw.js");
require.alias("johntron-moment/moment.js", "agenda/deps/moment/index.js");
require.alias("johntron-moment/moment.js", "johntron-moment/index.js");
require.alias("johntron-superagent-no-cache/index.js", "agenda/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "agenda/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("async-poller/index.js", "agenda/deps/async-poller/index.js");
require.alias("async-poller/index.js", "agenda/deps/async-poller/index.js");
require.alias("async-poller/index.js", "async-poller/index.js");
require.alias("loading-state/index.js", "agenda/deps/loading-state/index.js");
require.alias("loading-state/template.js", "agenda/deps/loading-state/template.js");
require.alias("loading-state/index.js", "agenda/deps/loading-state/index.js");
require.alias("component-domify/index.js", "loading-state/deps/domify/index.js");

require.alias("loading-state/index.js", "loading-state/index.js");
require.alias("network-settings-view/index.js", "agenda/deps/network-settings-view/index.js");
require.alias("network-settings-view/template.js", "agenda/deps/network-settings-view/template.js");
require.alias("network-settings-view/index.js", "agenda/deps/network-settings-view/index.js");
require.alias("component-domify/index.js", "network-settings-view/deps/domify/index.js");

require.alias("component-event/index.js", "network-settings-view/deps/event/index.js");

require.alias("component-classes/index.js", "network-settings-view/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("segmentio-validate-form/lib/adapter.js", "network-settings-view/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "network-settings-view/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "network-settings-view/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "network-settings-view/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "network-settings-view/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("johntron-is-ip-address/index.js", "network-settings-view/deps/is-ip-address/index.js");

require.alias("network-settings-view/index.js", "network-settings-view/index.js");
require.alias("interface-model/index.js", "agenda/deps/interface-model/index.js");
require.alias("interface-model/index.js", "agenda/deps/interface-model/index.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "interface-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "interface-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "interface-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("interface-model/index.js", "interface-model/index.js");
require.alias("interface-selector/index.js", "agenda/deps/interface-selector/index.js");
require.alias("interface-selector/templates/interface.js", "agenda/deps/interface-selector/templates/interface.js");
require.alias("interface-selector/templates/template.js", "agenda/deps/interface-selector/templates/template.js");
require.alias("interface-selector/index.js", "agenda/deps/interface-selector/index.js");
require.alias("component-domify/index.js", "interface-selector/deps/domify/index.js");

require.alias("component-emitter/index.js", "interface-selector/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-classes/index.js", "interface-selector/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-event/index.js", "interface-selector/deps/event/index.js");

require.alias("interface-model/index.js", "interface-selector/deps/interface-model/index.js");
require.alias("interface-model/index.js", "interface-selector/deps/interface-model/index.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "interface-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "interface-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "interface-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("interface-model/index.js", "interface-model/index.js");
require.alias("interface-selector/index.js", "interface-selector/index.js");
require.alias("agenda/index.js", "agenda/index.js");
require.alias("bootstrap-timepicker/index.js", "scheduler/deps/bootstrap-timepicker/index.js");
require.alias("bootstrap-timepicker/js/bootstrap-timepicker.min.js", "scheduler/deps/bootstrap-timepicker/js/bootstrap-timepicker.min.js");
require.alias("bootstrap-timepicker/index.js", "scheduler/deps/bootstrap-timepicker/index.js");
require.alias("bootstrap-timepicker/index.js", "bootstrap-timepicker/index.js");
require.alias("async-poller/index.js", "scheduler/deps/async-poller/index.js");
require.alias("async-poller/index.js", "scheduler/deps/async-poller/index.js");
require.alias("async-poller/index.js", "async-poller/index.js");
require.alias("scheduler/index.js", "scheduler/index.js");
require.alias("traffic-recorder/index.js", "boot/deps/traffic-recorder/index.js");
require.alias("traffic-recorder/views/recorder.js", "boot/deps/traffic-recorder/views/recorder.js");
require.alias("traffic-recorder/views/capture.js", "boot/deps/traffic-recorder/views/capture.js");
require.alias("traffic-recorder/views/capture-progress.js", "boot/deps/traffic-recorder/views/capture-progress.js");
require.alias("traffic-recorder/views/delegates/recorder-view.js", "boot/deps/traffic-recorder/views/delegates/recorder-view.js");
require.alias("traffic-recorder/views/delegates/recorder-edit.js", "boot/deps/traffic-recorder/views/delegates/recorder-edit.js");
require.alias("traffic-recorder/views/delegates/recorder-history.js", "boot/deps/traffic-recorder/views/delegates/recorder-history.js");
require.alias("traffic-recorder/models/recorder.js", "boot/deps/traffic-recorder/models/recorder.js");
require.alias("traffic-recorder/models/recorder-collection.js", "boot/deps/traffic-recorder/models/recorder-collection.js");
require.alias("traffic-recorder/models/capture.js", "boot/deps/traffic-recorder/models/capture.js");
require.alias("traffic-recorder/models/capture-collection.js", "boot/deps/traffic-recorder/models/capture-collection.js");
require.alias("traffic-recorder/templates/index.js", "boot/deps/traffic-recorder/templates/index.js");
require.alias("traffic-recorder/templates/capture-progress.js", "boot/deps/traffic-recorder/templates/capture-progress.js");
require.alias("traffic-recorder/templates/recorder-view.js", "boot/deps/traffic-recorder/templates/recorder-view.js");
require.alias("traffic-recorder/templates/recorder-edit.js", "boot/deps/traffic-recorder/templates/recorder-edit.js");
require.alias("traffic-recorder/templates/recorder-history.js", "boot/deps/traffic-recorder/templates/recorder-history.js");
require.alias("traffic-recorder/templates/last-capture.js", "boot/deps/traffic-recorder/templates/last-capture.js");
require.alias("traffic-recorder/templates/historical-capture.js", "boot/deps/traffic-recorder/templates/historical-capture.js");
require.alias("traffic-recorder/test/features.js", "boot/deps/traffic-recorder/test/features.js");
require.alias("traffic-recorder/features/recorder.feature.js", "boot/deps/traffic-recorder/features/recorder.feature.js");
require.alias("traffic-recorder/features/steps/recorder.js", "boot/deps/traffic-recorder/features/steps/recorder.js");
require.alias("traffic-recorder/index.js", "boot/deps/traffic-recorder/index.js");
require.alias("johntron-model/lib/index.js", "traffic-recorder/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "traffic-recorder/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "traffic-recorder/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "traffic-recorder/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "traffic-recorder/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("component-domify/index.js", "traffic-recorder/deps/domify/index.js");

require.alias("segmentio-validate-form/lib/adapter.js", "traffic-recorder/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "traffic-recorder/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "traffic-recorder/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "traffic-recorder/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "traffic-recorder/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("johntron-superagent/lib/client.js", "traffic-recorder/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "traffic-recorder/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "traffic-recorder/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "traffic-recorder/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("component-classes/index.js", "traffic-recorder/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-emitter/index.js", "traffic-recorder/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-event/index.js", "traffic-recorder/deps/event/index.js");

require.alias("johntron-moment/moment.js", "traffic-recorder/deps/moment/moment.js");
require.alias("johntron-moment/locale/af.js", "traffic-recorder/deps/moment/locale/af.js");
require.alias("johntron-moment/locale/ar-ma.js", "traffic-recorder/deps/moment/locale/ar-ma.js");
require.alias("johntron-moment/locale/ar-sa.js", "traffic-recorder/deps/moment/locale/ar-sa.js");
require.alias("johntron-moment/locale/ar.js", "traffic-recorder/deps/moment/locale/ar.js");
require.alias("johntron-moment/locale/az.js", "traffic-recorder/deps/moment/locale/az.js");
require.alias("johntron-moment/locale/be.js", "traffic-recorder/deps/moment/locale/be.js");
require.alias("johntron-moment/locale/bg.js", "traffic-recorder/deps/moment/locale/bg.js");
require.alias("johntron-moment/locale/bn.js", "traffic-recorder/deps/moment/locale/bn.js");
require.alias("johntron-moment/locale/bo.js", "traffic-recorder/deps/moment/locale/bo.js");
require.alias("johntron-moment/locale/br.js", "traffic-recorder/deps/moment/locale/br.js");
require.alias("johntron-moment/locale/bs.js", "traffic-recorder/deps/moment/locale/bs.js");
require.alias("johntron-moment/locale/ca.js", "traffic-recorder/deps/moment/locale/ca.js");
require.alias("johntron-moment/locale/cs.js", "traffic-recorder/deps/moment/locale/cs.js");
require.alias("johntron-moment/locale/cv.js", "traffic-recorder/deps/moment/locale/cv.js");
require.alias("johntron-moment/locale/cy.js", "traffic-recorder/deps/moment/locale/cy.js");
require.alias("johntron-moment/locale/da.js", "traffic-recorder/deps/moment/locale/da.js");
require.alias("johntron-moment/locale/de-at.js", "traffic-recorder/deps/moment/locale/de-at.js");
require.alias("johntron-moment/locale/de.js", "traffic-recorder/deps/moment/locale/de.js");
require.alias("johntron-moment/locale/el.js", "traffic-recorder/deps/moment/locale/el.js");
require.alias("johntron-moment/locale/en-au.js", "traffic-recorder/deps/moment/locale/en-au.js");
require.alias("johntron-moment/locale/en-ca.js", "traffic-recorder/deps/moment/locale/en-ca.js");
require.alias("johntron-moment/locale/en-gb.js", "traffic-recorder/deps/moment/locale/en-gb.js");
require.alias("johntron-moment/locale/eo.js", "traffic-recorder/deps/moment/locale/eo.js");
require.alias("johntron-moment/locale/es.js", "traffic-recorder/deps/moment/locale/es.js");
require.alias("johntron-moment/locale/et.js", "traffic-recorder/deps/moment/locale/et.js");
require.alias("johntron-moment/locale/eu.js", "traffic-recorder/deps/moment/locale/eu.js");
require.alias("johntron-moment/locale/fa.js", "traffic-recorder/deps/moment/locale/fa.js");
require.alias("johntron-moment/locale/fi.js", "traffic-recorder/deps/moment/locale/fi.js");
require.alias("johntron-moment/locale/fo.js", "traffic-recorder/deps/moment/locale/fo.js");
require.alias("johntron-moment/locale/fr-ca.js", "traffic-recorder/deps/moment/locale/fr-ca.js");
require.alias("johntron-moment/locale/fr.js", "traffic-recorder/deps/moment/locale/fr.js");
require.alias("johntron-moment/locale/gl.js", "traffic-recorder/deps/moment/locale/gl.js");
require.alias("johntron-moment/locale/he.js", "traffic-recorder/deps/moment/locale/he.js");
require.alias("johntron-moment/locale/hi.js", "traffic-recorder/deps/moment/locale/hi.js");
require.alias("johntron-moment/locale/hr.js", "traffic-recorder/deps/moment/locale/hr.js");
require.alias("johntron-moment/locale/hu.js", "traffic-recorder/deps/moment/locale/hu.js");
require.alias("johntron-moment/locale/hy-am.js", "traffic-recorder/deps/moment/locale/hy-am.js");
require.alias("johntron-moment/locale/id.js", "traffic-recorder/deps/moment/locale/id.js");
require.alias("johntron-moment/locale/is.js", "traffic-recorder/deps/moment/locale/is.js");
require.alias("johntron-moment/locale/it.js", "traffic-recorder/deps/moment/locale/it.js");
require.alias("johntron-moment/locale/ja.js", "traffic-recorder/deps/moment/locale/ja.js");
require.alias("johntron-moment/locale/ka.js", "traffic-recorder/deps/moment/locale/ka.js");
require.alias("johntron-moment/locale/km.js", "traffic-recorder/deps/moment/locale/km.js");
require.alias("johntron-moment/locale/ko.js", "traffic-recorder/deps/moment/locale/ko.js");
require.alias("johntron-moment/locale/lb.js", "traffic-recorder/deps/moment/locale/lb.js");
require.alias("johntron-moment/locale/lt.js", "traffic-recorder/deps/moment/locale/lt.js");
require.alias("johntron-moment/locale/lv.js", "traffic-recorder/deps/moment/locale/lv.js");
require.alias("johntron-moment/locale/mk.js", "traffic-recorder/deps/moment/locale/mk.js");
require.alias("johntron-moment/locale/ml.js", "traffic-recorder/deps/moment/locale/ml.js");
require.alias("johntron-moment/locale/mr.js", "traffic-recorder/deps/moment/locale/mr.js");
require.alias("johntron-moment/locale/ms-my.js", "traffic-recorder/deps/moment/locale/ms-my.js");
require.alias("johntron-moment/locale/my.js", "traffic-recorder/deps/moment/locale/my.js");
require.alias("johntron-moment/locale/nb.js", "traffic-recorder/deps/moment/locale/nb.js");
require.alias("johntron-moment/locale/ne.js", "traffic-recorder/deps/moment/locale/ne.js");
require.alias("johntron-moment/locale/nl.js", "traffic-recorder/deps/moment/locale/nl.js");
require.alias("johntron-moment/locale/nn.js", "traffic-recorder/deps/moment/locale/nn.js");
require.alias("johntron-moment/locale/pl.js", "traffic-recorder/deps/moment/locale/pl.js");
require.alias("johntron-moment/locale/pt-br.js", "traffic-recorder/deps/moment/locale/pt-br.js");
require.alias("johntron-moment/locale/pt.js", "traffic-recorder/deps/moment/locale/pt.js");
require.alias("johntron-moment/locale/ro.js", "traffic-recorder/deps/moment/locale/ro.js");
require.alias("johntron-moment/locale/ru.js", "traffic-recorder/deps/moment/locale/ru.js");
require.alias("johntron-moment/locale/sk.js", "traffic-recorder/deps/moment/locale/sk.js");
require.alias("johntron-moment/locale/sl.js", "traffic-recorder/deps/moment/locale/sl.js");
require.alias("johntron-moment/locale/sq.js", "traffic-recorder/deps/moment/locale/sq.js");
require.alias("johntron-moment/locale/sr-cyrl.js", "traffic-recorder/deps/moment/locale/sr-cyrl.js");
require.alias("johntron-moment/locale/sr.js", "traffic-recorder/deps/moment/locale/sr.js");
require.alias("johntron-moment/locale/sv.js", "traffic-recorder/deps/moment/locale/sv.js");
require.alias("johntron-moment/locale/ta.js", "traffic-recorder/deps/moment/locale/ta.js");
require.alias("johntron-moment/locale/th.js", "traffic-recorder/deps/moment/locale/th.js");
require.alias("johntron-moment/locale/tl-ph.js", "traffic-recorder/deps/moment/locale/tl-ph.js");
require.alias("johntron-moment/locale/tr.js", "traffic-recorder/deps/moment/locale/tr.js");
require.alias("johntron-moment/locale/tzm-latn.js", "traffic-recorder/deps/moment/locale/tzm-latn.js");
require.alias("johntron-moment/locale/tzm.js", "traffic-recorder/deps/moment/locale/tzm.js");
require.alias("johntron-moment/locale/uk.js", "traffic-recorder/deps/moment/locale/uk.js");
require.alias("johntron-moment/locale/uz.js", "traffic-recorder/deps/moment/locale/uz.js");
require.alias("johntron-moment/locale/vi.js", "traffic-recorder/deps/moment/locale/vi.js");
require.alias("johntron-moment/locale/zh-cn.js", "traffic-recorder/deps/moment/locale/zh-cn.js");
require.alias("johntron-moment/locale/zh-tw.js", "traffic-recorder/deps/moment/locale/zh-tw.js");
require.alias("johntron-moment/moment.js", "traffic-recorder/deps/moment/index.js");
require.alias("johntron-moment/moment.js", "johntron-moment/index.js");
require.alias("async-poller/index.js", "traffic-recorder/deps/async-poller/index.js");
require.alias("async-poller/index.js", "traffic-recorder/deps/async-poller/index.js");
require.alias("async-poller/index.js", "async-poller/index.js");
require.alias("interface-selector/index.js", "traffic-recorder/deps/interface-selector/index.js");
require.alias("interface-selector/templates/interface.js", "traffic-recorder/deps/interface-selector/templates/interface.js");
require.alias("interface-selector/templates/template.js", "traffic-recorder/deps/interface-selector/templates/template.js");
require.alias("interface-selector/index.js", "traffic-recorder/deps/interface-selector/index.js");
require.alias("component-domify/index.js", "interface-selector/deps/domify/index.js");

require.alias("component-emitter/index.js", "interface-selector/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-classes/index.js", "interface-selector/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-event/index.js", "interface-selector/deps/event/index.js");

require.alias("interface-model/index.js", "interface-selector/deps/interface-model/index.js");
require.alias("interface-model/index.js", "interface-selector/deps/interface-model/index.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "interface-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "interface-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "interface-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("interface-model/index.js", "interface-model/index.js");
require.alias("interface-selector/index.js", "interface-selector/index.js");
require.alias("interface-model/index.js", "traffic-recorder/deps/interface-model/index.js");
require.alias("interface-model/index.js", "traffic-recorder/deps/interface-model/index.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "interface-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "interface-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "interface-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("interface-model/index.js", "interface-model/index.js");
require.alias("capture-filter-chooser/index.js", "traffic-recorder/deps/capture-filter-chooser/index.js");
require.alias("capture-filter-chooser/template.js", "traffic-recorder/deps/capture-filter-chooser/template.js");
require.alias("capture-filter-chooser/index.js", "traffic-recorder/deps/capture-filter-chooser/index.js");
require.alias("component-domify/index.js", "capture-filter-chooser/deps/domify/index.js");

require.alias("component-event/index.js", "capture-filter-chooser/deps/event/index.js");

require.alias("component-emitter/index.js", "capture-filter-chooser/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-classes/index.js", "capture-filter-chooser/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("capture-filter-chooser/index.js", "capture-filter-chooser/index.js");
require.alias("batch-operator/index.js", "traffic-recorder/deps/batch-operator/index.js");
require.alias("batch-operator/template.js", "traffic-recorder/deps/batch-operator/template.js");
require.alias("batch-operator/index.js", "traffic-recorder/deps/batch-operator/index.js");
require.alias("component-emitter/index.js", "batch-operator/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-domify/index.js", "batch-operator/deps/domify/index.js");

require.alias("component-classes/index.js", "batch-operator/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-event/index.js", "batch-operator/deps/event/index.js");

require.alias("batch-operator/index.js", "batch-operator/index.js");
require.alias("paginator/index.js", "traffic-recorder/deps/paginator/index.js");
require.alias("paginator/template.js", "traffic-recorder/deps/paginator/template.js");
require.alias("paginator/index.js", "traffic-recorder/deps/paginator/index.js");
require.alias("component-emitter/index.js", "paginator/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-domify/index.js", "paginator/deps/domify/index.js");

require.alias("component-classes/index.js", "paginator/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-event/index.js", "paginator/deps/event/index.js");

require.alias("paginator/index.js", "paginator/index.js");

require.alias("traffic-recorder/index.js", "traffic-recorder/index.js");
require.alias("test-view-model/index.js", "boot/deps/test-view-model/index.js");
require.alias("test-view-model/index.js", "boot/deps/test-view-model/index.js");
require.alias("player/index.js", "test-view-model/deps/player/index.js");
require.alias("player/delegates/test-view-model.js", "test-view-model/deps/player/delegates/test-view-model.js");
require.alias("player/templates/header.js", "test-view-model/deps/player/templates/header.js");
require.alias("player/index.js", "test-view-model/deps/player/index.js");
require.alias("component-domify/index.js", "player/deps/domify/index.js");

require.alias("utility-functions/index.js", "player/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "player/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("player/index.js", "player/index.js");
require.alias("utility-functions/index.js", "test-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "test-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("test-view-model/index.js", "test-view-model/index.js");
require.alias("test-template-view-model/index.js", "boot/deps/test-template-view-model/index.js");
require.alias("test-template-view-model/index.js", "boot/deps/test-template-view-model/index.js");
require.alias("multicast-settings/view-model.js", "test-template-view-model/deps/multicast-settings/view-model.js");
require.alias("multicast-settings/view-model.js", "test-template-view-model/deps/multicast-settings/index.js");
require.alias("multicast-settings/view-model.js", "multicast-settings/index.js");
require.alias("test-template-view-model/index.js", "test-template-view-model/index.js");
require.alias("configured-test-view-model/index.js", "boot/deps/configured-test-view-model/index.js");
require.alias("configured-test-view-model/index.js", "boot/deps/configured-test-view-model/index.js");
require.alias("component-emitter/index.js", "configured-test-view-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("johntron-moment/moment.js", "configured-test-view-model/deps/moment/moment.js");
require.alias("johntron-moment/locale/af.js", "configured-test-view-model/deps/moment/locale/af.js");
require.alias("johntron-moment/locale/ar-ma.js", "configured-test-view-model/deps/moment/locale/ar-ma.js");
require.alias("johntron-moment/locale/ar-sa.js", "configured-test-view-model/deps/moment/locale/ar-sa.js");
require.alias("johntron-moment/locale/ar.js", "configured-test-view-model/deps/moment/locale/ar.js");
require.alias("johntron-moment/locale/az.js", "configured-test-view-model/deps/moment/locale/az.js");
require.alias("johntron-moment/locale/be.js", "configured-test-view-model/deps/moment/locale/be.js");
require.alias("johntron-moment/locale/bg.js", "configured-test-view-model/deps/moment/locale/bg.js");
require.alias("johntron-moment/locale/bn.js", "configured-test-view-model/deps/moment/locale/bn.js");
require.alias("johntron-moment/locale/bo.js", "configured-test-view-model/deps/moment/locale/bo.js");
require.alias("johntron-moment/locale/br.js", "configured-test-view-model/deps/moment/locale/br.js");
require.alias("johntron-moment/locale/bs.js", "configured-test-view-model/deps/moment/locale/bs.js");
require.alias("johntron-moment/locale/ca.js", "configured-test-view-model/deps/moment/locale/ca.js");
require.alias("johntron-moment/locale/cs.js", "configured-test-view-model/deps/moment/locale/cs.js");
require.alias("johntron-moment/locale/cv.js", "configured-test-view-model/deps/moment/locale/cv.js");
require.alias("johntron-moment/locale/cy.js", "configured-test-view-model/deps/moment/locale/cy.js");
require.alias("johntron-moment/locale/da.js", "configured-test-view-model/deps/moment/locale/da.js");
require.alias("johntron-moment/locale/de-at.js", "configured-test-view-model/deps/moment/locale/de-at.js");
require.alias("johntron-moment/locale/de.js", "configured-test-view-model/deps/moment/locale/de.js");
require.alias("johntron-moment/locale/el.js", "configured-test-view-model/deps/moment/locale/el.js");
require.alias("johntron-moment/locale/en-au.js", "configured-test-view-model/deps/moment/locale/en-au.js");
require.alias("johntron-moment/locale/en-ca.js", "configured-test-view-model/deps/moment/locale/en-ca.js");
require.alias("johntron-moment/locale/en-gb.js", "configured-test-view-model/deps/moment/locale/en-gb.js");
require.alias("johntron-moment/locale/eo.js", "configured-test-view-model/deps/moment/locale/eo.js");
require.alias("johntron-moment/locale/es.js", "configured-test-view-model/deps/moment/locale/es.js");
require.alias("johntron-moment/locale/et.js", "configured-test-view-model/deps/moment/locale/et.js");
require.alias("johntron-moment/locale/eu.js", "configured-test-view-model/deps/moment/locale/eu.js");
require.alias("johntron-moment/locale/fa.js", "configured-test-view-model/deps/moment/locale/fa.js");
require.alias("johntron-moment/locale/fi.js", "configured-test-view-model/deps/moment/locale/fi.js");
require.alias("johntron-moment/locale/fo.js", "configured-test-view-model/deps/moment/locale/fo.js");
require.alias("johntron-moment/locale/fr-ca.js", "configured-test-view-model/deps/moment/locale/fr-ca.js");
require.alias("johntron-moment/locale/fr.js", "configured-test-view-model/deps/moment/locale/fr.js");
require.alias("johntron-moment/locale/gl.js", "configured-test-view-model/deps/moment/locale/gl.js");
require.alias("johntron-moment/locale/he.js", "configured-test-view-model/deps/moment/locale/he.js");
require.alias("johntron-moment/locale/hi.js", "configured-test-view-model/deps/moment/locale/hi.js");
require.alias("johntron-moment/locale/hr.js", "configured-test-view-model/deps/moment/locale/hr.js");
require.alias("johntron-moment/locale/hu.js", "configured-test-view-model/deps/moment/locale/hu.js");
require.alias("johntron-moment/locale/hy-am.js", "configured-test-view-model/deps/moment/locale/hy-am.js");
require.alias("johntron-moment/locale/id.js", "configured-test-view-model/deps/moment/locale/id.js");
require.alias("johntron-moment/locale/is.js", "configured-test-view-model/deps/moment/locale/is.js");
require.alias("johntron-moment/locale/it.js", "configured-test-view-model/deps/moment/locale/it.js");
require.alias("johntron-moment/locale/ja.js", "configured-test-view-model/deps/moment/locale/ja.js");
require.alias("johntron-moment/locale/ka.js", "configured-test-view-model/deps/moment/locale/ka.js");
require.alias("johntron-moment/locale/km.js", "configured-test-view-model/deps/moment/locale/km.js");
require.alias("johntron-moment/locale/ko.js", "configured-test-view-model/deps/moment/locale/ko.js");
require.alias("johntron-moment/locale/lb.js", "configured-test-view-model/deps/moment/locale/lb.js");
require.alias("johntron-moment/locale/lt.js", "configured-test-view-model/deps/moment/locale/lt.js");
require.alias("johntron-moment/locale/lv.js", "configured-test-view-model/deps/moment/locale/lv.js");
require.alias("johntron-moment/locale/mk.js", "configured-test-view-model/deps/moment/locale/mk.js");
require.alias("johntron-moment/locale/ml.js", "configured-test-view-model/deps/moment/locale/ml.js");
require.alias("johntron-moment/locale/mr.js", "configured-test-view-model/deps/moment/locale/mr.js");
require.alias("johntron-moment/locale/ms-my.js", "configured-test-view-model/deps/moment/locale/ms-my.js");
require.alias("johntron-moment/locale/my.js", "configured-test-view-model/deps/moment/locale/my.js");
require.alias("johntron-moment/locale/nb.js", "configured-test-view-model/deps/moment/locale/nb.js");
require.alias("johntron-moment/locale/ne.js", "configured-test-view-model/deps/moment/locale/ne.js");
require.alias("johntron-moment/locale/nl.js", "configured-test-view-model/deps/moment/locale/nl.js");
require.alias("johntron-moment/locale/nn.js", "configured-test-view-model/deps/moment/locale/nn.js");
require.alias("johntron-moment/locale/pl.js", "configured-test-view-model/deps/moment/locale/pl.js");
require.alias("johntron-moment/locale/pt-br.js", "configured-test-view-model/deps/moment/locale/pt-br.js");
require.alias("johntron-moment/locale/pt.js", "configured-test-view-model/deps/moment/locale/pt.js");
require.alias("johntron-moment/locale/ro.js", "configured-test-view-model/deps/moment/locale/ro.js");
require.alias("johntron-moment/locale/ru.js", "configured-test-view-model/deps/moment/locale/ru.js");
require.alias("johntron-moment/locale/sk.js", "configured-test-view-model/deps/moment/locale/sk.js");
require.alias("johntron-moment/locale/sl.js", "configured-test-view-model/deps/moment/locale/sl.js");
require.alias("johntron-moment/locale/sq.js", "configured-test-view-model/deps/moment/locale/sq.js");
require.alias("johntron-moment/locale/sr-cyrl.js", "configured-test-view-model/deps/moment/locale/sr-cyrl.js");
require.alias("johntron-moment/locale/sr.js", "configured-test-view-model/deps/moment/locale/sr.js");
require.alias("johntron-moment/locale/sv.js", "configured-test-view-model/deps/moment/locale/sv.js");
require.alias("johntron-moment/locale/ta.js", "configured-test-view-model/deps/moment/locale/ta.js");
require.alias("johntron-moment/locale/th.js", "configured-test-view-model/deps/moment/locale/th.js");
require.alias("johntron-moment/locale/tl-ph.js", "configured-test-view-model/deps/moment/locale/tl-ph.js");
require.alias("johntron-moment/locale/tr.js", "configured-test-view-model/deps/moment/locale/tr.js");
require.alias("johntron-moment/locale/tzm-latn.js", "configured-test-view-model/deps/moment/locale/tzm-latn.js");
require.alias("johntron-moment/locale/tzm.js", "configured-test-view-model/deps/moment/locale/tzm.js");
require.alias("johntron-moment/locale/uk.js", "configured-test-view-model/deps/moment/locale/uk.js");
require.alias("johntron-moment/locale/uz.js", "configured-test-view-model/deps/moment/locale/uz.js");
require.alias("johntron-moment/locale/vi.js", "configured-test-view-model/deps/moment/locale/vi.js");
require.alias("johntron-moment/locale/zh-cn.js", "configured-test-view-model/deps/moment/locale/zh-cn.js");
require.alias("johntron-moment/locale/zh-tw.js", "configured-test-view-model/deps/moment/locale/zh-tw.js");
require.alias("johntron-moment/moment.js", "configured-test-view-model/deps/moment/index.js");
require.alias("johntron-moment/moment.js", "johntron-moment/index.js");
require.alias("utility-functions/index.js", "configured-test-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "configured-test-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("async-poller/index.js", "configured-test-view-model/deps/async-poller/index.js");
require.alias("async-poller/index.js", "configured-test-view-model/deps/async-poller/index.js");
require.alias("async-poller/index.js", "async-poller/index.js");
require.alias("configured-test-view-model/index.js", "configured-test-view-model/index.js");
require.alias("administration-view-model/index.js", "boot/deps/administration-view-model/index.js");
require.alias("administration-view-model/index.js", "boot/deps/administration-view-model/index.js");
require.alias("segmentio-validate-form/lib/adapter.js", "administration-view-model/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "administration-view-model/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "administration-view-model/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "administration-view-model/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "administration-view-model/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("component-domify/index.js", "administration-view-model/deps/domify/index.js");

require.alias("component-event/index.js", "administration-view-model/deps/event/index.js");

require.alias("utility-functions/index.js", "administration-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "administration-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("administration-view-model/index.js", "administration-view-model/index.js");
require.alias("traffic-player-view-model/index.js", "boot/deps/traffic-player-view-model/index.js");
require.alias("traffic-player-view-model/delegates/unicast.js", "boot/deps/traffic-player-view-model/delegates/unicast.js");
require.alias("traffic-player-view-model/delegates/multicast.js", "boot/deps/traffic-player-view-model/delegates/multicast.js");
require.alias("traffic-player-view-model/index.js", "boot/deps/traffic-player-view-model/index.js");
require.alias("johntron-promise/index.js", "traffic-player-view-model/deps/promise/index.js");
require.alias("johntron-promise/core.js", "traffic-player-view-model/deps/promise/core.js");
require.alias("johntron-asap/asap.js", "johntron-promise/deps/asap/asap.js");
require.alias("johntron-asap/asap.js", "johntron-promise/deps/asap/index.js");
require.alias("johntron-asap/asap.js", "johntron-asap/index.js");
require.alias("device-collection-view-model/index.js", "traffic-player-view-model/deps/device-collection-view-model/index.js");
require.alias("device-collection-view-model/views/device.js", "traffic-player-view-model/deps/device-collection-view-model/views/device.js");
require.alias("device-collection-view-model/views/endpoint.js", "traffic-player-view-model/deps/device-collection-view-model/views/endpoint.js");
require.alias("device-collection-view-model/templates/index.js", "traffic-player-view-model/deps/device-collection-view-model/templates/index.js");
require.alias("device-collection-view-model/templates/device.js", "traffic-player-view-model/deps/device-collection-view-model/templates/device.js");
require.alias("device-collection-view-model/templates/endpoint.js", "traffic-player-view-model/deps/device-collection-view-model/templates/endpoint.js");
require.alias("device-collection-view-model/index.js", "traffic-player-view-model/deps/device-collection-view-model/index.js");
require.alias("component-domify/index.js", "device-collection-view-model/deps/domify/index.js");

require.alias("component-emitter/index.js", "device-collection-view-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-event/index.js", "device-collection-view-model/deps/event/index.js");

require.alias("component-classes/index.js", "device-collection-view-model/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("johntron-model/lib/index.js", "device-collection-view-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "device-collection-view-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "device-collection-view-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "device-collection-view-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("endpoint-view-model/index.js", "device-collection-view-model/deps/endpoint-view-model/index.js");
require.alias("endpoint-view-model/index.js", "device-collection-view-model/deps/endpoint-view-model/index.js");
require.alias("component-domify/index.js", "endpoint-view-model/deps/domify/index.js");

require.alias("component-event/index.js", "endpoint-view-model/deps/event/index.js");

require.alias("segmentio-validate-form/lib/adapter.js", "endpoint-view-model/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "endpoint-view-model/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "endpoint-view-model/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "endpoint-view-model/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "endpoint-view-model/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("component-classes/index.js", "endpoint-view-model/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("johntron-is-ip-address/index.js", "endpoint-view-model/deps/is-ip-address/index.js");

require.alias("utility-functions/index.js", "endpoint-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "endpoint-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("endpoint-view-model/index.js", "endpoint-view-model/index.js");
require.alias("utility-functions/index.js", "device-collection-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "device-collection-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("device-collection-view-model/index.js", "device-collection-view-model/index.js");
require.alias("multicast-settings/view-model.js", "traffic-player-view-model/deps/multicast-settings/view-model.js");
require.alias("multicast-settings/view-model.js", "traffic-player-view-model/deps/multicast-settings/index.js");
require.alias("multicast-settings/view-model.js", "multicast-settings/index.js");
require.alias("traffic-player-view-model/index.js", "traffic-player-view-model/index.js");
require.alias("transmit-receive-view-model/index.js", "boot/deps/transmit-receive-view-model/index.js");
require.alias("transmit-receive-view-model/template.js", "boot/deps/transmit-receive-view-model/template.js");
require.alias("transmit-receive-view-model/index.js", "boot/deps/transmit-receive-view-model/index.js");
require.alias("component-domify/index.js", "transmit-receive-view-model/deps/domify/index.js");

require.alias("component-emitter/index.js", "transmit-receive-view-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("endpoint-view-model/index.js", "transmit-receive-view-model/deps/endpoint-view-model/index.js");
require.alias("endpoint-view-model/index.js", "transmit-receive-view-model/deps/endpoint-view-model/index.js");
require.alias("component-domify/index.js", "endpoint-view-model/deps/domify/index.js");

require.alias("component-event/index.js", "endpoint-view-model/deps/event/index.js");

require.alias("segmentio-validate-form/lib/adapter.js", "endpoint-view-model/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "endpoint-view-model/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "endpoint-view-model/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "endpoint-view-model/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "endpoint-view-model/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("component-classes/index.js", "endpoint-view-model/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("johntron-is-ip-address/index.js", "endpoint-view-model/deps/is-ip-address/index.js");

require.alias("utility-functions/index.js", "endpoint-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "endpoint-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("endpoint-view-model/index.js", "endpoint-view-model/index.js");
require.alias("utility-functions/index.js", "transmit-receive-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "transmit-receive-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("transmit-receive-view-model/index.js", "transmit-receive-view-model/index.js");
require.alias("endpoint-view-model/index.js", "boot/deps/endpoint-view-model/index.js");
require.alias("endpoint-view-model/index.js", "boot/deps/endpoint-view-model/index.js");
require.alias("component-domify/index.js", "endpoint-view-model/deps/domify/index.js");

require.alias("component-event/index.js", "endpoint-view-model/deps/event/index.js");

require.alias("segmentio-validate-form/lib/adapter.js", "endpoint-view-model/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "endpoint-view-model/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "endpoint-view-model/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "endpoint-view-model/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "endpoint-view-model/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("component-classes/index.js", "endpoint-view-model/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("johntron-is-ip-address/index.js", "endpoint-view-model/deps/is-ip-address/index.js");

require.alias("utility-functions/index.js", "endpoint-view-model/deps/utility-functions/index.js");
require.alias("utility-functions/index.js", "endpoint-view-model/deps/utility-functions/index.js");
require.alias("component-classes/index.js", "utility-functions/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "utility-functions/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "utility-functions/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "utility-functions/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("lightbox/index.js", "utility-functions/deps/lightbox/index.js");
require.alias("component-emitter/index.js", "lightbox/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("lightbox/index.js", "lightbox/index.js");
require.alias("utility-functions/index.js", "utility-functions/index.js");
require.alias("endpoint-view-model/index.js", "endpoint-view-model/index.js");
require.alias("test-device-view-model/index.js", "boot/deps/test-device-view-model/index.js");
require.alias("test-device-view-model/index.js", "boot/deps/test-device-view-model/index.js");
require.alias("johntron-is-host/index.js", "test-device-view-model/deps/is-host/index.js");
require.alias("johntron-is-ip-address/index.js", "johntron-is-host/deps/is-ip-address/index.js");

require.alias("test-device-view-model/index.js", "test-device-view-model/index.js");
require.alias("line-rate-message-view-model/index.js", "boot/deps/line-rate-message-view-model/index.js");
require.alias("line-rate-message-view-model/index.js", "boot/deps/line-rate-message-view-model/index.js");
require.alias("line-rate-message-view-model/index.js", "line-rate-message-view-model/index.js");
require.alias("pulse/index.js", "boot/deps/pulse/index.js");
require.alias("pulse/templates/index.js", "boot/deps/pulse/templates/index.js");
require.alias("pulse/models/pulse.js", "boot/deps/pulse/models/pulse.js");
require.alias("pulse/models/interface.js", "boot/deps/pulse/models/interface.js");
require.alias("pulse/templates/license.js", "boot/deps/pulse/templates/license.js");
require.alias("pulse/index.js", "boot/deps/pulse/index.js");
require.alias("component-domify/index.js", "pulse/deps/domify/index.js");

require.alias("component-classes/index.js", "pulse/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("johntron-model/lib/index.js", "pulse/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "pulse/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "pulse/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "pulse/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("component-event/index.js", "pulse/deps/event/index.js");

require.alias("johntron-superagent/lib/client.js", "pulse/deps/superagent/lib/client.js");
require.alias("johntron-superagent/lib/client.js", "pulse/deps/superagent/index.js");
require.alias("component-emitter/index.js", "johntron-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "johntron-superagent/deps/reduce/index.js");

require.alias("johntron-superagent/lib/client.js", "johntron-superagent/index.js");
require.alias("johntron-superagent-no-cache/index.js", "pulse/deps/superagent-no-cache/index.js");
require.alias("johntron-superagent-no-cache/index.js", "pulse/deps/superagent-no-cache/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "johntron-superagent-no-cache/deps/ie/index.js");
require.alias("component-ie/index.js", "component-ie/index.js");
require.alias("johntron-superagent-no-cache/index.js", "johntron-superagent-no-cache/index.js");
require.alias("async-poller/index.js", "pulse/deps/async-poller/index.js");
require.alias("async-poller/index.js", "pulse/deps/async-poller/index.js");
require.alias("async-poller/index.js", "async-poller/index.js");
require.alias("loading-state/index.js", "pulse/deps/loading-state/index.js");
require.alias("loading-state/template.js", "pulse/deps/loading-state/template.js");
require.alias("loading-state/index.js", "pulse/deps/loading-state/index.js");
require.alias("component-domify/index.js", "loading-state/deps/domify/index.js");

require.alias("loading-state/index.js", "loading-state/index.js");
require.alias("network-settings-view/index.js", "pulse/deps/network-settings-view/index.js");
require.alias("network-settings-view/template.js", "pulse/deps/network-settings-view/template.js");
require.alias("network-settings-view/index.js", "pulse/deps/network-settings-view/index.js");
require.alias("component-domify/index.js", "network-settings-view/deps/domify/index.js");

require.alias("component-event/index.js", "network-settings-view/deps/event/index.js");

require.alias("component-classes/index.js", "network-settings-view/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("segmentio-validate-form/lib/adapter.js", "network-settings-view/deps/validate-form/lib/adapter.js");
require.alias("segmentio-validate-form/lib/field.js", "network-settings-view/deps/validate-form/lib/field.js");
require.alias("segmentio-validate-form/lib/index.js", "network-settings-view/deps/validate-form/lib/index.js");
require.alias("segmentio-validate-form/lib/validators.js", "network-settings-view/deps/validate-form/lib/validators.js");
require.alias("segmentio-validate-form/lib/index.js", "network-settings-view/deps/validate-form/index.js");
require.alias("component-classes/index.js", "segmentio-validate-form/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-clone/index.js", "segmentio-validate-form/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-domify/index.js", "segmentio-validate-form/deps/domify/index.js");

require.alias("component-each/index.js", "segmentio-validate-form/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-event/index.js", "segmentio-validate-form/deps/event/index.js");

require.alias("component-trim/index.js", "segmentio-validate-form/deps/trim/index.js");

require.alias("component-type/index.js", "segmentio-validate-form/deps/type/index.js");

require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-value/index.js", "segmentio-validate-form/deps/value/index.js");
require.alias("component-type/index.js", "component-value/deps/type/index.js");

require.alias("component-value/index.js", "component-value/index.js");
require.alias("ianstormtaylor-bind/index.js", "segmentio-validate-form/deps/bind/index.js");
require.alias("component-bind/index.js", "ianstormtaylor-bind/deps/bind/index.js");

require.alias("segmentio-bind-all/index.js", "ianstormtaylor-bind/deps/bind-all/index.js");
require.alias("component-bind/index.js", "segmentio-bind-all/deps/bind/index.js");

require.alias("component-type/index.js", "segmentio-bind-all/deps/type/index.js");

require.alias("ianstormtaylor-next-sibling/index.js", "segmentio-validate-form/deps/next-sibling/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("yields-traverse/index.js", "ianstormtaylor-next-sibling/deps/traverse/index.js");
require.alias("component-matches-selector/index.js", "yields-traverse/deps/matches-selector/index.js");
require.alias("component-query/index.js", "component-matches-selector/deps/query/index.js");

require.alias("yields-traverse/index.js", "yields-traverse/index.js");
require.alias("segmentio-is-email/index.js", "segmentio-validate-form/deps/is-email/index.js");

require.alias("segmentio-is-hex-color/index.js", "segmentio-validate-form/deps/is-hex-color/index.js");

require.alias("segmentio-is-hsl-color/index.js", "segmentio-validate-form/deps/is-hsl-color/index.js");

require.alias("segmentio-is-rgb-color/index.js", "segmentio-validate-form/deps/is-rgb-color/index.js");

require.alias("segmentio-is-url/index.js", "segmentio-validate-form/deps/is-url/index.js");

require.alias("segmentio-submit-form/index.js", "segmentio-validate-form/deps/submit-form/index.js");
require.alias("ianstormtaylor-trigger-event/index.js", "segmentio-submit-form/deps/trigger-event/index.js");
require.alias("ianstormtaylor-create-event/index.js", "ianstormtaylor-trigger-event/deps/create-event/index.js");
require.alias("timoxley-keycode/index.js", "ianstormtaylor-create-event/deps/keycode/index.js");

require.alias("segmentio-extend/index.js", "ianstormtaylor-create-event/deps/extend/index.js");

require.alias("segmentio-validator/index.js", "segmentio-validate-form/deps/validator/index.js");
require.alias("component-each/index.js", "segmentio-validator/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("timoxley-next-tick/index.js", "segmentio-validator/deps/next-tick/index.js");

require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/lib/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-validator/deps/ware/index.js");
require.alias("segmentio-ware/lib/index.js", "segmentio-ware/index.js");
require.alias("yields-prevent/index.js", "segmentio-validate-form/deps/prevent/index.js");

require.alias("yields-stop/index.js", "segmentio-validate-form/deps/stop/index.js");

require.alias("segmentio-validate-form/lib/index.js", "segmentio-validate-form/index.js");
require.alias("johntron-is-ip-address/index.js", "network-settings-view/deps/is-ip-address/index.js");

require.alias("network-settings-view/index.js", "network-settings-view/index.js");
require.alias("interface-model/index.js", "pulse/deps/interface-model/index.js");
require.alias("interface-model/index.js", "pulse/deps/interface-model/index.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "interface-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "interface-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "interface-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("interface-model/index.js", "interface-model/index.js");
require.alias("interface-selector/index.js", "pulse/deps/interface-selector/index.js");
require.alias("interface-selector/templates/interface.js", "pulse/deps/interface-selector/templates/interface.js");
require.alias("interface-selector/templates/template.js", "pulse/deps/interface-selector/templates/template.js");
require.alias("interface-selector/index.js", "pulse/deps/interface-selector/index.js");
require.alias("component-domify/index.js", "interface-selector/deps/domify/index.js");

require.alias("component-emitter/index.js", "interface-selector/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-classes/index.js", "interface-selector/deps/classes/index.js");
require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

require.alias("component-event/index.js", "interface-selector/deps/event/index.js");

require.alias("interface-model/index.js", "interface-selector/deps/interface-model/index.js");
require.alias("interface-model/index.js", "interface-selector/deps/interface-model/index.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/lib/index.js");
require.alias("johntron-model/lib/static.js", "interface-model/deps/model/lib/static.js");
require.alias("johntron-model/lib/proto.js", "interface-model/deps/model/lib/proto.js");
require.alias("johntron-model/lib/index.js", "interface-model/deps/model/index.js");
require.alias("component-each/index.js", "johntron-model/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-emitter/index.js", "johntron-model/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-collection/index.js", "johntron-model/deps/collection/index.js");
require.alias("component-enumerable/index.js", "component-collection/deps/enumerable/index.js");
require.alias("component-to-function/index.js", "component-enumerable/deps/to-function/index.js");

require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "component-enumerable/deps/isarray/index.js");
require.alias("juliangruber-isarray/index.js", "juliangruber-isarray/index.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "johntron-model/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("redventures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("johntron-model/lib/index.js", "johntron-model/index.js");
require.alias("segmentio-model-defaults/index.js", "interface-model/deps/model-defaults/index.js");
require.alias("component-clone/index.js", "segmentio-model-defaults/deps/clone/index.js");
require.alias("component-type/index.js", "component-clone/deps/type/index.js");

require.alias("component-each/index.js", "segmentio-model-defaults/deps/each/index.js");
require.alias("component-to-function/index.js", "component-each/deps/to-function/index.js");

require.alias("component-type/index.js", "component-each/deps/type/index.js");

require.alias("component-type/index.js", "segmentio-model-defaults/deps/type/index.js");

require.alias("manuelstofer-is/index.js", "segmentio-model-defaults/deps/is/index.js");
require.alias("manuelstofer-each/index.js", "manuelstofer-is/deps/each/index.js");

require.alias("interface-model/index.js", "interface-model/index.js");
require.alias("interface-selector/index.js", "interface-selector/index.js");
require.alias("pulse/index.js", "pulse/index.js");
require.alias("boot/index.js", "boot/index.js");